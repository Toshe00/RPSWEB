(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_@alephium_walletconnect-provider_dist_umd_index_min_4e032972.js", {

"[project]/node_modules/@alephium/walletconnect-provider/dist/umd/index.min.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { g: global, d: __dirname, m: module, e: exports } = __turbopack_context__;
{
/*! For license information please see index.min.js.LICENSE.txt */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
!function(e, t) {
    ("TURBOPACK compile-time truthy", 1) ? module.exports = t() : ("TURBOPACK unreachable", undefined);
}(this, ()=>(()=>{
        var e = {
            1029: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var n = r(9527);
                function i(e, t, r) {
                    return void 0 === t && (t = new Uint8Array(2)), void 0 === r && (r = 0), t[r + 0] = e >>> 8, t[r + 1] = e >>> 0, t;
                }
                function s(e, t, r) {
                    return void 0 === t && (t = new Uint8Array(2)), void 0 === r && (r = 0), t[r + 0] = e >>> 0, t[r + 1] = e >>> 8, t;
                }
                function o(e, t) {
                    return void 0 === t && (t = 0), e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3];
                }
                function a(e, t) {
                    return void 0 === t && (t = 0), (e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]) >>> 0;
                }
                function c(e, t) {
                    return void 0 === t && (t = 0), e[t + 3] << 24 | e[t + 2] << 16 | e[t + 1] << 8 | e[t];
                }
                function h(e, t) {
                    return void 0 === t && (t = 0), (e[t + 3] << 24 | e[t + 2] << 16 | e[t + 1] << 8 | e[t]) >>> 0;
                }
                function u(e, t, r) {
                    return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), t[r + 0] = e >>> 24, t[r + 1] = e >>> 16, t[r + 2] = e >>> 8, t[r + 3] = e >>> 0, t;
                }
                function d(e, t, r) {
                    return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), t[r + 0] = e >>> 0, t[r + 1] = e >>> 8, t[r + 2] = e >>> 16, t[r + 3] = e >>> 24, t;
                }
                function f(e, t, r) {
                    return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), u(e / 4294967296 >>> 0, t, r), u(e >>> 0, t, r + 4), t;
                }
                function l(e, t, r) {
                    return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), d(e >>> 0, t, r), d(e / 4294967296 >>> 0, t, r + 4), t;
                }
                t.readInt16BE = function(e, t) {
                    return void 0 === t && (t = 0), (e[t + 0] << 8 | e[t + 1]) << 16 >> 16;
                }, t.readUint16BE = function(e, t) {
                    return void 0 === t && (t = 0), (e[t + 0] << 8 | e[t + 1]) >>> 0;
                }, t.readInt16LE = function(e, t) {
                    return void 0 === t && (t = 0), (e[t + 1] << 8 | e[t]) << 16 >> 16;
                }, t.readUint16LE = function(e, t) {
                    return void 0 === t && (t = 0), (e[t + 1] << 8 | e[t]) >>> 0;
                }, t.writeUint16BE = i, t.writeInt16BE = i, t.writeUint16LE = s, t.writeInt16LE = s, t.readInt32BE = o, t.readUint32BE = a, t.readInt32LE = c, t.readUint32LE = h, t.writeUint32BE = u, t.writeInt32BE = u, t.writeUint32LE = d, t.writeInt32LE = d, t.readInt64BE = function(e, t) {
                    void 0 === t && (t = 0);
                    var r = o(e, t), n = o(e, t + 4);
                    return 4294967296 * r + n - 4294967296 * (n >> 31);
                }, t.readUint64BE = function(e, t) {
                    return void 0 === t && (t = 0), 4294967296 * a(e, t) + a(e, t + 4);
                }, t.readInt64LE = function(e, t) {
                    void 0 === t && (t = 0);
                    var r = c(e, t);
                    return 4294967296 * c(e, t + 4) + r - 4294967296 * (r >> 31);
                }, t.readUint64LE = function(e, t) {
                    void 0 === t && (t = 0);
                    var r = h(e, t);
                    return 4294967296 * h(e, t + 4) + r;
                }, t.writeUint64BE = f, t.writeInt64BE = f, t.writeUint64LE = l, t.writeInt64LE = l, t.readUintBE = function(e, t, r) {
                    if (void 0 === r && (r = 0), e % 8 != 0) throw new Error("readUintBE supports only bitLengths divisible by 8");
                    if (e / 8 > t.length - r) throw new Error("readUintBE: array is too short for the given bitLength");
                    for(var n = 0, i = 1, s = e / 8 + r - 1; s >= r; s--)n += t[s] * i, i *= 256;
                    return n;
                }, t.readUintLE = function(e, t, r) {
                    if (void 0 === r && (r = 0), e % 8 != 0) throw new Error("readUintLE supports only bitLengths divisible by 8");
                    if (e / 8 > t.length - r) throw new Error("readUintLE: array is too short for the given bitLength");
                    for(var n = 0, i = 1, s = r; s < r + e / 8; s++)n += t[s] * i, i *= 256;
                    return n;
                }, t.writeUintBE = function(e, t, r, i) {
                    if (void 0 === r && (r = new Uint8Array(e / 8)), void 0 === i && (i = 0), e % 8 != 0) throw new Error("writeUintBE supports only bitLengths divisible by 8");
                    if (!n.isSafeInteger(t)) throw new Error("writeUintBE value must be an integer");
                    for(var s = 1, o = e / 8 + i - 1; o >= i; o--)r[o] = t / s & 255, s *= 256;
                    return r;
                }, t.writeUintLE = function(e, t, r, i) {
                    if (void 0 === r && (r = new Uint8Array(e / 8)), void 0 === i && (i = 0), e % 8 != 0) throw new Error("writeUintLE supports only bitLengths divisible by 8");
                    if (!n.isSafeInteger(t)) throw new Error("writeUintLE value must be an integer");
                    for(var s = 1, o = i; o < i + e / 8; o++)r[o] = t / s & 255, s *= 256;
                    return r;
                }, t.readFloat32BE = function(e, t) {
                    return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat32(t);
                }, t.readFloat32LE = function(e, t) {
                    return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat32(t, !0);
                }, t.readFloat64BE = function(e, t) {
                    return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat64(t);
                }, t.readFloat64LE = function(e, t) {
                    return void 0 === t && (t = 0), new DataView(e.buffer, e.byteOffset, e.byteLength).getFloat64(t, !0);
                }, t.writeFloat32BE = function(e, t, r) {
                    return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat32(r, e), t;
                }, t.writeFloat32LE = function(e, t, r) {
                    return void 0 === t && (t = new Uint8Array(4)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat32(r, e, !0), t;
                }, t.writeFloat64BE = function(e, t, r) {
                    return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat64(r, e), t;
                }, t.writeFloat64LE = function(e, t, r) {
                    return void 0 === t && (t = new Uint8Array(8)), void 0 === r && (r = 0), new DataView(t.buffer, t.byteOffset, t.byteLength).setFloat64(r, e, !0), t;
                };
            },
            3043: (e, t, r)=>{
                "use strict";
                var n = r(3082), i = r(93), s = r(5955), o = r(1029), a = r(3116);
                t.J4 = 32, t.PX = 12, t.iW = 16;
                var c = new Uint8Array(16), h = function() {
                    function e(e) {
                        if (this.nonceLength = t.PX, this.tagLength = t.iW, e.length !== t.J4) throw new Error("ChaCha20Poly1305 needs 32-byte key");
                        this._key = new Uint8Array(e);
                    }
                    return e.prototype.seal = function(e, t, r, i) {
                        if (e.length > 16) throw new Error("ChaCha20Poly1305: incorrect nonce length");
                        var o = new Uint8Array(16);
                        o.set(e, o.length - e.length);
                        var a = new Uint8Array(32);
                        n.stream(this._key, o, a, 4);
                        var c, h = t.length + this.tagLength;
                        if (i) {
                            if (i.length !== h) throw new Error("ChaCha20Poly1305: incorrect destination length");
                            c = i;
                        } else c = new Uint8Array(h);
                        return n.streamXOR(this._key, o, t, c, 4), this._authenticate(c.subarray(c.length - this.tagLength, c.length), a, c.subarray(0, c.length - this.tagLength), r), s.wipe(o), c;
                    }, e.prototype.open = function(e, t, r, i) {
                        if (e.length > 16) throw new Error("ChaCha20Poly1305: incorrect nonce length");
                        if (t.length < this.tagLength) return null;
                        var o = new Uint8Array(16);
                        o.set(e, o.length - e.length);
                        var c = new Uint8Array(32);
                        n.stream(this._key, o, c, 4);
                        var h = new Uint8Array(this.tagLength);
                        if (this._authenticate(h, c, t.subarray(0, t.length - this.tagLength), r), !a.equal(h, t.subarray(t.length - this.tagLength, t.length))) return null;
                        var u, d = t.length - this.tagLength;
                        if (i) {
                            if (i.length !== d) throw new Error("ChaCha20Poly1305: incorrect destination length");
                            u = i;
                        } else u = new Uint8Array(d);
                        return n.streamXOR(this._key, o, t.subarray(0, t.length - this.tagLength), u, 4), s.wipe(o), u;
                    }, e.prototype.clean = function() {
                        return s.wipe(this._key), this;
                    }, e.prototype._authenticate = function(e, t, r, n) {
                        var a = new i.Poly1305(t);
                        n && (a.update(n), n.length % 16 > 0 && a.update(c.subarray(n.length % 16))), a.update(r), r.length % 16 > 0 && a.update(c.subarray(r.length % 16));
                        var h = new Uint8Array(8);
                        n && o.writeUint64LE(n.length, h), a.update(h), o.writeUint64LE(r.length, h), a.update(h);
                        for(var u = a.digest(), d = 0; d < u.length; d++)e[d] = u[d];
                        a.clean(), s.wipe(u), s.wipe(h);
                    }, e;
                }();
                t.g6 = h;
            },
            3082: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var n = r(1029), i = r(5955), s = 20;
                function o(e, t, r) {
                    for(var i = 1634760805, o = 857760878, a = 2036477234, c = 1797285236, h = r[3] << 24 | r[2] << 16 | r[1] << 8 | r[0], u = r[7] << 24 | r[6] << 16 | r[5] << 8 | r[4], d = r[11] << 24 | r[10] << 16 | r[9] << 8 | r[8], f = r[15] << 24 | r[14] << 16 | r[13] << 8 | r[12], l = r[19] << 24 | r[18] << 16 | r[17] << 8 | r[16], p = r[23] << 24 | r[22] << 16 | r[21] << 8 | r[20], b = r[27] << 24 | r[26] << 16 | r[25] << 8 | r[24], g = r[31] << 24 | r[30] << 16 | r[29] << 8 | r[28], m = t[3] << 24 | t[2] << 16 | t[1] << 8 | t[0], y = t[7] << 24 | t[6] << 16 | t[5] << 8 | t[4], v = t[11] << 24 | t[10] << 16 | t[9] << 8 | t[8], w = t[15] << 24 | t[14] << 16 | t[13] << 8 | t[12], _ = i, E = o, S = a, A = c, M = h, I = u, T = d, x = f, C = l, R = p, k = b, P = g, O = m, N = y, U = v, B = w, L = 0; L < s; L += 2)M = (M ^= C = C + (O = (O ^= _ = _ + M | 0) >>> 16 | O << 16) | 0) >>> 20 | M << 12, I = (I ^= R = R + (N = (N ^= E = E + I | 0) >>> 16 | N << 16) | 0) >>> 20 | I << 12, T = (T ^= k = k + (U = (U ^= S = S + T | 0) >>> 16 | U << 16) | 0) >>> 20 | T << 12, x = (x ^= P = P + (B = (B ^= A = A + x | 0) >>> 16 | B << 16) | 0) >>> 20 | x << 12, T = (T ^= k = k + (U = (U ^= S = S + T | 0) >>> 24 | U << 8) | 0) >>> 25 | T << 7, x = (x ^= P = P + (B = (B ^= A = A + x | 0) >>> 24 | B << 8) | 0) >>> 25 | x << 7, I = (I ^= R = R + (N = (N ^= E = E + I | 0) >>> 24 | N << 8) | 0) >>> 25 | I << 7, M = (M ^= C = C + (O = (O ^= _ = _ + M | 0) >>> 24 | O << 8) | 0) >>> 25 | M << 7, I = (I ^= k = k + (B = (B ^= _ = _ + I | 0) >>> 16 | B << 16) | 0) >>> 20 | I << 12, T = (T ^= P = P + (O = (O ^= E = E + T | 0) >>> 16 | O << 16) | 0) >>> 20 | T << 12, x = (x ^= C = C + (N = (N ^= S = S + x | 0) >>> 16 | N << 16) | 0) >>> 20 | x << 12, M = (M ^= R = R + (U = (U ^= A = A + M | 0) >>> 16 | U << 16) | 0) >>> 20 | M << 12, x = (x ^= C = C + (N = (N ^= S = S + x | 0) >>> 24 | N << 8) | 0) >>> 25 | x << 7, M = (M ^= R = R + (U = (U ^= A = A + M | 0) >>> 24 | U << 8) | 0) >>> 25 | M << 7, T = (T ^= P = P + (O = (O ^= E = E + T | 0) >>> 24 | O << 8) | 0) >>> 25 | T << 7, I = (I ^= k = k + (B = (B ^= _ = _ + I | 0) >>> 24 | B << 8) | 0) >>> 25 | I << 7;
                    n.writeUint32LE(_ + i | 0, e, 0), n.writeUint32LE(E + o | 0, e, 4), n.writeUint32LE(S + a | 0, e, 8), n.writeUint32LE(A + c | 0, e, 12), n.writeUint32LE(M + h | 0, e, 16), n.writeUint32LE(I + u | 0, e, 20), n.writeUint32LE(T + d | 0, e, 24), n.writeUint32LE(x + f | 0, e, 28), n.writeUint32LE(C + l | 0, e, 32), n.writeUint32LE(R + p | 0, e, 36), n.writeUint32LE(k + b | 0, e, 40), n.writeUint32LE(P + g | 0, e, 44), n.writeUint32LE(O + m | 0, e, 48), n.writeUint32LE(N + y | 0, e, 52), n.writeUint32LE(U + v | 0, e, 56), n.writeUint32LE(B + w | 0, e, 60);
                }
                function a(e, t, r, n, s) {
                    if (void 0 === s && (s = 0), 32 !== e.length) throw new Error("ChaCha: key size must be 32 bytes");
                    if (n.length < r.length) throw new Error("ChaCha: destination is shorter than source");
                    var a, h;
                    if (0 === s) {
                        if (8 !== t.length && 12 !== t.length) throw new Error("ChaCha nonce must be 8 or 12 bytes");
                        h = (a = new Uint8Array(16)).length - t.length, a.set(t, h);
                    } else {
                        if (16 !== t.length) throw new Error("ChaCha nonce with counter must be 16 bytes");
                        a = t, h = s;
                    }
                    for(var u = new Uint8Array(64), d = 0; d < r.length; d += 64){
                        o(u, a, e);
                        for(var f = d; f < d + 64 && f < r.length; f++)n[f] = r[f] ^ u[f - d];
                        c(a, 0, h);
                    }
                    return i.wipe(u), 0 === s && i.wipe(a), n;
                }
                function c(e, t, r) {
                    for(var n = 1; r--;)n = n + (255 & e[t]) | 0, e[t] = 255 & n, n >>>= 8, t++;
                    if (n > 0) throw new Error("ChaCha: counter overflow");
                }
                t.streamXOR = a, t.stream = function(e, t, r, n) {
                    return void 0 === n && (n = 0), i.wipe(r), a(e, t, r, r, n);
                };
            },
            3116: (e, t)=>{
                "use strict";
                function r(e, t) {
                    if (e.length !== t.length) return 0;
                    for(var r = 0, n = 0; n < e.length; n++)r |= e[n] ^ t[n];
                    return 1 & r - 1 >>> 8;
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.select = function(e, t, r) {
                    return ~(e - 1) & t | e - 1 & r;
                }, t.lessOrEqual = function(e, t) {
                    return (0 | e) - (0 | t) - 1 >>> 31 & 1;
                }, t.compare = r, t.equal = function(e, t) {
                    return 0 !== e.length && 0 !== t.length && 0 !== r(e, t);
                };
            },
            1741: (e, t, r)=>{
                "use strict";
                t._S = t.K = t.TP = t.wE = t.Ee = void 0;
                r(4734);
                const n = r(3668);
                r(5955);
                function i(e) {
                    const t = new Float64Array(16);
                    if (e) for(let r = 0; r < e.length; r++)t[r] = e[r];
                    return t;
                }
                t.Ee = 64, t.wE = 64, t.TP = 32, new Uint8Array(32)[0] = 9;
                const s = i(), o = i([
                    1
                ]), a = (i([
                    30883,
                    4953,
                    19914,
                    30187,
                    55467,
                    16705,
                    2637,
                    112,
                    59544,
                    30585,
                    16505,
                    36039,
                    65139,
                    11119,
                    27886,
                    20995
                ]), i([
                    61785,
                    9906,
                    39828,
                    60374,
                    45398,
                    33411,
                    5274,
                    224,
                    53552,
                    61171,
                    33010,
                    6542,
                    64743,
                    22239,
                    55772,
                    9222
                ])), c = i([
                    54554,
                    36645,
                    11616,
                    51542,
                    42930,
                    38181,
                    51040,
                    26924,
                    56412,
                    64982,
                    57905,
                    49316,
                    21502,
                    52590,
                    14035,
                    8553
                ]), h = i([
                    26200,
                    26214,
                    26214,
                    26214,
                    26214,
                    26214,
                    26214,
                    26214,
                    26214,
                    26214,
                    26214,
                    26214,
                    26214,
                    26214,
                    26214,
                    26214
                ]);
                i([
                    41136,
                    18958,
                    6951,
                    50414,
                    58488,
                    44335,
                    6150,
                    12099,
                    55207,
                    15867,
                    153,
                    11085,
                    57099,
                    20417,
                    9344,
                    11139
                ]);
                function u(e, t) {
                    for(let r = 0; r < 16; r++)e[r] = 0 | t[r];
                }
                function d(e) {
                    let t = 1;
                    for(let r = 0; r < 16; r++){
                        let n = e[r] + t + 65535;
                        t = Math.floor(n / 65536), e[r] = n - 65536 * t;
                    }
                    e[0] += t - 1 + 37 * (t - 1);
                }
                function f(e, t, r) {
                    const n = ~(r - 1);
                    for(let r = 0; r < 16; r++){
                        const i = n & (e[r] ^ t[r]);
                        e[r] ^= i, t[r] ^= i;
                    }
                }
                function l(e, t) {
                    const r = i(), n = i();
                    for(let e = 0; e < 16; e++)n[e] = t[e];
                    d(n), d(n), d(n);
                    for(let e = 0; e < 2; e++){
                        r[0] = n[0] - 65517;
                        for(let e = 1; e < 15; e++)r[e] = n[e] - 65535 - (r[e - 1] >> 16 & 1), r[e - 1] &= 65535;
                        r[15] = n[15] - 32767 - (r[14] >> 16 & 1);
                        const e = r[15] >> 16 & 1;
                        r[14] &= 65535, f(n, r, 1 - e);
                    }
                    for(let t = 0; t < 16; t++)e[2 * t] = 255 & n[t], e[2 * t + 1] = n[t] >> 8;
                }
                function p(e) {
                    const t = new Uint8Array(32);
                    return l(t, e), 1 & t[0];
                }
                function b(e, t, r) {
                    for(let n = 0; n < 16; n++)e[n] = t[n] + r[n];
                }
                function g(e, t, r) {
                    for(let n = 0; n < 16; n++)e[n] = t[n] - r[n];
                }
                function m(e, t, r) {
                    let n, i, s = 0, o = 0, a = 0, c = 0, h = 0, u = 0, d = 0, f = 0, l = 0, p = 0, b = 0, g = 0, m = 0, y = 0, v = 0, w = 0, _ = 0, E = 0, S = 0, A = 0, M = 0, I = 0, T = 0, x = 0, C = 0, R = 0, k = 0, P = 0, O = 0, N = 0, U = 0, B = r[0], L = r[1], j = r[2], D = r[3], q = r[4], F = r[5], H = r[6], z = r[7], V = r[8], $ = r[9], K = r[10], G = r[11], W = r[12], J = r[13], Y = r[14], X = r[15];
                    n = t[0], s += n * B, o += n * L, a += n * j, c += n * D, h += n * q, u += n * F, d += n * H, f += n * z, l += n * V, p += n * $, b += n * K, g += n * G, m += n * W, y += n * J, v += n * Y, w += n * X, n = t[1], o += n * B, a += n * L, c += n * j, h += n * D, u += n * q, d += n * F, f += n * H, l += n * z, p += n * V, b += n * $, g += n * K, m += n * G, y += n * W, v += n * J, w += n * Y, _ += n * X, n = t[2], a += n * B, c += n * L, h += n * j, u += n * D, d += n * q, f += n * F, l += n * H, p += n * z, b += n * V, g += n * $, m += n * K, y += n * G, v += n * W, w += n * J, _ += n * Y, E += n * X, n = t[3], c += n * B, h += n * L, u += n * j, d += n * D, f += n * q, l += n * F, p += n * H, b += n * z, g += n * V, m += n * $, y += n * K, v += n * G, w += n * W, _ += n * J, E += n * Y, S += n * X, n = t[4], h += n * B, u += n * L, d += n * j, f += n * D, l += n * q, p += n * F, b += n * H, g += n * z, m += n * V, y += n * $, v += n * K, w += n * G, _ += n * W, E += n * J, S += n * Y, A += n * X, n = t[5], u += n * B, d += n * L, f += n * j, l += n * D, p += n * q, b += n * F, g += n * H, m += n * z, y += n * V, v += n * $, w += n * K, _ += n * G, E += n * W, S += n * J, A += n * Y, M += n * X, n = t[6], d += n * B, f += n * L, l += n * j, p += n * D, b += n * q, g += n * F, m += n * H, y += n * z, v += n * V, w += n * $, _ += n * K, E += n * G, S += n * W, A += n * J, M += n * Y, I += n * X, n = t[7], f += n * B, l += n * L, p += n * j, b += n * D, g += n * q, m += n * F, y += n * H, v += n * z, w += n * V, _ += n * $, E += n * K, S += n * G, A += n * W, M += n * J, I += n * Y, T += n * X, n = t[8], l += n * B, p += n * L, b += n * j, g += n * D, m += n * q, y += n * F, v += n * H, w += n * z, _ += n * V, E += n * $, S += n * K, A += n * G, M += n * W, I += n * J, T += n * Y, x += n * X, n = t[9], p += n * B, b += n * L, g += n * j, m += n * D, y += n * q, v += n * F, w += n * H, _ += n * z, E += n * V, S += n * $, A += n * K, M += n * G, I += n * W, T += n * J, x += n * Y, C += n * X, n = t[10], b += n * B, g += n * L, m += n * j, y += n * D, v += n * q, w += n * F, _ += n * H, E += n * z, S += n * V, A += n * $, M += n * K, I += n * G, T += n * W, x += n * J, C += n * Y, R += n * X, n = t[11], g += n * B, m += n * L, y += n * j, v += n * D, w += n * q, _ += n * F, E += n * H, S += n * z, A += n * V, M += n * $, I += n * K, T += n * G, x += n * W, C += n * J, R += n * Y, k += n * X, n = t[12], m += n * B, y += n * L, v += n * j, w += n * D, _ += n * q, E += n * F, S += n * H, A += n * z, M += n * V, I += n * $, T += n * K, x += n * G, C += n * W, R += n * J, k += n * Y, P += n * X, n = t[13], y += n * B, v += n * L, w += n * j, _ += n * D, E += n * q, S += n * F, A += n * H, M += n * z, I += n * V, T += n * $, x += n * K, C += n * G, R += n * W, k += n * J, P += n * Y, O += n * X, n = t[14], v += n * B, w += n * L, _ += n * j, E += n * D, S += n * q, A += n * F, M += n * H, I += n * z, T += n * V, x += n * $, C += n * K, R += n * G, k += n * W, P += n * J, O += n * Y, N += n * X, n = t[15], w += n * B, _ += n * L, E += n * j, S += n * D, A += n * q, M += n * F, I += n * H, T += n * z, x += n * V, C += n * $, R += n * K, k += n * G, P += n * W, O += n * J, N += n * Y, U += n * X, s += 38 * _, o += 38 * E, a += 38 * S, c += 38 * A, h += 38 * M, u += 38 * I, d += 38 * T, f += 38 * x, l += 38 * C, p += 38 * R, b += 38 * k, g += 38 * P, m += 38 * O, y += 38 * N, v += 38 * U, i = 1, n = s + i + 65535, i = Math.floor(n / 65536), s = n - 65536 * i, n = o + i + 65535, i = Math.floor(n / 65536), o = n - 65536 * i, n = a + i + 65535, i = Math.floor(n / 65536), a = n - 65536 * i, n = c + i + 65535, i = Math.floor(n / 65536), c = n - 65536 * i, n = h + i + 65535, i = Math.floor(n / 65536), h = n - 65536 * i, n = u + i + 65535, i = Math.floor(n / 65536), u = n - 65536 * i, n = d + i + 65535, i = Math.floor(n / 65536), d = n - 65536 * i, n = f + i + 65535, i = Math.floor(n / 65536), f = n - 65536 * i, n = l + i + 65535, i = Math.floor(n / 65536), l = n - 65536 * i, n = p + i + 65535, i = Math.floor(n / 65536), p = n - 65536 * i, n = b + i + 65535, i = Math.floor(n / 65536), b = n - 65536 * i, n = g + i + 65535, i = Math.floor(n / 65536), g = n - 65536 * i, n = m + i + 65535, i = Math.floor(n / 65536), m = n - 65536 * i, n = y + i + 65535, i = Math.floor(n / 65536), y = n - 65536 * i, n = v + i + 65535, i = Math.floor(n / 65536), v = n - 65536 * i, n = w + i + 65535, i = Math.floor(n / 65536), w = n - 65536 * i, s += i - 1 + 37 * (i - 1), i = 1, n = s + i + 65535, i = Math.floor(n / 65536), s = n - 65536 * i, n = o + i + 65535, i = Math.floor(n / 65536), o = n - 65536 * i, n = a + i + 65535, i = Math.floor(n / 65536), a = n - 65536 * i, n = c + i + 65535, i = Math.floor(n / 65536), c = n - 65536 * i, n = h + i + 65535, i = Math.floor(n / 65536), h = n - 65536 * i, n = u + i + 65535, i = Math.floor(n / 65536), u = n - 65536 * i, n = d + i + 65535, i = Math.floor(n / 65536), d = n - 65536 * i, n = f + i + 65535, i = Math.floor(n / 65536), f = n - 65536 * i, n = l + i + 65535, i = Math.floor(n / 65536), l = n - 65536 * i, n = p + i + 65535, i = Math.floor(n / 65536), p = n - 65536 * i, n = b + i + 65535, i = Math.floor(n / 65536), b = n - 65536 * i, n = g + i + 65535, i = Math.floor(n / 65536), g = n - 65536 * i, n = m + i + 65535, i = Math.floor(n / 65536), m = n - 65536 * i, n = y + i + 65535, i = Math.floor(n / 65536), y = n - 65536 * i, n = v + i + 65535, i = Math.floor(n / 65536), v = n - 65536 * i, n = w + i + 65535, i = Math.floor(n / 65536), w = n - 65536 * i, s += i - 1 + 37 * (i - 1), e[0] = s, e[1] = o, e[2] = a, e[3] = c, e[4] = h, e[5] = u, e[6] = d, e[7] = f, e[8] = l, e[9] = p, e[10] = b, e[11] = g, e[12] = m, e[13] = y, e[14] = v, e[15] = w;
                }
                function y(e, t) {
                    m(e, t, t);
                }
                function v(e, t) {
                    const r = i(), n = i(), s = i(), o = i(), c = i(), h = i(), u = i(), d = i(), f = i();
                    g(r, e[1], e[0]), g(f, t[1], t[0]), m(r, r, f), b(n, e[0], e[1]), b(f, t[0], t[1]), m(n, n, f), m(s, e[3], t[3]), m(s, s, a), m(o, e[2], t[2]), b(o, o, o), g(c, n, r), g(h, o, s), b(u, o, s), b(d, n, r), m(e[0], c, h), m(e[1], d, u), m(e[2], u, h), m(e[3], c, d);
                }
                function w(e, t, r) {
                    for(let n = 0; n < 4; n++)f(e[n], t[n], r);
                }
                function _(e, t) {
                    const r = i(), n = i(), s = i();
                    (function(e, t) {
                        const r = i();
                        let n;
                        for(n = 0; n < 16; n++)r[n] = t[n];
                        for(n = 253; n >= 0; n--)y(r, r), 2 !== n && 4 !== n && m(r, r, t);
                        for(n = 0; n < 16; n++)e[n] = r[n];
                    })(s, t[2]), m(r, t[0], s), m(n, t[1], s), l(e, n), e[31] ^= p(r) << 7;
                }
                function E(e, t) {
                    const r = [
                        i(),
                        i(),
                        i(),
                        i()
                    ];
                    u(r[0], c), u(r[1], h), u(r[2], o), m(r[3], c, h), function(e, t, r) {
                        u(e[0], s), u(e[1], o), u(e[2], o), u(e[3], s);
                        for(let n = 255; n >= 0; --n){
                            const i = r[n / 8 | 0] >> (7 & n) & 1;
                            w(e, t, i), v(t, e), v(e, e), w(e, t, i);
                        }
                    }(e, r, t);
                }
                t.K = function(e) {
                    if (e.length !== t.TP) throw new Error(`ed25519: seed must be ${t.TP} bytes`);
                    const r = (0, n.hash)(e);
                    r[0] &= 248, r[31] &= 127, r[31] |= 64;
                    const s = new Uint8Array(32), o = [
                        i(),
                        i(),
                        i(),
                        i()
                    ];
                    E(o, r), _(s, o);
                    const a = new Uint8Array(64);
                    return a.set(e), a.set(s, 32), {
                        publicKey: s,
                        secretKey: a
                    };
                };
                const S = new Float64Array([
                    237,
                    211,
                    245,
                    92,
                    26,
                    99,
                    18,
                    88,
                    214,
                    156,
                    247,
                    162,
                    222,
                    249,
                    222,
                    20,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    16
                ]);
                function A(e, t) {
                    let r, n, i, s;
                    for(n = 63; n >= 32; --n){
                        for(r = 0, i = n - 32, s = n - 12; i < s; ++i)t[i] += r - 16 * t[n] * S[i - (n - 32)], r = Math.floor((t[i] + 128) / 256), t[i] -= 256 * r;
                        t[i] += r, t[n] = 0;
                    }
                    for(r = 0, i = 0; i < 32; i++)t[i] += r - (t[31] >> 4) * S[i], r = t[i] >> 8, t[i] &= 255;
                    for(i = 0; i < 32; i++)t[i] -= r * S[i];
                    for(n = 0; n < 32; n++)t[n + 1] += t[n] >> 8, e[n] = 255 & t[n];
                }
                function M(e) {
                    const t = new Float64Array(64);
                    for(let r = 0; r < 64; r++)t[r] = e[r];
                    for(let t = 0; t < 64; t++)e[t] = 0;
                    A(e, t);
                }
                t._S = function(e, t) {
                    const r = new Float64Array(64), s = [
                        i(),
                        i(),
                        i(),
                        i()
                    ], o = (0, n.hash)(e.subarray(0, 32));
                    o[0] &= 248, o[31] &= 127, o[31] |= 64;
                    const a = new Uint8Array(64);
                    a.set(o.subarray(32), 32);
                    const c = new n.SHA512;
                    c.update(a.subarray(32)), c.update(t);
                    const h = c.digest();
                    c.clean(), M(h), E(s, h), _(a, s), c.reset(), c.update(a.subarray(0, 32)), c.update(e.subarray(32)), c.update(t);
                    const u = c.digest();
                    M(u);
                    for(let e = 0; e < 32; e++)r[e] = h[e];
                    for(let e = 0; e < 32; e++)for(let t = 0; t < 32; t++)r[e + t] += u[e] * o[t];
                    return A(a.subarray(32), r), a;
                };
            },
            4950: (e, t)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.isSerializableHash = function(e) {
                    return void 0 !== e.saveState && void 0 !== e.restoreState && void 0 !== e.cleanSavedState;
                };
            },
            1619: (e, t, r)=>{
                "use strict";
                var n = r(3159), i = r(5955), s = function() {
                    function e(e, t, r, i) {
                        void 0 === r && (r = new Uint8Array(0)), this._counter = new Uint8Array(1), this._hash = e, this._info = i;
                        var s = n.hmac(this._hash, r, t);
                        this._hmac = new n.HMAC(e, s), this._buffer = new Uint8Array(this._hmac.digestLength), this._bufpos = this._buffer.length;
                    }
                    return e.prototype._fillBuffer = function() {
                        this._counter[0]++;
                        var e = this._counter[0];
                        if (0 === e) throw new Error("hkdf: cannot expand more");
                        this._hmac.reset(), e > 1 && this._hmac.update(this._buffer), this._info && this._hmac.update(this._info), this._hmac.update(this._counter), this._hmac.finish(this._buffer), this._bufpos = 0;
                    }, e.prototype.expand = function(e) {
                        for(var t = new Uint8Array(e), r = 0; r < t.length; r++)this._bufpos === this._buffer.length && this._fillBuffer(), t[r] = this._buffer[this._bufpos++];
                        return t;
                    }, e.prototype.clean = function() {
                        this._hmac.clean(), i.wipe(this._buffer), i.wipe(this._counter), this._bufpos = 0;
                    }, e;
                }();
                t.i = s;
            },
            3159: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var n = r(4950), i = r(3116), s = r(5955), o = function() {
                    function e(e, t) {
                        this._finished = !1, this._inner = new e, this._outer = new e, this.blockSize = this._outer.blockSize, this.digestLength = this._outer.digestLength;
                        var r = new Uint8Array(this.blockSize);
                        t.length > this.blockSize ? this._inner.update(t).finish(r).clean() : r.set(t);
                        for(var i = 0; i < r.length; i++)r[i] ^= 54;
                        for(this._inner.update(r), i = 0; i < r.length; i++)r[i] ^= 106;
                        this._outer.update(r), n.isSerializableHash(this._inner) && n.isSerializableHash(this._outer) && (this._innerKeyedState = this._inner.saveState(), this._outerKeyedState = this._outer.saveState()), s.wipe(r);
                    }
                    return e.prototype.reset = function() {
                        if (!n.isSerializableHash(this._inner) || !n.isSerializableHash(this._outer)) throw new Error("hmac: can't reset() because hash doesn't implement restoreState()");
                        return this._inner.restoreState(this._innerKeyedState), this._outer.restoreState(this._outerKeyedState), this._finished = !1, this;
                    }, e.prototype.clean = function() {
                        n.isSerializableHash(this._inner) && this._inner.cleanSavedState(this._innerKeyedState), n.isSerializableHash(this._outer) && this._outer.cleanSavedState(this._outerKeyedState), this._inner.clean(), this._outer.clean();
                    }, e.prototype.update = function(e) {
                        return this._inner.update(e), this;
                    }, e.prototype.finish = function(e) {
                        return this._finished ? (this._outer.finish(e), this) : (this._inner.finish(e), this._outer.update(e.subarray(0, this.digestLength)).finish(e), this._finished = !0, this);
                    }, e.prototype.digest = function() {
                        var e = new Uint8Array(this.digestLength);
                        return this.finish(e), e;
                    }, e.prototype.saveState = function() {
                        if (!n.isSerializableHash(this._inner)) throw new Error("hmac: can't saveState() because hash doesn't implement it");
                        return this._inner.saveState();
                    }, e.prototype.restoreState = function(e) {
                        if (!n.isSerializableHash(this._inner) || !n.isSerializableHash(this._outer)) throw new Error("hmac: can't restoreState() because hash doesn't implement it");
                        return this._inner.restoreState(e), this._outer.restoreState(this._outerKeyedState), this._finished = !1, this;
                    }, e.prototype.cleanSavedState = function(e) {
                        if (!n.isSerializableHash(this._inner)) throw new Error("hmac: can't cleanSavedState() because hash doesn't implement it");
                        this._inner.cleanSavedState(e);
                    }, e;
                }();
                t.HMAC = o, t.hmac = function(e, t, r) {
                    var n = new o(e, t);
                    n.update(r);
                    var i = n.digest();
                    return n.clean(), i;
                }, t.equal = i.equal;
            },
            9527: (e, t)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.mul = Math.imul || function(e, t) {
                    var r = 65535 & e, n = 65535 & t;
                    return r * n + ((e >>> 16 & 65535) * n + r * (t >>> 16 & 65535) << 16 >>> 0) | 0;
                }, t.add = function(e, t) {
                    return e + t | 0;
                }, t.sub = function(e, t) {
                    return e - t | 0;
                }, t.rotl = function(e, t) {
                    return e << t | e >>> 32 - t;
                }, t.rotr = function(e, t) {
                    return e << 32 - t | e >>> t;
                }, t.isInteger = Number.isInteger || function(e) {
                    return "number" == typeof e && isFinite(e) && Math.floor(e) === e;
                }, t.MAX_SAFE_INTEGER = 9007199254740991, t.isSafeInteger = function(e) {
                    return t.isInteger(e) && e >= -t.MAX_SAFE_INTEGER && e <= t.MAX_SAFE_INTEGER;
                };
            },
            93: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var n = r(3116), i = r(5955);
                t.DIGEST_LENGTH = 16;
                var s = function() {
                    function e(e) {
                        this.digestLength = t.DIGEST_LENGTH, this._buffer = new Uint8Array(16), this._r = new Uint16Array(10), this._h = new Uint16Array(10), this._pad = new Uint16Array(8), this._leftover = 0, this._fin = 0, this._finished = !1;
                        var r = e[0] | e[1] << 8;
                        this._r[0] = 8191 & r;
                        var n = e[2] | e[3] << 8;
                        this._r[1] = 8191 & (r >>> 13 | n << 3);
                        var i = e[4] | e[5] << 8;
                        this._r[2] = 7939 & (n >>> 10 | i << 6);
                        var s = e[6] | e[7] << 8;
                        this._r[3] = 8191 & (i >>> 7 | s << 9);
                        var o = e[8] | e[9] << 8;
                        this._r[4] = 255 & (s >>> 4 | o << 12), this._r[5] = o >>> 1 & 8190;
                        var a = e[10] | e[11] << 8;
                        this._r[6] = 8191 & (o >>> 14 | a << 2);
                        var c = e[12] | e[13] << 8;
                        this._r[7] = 8065 & (a >>> 11 | c << 5);
                        var h = e[14] | e[15] << 8;
                        this._r[8] = 8191 & (c >>> 8 | h << 8), this._r[9] = h >>> 5 & 127, this._pad[0] = e[16] | e[17] << 8, this._pad[1] = e[18] | e[19] << 8, this._pad[2] = e[20] | e[21] << 8, this._pad[3] = e[22] | e[23] << 8, this._pad[4] = e[24] | e[25] << 8, this._pad[5] = e[26] | e[27] << 8, this._pad[6] = e[28] | e[29] << 8, this._pad[7] = e[30] | e[31] << 8;
                    }
                    return e.prototype._blocks = function(e, t, r) {
                        for(var n = this._fin ? 0 : 2048, i = this._h[0], s = this._h[1], o = this._h[2], a = this._h[3], c = this._h[4], h = this._h[5], u = this._h[6], d = this._h[7], f = this._h[8], l = this._h[9], p = this._r[0], b = this._r[1], g = this._r[2], m = this._r[3], y = this._r[4], v = this._r[5], w = this._r[6], _ = this._r[7], E = this._r[8], S = this._r[9]; r >= 16;){
                            var A = e[t + 0] | e[t + 1] << 8;
                            i += 8191 & A;
                            var M = e[t + 2] | e[t + 3] << 8;
                            s += 8191 & (A >>> 13 | M << 3);
                            var I = e[t + 4] | e[t + 5] << 8;
                            o += 8191 & (M >>> 10 | I << 6);
                            var T = e[t + 6] | e[t + 7] << 8;
                            a += 8191 & (I >>> 7 | T << 9);
                            var x = e[t + 8] | e[t + 9] << 8;
                            c += 8191 & (T >>> 4 | x << 12), h += x >>> 1 & 8191;
                            var C = e[t + 10] | e[t + 11] << 8;
                            u += 8191 & (x >>> 14 | C << 2);
                            var R = e[t + 12] | e[t + 13] << 8;
                            d += 8191 & (C >>> 11 | R << 5);
                            var k = e[t + 14] | e[t + 15] << 8, P = 0, O = P;
                            O += i * p, O += s * (5 * S), O += o * (5 * E), O += a * (5 * _), P = (O += c * (5 * w)) >>> 13, O &= 8191, O += h * (5 * v), O += u * (5 * y), O += d * (5 * m), O += (f += 8191 & (R >>> 8 | k << 8)) * (5 * g);
                            var N = P += (O += (l += k >>> 5 | n) * (5 * b)) >>> 13;
                            N += i * b, N += s * p, N += o * (5 * S), N += a * (5 * E), P = (N += c * (5 * _)) >>> 13, N &= 8191, N += h * (5 * w), N += u * (5 * v), N += d * (5 * y), N += f * (5 * m), P += (N += l * (5 * g)) >>> 13, N &= 8191;
                            var U = P;
                            U += i * g, U += s * b, U += o * p, U += a * (5 * S), P = (U += c * (5 * E)) >>> 13, U &= 8191, U += h * (5 * _), U += u * (5 * w), U += d * (5 * v), U += f * (5 * y);
                            var B = P += (U += l * (5 * m)) >>> 13;
                            B += i * m, B += s * g, B += o * b, B += a * p, P = (B += c * (5 * S)) >>> 13, B &= 8191, B += h * (5 * E), B += u * (5 * _), B += d * (5 * w), B += f * (5 * v);
                            var L = P += (B += l * (5 * y)) >>> 13;
                            L += i * y, L += s * m, L += o * g, L += a * b, P = (L += c * p) >>> 13, L &= 8191, L += h * (5 * S), L += u * (5 * E), L += d * (5 * _), L += f * (5 * w);
                            var j = P += (L += l * (5 * v)) >>> 13;
                            j += i * v, j += s * y, j += o * m, j += a * g, P = (j += c * b) >>> 13, j &= 8191, j += h * p, j += u * (5 * S), j += d * (5 * E), j += f * (5 * _);
                            var D = P += (j += l * (5 * w)) >>> 13;
                            D += i * w, D += s * v, D += o * y, D += a * m, P = (D += c * g) >>> 13, D &= 8191, D += h * b, D += u * p, D += d * (5 * S), D += f * (5 * E);
                            var q = P += (D += l * (5 * _)) >>> 13;
                            q += i * _, q += s * w, q += o * v, q += a * y, P = (q += c * m) >>> 13, q &= 8191, q += h * g, q += u * b, q += d * p, q += f * (5 * S);
                            var F = P += (q += l * (5 * E)) >>> 13;
                            F += i * E, F += s * _, F += o * w, F += a * v, P = (F += c * y) >>> 13, F &= 8191, F += h * m, F += u * g, F += d * b, F += f * p;
                            var H = P += (F += l * (5 * S)) >>> 13;
                            H += i * S, H += s * E, H += o * _, H += a * w, P = (H += c * v) >>> 13, H &= 8191, H += h * y, H += u * m, H += d * g, H += f * b, i = O = 8191 & (P = (P = ((P += (H += l * p) >>> 13) << 2) + P | 0) + (O &= 8191) | 0), s = N += P >>>= 13, o = U &= 8191, a = B &= 8191, c = L &= 8191, h = j &= 8191, u = D &= 8191, d = q &= 8191, f = F &= 8191, l = H &= 8191, t += 16, r -= 16;
                        }
                        this._h[0] = i, this._h[1] = s, this._h[2] = o, this._h[3] = a, this._h[4] = c, this._h[5] = h, this._h[6] = u, this._h[7] = d, this._h[8] = f, this._h[9] = l;
                    }, e.prototype.finish = function(e, t) {
                        void 0 === t && (t = 0);
                        var r, n, i, s, o = new Uint16Array(10);
                        if (this._leftover) {
                            for(s = this._leftover, this._buffer[s++] = 1; s < 16; s++)this._buffer[s] = 0;
                            this._fin = 1, this._blocks(this._buffer, 0, 16);
                        }
                        for(r = this._h[1] >>> 13, this._h[1] &= 8191, s = 2; s < 10; s++)this._h[s] += r, r = this._h[s] >>> 13, this._h[s] &= 8191;
                        for(this._h[0] += 5 * r, r = this._h[0] >>> 13, this._h[0] &= 8191, this._h[1] += r, r = this._h[1] >>> 13, this._h[1] &= 8191, this._h[2] += r, o[0] = this._h[0] + 5, r = o[0] >>> 13, o[0] &= 8191, s = 1; s < 10; s++)o[s] = this._h[s] + r, r = o[s] >>> 13, o[s] &= 8191;
                        for(o[9] -= 8192, n = (1 ^ r) - 1, s = 0; s < 10; s++)o[s] &= n;
                        for(n = ~n, s = 0; s < 10; s++)this._h[s] = this._h[s] & n | o[s];
                        for(this._h[0] = 65535 & (this._h[0] | this._h[1] << 13), this._h[1] = 65535 & (this._h[1] >>> 3 | this._h[2] << 10), this._h[2] = 65535 & (this._h[2] >>> 6 | this._h[3] << 7), this._h[3] = 65535 & (this._h[3] >>> 9 | this._h[4] << 4), this._h[4] = 65535 & (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14), this._h[5] = 65535 & (this._h[6] >>> 2 | this._h[7] << 11), this._h[6] = 65535 & (this._h[7] >>> 5 | this._h[8] << 8), this._h[7] = 65535 & (this._h[8] >>> 8 | this._h[9] << 5), i = this._h[0] + this._pad[0], this._h[0] = 65535 & i, s = 1; s < 8; s++)i = (this._h[s] + this._pad[s] | 0) + (i >>> 16) | 0, this._h[s] = 65535 & i;
                        return e[t + 0] = this._h[0] >>> 0, e[t + 1] = this._h[0] >>> 8, e[t + 2] = this._h[1] >>> 0, e[t + 3] = this._h[1] >>> 8, e[t + 4] = this._h[2] >>> 0, e[t + 5] = this._h[2] >>> 8, e[t + 6] = this._h[3] >>> 0, e[t + 7] = this._h[3] >>> 8, e[t + 8] = this._h[4] >>> 0, e[t + 9] = this._h[4] >>> 8, e[t + 10] = this._h[5] >>> 0, e[t + 11] = this._h[5] >>> 8, e[t + 12] = this._h[6] >>> 0, e[t + 13] = this._h[6] >>> 8, e[t + 14] = this._h[7] >>> 0, e[t + 15] = this._h[7] >>> 8, this._finished = !0, this;
                    }, e.prototype.update = function(e) {
                        var t, r = 0, n = e.length;
                        if (this._leftover) {
                            (t = 16 - this._leftover) > n && (t = n);
                            for(var i = 0; i < t; i++)this._buffer[this._leftover + i] = e[r + i];
                            if (n -= t, r += t, this._leftover += t, this._leftover < 16) return this;
                            this._blocks(this._buffer, 0, 16), this._leftover = 0;
                        }
                        if (n >= 16 && (t = n - n % 16, this._blocks(e, r, t), r += t, n -= t), n) {
                            for(i = 0; i < n; i++)this._buffer[this._leftover + i] = e[r + i];
                            this._leftover += n;
                        }
                        return this;
                    }, e.prototype.digest = function() {
                        if (this._finished) throw new Error("Poly1305 was finished");
                        var e = new Uint8Array(16);
                        return this.finish(e), e;
                    }, e.prototype.clean = function() {
                        return i.wipe(this._buffer), i.wipe(this._r), i.wipe(this._h), i.wipe(this._pad), this._leftover = 0, this._fin = 0, this._finished = !0, this;
                    }, e;
                }();
                t.Poly1305 = s, t.oneTimeAuth = function(e, t) {
                    var r = new s(e);
                    r.update(t);
                    var n = r.digest();
                    return r.clean(), n;
                }, t.equal = function(e, r) {
                    return e.length === t.DIGEST_LENGTH && r.length === t.DIGEST_LENGTH && n.equal(e, r);
                };
            },
            4734: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.randomStringForEntropy = t.randomString = t.randomUint32 = t.randomBytes = t.defaultRandomSource = void 0;
                const n = r(7418), i = r(1029), s = r(5955);
                function o(e, r = t.defaultRandomSource) {
                    return r.randomBytes(e);
                }
                t.defaultRandomSource = new n.SystemRandomSource, t.randomBytes = o, t.randomUint32 = function(e = t.defaultRandomSource) {
                    const r = o(4, e), n = (0, i.readUint32LE)(r);
                    return (0, s.wipe)(r), n;
                };
                const a = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
                function c(e, r = a, n = t.defaultRandomSource) {
                    if (r.length < 2) throw new Error("randomString charset is too short");
                    if (r.length > 256) throw new Error("randomString charset is too long");
                    let i = "";
                    const c1 = r.length, h = 256 - 256 % c1;
                    for(; e > 0;){
                        const t = o(Math.ceil(256 * e / h), n);
                        for(let n = 0; n < t.length && e > 0; n++){
                            const s = t[n];
                            s < h && (i += r.charAt(s % c1), e--);
                        }
                        (0, s.wipe)(t);
                    }
                    return i;
                }
                t.randomString = c, t.randomStringForEntropy = function(e, r = a, n = t.defaultRandomSource) {
                    return c(Math.ceil(e / (Math.log(r.length) / Math.LN2)), r, n);
                };
            },
            5855: (e, t)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.BrowserRandomSource = void 0, t.BrowserRandomSource = class {
                    constructor(){
                        this.isAvailable = !1, this.isInstantiated = !1;
                        const e = "undefined" != typeof self ? self.crypto || self.msCrypto : null;
                        e && void 0 !== e.getRandomValues && (this._crypto = e, this.isAvailable = !0, this.isInstantiated = !0);
                    }
                    randomBytes(e) {
                        if (!this.isAvailable || !this._crypto) throw new Error("Browser random byte generator is not available.");
                        const t = new Uint8Array(e);
                        for(let e = 0; e < t.length; e += 65536)this._crypto.getRandomValues(t.subarray(e, e + Math.min(t.length - e, 65536)));
                        return t;
                    }
                };
            },
            4075: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.NodeRandomSource = void 0;
                const n = r(5955);
                t.NodeRandomSource = class {
                    constructor(){
                        this.isAvailable = !1, this.isInstantiated = !1;
                        {
                            const e = r(170);
                            e && e.randomBytes && (this._crypto = e, this.isAvailable = !0, this.isInstantiated = !0);
                        }
                    }
                    randomBytes(e) {
                        if (!this.isAvailable || !this._crypto) throw new Error("Node.js random byte generator is not available.");
                        let t = this._crypto.randomBytes(e);
                        if (t.length !== e) throw new Error("NodeRandomSource: got fewer bytes than requested");
                        const r = new Uint8Array(e);
                        for(let e = 0; e < r.length; e++)r[e] = t[e];
                        return (0, n.wipe)(t), r;
                    }
                };
            },
            7418: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.SystemRandomSource = void 0;
                const n = r(5855), i = r(4075);
                t.SystemRandomSource = class {
                    constructor(){
                        return this.isAvailable = !1, this.name = "", this._source = new n.BrowserRandomSource, this._source.isAvailable ? (this.isAvailable = !0, void (this.name = "Browser")) : (this._source = new i.NodeRandomSource, this._source.isAvailable ? (this.isAvailable = !0, void (this.name = "Node")) : void 0);
                    }
                    randomBytes(e) {
                        if (!this.isAvailable) throw new Error("System random byte generator is not available.");
                        return this._source.randomBytes(e);
                    }
                };
            },
            6247: (e, t, r)=>{
                "use strict";
                var n = r(1029), i = r(5955);
                t.On = 32, t.cS = 64;
                var s = function() {
                    function e() {
                        this.digestLength = t.On, this.blockSize = t.cS, this._state = new Int32Array(8), this._temp = new Int32Array(64), this._buffer = new Uint8Array(128), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this.reset();
                    }
                    return e.prototype._initState = function() {
                        this._state[0] = 1779033703, this._state[1] = 3144134277, this._state[2] = 1013904242, this._state[3] = 2773480762, this._state[4] = 1359893119, this._state[5] = 2600822924, this._state[6] = 528734635, this._state[7] = 1541459225;
                    }, e.prototype.reset = function() {
                        return this._initState(), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this;
                    }, e.prototype.clean = function() {
                        i.wipe(this._buffer), i.wipe(this._temp), this.reset();
                    }, e.prototype.update = function(e, t) {
                        if (void 0 === t && (t = e.length), this._finished) throw new Error("SHA256: can't update because hash was finished.");
                        var r = 0;
                        if (this._bytesHashed += t, this._bufferLength > 0) {
                            for(; this._bufferLength < this.blockSize && t > 0;)this._buffer[this._bufferLength++] = e[r++], t--;
                            this._bufferLength === this.blockSize && (a(this._temp, this._state, this._buffer, 0, this.blockSize), this._bufferLength = 0);
                        }
                        for(t >= this.blockSize && (r = a(this._temp, this._state, e, r, t), t %= this.blockSize); t > 0;)this._buffer[this._bufferLength++] = e[r++], t--;
                        return this;
                    }, e.prototype.finish = function(e) {
                        if (!this._finished) {
                            var t = this._bytesHashed, r = this._bufferLength, i = t / 536870912 | 0, s = t << 3, o = t % 64 < 56 ? 64 : 128;
                            this._buffer[r] = 128;
                            for(var c = r + 1; c < o - 8; c++)this._buffer[c] = 0;
                            n.writeUint32BE(i, this._buffer, o - 8), n.writeUint32BE(s, this._buffer, o - 4), a(this._temp, this._state, this._buffer, 0, o), this._finished = !0;
                        }
                        for(c = 0; c < this.digestLength / 4; c++)n.writeUint32BE(this._state[c], e, 4 * c);
                        return this;
                    }, e.prototype.digest = function() {
                        var e = new Uint8Array(this.digestLength);
                        return this.finish(e), e;
                    }, e.prototype.saveState = function() {
                        if (this._finished) throw new Error("SHA256: cannot save finished state");
                        return {
                            state: new Int32Array(this._state),
                            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
                            bufferLength: this._bufferLength,
                            bytesHashed: this._bytesHashed
                        };
                    }, e.prototype.restoreState = function(e) {
                        return this._state.set(e.state), this._bufferLength = e.bufferLength, e.buffer && this._buffer.set(e.buffer), this._bytesHashed = e.bytesHashed, this._finished = !1, this;
                    }, e.prototype.cleanSavedState = function(e) {
                        i.wipe(e.state), e.buffer && i.wipe(e.buffer), e.bufferLength = 0, e.bytesHashed = 0;
                    }, e;
                }();
                t.aD = s;
                var o = new Int32Array([
                    1116352408,
                    1899447441,
                    3049323471,
                    3921009573,
                    961987163,
                    1508970993,
                    2453635748,
                    2870763221,
                    3624381080,
                    310598401,
                    607225278,
                    1426881987,
                    1925078388,
                    2162078206,
                    2614888103,
                    3248222580,
                    3835390401,
                    4022224774,
                    264347078,
                    604807628,
                    770255983,
                    1249150122,
                    1555081692,
                    1996064986,
                    2554220882,
                    2821834349,
                    2952996808,
                    3210313671,
                    3336571891,
                    3584528711,
                    113926993,
                    338241895,
                    666307205,
                    773529912,
                    1294757372,
                    1396182291,
                    1695183700,
                    1986661051,
                    2177026350,
                    2456956037,
                    2730485921,
                    2820302411,
                    3259730800,
                    3345764771,
                    3516065817,
                    3600352804,
                    4094571909,
                    275423344,
                    430227734,
                    506948616,
                    659060556,
                    883997877,
                    958139571,
                    1322822218,
                    1537002063,
                    1747873779,
                    1955562222,
                    2024104815,
                    2227730452,
                    2361852424,
                    2428436474,
                    2756734187,
                    3204031479,
                    3329325298
                ]);
                function a(e, t, r, i, s) {
                    for(; s >= 64;){
                        for(var a = t[0], c = t[1], h = t[2], u = t[3], d = t[4], f = t[5], l = t[6], p = t[7], b = 0; b < 16; b++){
                            var g = i + 4 * b;
                            e[b] = n.readUint32BE(r, g);
                        }
                        for(b = 16; b < 64; b++){
                            var m = e[b - 2], y = (m >>> 17 | m << 15) ^ (m >>> 19 | m << 13) ^ m >>> 10, v = ((m = e[b - 15]) >>> 7 | m << 25) ^ (m >>> 18 | m << 14) ^ m >>> 3;
                            e[b] = (y + e[b - 7] | 0) + (v + e[b - 16] | 0);
                        }
                        for(b = 0; b < 64; b++)y = (((d >>> 6 | d << 26) ^ (d >>> 11 | d << 21) ^ (d >>> 25 | d << 7)) + (d & f ^ ~d & l) | 0) + (p + (o[b] + e[b] | 0) | 0) | 0, v = ((a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10)) + (a & c ^ a & h ^ c & h) | 0, p = l, l = f, f = d, d = u + y | 0, u = h, h = c, c = a, a = y + v | 0;
                        t[0] += a, t[1] += c, t[2] += h, t[3] += u, t[4] += d, t[5] += f, t[6] += l, t[7] += p, i += 64, s -= 64;
                    }
                    return i;
                }
                t.tW = function(e) {
                    var t = new s;
                    t.update(e);
                    var r = t.digest();
                    return t.clean(), r;
                };
            },
            3668: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                var n = r(1029), i = r(5955);
                t.DIGEST_LENGTH = 64, t.BLOCK_SIZE = 128;
                var s = function() {
                    function e() {
                        this.digestLength = t.DIGEST_LENGTH, this.blockSize = t.BLOCK_SIZE, this._stateHi = new Int32Array(8), this._stateLo = new Int32Array(8), this._tempHi = new Int32Array(16), this._tempLo = new Int32Array(16), this._buffer = new Uint8Array(256), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this.reset();
                    }
                    return e.prototype._initState = function() {
                        this._stateHi[0] = 1779033703, this._stateHi[1] = 3144134277, this._stateHi[2] = 1013904242, this._stateHi[3] = 2773480762, this._stateHi[4] = 1359893119, this._stateHi[5] = 2600822924, this._stateHi[6] = 528734635, this._stateHi[7] = 1541459225, this._stateLo[0] = 4089235720, this._stateLo[1] = 2227873595, this._stateLo[2] = 4271175723, this._stateLo[3] = 1595750129, this._stateLo[4] = 2917565137, this._stateLo[5] = 725511199, this._stateLo[6] = 4215389547, this._stateLo[7] = 327033209;
                    }, e.prototype.reset = function() {
                        return this._initState(), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this;
                    }, e.prototype.clean = function() {
                        i.wipe(this._buffer), i.wipe(this._tempHi), i.wipe(this._tempLo), this.reset();
                    }, e.prototype.update = function(e, r) {
                        if (void 0 === r && (r = e.length), this._finished) throw new Error("SHA512: can't update because hash was finished.");
                        var n = 0;
                        if (this._bytesHashed += r, this._bufferLength > 0) {
                            for(; this._bufferLength < t.BLOCK_SIZE && r > 0;)this._buffer[this._bufferLength++] = e[n++], r--;
                            this._bufferLength === this.blockSize && (a(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, this.blockSize), this._bufferLength = 0);
                        }
                        for(r >= this.blockSize && (n = a(this._tempHi, this._tempLo, this._stateHi, this._stateLo, e, n, r), r %= this.blockSize); r > 0;)this._buffer[this._bufferLength++] = e[n++], r--;
                        return this;
                    }, e.prototype.finish = function(e) {
                        if (!this._finished) {
                            var t = this._bytesHashed, r = this._bufferLength, i = t / 536870912 | 0, s = t << 3, o = t % 128 < 112 ? 128 : 256;
                            this._buffer[r] = 128;
                            for(var c = r + 1; c < o - 8; c++)this._buffer[c] = 0;
                            n.writeUint32BE(i, this._buffer, o - 8), n.writeUint32BE(s, this._buffer, o - 4), a(this._tempHi, this._tempLo, this._stateHi, this._stateLo, this._buffer, 0, o), this._finished = !0;
                        }
                        for(c = 0; c < this.digestLength / 8; c++)n.writeUint32BE(this._stateHi[c], e, 8 * c), n.writeUint32BE(this._stateLo[c], e, 8 * c + 4);
                        return this;
                    }, e.prototype.digest = function() {
                        var e = new Uint8Array(this.digestLength);
                        return this.finish(e), e;
                    }, e.prototype.saveState = function() {
                        if (this._finished) throw new Error("SHA256: cannot save finished state");
                        return {
                            stateHi: new Int32Array(this._stateHi),
                            stateLo: new Int32Array(this._stateLo),
                            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
                            bufferLength: this._bufferLength,
                            bytesHashed: this._bytesHashed
                        };
                    }, e.prototype.restoreState = function(e) {
                        return this._stateHi.set(e.stateHi), this._stateLo.set(e.stateLo), this._bufferLength = e.bufferLength, e.buffer && this._buffer.set(e.buffer), this._bytesHashed = e.bytesHashed, this._finished = !1, this;
                    }, e.prototype.cleanSavedState = function(e) {
                        i.wipe(e.stateHi), i.wipe(e.stateLo), e.buffer && i.wipe(e.buffer), e.bufferLength = 0, e.bytesHashed = 0;
                    }, e;
                }();
                t.SHA512 = s;
                var o = new Int32Array([
                    1116352408,
                    3609767458,
                    1899447441,
                    602891725,
                    3049323471,
                    3964484399,
                    3921009573,
                    2173295548,
                    961987163,
                    4081628472,
                    1508970993,
                    3053834265,
                    2453635748,
                    2937671579,
                    2870763221,
                    3664609560,
                    3624381080,
                    2734883394,
                    310598401,
                    1164996542,
                    607225278,
                    1323610764,
                    1426881987,
                    3590304994,
                    1925078388,
                    4068182383,
                    2162078206,
                    991336113,
                    2614888103,
                    633803317,
                    3248222580,
                    3479774868,
                    3835390401,
                    2666613458,
                    4022224774,
                    944711139,
                    264347078,
                    2341262773,
                    604807628,
                    2007800933,
                    770255983,
                    1495990901,
                    1249150122,
                    1856431235,
                    1555081692,
                    3175218132,
                    1996064986,
                    2198950837,
                    2554220882,
                    3999719339,
                    2821834349,
                    766784016,
                    2952996808,
                    2566594879,
                    3210313671,
                    3203337956,
                    3336571891,
                    1034457026,
                    3584528711,
                    2466948901,
                    113926993,
                    3758326383,
                    338241895,
                    168717936,
                    666307205,
                    1188179964,
                    773529912,
                    1546045734,
                    1294757372,
                    1522805485,
                    1396182291,
                    2643833823,
                    1695183700,
                    2343527390,
                    1986661051,
                    1014477480,
                    2177026350,
                    1206759142,
                    2456956037,
                    344077627,
                    2730485921,
                    1290863460,
                    2820302411,
                    3158454273,
                    3259730800,
                    3505952657,
                    3345764771,
                    106217008,
                    3516065817,
                    3606008344,
                    3600352804,
                    1432725776,
                    4094571909,
                    1467031594,
                    275423344,
                    851169720,
                    430227734,
                    3100823752,
                    506948616,
                    1363258195,
                    659060556,
                    3750685593,
                    883997877,
                    3785050280,
                    958139571,
                    3318307427,
                    1322822218,
                    3812723403,
                    1537002063,
                    2003034995,
                    1747873779,
                    3602036899,
                    1955562222,
                    1575990012,
                    2024104815,
                    1125592928,
                    2227730452,
                    2716904306,
                    2361852424,
                    442776044,
                    2428436474,
                    593698344,
                    2756734187,
                    3733110249,
                    3204031479,
                    2999351573,
                    3329325298,
                    3815920427,
                    3391569614,
                    3928383900,
                    3515267271,
                    566280711,
                    3940187606,
                    3454069534,
                    4118630271,
                    4000239992,
                    116418474,
                    1914138554,
                    174292421,
                    2731055270,
                    289380356,
                    3203993006,
                    460393269,
                    320620315,
                    685471733,
                    587496836,
                    852142971,
                    1086792851,
                    1017036298,
                    365543100,
                    1126000580,
                    2618297676,
                    1288033470,
                    3409855158,
                    1501505948,
                    4234509866,
                    1607167915,
                    987167468,
                    1816402316,
                    1246189591
                ]);
                function a(e, t, r, i, s, a, c) {
                    for(var h, u, d, f, l, p, b, g, m = r[0], y = r[1], v = r[2], w = r[3], _ = r[4], E = r[5], S = r[6], A = r[7], M = i[0], I = i[1], T = i[2], x = i[3], C = i[4], R = i[5], k = i[6], P = i[7]; c >= 128;){
                        for(var O = 0; O < 16; O++){
                            var N = 8 * O + a;
                            e[O] = n.readUint32BE(s, N), t[O] = n.readUint32BE(s, N + 4);
                        }
                        for(O = 0; O < 80; O++){
                            var U, B, L = m, j = y, D = v, q = w, F = _, H = E, z = S, V = M, $ = I, K = T, G = x, W = C, J = R, Y = k;
                            if (l = 65535 & (u = P), p = u >>> 16, b = 65535 & (h = A), g = h >>> 16, l += 65535 & (u = (C >>> 14 | _ << 18) ^ (C >>> 18 | _ << 14) ^ (_ >>> 9 | C << 23)), p += u >>> 16, b += 65535 & (h = (_ >>> 14 | C << 18) ^ (_ >>> 18 | C << 14) ^ (C >>> 9 | _ << 23)), g += h >>> 16, l += 65535 & (u = C & R ^ ~C & k), p += u >>> 16, b += 65535 & (h = _ & E ^ ~_ & S), g += h >>> 16, h = o[2 * O], l += 65535 & (u = o[2 * O + 1]), p += u >>> 16, b += 65535 & h, g += h >>> 16, h = e[O % 16], p += (u = t[O % 16]) >>> 16, b += 65535 & h, g += h >>> 16, b += (p += (l += 65535 & u) >>> 16) >>> 16, l = 65535 & (u = f = 65535 & l | p << 16), p = u >>> 16, b = 65535 & (h = d = 65535 & b | (g += b >>> 16) << 16), g = h >>> 16, l += 65535 & (u = (M >>> 28 | m << 4) ^ (m >>> 2 | M << 30) ^ (m >>> 7 | M << 25)), p += u >>> 16, b += 65535 & (h = (m >>> 28 | M << 4) ^ (M >>> 2 | m << 30) ^ (M >>> 7 | m << 25)), g += h >>> 16, p += (u = M & I ^ M & T ^ I & T) >>> 16, b += 65535 & (h = m & y ^ m & v ^ y & v), g += h >>> 16, U = 65535 & (b += (p += (l += 65535 & u) >>> 16) >>> 16) | (g += b >>> 16) << 16, B = 65535 & l | p << 16, l = 65535 & (u = G), p = u >>> 16, b = 65535 & (h = q), g = h >>> 16, p += (u = f) >>> 16, b += 65535 & (h = d), g += h >>> 16, y = L, v = j, w = D, _ = q = 65535 & (b += (p += (l += 65535 & u) >>> 16) >>> 16) | (g += b >>> 16) << 16, E = F, S = H, A = z, m = U, I = V, T = $, x = K, C = G = 65535 & l | p << 16, R = W, k = J, P = Y, M = B, O % 16 == 15) for(N = 0; N < 16; N++)h = e[N], l = 65535 & (u = t[N]), p = u >>> 16, b = 65535 & h, g = h >>> 16, h = e[(N + 9) % 16], l += 65535 & (u = t[(N + 9) % 16]), p += u >>> 16, b += 65535 & h, g += h >>> 16, d = e[(N + 1) % 16], l += 65535 & (u = ((f = t[(N + 1) % 16]) >>> 1 | d << 31) ^ (f >>> 8 | d << 24) ^ (f >>> 7 | d << 25)), p += u >>> 16, b += 65535 & (h = (d >>> 1 | f << 31) ^ (d >>> 8 | f << 24) ^ d >>> 7), g += h >>> 16, d = e[(N + 14) % 16], p += (u = ((f = t[(N + 14) % 16]) >>> 19 | d << 13) ^ (d >>> 29 | f << 3) ^ (f >>> 6 | d << 26)) >>> 16, b += 65535 & (h = (d >>> 19 | f << 13) ^ (f >>> 29 | d << 3) ^ d >>> 6), g += h >>> 16, g += (b += (p += (l += 65535 & u) >>> 16) >>> 16) >>> 16, e[N] = 65535 & b | g << 16, t[N] = 65535 & l | p << 16;
                        }
                        l = 65535 & (u = M), p = u >>> 16, b = 65535 & (h = m), g = h >>> 16, h = r[0], p += (u = i[0]) >>> 16, b += 65535 & h, g += h >>> 16, g += (b += (p += (l += 65535 & u) >>> 16) >>> 16) >>> 16, r[0] = m = 65535 & b | g << 16, i[0] = M = 65535 & l | p << 16, l = 65535 & (u = I), p = u >>> 16, b = 65535 & (h = y), g = h >>> 16, h = r[1], p += (u = i[1]) >>> 16, b += 65535 & h, g += h >>> 16, g += (b += (p += (l += 65535 & u) >>> 16) >>> 16) >>> 16, r[1] = y = 65535 & b | g << 16, i[1] = I = 65535 & l | p << 16, l = 65535 & (u = T), p = u >>> 16, b = 65535 & (h = v), g = h >>> 16, h = r[2], p += (u = i[2]) >>> 16, b += 65535 & h, g += h >>> 16, g += (b += (p += (l += 65535 & u) >>> 16) >>> 16) >>> 16, r[2] = v = 65535 & b | g << 16, i[2] = T = 65535 & l | p << 16, l = 65535 & (u = x), p = u >>> 16, b = 65535 & (h = w), g = h >>> 16, h = r[3], p += (u = i[3]) >>> 16, b += 65535 & h, g += h >>> 16, g += (b += (p += (l += 65535 & u) >>> 16) >>> 16) >>> 16, r[3] = w = 65535 & b | g << 16, i[3] = x = 65535 & l | p << 16, l = 65535 & (u = C), p = u >>> 16, b = 65535 & (h = _), g = h >>> 16, h = r[4], p += (u = i[4]) >>> 16, b += 65535 & h, g += h >>> 16, g += (b += (p += (l += 65535 & u) >>> 16) >>> 16) >>> 16, r[4] = _ = 65535 & b | g << 16, i[4] = C = 65535 & l | p << 16, l = 65535 & (u = R), p = u >>> 16, b = 65535 & (h = E), g = h >>> 16, h = r[5], p += (u = i[5]) >>> 16, b += 65535 & h, g += h >>> 16, g += (b += (p += (l += 65535 & u) >>> 16) >>> 16) >>> 16, r[5] = E = 65535 & b | g << 16, i[5] = R = 65535 & l | p << 16, l = 65535 & (u = k), p = u >>> 16, b = 65535 & (h = S), g = h >>> 16, h = r[6], p += (u = i[6]) >>> 16, b += 65535 & h, g += h >>> 16, g += (b += (p += (l += 65535 & u) >>> 16) >>> 16) >>> 16, r[6] = S = 65535 & b | g << 16, i[6] = k = 65535 & l | p << 16, l = 65535 & (u = P), p = u >>> 16, b = 65535 & (h = A), g = h >>> 16, h = r[7], p += (u = i[7]) >>> 16, b += 65535 & h, g += h >>> 16, g += (b += (p += (l += 65535 & u) >>> 16) >>> 16) >>> 16, r[7] = A = 65535 & b | g << 16, i[7] = P = 65535 & l | p << 16, a += 128, c -= 128;
                    }
                    return a;
                }
                t.hash = function(e) {
                    var t = new s;
                    t.update(e);
                    var r = t.digest();
                    return t.clean(), r;
                };
            },
            5955: (e, t)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.wipe = function(e) {
                    for(var t = 0; t < e.length; t++)e[t] = 0;
                    return e;
                };
            },
            2945: (e, t, r)=>{
                "use strict";
                t.Tc = t.TZ = t.wE = t.Xx = void 0;
                const n = r(4734), i = r(5955);
                function s(e) {
                    const t = new Float64Array(16);
                    if (e) for(let r = 0; r < e.length; r++)t[r] = e[r];
                    return t;
                }
                t.Xx = 32, t.wE = 32;
                const o = new Uint8Array(32);
                o[0] = 9;
                const a = s([
                    56129,
                    1
                ]);
                function c(e) {
                    let t = 1;
                    for(let r = 0; r < 16; r++){
                        let n = e[r] + t + 65535;
                        t = Math.floor(n / 65536), e[r] = n - 65536 * t;
                    }
                    e[0] += t - 1 + 37 * (t - 1);
                }
                function h(e, t, r) {
                    const n = ~(r - 1);
                    for(let r = 0; r < 16; r++){
                        const i = n & (e[r] ^ t[r]);
                        e[r] ^= i, t[r] ^= i;
                    }
                }
                function u(e, t, r) {
                    for(let n = 0; n < 16; n++)e[n] = t[n] + r[n];
                }
                function d(e, t, r) {
                    for(let n = 0; n < 16; n++)e[n] = t[n] - r[n];
                }
                function f(e, t, r) {
                    let n, i, s = 0, o = 0, a = 0, c = 0, h = 0, u = 0, d = 0, f = 0, l = 0, p = 0, b = 0, g = 0, m = 0, y = 0, v = 0, w = 0, _ = 0, E = 0, S = 0, A = 0, M = 0, I = 0, T = 0, x = 0, C = 0, R = 0, k = 0, P = 0, O = 0, N = 0, U = 0, B = r[0], L = r[1], j = r[2], D = r[3], q = r[4], F = r[5], H = r[6], z = r[7], V = r[8], $ = r[9], K = r[10], G = r[11], W = r[12], J = r[13], Y = r[14], X = r[15];
                    n = t[0], s += n * B, o += n * L, a += n * j, c += n * D, h += n * q, u += n * F, d += n * H, f += n * z, l += n * V, p += n * $, b += n * K, g += n * G, m += n * W, y += n * J, v += n * Y, w += n * X, n = t[1], o += n * B, a += n * L, c += n * j, h += n * D, u += n * q, d += n * F, f += n * H, l += n * z, p += n * V, b += n * $, g += n * K, m += n * G, y += n * W, v += n * J, w += n * Y, _ += n * X, n = t[2], a += n * B, c += n * L, h += n * j, u += n * D, d += n * q, f += n * F, l += n * H, p += n * z, b += n * V, g += n * $, m += n * K, y += n * G, v += n * W, w += n * J, _ += n * Y, E += n * X, n = t[3], c += n * B, h += n * L, u += n * j, d += n * D, f += n * q, l += n * F, p += n * H, b += n * z, g += n * V, m += n * $, y += n * K, v += n * G, w += n * W, _ += n * J, E += n * Y, S += n * X, n = t[4], h += n * B, u += n * L, d += n * j, f += n * D, l += n * q, p += n * F, b += n * H, g += n * z, m += n * V, y += n * $, v += n * K, w += n * G, _ += n * W, E += n * J, S += n * Y, A += n * X, n = t[5], u += n * B, d += n * L, f += n * j, l += n * D, p += n * q, b += n * F, g += n * H, m += n * z, y += n * V, v += n * $, w += n * K, _ += n * G, E += n * W, S += n * J, A += n * Y, M += n * X, n = t[6], d += n * B, f += n * L, l += n * j, p += n * D, b += n * q, g += n * F, m += n * H, y += n * z, v += n * V, w += n * $, _ += n * K, E += n * G, S += n * W, A += n * J, M += n * Y, I += n * X, n = t[7], f += n * B, l += n * L, p += n * j, b += n * D, g += n * q, m += n * F, y += n * H, v += n * z, w += n * V, _ += n * $, E += n * K, S += n * G, A += n * W, M += n * J, I += n * Y, T += n * X, n = t[8], l += n * B, p += n * L, b += n * j, g += n * D, m += n * q, y += n * F, v += n * H, w += n * z, _ += n * V, E += n * $, S += n * K, A += n * G, M += n * W, I += n * J, T += n * Y, x += n * X, n = t[9], p += n * B, b += n * L, g += n * j, m += n * D, y += n * q, v += n * F, w += n * H, _ += n * z, E += n * V, S += n * $, A += n * K, M += n * G, I += n * W, T += n * J, x += n * Y, C += n * X, n = t[10], b += n * B, g += n * L, m += n * j, y += n * D, v += n * q, w += n * F, _ += n * H, E += n * z, S += n * V, A += n * $, M += n * K, I += n * G, T += n * W, x += n * J, C += n * Y, R += n * X, n = t[11], g += n * B, m += n * L, y += n * j, v += n * D, w += n * q, _ += n * F, E += n * H, S += n * z, A += n * V, M += n * $, I += n * K, T += n * G, x += n * W, C += n * J, R += n * Y, k += n * X, n = t[12], m += n * B, y += n * L, v += n * j, w += n * D, _ += n * q, E += n * F, S += n * H, A += n * z, M += n * V, I += n * $, T += n * K, x += n * G, C += n * W, R += n * J, k += n * Y, P += n * X, n = t[13], y += n * B, v += n * L, w += n * j, _ += n * D, E += n * q, S += n * F, A += n * H, M += n * z, I += n * V, T += n * $, x += n * K, C += n * G, R += n * W, k += n * J, P += n * Y, O += n * X, n = t[14], v += n * B, w += n * L, _ += n * j, E += n * D, S += n * q, A += n * F, M += n * H, I += n * z, T += n * V, x += n * $, C += n * K, R += n * G, k += n * W, P += n * J, O += n * Y, N += n * X, n = t[15], w += n * B, _ += n * L, E += n * j, S += n * D, A += n * q, M += n * F, I += n * H, T += n * z, x += n * V, C += n * $, R += n * K, k += n * G, P += n * W, O += n * J, N += n * Y, U += n * X, s += 38 * _, o += 38 * E, a += 38 * S, c += 38 * A, h += 38 * M, u += 38 * I, d += 38 * T, f += 38 * x, l += 38 * C, p += 38 * R, b += 38 * k, g += 38 * P, m += 38 * O, y += 38 * N, v += 38 * U, i = 1, n = s + i + 65535, i = Math.floor(n / 65536), s = n - 65536 * i, n = o + i + 65535, i = Math.floor(n / 65536), o = n - 65536 * i, n = a + i + 65535, i = Math.floor(n / 65536), a = n - 65536 * i, n = c + i + 65535, i = Math.floor(n / 65536), c = n - 65536 * i, n = h + i + 65535, i = Math.floor(n / 65536), h = n - 65536 * i, n = u + i + 65535, i = Math.floor(n / 65536), u = n - 65536 * i, n = d + i + 65535, i = Math.floor(n / 65536), d = n - 65536 * i, n = f + i + 65535, i = Math.floor(n / 65536), f = n - 65536 * i, n = l + i + 65535, i = Math.floor(n / 65536), l = n - 65536 * i, n = p + i + 65535, i = Math.floor(n / 65536), p = n - 65536 * i, n = b + i + 65535, i = Math.floor(n / 65536), b = n - 65536 * i, n = g + i + 65535, i = Math.floor(n / 65536), g = n - 65536 * i, n = m + i + 65535, i = Math.floor(n / 65536), m = n - 65536 * i, n = y + i + 65535, i = Math.floor(n / 65536), y = n - 65536 * i, n = v + i + 65535, i = Math.floor(n / 65536), v = n - 65536 * i, n = w + i + 65535, i = Math.floor(n / 65536), w = n - 65536 * i, s += i - 1 + 37 * (i - 1), i = 1, n = s + i + 65535, i = Math.floor(n / 65536), s = n - 65536 * i, n = o + i + 65535, i = Math.floor(n / 65536), o = n - 65536 * i, n = a + i + 65535, i = Math.floor(n / 65536), a = n - 65536 * i, n = c + i + 65535, i = Math.floor(n / 65536), c = n - 65536 * i, n = h + i + 65535, i = Math.floor(n / 65536), h = n - 65536 * i, n = u + i + 65535, i = Math.floor(n / 65536), u = n - 65536 * i, n = d + i + 65535, i = Math.floor(n / 65536), d = n - 65536 * i, n = f + i + 65535, i = Math.floor(n / 65536), f = n - 65536 * i, n = l + i + 65535, i = Math.floor(n / 65536), l = n - 65536 * i, n = p + i + 65535, i = Math.floor(n / 65536), p = n - 65536 * i, n = b + i + 65535, i = Math.floor(n / 65536), b = n - 65536 * i, n = g + i + 65535, i = Math.floor(n / 65536), g = n - 65536 * i, n = m + i + 65535, i = Math.floor(n / 65536), m = n - 65536 * i, n = y + i + 65535, i = Math.floor(n / 65536), y = n - 65536 * i, n = v + i + 65535, i = Math.floor(n / 65536), v = n - 65536 * i, n = w + i + 65535, i = Math.floor(n / 65536), w = n - 65536 * i, s += i - 1 + 37 * (i - 1), e[0] = s, e[1] = o, e[2] = a, e[3] = c, e[4] = h, e[5] = u, e[6] = d, e[7] = f, e[8] = l, e[9] = p, e[10] = b, e[11] = g, e[12] = m, e[13] = y, e[14] = v, e[15] = w;
                }
                function l(e, t) {
                    f(e, t, t);
                }
                function p(e, t) {
                    const r = new Uint8Array(32), n = new Float64Array(80), i = s(), o = s(), p = s(), b = s(), g = s(), m = s();
                    for(let t = 0; t < 31; t++)r[t] = e[t];
                    r[31] = 127 & e[31] | 64, r[0] &= 248, function(e, t) {
                        for(let r = 0; r < 16; r++)e[r] = t[2 * r] + (t[2 * r + 1] << 8);
                        e[15] &= 32767;
                    }(n, t);
                    for(let e = 0; e < 16; e++)o[e] = n[e];
                    i[0] = b[0] = 1;
                    for(let e = 254; e >= 0; --e){
                        const t = r[e >>> 3] >>> (7 & e) & 1;
                        h(i, o, t), h(p, b, t), u(g, i, p), d(i, i, p), u(p, o, b), d(o, o, b), l(b, g), l(m, i), f(i, p, i), f(p, o, g), u(g, i, p), d(i, i, p), l(o, i), d(p, b, m), f(i, p, a), u(i, i, b), f(p, p, i), f(i, b, m), f(b, o, n), l(o, g), h(i, o, t), h(p, b, t);
                    }
                    for(let e = 0; e < 16; e++)n[e + 16] = i[e], n[e + 32] = p[e], n[e + 48] = o[e], n[e + 64] = b[e];
                    const y = n.subarray(32), v = n.subarray(16);
                    !function(e, t) {
                        const r = s();
                        for(let e = 0; e < 16; e++)r[e] = t[e];
                        for(let e = 253; e >= 0; e--)l(r, r), 2 !== e && 4 !== e && f(r, r, t);
                        for(let t = 0; t < 16; t++)e[t] = r[t];
                    }(y, y), f(v, v, y);
                    const w = new Uint8Array(32);
                    return function(e, t) {
                        const r = s(), n = s();
                        for(let e = 0; e < 16; e++)n[e] = t[e];
                        c(n), c(n), c(n);
                        for(let e = 0; e < 2; e++){
                            r[0] = n[0] - 65517;
                            for(let e = 1; e < 15; e++)r[e] = n[e] - 65535 - (r[e - 1] >> 16 & 1), r[e - 1] &= 65535;
                            r[15] = n[15] - 32767 - (r[14] >> 16 & 1);
                            const e = r[15] >> 16 & 1;
                            r[14] &= 65535, h(n, r, 1 - e);
                        }
                        for(let t = 0; t < 16; t++)e[2 * t] = 255 & n[t], e[2 * t + 1] = n[t] >> 8;
                    }(w, v), w;
                }
                t.TZ = function(e) {
                    const r = (0, n.randomBytes)(32, e), s = function(e) {
                        if (e.length !== t.wE) throw new Error(`x25519: seed must be ${t.wE} bytes`);
                        const r = new Uint8Array(e);
                        return {
                            publicKey: (n = r, p(n, o)),
                            secretKey: r
                        };
                        "TURBOPACK unreachable";
                        var n;
                    }(r);
                    return (0, i.wipe)(r), s;
                }, t.Tc = function(e, r, n = !1) {
                    if (e.length !== t.Xx) throw new Error("X25519: incorrect secret key length");
                    if (r.length !== t.Xx) throw new Error("X25519: incorrect public key length");
                    const i = p(e, r);
                    if (n) {
                        let e = 0;
                        for(let t = 0; t < i.length; t++)e |= i[t];
                        if (0 === e) throw new Error("X25519: invalid shared key");
                    }
                    return i;
                };
            },
            3245: (e, t, r)=>{
                "use strict";
                r.r(t), r.d(t, {
                    CORE_CONTEXT: ()=>x,
                    CORE_DEFAULT: ()=>R,
                    CORE_PROTOCOL: ()=>I,
                    CORE_STORAGE_OPTIONS: ()=>k,
                    CORE_STORAGE_PREFIX: ()=>C,
                    CORE_VERSION: ()=>T,
                    CRYPTO_CLIENT_SEED: ()=>O,
                    CRYPTO_CONTEXT: ()=>P,
                    CRYPTO_JWT_TTL: ()=>N,
                    Core: ()=>fn,
                    Crypto: ()=>hr,
                    ECHO_CONTEXT: ()=>Ae,
                    ECHO_URL: ()=>Me,
                    EVENTS_CLIENT_API_URL: ()=>Be,
                    EVENTS_STORAGE_CLEANUP_INTERVAL: ()=>Ue,
                    EVENTS_STORAGE_CONTEXT: ()=>Ne,
                    EVENTS_STORAGE_VERSION: ()=>Oe,
                    EVENT_CLIENT_AUTHENTICATE_ERRORS: ()=>Pe,
                    EVENT_CLIENT_AUTHENTICATE_TRACES: ()=>ke,
                    EVENT_CLIENT_CONTEXT: ()=>Ie,
                    EVENT_CLIENT_PAIRING_ERRORS: ()=>xe,
                    EVENT_CLIENT_PAIRING_TRACES: ()=>Te,
                    EVENT_CLIENT_SESSION_ERRORS: ()=>Re,
                    EVENT_CLIENT_SESSION_TRACES: ()=>Ce,
                    EXPIRER_CONTEXT: ()=>be,
                    EXPIRER_DEFAULT_TTL: ()=>ye,
                    EXPIRER_EVENTS: ()=>ge,
                    EXPIRER_STORAGE_VERSION: ()=>me,
                    EchoClient: ()=>Yr,
                    EventClient: ()=>nn,
                    Expirer: ()=>Wr,
                    HISTORY_CONTEXT: ()=>le,
                    HISTORY_EVENTS: ()=>fe,
                    HISTORY_STORAGE_VERSION: ()=>pe,
                    JsonRpcHistory: ()=>Gr,
                    KEYCHAIN_CONTEXT: ()=>U,
                    KEYCHAIN_STORAGE_VERSION: ()=>B,
                    KeyChain: ()=>cr,
                    MESSAGES_CONTEXT: ()=>L,
                    MESSAGES_STORAGE_VERSION: ()=>j,
                    MessageTracker: ()=>ur,
                    PAIRING_CONTEXT: ()=>ae,
                    PAIRING_DEFAULT_TTL: ()=>he,
                    PAIRING_EVENTS: ()=>de,
                    PAIRING_RPC_OPTS: ()=>ue,
                    PAIRING_STORAGE_VERSION: ()=>ce,
                    PENDING_SUB_RESOLUTION_TIMEOUT: ()=>oe,
                    PUBLISHER_CONTEXT: ()=>q,
                    PUBLISHER_DEFAULT_TTL: ()=>D,
                    Pairing: ()=>Kr,
                    RELAYER_CONTEXT: ()=>V,
                    RELAYER_DEFAULT_LOGGER: ()=>H,
                    RELAYER_DEFAULT_PROTOCOL: ()=>F,
                    RELAYER_DEFAULT_RELAY_URL: ()=>z,
                    RELAYER_EVENTS: ()=>$,
                    RELAYER_PROVIDER_EVENTS: ()=>G,
                    RELAYER_RECONNECT_TIMEOUT: ()=>W,
                    RELAYER_SDK_VERSION: ()=>Y,
                    RELAYER_STORAGE_OPTIONS: ()=>J,
                    RELAYER_SUBSCRIBER_SUFFIX: ()=>K,
                    RELAYER_TRANSPORT_CUTOFF: ()=>X,
                    Relayer: ()=>jr,
                    STORE_STORAGE_VERSION: ()=>Q,
                    SUBSCRIBER_CONTEXT: ()=>ie,
                    SUBSCRIBER_DEFAULT_TTL: ()=>ne,
                    SUBSCRIBER_EVENTS: ()=>re,
                    SUBSCRIBER_STORAGE_VERSION: ()=>se,
                    Store: ()=>$r,
                    Subscriber: ()=>kr,
                    TRANSPORT_TYPES: ()=>Z,
                    TRUSTED_VERIFY_URLS: ()=>Se,
                    VERIFY_CONTEXT: ()=>ve,
                    VERIFY_SERVER: ()=>_e,
                    VERIFY_SERVER_V3: ()=>Ee,
                    Verify: ()=>Jr,
                    WALLETCONNECT_CLIENT_ID: ()=>ee,
                    WALLETCONNECT_LINK_MODE_APPS: ()=>te,
                    default: ()=>dn
                });
                var n = r(381), i = r.n(n), s = r(7777), o = r(9920);
                class a extends o.H {
                    constructor(e){
                        super();
                    }
                }
                const c = s.FIVE_SECONDS, h = "heartbeat_pulse";
                class u extends a {
                    constructor(e){
                        super(e), this.events = new n.EventEmitter, this.interval = c, this.interval = e?.interval || c;
                    }
                    static async init(e) {
                        const t = new u(e);
                        return await t.init(), t;
                    }
                    async init() {
                        await this.initialize();
                    }
                    stop() {
                        clearInterval(this.intervalRef);
                    }
                    on(e, t) {
                        this.events.on(e, t);
                    }
                    once(e, t) {
                        this.events.once(e, t);
                    }
                    off(e, t) {
                        this.events.off(e, t);
                    }
                    removeListener(e, t) {
                        this.events.removeListener(e, t);
                    }
                    async initialize() {
                        this.intervalRef = setInterval(()=>this.pulse(), (0, s.toMiliseconds)(this.interval));
                    }
                    pulse() {
                        this.events.emit(h);
                    }
                }
                var d = r(6446), f = r(6556), l = r(1652), p = r(8916), b = r(9940), g = r(3317), m = r(2376), y = r(3526);
                class v extends y.IJsonRpcProvider {
                    constructor(e){
                        super(e), this.events = new n.EventEmitter, this.hasRegisteredEventListeners = !1, this.connection = this.setConnection(e), this.connection.connected && this.registerEventListeners();
                    }
                    async connect(e = this.connection) {
                        await this.open(e);
                    }
                    async disconnect() {
                        await this.close();
                    }
                    on(e, t) {
                        this.events.on(e, t);
                    }
                    once(e, t) {
                        this.events.once(e, t);
                    }
                    off(e, t) {
                        this.events.off(e, t);
                    }
                    removeListener(e, t) {
                        this.events.removeListener(e, t);
                    }
                    async request(e, t) {
                        return this.requestStrict((0, y.formatJsonRpcRequest)(e.method, e.params || [], e.id || (0, y.getBigIntRpcId)().toString()), t);
                    }
                    async requestStrict(e, t) {
                        return new Promise(async (r, n)=>{
                            if (!this.connection.connected) try {
                                await this.open();
                            } catch (e) {
                                n(e);
                            }
                            this.events.on(`${e.id}`, (e)=>{
                                (0, y.isJsonRpcError)(e) ? n(e.error) : r(e.result);
                            });
                            try {
                                await this.connection.send(e, t);
                            } catch (e) {
                                n(e);
                            }
                        });
                    }
                    setConnection(e = this.connection) {
                        return e;
                    }
                    onPayload(e) {
                        this.events.emit("payload", e), (0, y.isJsonRpcResponse)(e) ? this.events.emit(`${e.id}`, e) : this.events.emit("message", {
                            type: e.method,
                            data: e.params
                        });
                    }
                    onClose(e) {
                        e && 3e3 === e.code && this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${e.code} ${e.reason ? `(${e.reason})` : ""}`)), this.events.emit("disconnect");
                    }
                    async open(e = this.connection) {
                        this.connection === e && this.connection.connected || (this.connection.connected && this.close(), "string" == typeof e && (await this.connection.open(e), e = this.connection), this.connection = this.setConnection(e), await this.connection.open(), this.registerEventListeners(), this.events.emit("connect"));
                    }
                    async close() {
                        await this.connection.close();
                    }
                    registerEventListeners() {
                        this.hasRegisteredEventListeners || (this.connection.on("payload", (e)=>this.onPayload(e)), this.connection.on("close", (e)=>this.onClose(e)), this.connection.on("error", (e)=>this.events.emit("error", e)), this.connection.on("register_error", (e)=>this.onClose()), this.hasRegisteredEventListeners = !0);
                    }
                }
                const w = (e)=>e.split("?")[0], _ = typeof WebSocket < "u" ? WebSocket : typeof r.g < "u" && typeof r.g.WebSocket < "u" ? r.g.WebSocket : typeof window < "u" && typeof window.WebSocket < "u" ? window.WebSocket : typeof self < "u" && typeof self.WebSocket < "u" ? self.WebSocket : r(5985);
                class E {
                    constructor(e){
                        if (this.url = e, this.events = new n.EventEmitter, this.registering = !1, !(0, y.isWsUrl)(e)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);
                        this.url = e;
                    }
                    get connected() {
                        return typeof this.socket < "u";
                    }
                    get connecting() {
                        return this.registering;
                    }
                    on(e, t) {
                        this.events.on(e, t);
                    }
                    once(e, t) {
                        this.events.once(e, t);
                    }
                    off(e, t) {
                        this.events.off(e, t);
                    }
                    removeListener(e, t) {
                        this.events.removeListener(e, t);
                    }
                    async open(e = this.url) {
                        await this.register(e);
                    }
                    async close() {
                        return new Promise((e, t)=>{
                            typeof this.socket > "u" ? t(new Error("Connection already closed")) : (this.socket.onclose = (t)=>{
                                this.onClose(t), e();
                            }, this.socket.close());
                        });
                    }
                    async send(e) {
                        typeof this.socket > "u" && (this.socket = await this.register());
                        try {
                            this.socket.send((0, p.h)(e));
                        } catch (t) {
                            this.onError(e.id, t);
                        }
                    }
                    register(e = this.url) {
                        if (!(0, y.isWsUrl)(e)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);
                        if (this.registering) {
                            const e = this.events.getMaxListeners();
                            return (this.events.listenerCount("register_error") >= e || this.events.listenerCount("open") >= e) && this.events.setMaxListeners(e + 1), new Promise((e, t)=>{
                                this.events.once("register_error", (e)=>{
                                    this.resetMaxListeners(), t(e);
                                }), this.events.once("open", ()=>{
                                    if (this.resetMaxListeners(), typeof this.socket > "u") return t(new Error("WebSocket connection is missing or invalid"));
                                    e(this.socket);
                                });
                            });
                        }
                        return this.url = e, this.registering = !0, new Promise((t, n)=>{
                            const i = (0, y.isReactNative)() ? void 0 : {
                                rejectUnauthorized: !(0, y.isLocalhostUrl)(e)
                            }, s = new _(e, [], i);
                            typeof WebSocket < "u" || typeof r.g < "u" && typeof r.g.WebSocket < "u" || typeof window < "u" && typeof window.WebSocket < "u" || typeof self < "u" && typeof self.WebSocket < "u" ? s.onerror = (e)=>{
                                const t = e;
                                n(this.emitError(t.error));
                            } : s.on("error", (e)=>{
                                n(this.emitError(e));
                            }), s.onopen = ()=>{
                                this.onOpen(s), t(s);
                            };
                        });
                    }
                    onOpen(e) {
                        e.onmessage = (e)=>this.onPayload(e), e.onclose = (e)=>this.onClose(e), this.socket = e, this.registering = !1, this.events.emit("open");
                    }
                    onClose(e) {
                        this.socket = void 0, this.registering = !1, this.events.emit("close", e);
                    }
                    onPayload(e) {
                        if (typeof e.data > "u") return;
                        const t = "string" == typeof e.data ? (0, p.j)(e.data) : e.data;
                        this.events.emit("payload", t);
                    }
                    onError(e, t) {
                        const r = this.parseError(t), n = r.message || r.toString(), i = (0, y.formatJsonRpcError)(e, n);
                        this.events.emit("payload", i);
                    }
                    parseError(e, t = this.url) {
                        return (0, y.parseConnectionError)(e, w(t), "WS");
                    }
                    resetMaxListeners() {
                        this.events.getMaxListeners() > 10 && this.events.setMaxListeners(10);
                    }
                    emitError(e) {
                        const t = this.parseError(new Error(e?.message || `WebSocket connection failed for host: ${w(this.url)}`));
                        return this.events.emit("register_error", t), t;
                    }
                }
                var S = r(3497), A = r.n(S), M = r(5280);
                const I = "wc", T = 2, x = "core", C = `${I}@2:${x}:`, R = {
                    name: x,
                    logger: "error"
                }, k = {
                    database: ":memory:"
                }, P = "crypto", O = "client_ed25519_seed", N = s.ONE_DAY, U = "keychain", B = "0.3", L = "messages", j = "0.3", D = s.SIX_HOURS, q = "publisher", F = "irn", H = "error", z = "wss://relay.walletconnect.org", V = "relayer", $ = {
                    message: "relayer_message",
                    message_ack: "relayer_message_ack",
                    connect: "relayer_connect",
                    disconnect: "relayer_disconnect",
                    error: "relayer_error",
                    connection_stalled: "relayer_connection_stalled",
                    transport_closed: "relayer_transport_closed",
                    publish: "relayer_publish"
                }, K = "_subscription", G = {
                    payload: "payload",
                    connect: "connect",
                    disconnect: "disconnect",
                    error: "error"
                }, W = .1, J = {
                    database: ":memory:"
                }, Y = "2.17.3", X = 1e4, Z = {
                    link_mode: "link_mode",
                    relay: "relay"
                }, Q = "0.3", ee = "WALLETCONNECT_CLIENT_ID", te = "WALLETCONNECT_LINK_MODE_APPS", re = {
                    created: "subscription_created",
                    deleted: "subscription_deleted",
                    expired: "subscription_expired",
                    disabled: "subscription_disabled",
                    sync: "subscription_sync",
                    resubscribed: "subscription_resubscribed"
                }, ne = s.THIRTY_DAYS, ie = "subscription", se = "0.3", oe = 1e3 * s.FIVE_SECONDS, ae = "pairing", ce = "0.3", he = s.THIRTY_DAYS, ue = {
                    wc_pairingDelete: {
                        req: {
                            ttl: s.ONE_DAY,
                            prompt: !1,
                            tag: 1e3
                        },
                        res: {
                            ttl: s.ONE_DAY,
                            prompt: !1,
                            tag: 1001
                        }
                    },
                    wc_pairingPing: {
                        req: {
                            ttl: s.THIRTY_SECONDS,
                            prompt: !1,
                            tag: 1002
                        },
                        res: {
                            ttl: s.THIRTY_SECONDS,
                            prompt: !1,
                            tag: 1003
                        }
                    },
                    unregistered_method: {
                        req: {
                            ttl: s.ONE_DAY,
                            prompt: !1,
                            tag: 0
                        },
                        res: {
                            ttl: s.ONE_DAY,
                            prompt: !1,
                            tag: 0
                        }
                    }
                }, de = {
                    create: "pairing_create",
                    expire: "pairing_expire",
                    delete: "pairing_delete",
                    ping: "pairing_ping"
                }, fe = {
                    created: "history_created",
                    updated: "history_updated",
                    deleted: "history_deleted",
                    sync: "history_sync"
                }, le = "history", pe = "0.3", be = "expirer", ge = {
                    created: "expirer_created",
                    deleted: "expirer_deleted",
                    expired: "expirer_expired",
                    sync: "expirer_sync"
                }, me = "0.3", ye = s.ONE_DAY, ve = "verify-api", we = "https://verify.walletconnect.org", _e = we, Ee = `${_e}/v3`, Se = [
                    "https://verify.walletconnect.com",
                    we
                ], Ae = "echo", Me = "https://echo.walletconnect.com", Ie = "event-client", Te = {
                    pairing_started: "pairing_started",
                    pairing_uri_validation_success: "pairing_uri_validation_success",
                    pairing_uri_not_expired: "pairing_uri_not_expired",
                    store_new_pairing: "store_new_pairing",
                    subscribing_pairing_topic: "subscribing_pairing_topic",
                    subscribe_pairing_topic_success: "subscribe_pairing_topic_success",
                    existing_pairing: "existing_pairing",
                    pairing_not_expired: "pairing_not_expired",
                    emit_inactive_pairing: "emit_inactive_pairing",
                    emit_session_proposal: "emit_session_proposal",
                    subscribing_to_pairing_topic: "subscribing_to_pairing_topic"
                }, xe = {
                    no_wss_connection: "no_wss_connection",
                    no_internet_connection: "no_internet_connection",
                    malformed_pairing_uri: "malformed_pairing_uri",
                    active_pairing_already_exists: "active_pairing_already_exists",
                    subscribe_pairing_topic_failure: "subscribe_pairing_topic_failure",
                    pairing_expired: "pairing_expired",
                    proposal_expired: "proposal_expired",
                    proposal_listener_not_found: "proposal_listener_not_found"
                }, Ce = {
                    session_approve_started: "session_approve_started",
                    proposal_not_expired: "proposal_not_expired",
                    session_namespaces_validation_success: "session_namespaces_validation_success",
                    create_session_topic: "create_session_topic",
                    subscribing_session_topic: "subscribing_session_topic",
                    subscribe_session_topic_success: "subscribe_session_topic_success",
                    publishing_session_approve: "publishing_session_approve",
                    session_approve_publish_success: "session_approve_publish_success",
                    store_session: "store_session",
                    publishing_session_settle: "publishing_session_settle",
                    session_settle_publish_success: "session_settle_publish_success"
                }, Re = {
                    no_internet_connection: "no_internet_connection",
                    no_wss_connection: "no_wss_connection",
                    proposal_expired: "proposal_expired",
                    subscribe_session_topic_failure: "subscribe_session_topic_failure",
                    session_approve_publish_failure: "session_approve_publish_failure",
                    session_settle_publish_failure: "session_settle_publish_failure",
                    session_approve_namespace_validation_failure: "session_approve_namespace_validation_failure",
                    proposal_not_found: "proposal_not_found"
                }, ke = {
                    authenticated_session_approve_started: "authenticated_session_approve_started",
                    authenticated_session_not_expired: "authenticated_session_not_expired",
                    chains_caip2_compliant: "chains_caip2_compliant",
                    chains_evm_compliant: "chains_evm_compliant",
                    create_authenticated_session_topic: "create_authenticated_session_topic",
                    cacaos_verified: "cacaos_verified",
                    store_authenticated_session: "store_authenticated_session",
                    subscribing_authenticated_session_topic: "subscribing_authenticated_session_topic",
                    subscribe_authenticated_session_topic_success: "subscribe_authenticated_session_topic_success",
                    publishing_authenticated_session_approve: "publishing_authenticated_session_approve",
                    authenticated_session_approve_publish_success: "authenticated_session_approve_publish_success"
                }, Pe = {
                    no_internet_connection: "no_internet_connection",
                    no_wss_connection: "no_wss_connection",
                    missing_session_authenticate_request: "missing_session_authenticate_request",
                    session_authenticate_request_expired: "session_authenticate_request_expired",
                    chains_caip2_compliant_failure: "chains_caip2_compliant_failure",
                    chains_evm_compliant_failure: "chains_evm_compliant_failure",
                    invalid_cacao: "invalid_cacao",
                    subscribe_authenticated_session_topic_failure: "subscribe_authenticated_session_topic_failure",
                    authenticated_session_approve_publish_failure: "authenticated_session_approve_publish_failure",
                    authenticated_session_pending_request_not_found: "authenticated_session_pending_request_not_found"
                }, Oe = .1, Ne = "event-client", Ue = 86400, Be = "https://pulse.walletconnect.org/batch";
                var Le = function(e, t) {
                    if (e.length >= 255) throw new TypeError("Alphabet too long");
                    for(var r = new Uint8Array(256), n = 0; n < r.length; n++)r[n] = 255;
                    for(var i = 0; i < e.length; i++){
                        var s = e.charAt(i), o = s.charCodeAt(0);
                        if (255 !== r[o]) throw new TypeError(s + " is ambiguous");
                        r[o] = i;
                    }
                    var a = e.length, c = e.charAt(0), h = Math.log(a) / Math.log(256), u = Math.log(256) / Math.log(a);
                    function d(e) {
                        if ("string" != typeof e) throw new TypeError("Expected String");
                        if (0 === e.length) return new Uint8Array;
                        var t = 0;
                        if (" " !== e[t]) {
                            for(var n = 0, i = 0; e[t] === c;)n++, t++;
                            for(var s = (e.length - t) * h + 1 >>> 0, o = new Uint8Array(s); e[t];){
                                var u = r[e.charCodeAt(t)];
                                if (255 === u) return;
                                for(var d = 0, f = s - 1; (0 !== u || d < i) && -1 !== f; f--, d++)u += a * o[f] >>> 0, o[f] = u % 256 >>> 0, u = u / 256 >>> 0;
                                if (0 !== u) throw new Error("Non-zero carry");
                                i = d, t++;
                            }
                            if (" " !== e[t]) {
                                for(var l = s - i; l !== s && 0 === o[l];)l++;
                                for(var p = new Uint8Array(n + (s - l)), b = n; l !== s;)p[b++] = o[l++];
                                return p;
                            }
                        }
                    }
                    return {
                        encode: function(t) {
                            if (t instanceof Uint8Array || (ArrayBuffer.isView(t) ? t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : Array.isArray(t) && (t = Uint8Array.from(t))), !(t instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
                            if (0 === t.length) return "";
                            for(var r = 0, n = 0, i = 0, s = t.length; i !== s && 0 === t[i];)i++, r++;
                            for(var o = (s - i) * u + 1 >>> 0, h = new Uint8Array(o); i !== s;){
                                for(var d = t[i], f = 0, l = o - 1; (0 !== d || f < n) && -1 !== l; l--, f++)d += 256 * h[l] >>> 0, h[l] = d % a >>> 0, d = d / a >>> 0;
                                if (0 !== d) throw new Error("Non-zero carry");
                                n = f, i++;
                            }
                            for(var p = o - n; p !== o && 0 === h[p];)p++;
                            for(var b = c.repeat(r); p < o; ++p)b += e.charAt(h[p]);
                            return b;
                        },
                        decodeUnsafe: d,
                        decode: function(e) {
                            var r = d(e);
                            if (r) return r;
                            throw new Error(`Non-${t} character`);
                        }
                    };
                };
                const je = (e)=>{
                    if (e instanceof Uint8Array && "Uint8Array" === e.constructor.name) return e;
                    if (e instanceof ArrayBuffer) return new Uint8Array(e);
                    if (ArrayBuffer.isView(e)) return new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
                    throw new Error("Unknown type, must be binary type");
                };
                class De {
                    constructor(e, t, r){
                        this.name = e, this.prefix = t, this.baseEncode = r;
                    }
                    encode(e) {
                        if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;
                        throw Error("Unknown type, must be binary type");
                    }
                }
                class qe {
                    constructor(e, t, r){
                        if (this.name = e, this.prefix = t, void 0 === t.codePointAt(0)) throw new Error("Invalid prefix character");
                        this.prefixCodePoint = t.codePointAt(0), this.baseDecode = r;
                    }
                    decode(e) {
                        if ("string" == typeof e) {
                            if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
                            return this.baseDecode(e.slice(this.prefix.length));
                        }
                        throw Error("Can only multibase decode strings");
                    }
                    or(e) {
                        return He(this, e);
                    }
                }
                class Fe {
                    constructor(e){
                        this.decoders = e;
                    }
                    or(e) {
                        return He(this, e);
                    }
                    decode(e) {
                        const t = e[0], r = this.decoders[t];
                        if (r) return r.decode(e);
                        throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
                    }
                }
                const He = (e, t)=>new Fe({
                        ...e.decoders || {
                            [e.prefix]: e
                        },
                        ...t.decoders || {
                            [t.prefix]: t
                        }
                    });
                class ze {
                    constructor(e, t, r, n){
                        this.name = e, this.prefix = t, this.baseEncode = r, this.baseDecode = n, this.encoder = new De(e, t, r), this.decoder = new qe(e, t, n);
                    }
                    encode(e) {
                        return this.encoder.encode(e);
                    }
                    decode(e) {
                        return this.decoder.decode(e);
                    }
                }
                const Ve = ({ name: e, prefix: t, encode: r, decode: n })=>new ze(e, t, r, n), $e = ({ prefix: e, name: t, alphabet: r })=>{
                    const { encode: n, decode: i } = Le(r, t);
                    return Ve({
                        prefix: e,
                        name: t,
                        encode: n,
                        decode: (e)=>je(i(e))
                    });
                }, Ke = ({ name: e, prefix: t, bitsPerChar: r, alphabet: n })=>Ve({
                        prefix: t,
                        name: e,
                        encode: (e)=>((e, t, r)=>{
                                const n = "=" === t[t.length - 1], i = (1 << r) - 1;
                                let s = "", o = 0, a = 0;
                                for(let n = 0; n < e.length; ++n)for(a = a << 8 | e[n], o += 8; o > r;)o -= r, s += t[i & a >> o];
                                if (o && (s += t[i & a << r - o]), n) for(; s.length * r & 7;)s += "=";
                                return s;
                            })(e, n, r),
                        decode: (t)=>((e, t, r, n)=>{
                                const i = {};
                                for(let e = 0; e < t.length; ++e)i[t[e]] = e;
                                let s = e.length;
                                for(; "=" === e[s - 1];)--s;
                                const o = new Uint8Array(s * r / 8 | 0);
                                let a = 0, c = 0, h = 0;
                                for(let t = 0; t < s; ++t){
                                    const s = i[e[t]];
                                    if (void 0 === s) throw new SyntaxError(`Non-${n} character`);
                                    c = c << r | s, a += r, a >= 8 && (a -= 8, o[h++] = 255 & c >> a);
                                }
                                if (a >= r || 255 & c << 8 - a) throw new SyntaxError("Unexpected end of data");
                                return o;
                            })(t, n, r, e)
                    }), Ge = Ve({
                    prefix: "\0",
                    name: "identity",
                    encode: (e)=>((e)=>(new TextDecoder).decode(e))(e),
                    decode: (e)=>((e)=>(new TextEncoder).encode(e))(e)
                });
                var We = Object.freeze({
                    __proto__: null,
                    identity: Ge
                });
                const Je = Ke({
                    prefix: "0",
                    name: "base2",
                    alphabet: "01",
                    bitsPerChar: 1
                });
                var Ye = Object.freeze({
                    __proto__: null,
                    base2: Je
                });
                const Xe = Ke({
                    prefix: "7",
                    name: "base8",
                    alphabet: "01234567",
                    bitsPerChar: 3
                });
                var Ze = Object.freeze({
                    __proto__: null,
                    base8: Xe
                });
                const Qe = $e({
                    prefix: "9",
                    name: "base10",
                    alphabet: "0123456789"
                });
                var et = Object.freeze({
                    __proto__: null,
                    base10: Qe
                });
                const tt = Ke({
                    prefix: "f",
                    name: "base16",
                    alphabet: "0123456789abcdef",
                    bitsPerChar: 4
                }), rt = Ke({
                    prefix: "F",
                    name: "base16upper",
                    alphabet: "0123456789ABCDEF",
                    bitsPerChar: 4
                });
                var nt = Object.freeze({
                    __proto__: null,
                    base16: tt,
                    base16upper: rt
                });
                const it = Ke({
                    prefix: "b",
                    name: "base32",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
                    bitsPerChar: 5
                }), st = Ke({
                    prefix: "B",
                    name: "base32upper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
                    bitsPerChar: 5
                }), ot = Ke({
                    prefix: "c",
                    name: "base32pad",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
                    bitsPerChar: 5
                }), at = Ke({
                    prefix: "C",
                    name: "base32padupper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
                    bitsPerChar: 5
                }), ct = Ke({
                    prefix: "v",
                    name: "base32hex",
                    alphabet: "0123456789abcdefghijklmnopqrstuv",
                    bitsPerChar: 5
                }), ht = Ke({
                    prefix: "V",
                    name: "base32hexupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
                    bitsPerChar: 5
                }), ut = Ke({
                    prefix: "t",
                    name: "base32hexpad",
                    alphabet: "0123456789abcdefghijklmnopqrstuv=",
                    bitsPerChar: 5
                }), dt = Ke({
                    prefix: "T",
                    name: "base32hexpadupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
                    bitsPerChar: 5
                }), ft = Ke({
                    prefix: "h",
                    name: "base32z",
                    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
                    bitsPerChar: 5
                });
                var lt = Object.freeze({
                    __proto__: null,
                    base32: it,
                    base32upper: st,
                    base32pad: ot,
                    base32padupper: at,
                    base32hex: ct,
                    base32hexupper: ht,
                    base32hexpad: ut,
                    base32hexpadupper: dt,
                    base32z: ft
                });
                const pt = $e({
                    prefix: "k",
                    name: "base36",
                    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
                }), bt = $e({
                    prefix: "K",
                    name: "base36upper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                });
                var gt = Object.freeze({
                    __proto__: null,
                    base36: pt,
                    base36upper: bt
                });
                const mt = $e({
                    name: "base58btc",
                    prefix: "z",
                    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
                }), yt = $e({
                    name: "base58flickr",
                    prefix: "Z",
                    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
                });
                var vt = Object.freeze({
                    __proto__: null,
                    base58btc: mt,
                    base58flickr: yt
                });
                const wt = Ke({
                    prefix: "m",
                    name: "base64",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                    bitsPerChar: 6
                }), _t = Ke({
                    prefix: "M",
                    name: "base64pad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    bitsPerChar: 6
                }), Et = Ke({
                    prefix: "u",
                    name: "base64url",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
                    bitsPerChar: 6
                }), St = Ke({
                    prefix: "U",
                    name: "base64urlpad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
                    bitsPerChar: 6
                });
                var At = Object.freeze({
                    __proto__: null,
                    base64: wt,
                    base64pad: _t,
                    base64url: Et,
                    base64urlpad: St
                });
                const Mt = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"), It = Mt.reduce((e, t, r)=>(e[r] = t, e), []), Tt = Mt.reduce((e, t, r)=>(e[t.codePointAt(0)] = r, e), []), xt = Ve({
                    prefix: "🚀",
                    name: "base256emoji",
                    encode: function(e) {
                        return e.reduce((e, t)=>e + It[t], "");
                    },
                    decode: function(e) {
                        const t = [];
                        for (const r of e){
                            const e = Tt[r.codePointAt(0)];
                            if (void 0 === e) throw new Error(`Non-base256emoji character: ${r}`);
                            t.push(e);
                        }
                        return new Uint8Array(t);
                    }
                });
                var Ct = Object.freeze({
                    __proto__: null,
                    base256emoji: xt
                }), Rt = 128, kt = -128, Pt = Math.pow(2, 31), Ot = 128, Nt = 127, Ut = Math.pow(2, 7), Bt = Math.pow(2, 14), Lt = Math.pow(2, 21), jt = Math.pow(2, 28), Dt = Math.pow(2, 35), qt = Math.pow(2, 42), Ft = Math.pow(2, 49), Ht = Math.pow(2, 56), zt = Math.pow(2, 63), Vt = {
                    encode: function e(t, r, n) {
                        r = r || [];
                        for(var i = n = n || 0; t >= Pt;)r[n++] = 255 & t | Rt, t /= 128;
                        for(; t & kt;)r[n++] = 255 & t | Rt, t >>>= 7;
                        return r[n] = 0 | t, e.bytes = n - i + 1, r;
                    },
                    decode: function e(t, r) {
                        var n, i = 0, s = (r = r || 0, 0), o = r, a = t.length;
                        do {
                            if (o >= a) throw e.bytes = 0, new RangeError("Could not decode varint");
                            n = t[o++], i += s < 28 ? (n & Nt) << s : (n & Nt) * Math.pow(2, s), s += 7;
                        }while (n >= Ot)
                        return e.bytes = o - r, i;
                    },
                    encodingLength: function(e) {
                        return e < Ut ? 1 : e < Bt ? 2 : e < Lt ? 3 : e < jt ? 4 : e < Dt ? 5 : e < qt ? 6 : e < Ft ? 7 : e < Ht ? 8 : e < zt ? 9 : 10;
                    }
                }, $t = Vt;
                const Kt = (e, t, r = 0)=>($t.encode(e, t, r), t), Gt = (e)=>$t.encodingLength(e), Wt = (e, t)=>{
                    const r = t.byteLength, n = Gt(e), i = n + Gt(r), s = new Uint8Array(i + r);
                    return Kt(e, s, 0), Kt(r, s, n), s.set(t, i), new Jt(e, r, t, s);
                };
                class Jt {
                    constructor(e, t, r, n){
                        this.code = e, this.size = t, this.digest = r, this.bytes = n;
                    }
                }
                const Yt = ({ name: e, code: t, encode: r })=>new Xt(e, t, r);
                class Xt {
                    constructor(e, t, r){
                        this.name = e, this.code = t, this.encode = r;
                    }
                    digest(e) {
                        if (e instanceof Uint8Array) {
                            const t = this.encode(e);
                            return t instanceof Uint8Array ? Wt(this.code, t) : t.then((e)=>Wt(this.code, e));
                        }
                        throw Error("Unknown type, must be binary type");
                    }
                }
                const Zt = (e)=>async (t)=>new Uint8Array(await crypto.subtle.digest(e, t)), Qt = Yt({
                    name: "sha2-256",
                    code: 18,
                    encode: Zt("SHA-256")
                }), er = Yt({
                    name: "sha2-512",
                    code: 19,
                    encode: Zt("SHA-512")
                });
                Object.freeze({
                    __proto__: null,
                    sha256: Qt,
                    sha512: er
                });
                const tr = je, rr = {
                    code: 0,
                    name: "identity",
                    encode: tr,
                    digest: (e)=>Wt(0, tr(e))
                };
                Object.freeze({
                    __proto__: null,
                    identity: rr
                }), new TextEncoder, new TextDecoder;
                const nr = {
                    ...We,
                    ...Ye,
                    ...Ze,
                    ...et,
                    ...nt,
                    ...lt,
                    ...gt,
                    ...vt,
                    ...At,
                    ...Ct
                };
                function ir(e, t, r, n) {
                    return {
                        name: e,
                        prefix: t,
                        encoder: {
                            name: e,
                            prefix: t,
                            encode: r
                        },
                        decoder: {
                            decode: n
                        }
                    };
                }
                const sr = ir("utf8", "u", (e)=>"u" + new TextDecoder("utf8").decode(e), (e)=>(new TextEncoder).encode(e.substring(1))), or = ir("ascii", "a", (e)=>{
                    let t = "a";
                    for(let r = 0; r < e.length; r++)t += String.fromCharCode(e[r]);
                    return t;
                }, (e)=>{
                    const t = function(e = 0) {
                        return null != globalThis.Buffer && null != globalThis.Buffer.allocUnsafe ? globalThis.Buffer.allocUnsafe(e) : new Uint8Array(e);
                    }((e = e.substring(1)).length);
                    for(let r = 0; r < e.length; r++)t[r] = e.charCodeAt(r);
                    return t;
                }), ar = {
                    utf8: sr,
                    "utf-8": sr,
                    hex: nr.base16,
                    latin1: or,
                    ascii: or,
                    binary: or,
                    ...nr
                };
                class cr {
                    constructor(e, t){
                        this.core = e, this.logger = t, this.keychain = new Map, this.name = U, this.version = B, this.initialized = !1, this.storagePrefix = C, this.init = async ()=>{
                            if (!this.initialized) {
                                const e = await this.getKeyChain();
                                typeof e < "u" && (this.keychain = e), this.initialized = !0;
                            }
                        }, this.has = (e)=>(this.isInitialized(), this.keychain.has(e)), this.set = async (e, t)=>{
                            this.isInitialized(), this.keychain.set(e, t), await this.persist();
                        }, this.get = (e)=>{
                            this.isInitialized();
                            const t = this.keychain.get(e);
                            if (typeof t > "u") {
                                const { message: t } = (0, g.getInternalError)("NO_MATCHING_KEY", `${this.name}: ${e}`);
                                throw new Error(t);
                            }
                            return t;
                        }, this.del = async (e)=>{
                            this.isInitialized(), this.keychain.delete(e), await this.persist();
                        }, this.core = e, this.logger = (0, f.U5)(t, this.name);
                    }
                    get context() {
                        return (0, f.oI)(this.logger);
                    }
                    get storageKey() {
                        return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
                    }
                    async setKeyChain(e) {
                        await this.core.storage.setItem(this.storageKey, (0, g.mapToObj)(e));
                    }
                    async getKeyChain() {
                        const e = await this.core.storage.getItem(this.storageKey);
                        return typeof e < "u" ? (0, g.objToMap)(e) : void 0;
                    }
                    async persist() {
                        await this.setKeyChain(this.keychain);
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            const { message: e } = (0, g.getInternalError)("NOT_INITIALIZED", this.name);
                            throw new Error(e);
                        }
                    }
                }
                class hr {
                    constructor(e, t, r){
                        this.core = e, this.logger = t, this.name = P, this.randomSessionIdentifier = (0, g.generateRandomBytes32)(), this.initialized = !1, this.init = async ()=>{
                            this.initialized || (await this.keychain.init(), this.initialized = !0);
                        }, this.hasKeys = (e)=>(this.isInitialized(), this.keychain.has(e)), this.getClientId = async ()=>{
                            this.isInitialized();
                            const e = await this.getClientSeed(), t = b.generateKeyPair(e);
                            return b.encodeIss(t.publicKey);
                        }, this.generateKeyPair = ()=>{
                            this.isInitialized();
                            const e = (0, g.generateKeyPair)();
                            return this.setPrivateKey(e.publicKey, e.privateKey);
                        }, this.signJWT = async (e)=>{
                            this.isInitialized();
                            const t = await this.getClientSeed(), r = b.generateKeyPair(t), n = this.randomSessionIdentifier, i = N;
                            return await b.signJWT(n, e, i, r);
                        }, this.generateSharedKey = (e, t, r)=>{
                            this.isInitialized();
                            const n = this.getPrivateKey(e), i = (0, g.deriveSymKey)(n, t);
                            return this.setSymKey(i, r);
                        }, this.setSymKey = async (e, t)=>{
                            this.isInitialized();
                            const r = t || (0, g.hashKey)(e);
                            return await this.keychain.set(r, e), r;
                        }, this.deleteKeyPair = async (e)=>{
                            this.isInitialized(), await this.keychain.del(e);
                        }, this.deleteSymKey = async (e)=>{
                            this.isInitialized(), await this.keychain.del(e);
                        }, this.encode = async (e, t, r)=>{
                            this.isInitialized();
                            const n = (0, g.validateEncoding)(r), i = (0, p.h)(t);
                            if ((0, g.isTypeTwoEnvelope)(n)) return (0, g.encodeTypeTwoEnvelope)(i, r?.encoding);
                            if ((0, g.isTypeOneEnvelope)(n)) {
                                const t = n.senderPublicKey, r = n.receiverPublicKey;
                                e = await this.generateSharedKey(t, r);
                            }
                            const s = this.getSymKey(e), { type: o, senderPublicKey: a } = n;
                            return (0, g.encrypt)({
                                type: o,
                                symKey: s,
                                message: i,
                                senderPublicKey: a,
                                encoding: r?.encoding
                            });
                        }, this.decode = async (e, t, r)=>{
                            this.isInitialized();
                            const n = (0, g.validateDecoding)(t, r);
                            if ((0, g.isTypeTwoEnvelope)(n)) {
                                const e = (0, g.decodeTypeTwoEnvelope)(t, r?.encoding);
                                return (0, p.j)(e);
                            }
                            if ((0, g.isTypeOneEnvelope)(n)) {
                                const t = n.receiverPublicKey, r = n.senderPublicKey;
                                e = await this.generateSharedKey(t, r);
                            }
                            try {
                                const n = this.getSymKey(e), i = (0, g.decrypt)({
                                    symKey: n,
                                    encoded: t,
                                    encoding: r?.encoding
                                });
                                return (0, p.j)(i);
                            } catch (t) {
                                this.logger.error(`Failed to decode message from topic: '${e}', clientId: '${await this.getClientId()}'`), this.logger.error(t);
                            }
                        }, this.getPayloadType = (e, t = g.BASE64)=>{
                            const r = (0, g.deserialize)({
                                encoded: e,
                                encoding: t
                            });
                            return (0, g.decodeTypeByte)(r.type);
                        }, this.getPayloadSenderPublicKey = (e, t = g.BASE64)=>{
                            const r = (0, g.deserialize)({
                                encoded: e,
                                encoding: t
                            });
                            return r.senderPublicKey ? (0, m.dI)(r.senderPublicKey, g.BASE16) : void 0;
                        }, this.core = e, this.logger = (0, f.U5)(t, this.name), this.keychain = r || new cr(this.core, this.logger);
                    }
                    get context() {
                        return (0, f.oI)(this.logger);
                    }
                    async setPrivateKey(e, t) {
                        return await this.keychain.set(e, t), e;
                    }
                    getPrivateKey(e) {
                        return this.keychain.get(e);
                    }
                    async getClientSeed() {
                        let e = "";
                        try {
                            e = this.keychain.get(O);
                        } catch  {
                            e = (0, g.generateRandomBytes32)(), await this.keychain.set(O, e);
                        }
                        return function(e, t = "utf8") {
                            const r = ar[t];
                            if (!r) throw new Error(`Unsupported encoding "${t}"`);
                            return "utf8" !== t && "utf-8" !== t || null == globalThis.Buffer || null == globalThis.Buffer.from ? r.decoder.decode(`${r.prefix}${e}`) : globalThis.Buffer.from(e, "utf8");
                        }(e, "base16");
                    }
                    getSymKey(e) {
                        return this.keychain.get(e);
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            const { message: e } = (0, g.getInternalError)("NOT_INITIALIZED", this.name);
                            throw new Error(e);
                        }
                    }
                }
                class ur extends l.dQ {
                    constructor(e, t){
                        super(e, t), this.logger = e, this.core = t, this.messages = new Map, this.name = L, this.version = j, this.initialized = !1, this.storagePrefix = C, this.init = async ()=>{
                            if (!this.initialized) {
                                this.logger.trace("Initialized");
                                try {
                                    const e = await this.getRelayerMessages();
                                    typeof e < "u" && (this.messages = e), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({
                                        type: "method",
                                        method: "restore",
                                        size: this.messages.size
                                    });
                                } catch (e) {
                                    this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e);
                                } finally{
                                    this.initialized = !0;
                                }
                            }
                        }, this.set = async (e, t)=>{
                            this.isInitialized();
                            const r = (0, g.hashMessage)(t);
                            let n = this.messages.get(e);
                            return typeof n > "u" && (n = {}), typeof n[r] < "u" || (n[r] = t, this.messages.set(e, n), await this.persist()), r;
                        }, this.get = (e)=>{
                            this.isInitialized();
                            let t = this.messages.get(e);
                            return typeof t > "u" && (t = {}), t;
                        }, this.has = (e, t)=>(this.isInitialized(), typeof this.get(e)[(0, g.hashMessage)(t)] < "u"), this.del = async (e)=>{
                            this.isInitialized(), this.messages.delete(e), await this.persist();
                        }, this.logger = (0, f.U5)(e, this.name), this.core = t;
                    }
                    get context() {
                        return (0, f.oI)(this.logger);
                    }
                    get storageKey() {
                        return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
                    }
                    async setRelayerMessages(e) {
                        await this.core.storage.setItem(this.storageKey, (0, g.mapToObj)(e));
                    }
                    async getRelayerMessages() {
                        const e = await this.core.storage.getItem(this.storageKey);
                        return typeof e < "u" ? (0, g.objToMap)(e) : void 0;
                    }
                    async persist() {
                        await this.setRelayerMessages(this.messages);
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            const { message: e } = (0, g.getInternalError)("NOT_INITIALIZED", this.name);
                            throw new Error(e);
                        }
                    }
                }
                var dr = Object.defineProperty, fr = Object.defineProperties, lr = Object.getOwnPropertyDescriptors, pr = Object.getOwnPropertySymbols, br = Object.prototype.hasOwnProperty, gr = Object.prototype.propertyIsEnumerable, mr = (e, t, r)=>t in e ? dr(e, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }) : e[t] = r, yr = (e, t)=>{
                    for(var r in t || (t = {}))br.call(t, r) && mr(e, r, t[r]);
                    if (pr) for (var r of pr(t))gr.call(t, r) && mr(e, r, t[r]);
                    return e;
                }, vr = (e, t)=>fr(e, lr(t));
                class wr extends l.qE {
                    constructor(e, t){
                        super(e, t), this.relayer = e, this.logger = t, this.events = new n.EventEmitter, this.name = q, this.queue = new Map, this.publishTimeout = (0, s.toMiliseconds)(s.ONE_MINUTE), this.initialPublishTimeout = (0, s.toMiliseconds)(15 * s.ONE_SECOND), this.needsTransportRestart = !1, this.publish = async (e, t, r)=>{
                            var n;
                            this.logger.debug("Publishing Payload"), this.logger.trace({
                                type: "method",
                                method: "publish",
                                params: {
                                    topic: e,
                                    message: t,
                                    opts: r
                                }
                            });
                            const i = r?.ttl || D, s = (0, g.getRelayProtocolName)(r), o = r?.prompt || !1, a = r?.tag || 0, c = r?.id || (0, y.getBigIntRpcId)().toString(), h = {
                                topic: e,
                                message: t,
                                opts: {
                                    ttl: i,
                                    relay: s,
                                    prompt: o,
                                    tag: a,
                                    id: c,
                                    attestation: r?.attestation
                                }
                            }, u = `Failed to publish payload, please try again. id:${c} tag:${a}`;
                            try {
                                const n = new Promise(async (n)=>{
                                    const s = ({ id: e })=>{
                                        h.opts.id === e && (this.removeRequestFromQueue(e), this.relayer.events.removeListener($.publish, s), n(h));
                                    };
                                    this.relayer.events.on($.publish, s);
                                    const u = (0, g.createExpiringPromise)(new Promise((n, s)=>{
                                        this.rpcPublish({
                                            topic: e,
                                            message: t,
                                            ttl: i,
                                            prompt: o,
                                            tag: a,
                                            id: c,
                                            attestation: r?.attestation
                                        }).then(n).catch((e)=>{
                                            this.logger.warn(e, e?.message), s(e);
                                        });
                                    }), this.initialPublishTimeout, `Failed initial publish, retrying.... id:${c} tag:${a}`);
                                    try {
                                        await u, this.events.removeListener($.publish, s);
                                    } catch (e) {
                                        this.queue.set(c, vr(yr({}, h), {
                                            attempt: 1
                                        })), this.logger.warn(e, e?.message);
                                    }
                                });
                                this.logger.trace({
                                    type: "method",
                                    method: "publish",
                                    params: {
                                        id: c,
                                        topic: e,
                                        message: t,
                                        opts: r
                                    }
                                }), await (0, g.createExpiringPromise)(n, this.publishTimeout, u);
                            } catch (e) {
                                if (this.logger.debug("Failed to Publish Payload"), this.logger.error(e), null != (n = r?.internal) && n.throwOnFailedPublish) throw e;
                            } finally{
                                this.queue.delete(c);
                            }
                        }, this.on = (e, t)=>{
                            this.events.on(e, t);
                        }, this.once = (e, t)=>{
                            this.events.once(e, t);
                        }, this.off = (e, t)=>{
                            this.events.off(e, t);
                        }, this.removeListener = (e, t)=>{
                            this.events.removeListener(e, t);
                        }, this.relayer = e, this.logger = (0, f.U5)(t, this.name), this.registerEventListeners();
                    }
                    get context() {
                        return (0, f.oI)(this.logger);
                    }
                    async rpcPublish(e) {
                        var t, r, n, i;
                        const { topic: s, message: o, ttl: a = D, prompt: c, tag: h, id: u, attestation: d } = e, f = {
                            method: (0, g.getRelayProtocolApi)((0, g.getRelayProtocolName)().protocol).publish,
                            params: {
                                topic: s,
                                message: o,
                                ttl: a,
                                prompt: c,
                                tag: h,
                                attestation: d
                            },
                            id: u
                        };
                        (0, g.isUndefined)(null == (t = f.params) ? void 0 : t.prompt) && (null == (r = f.params) || delete r.prompt), (0, g.isUndefined)(null == (n = f.params) ? void 0 : n.tag) && (null == (i = f.params) || delete i.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                            type: "message",
                            direction: "outgoing",
                            request: f
                        });
                        const l = await this.relayer.request(f);
                        return this.relayer.events.emit($.publish, e), this.logger.debug("Successfully Published Payload"), l;
                    }
                    removeRequestFromQueue(e) {
                        this.queue.delete(e);
                    }
                    checkQueue() {
                        this.queue.forEach(async (e, t)=>{
                            const r = e.attempt + 1;
                            this.queue.set(t, vr(yr({}, e), {
                                attempt: r
                            }));
                            const { topic: n, message: i, opts: s, attestation: o } = e;
                            this.logger.warn({}, `Publisher: queue->publishing: ${e.opts.id}, tag: ${e.opts.tag}, attempt: ${r}`), await this.rpcPublish({
                                topic: n,
                                message: i,
                                ttl: s.ttl,
                                prompt: s.prompt,
                                tag: s.tag,
                                id: s.id,
                                attestation: o
                            }), this.logger.warn({}, `Publisher: queue->published: ${e.opts.id}`);
                        });
                    }
                    registerEventListeners() {
                        this.relayer.core.heartbeat.on(h, ()=>{
                            if (this.needsTransportRestart) return this.needsTransportRestart = !1, void this.relayer.events.emit($.connection_stalled);
                            this.checkQueue();
                        }), this.relayer.on($.message_ack, (e)=>{
                            this.removeRequestFromQueue(e.id.toString());
                        });
                    }
                }
                class _r {
                    constructor(){
                        this.map = new Map, this.set = (e, t)=>{
                            const r = this.get(e);
                            this.exists(e, t) || this.map.set(e, [
                                ...r,
                                t
                            ]);
                        }, this.get = (e)=>this.map.get(e) || [], this.exists = (e, t)=>this.get(e).includes(t), this.delete = (e, t)=>{
                            if (typeof t > "u") return void this.map.delete(e);
                            if (!this.map.has(e)) return;
                            const r = this.get(e);
                            if (!this.exists(e, t)) return;
                            const n = r.filter((e)=>e !== t);
                            n.length ? this.map.set(e, n) : this.map.delete(e);
                        }, this.clear = ()=>{
                            this.map.clear();
                        };
                    }
                    get topics() {
                        return Array.from(this.map.keys());
                    }
                }
                var Er = Object.defineProperty, Sr = Object.defineProperties, Ar = Object.getOwnPropertyDescriptors, Mr = Object.getOwnPropertySymbols, Ir = Object.prototype.hasOwnProperty, Tr = Object.prototype.propertyIsEnumerable, xr = (e, t, r)=>t in e ? Er(e, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }) : e[t] = r, Cr = (e, t)=>{
                    for(var r in t || (t = {}))Ir.call(t, r) && xr(e, r, t[r]);
                    if (Mr) for (var r of Mr(t))Tr.call(t, r) && xr(e, r, t[r]);
                    return e;
                }, Rr = (e, t)=>Sr(e, Ar(t));
                class kr extends l.mF {
                    constructor(e, t){
                        super(e, t), this.relayer = e, this.logger = t, this.subscriptions = new Map, this.topicMap = new _r, this.events = new n.EventEmitter, this.name = ie, this.version = se, this.pending = new Map, this.cached = [], this.initialized = !1, this.pendingSubscriptionWatchLabel = "pending_sub_watch_label", this.pollingInterval = 20, this.storagePrefix = C, this.subscribeTimeout = (0, s.toMiliseconds)(s.ONE_MINUTE), this.initialSubscribeTimeout = (0, s.toMiliseconds)(15 * s.ONE_SECOND), this.batchSubscribeTopicsLimit = 500, this.init = async ()=>{
                            this.initialized || (this.logger.trace("Initialized"), this.registerEventListeners(), this.clientId = await this.relayer.core.crypto.getClientId(), await this.restore()), this.initialized = !0;
                        }, this.subscribe = async (e, t)=>{
                            this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({
                                type: "method",
                                method: "subscribe",
                                params: {
                                    topic: e,
                                    opts: t
                                }
                            });
                            try {
                                const r = (0, g.getRelayProtocolName)(t), n = {
                                    topic: e,
                                    relay: r,
                                    transportType: t?.transportType
                                };
                                this.pending.set(e, n);
                                const i = await this.rpcSubscribe(e, r, t);
                                return "string" == typeof i && (this.onSubscribe(i, n), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({
                                    type: "method",
                                    method: "subscribe",
                                    params: {
                                        topic: e,
                                        opts: t
                                    }
                                })), i;
                            } catch (e) {
                                throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(e), e;
                            }
                        }, this.unsubscribe = async (e, t)=>{
                            await this.restartToComplete(), this.isInitialized(), typeof t?.id < "u" ? await this.unsubscribeById(e, t.id, t) : await this.unsubscribeByTopic(e, t);
                        }, this.isSubscribed = async (e)=>{
                            if (this.topics.includes(e)) return !0;
                            const t = `${this.pendingSubscriptionWatchLabel}_${e}`;
                            return await new Promise((r, n)=>{
                                const i = new s.Watch;
                                i.start(t);
                                const o = setInterval(()=>{
                                    (!this.pending.has(e) && this.topics.includes(e) || this.cached.some((t)=>t.topic === e)) && (clearInterval(o), i.stop(t), r(!0)), i.elapsed(t) >= oe && (clearInterval(o), i.stop(t), n(new Error("Subscription resolution timeout")));
                                }, this.pollingInterval);
                            }).catch(()=>!1);
                        }, this.on = (e, t)=>{
                            this.events.on(e, t);
                        }, this.once = (e, t)=>{
                            this.events.once(e, t);
                        }, this.off = (e, t)=>{
                            this.events.off(e, t);
                        }, this.removeListener = (e, t)=>{
                            this.events.removeListener(e, t);
                        }, this.start = async ()=>{
                            await this.onConnect();
                        }, this.stop = async ()=>{
                            await this.onDisconnect();
                        }, this.restart = async ()=>{
                            await this.restore(), await this.onRestart();
                        }, this.checkPending = async ()=>{
                            if (!(0 !== this.pending.size || this.initialized && this.relayer.connected)) return;
                            const e = [];
                            this.pending.forEach((t)=>{
                                e.push(t);
                            }), await this.batchSubscribe(e);
                        }, this.registerEventListeners = ()=>{
                            this.relayer.core.heartbeat.on(h, async ()=>{
                                await this.checkPending();
                            }), this.events.on(re.created, async (e)=>{
                                const t = re.created;
                                this.logger.info(`Emitting ${t}`), this.logger.debug({
                                    type: "event",
                                    event: t,
                                    data: e
                                }), await this.persist();
                            }), this.events.on(re.deleted, async (e)=>{
                                const t = re.deleted;
                                this.logger.info(`Emitting ${t}`), this.logger.debug({
                                    type: "event",
                                    event: t,
                                    data: e
                                }), await this.persist();
                            });
                        }, this.relayer = e, this.logger = (0, f.U5)(t, this.name), this.clientId = "";
                    }
                    get context() {
                        return (0, f.oI)(this.logger);
                    }
                    get storageKey() {
                        return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + "//" + this.name;
                    }
                    get length() {
                        return this.subscriptions.size;
                    }
                    get ids() {
                        return Array.from(this.subscriptions.keys());
                    }
                    get values() {
                        return Array.from(this.subscriptions.values());
                    }
                    get topics() {
                        return this.topicMap.topics;
                    }
                    hasSubscription(e, t) {
                        let r = !1;
                        try {
                            r = this.getSubscription(e).topic === t;
                        } catch  {}
                        return r;
                    }
                    reset() {
                        this.cached = [], this.initialized = !0;
                    }
                    onDisable() {
                        this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();
                    }
                    async unsubscribeByTopic(e, t) {
                        const r = this.topicMap.get(e);
                        await Promise.all(r.map(async (r)=>await this.unsubscribeById(e, r, t)));
                    }
                    async unsubscribeById(e, t, r) {
                        this.logger.debug("Unsubscribing Topic"), this.logger.trace({
                            type: "method",
                            method: "unsubscribe",
                            params: {
                                topic: e,
                                id: t,
                                opts: r
                            }
                        });
                        try {
                            const n = (0, g.getRelayProtocolName)(r);
                            await this.rpcUnsubscribe(e, t, n);
                            const i = (0, g.getSdkError)("USER_DISCONNECTED", `${this.name}, ${e}`);
                            await this.onUnsubscribe(e, t, i), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({
                                type: "method",
                                method: "unsubscribe",
                                params: {
                                    topic: e,
                                    id: t,
                                    opts: r
                                }
                            });
                        } catch (e) {
                            throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(e), e;
                        }
                    }
                    async rpcSubscribe(e, t, r) {
                        var n;
                        r?.transportType === Z.relay && await this.restartToComplete();
                        const i = {
                            method: (0, g.getRelayProtocolApi)(t.protocol).subscribe,
                            params: {
                                topic: e
                            }
                        };
                        this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                            type: "payload",
                            direction: "outgoing",
                            request: i
                        });
                        const o = null == (n = r?.internal) ? void 0 : n.throwOnFailedPublish;
                        try {
                            const t = this.getSubscriptionId(e);
                            if (r?.transportType === Z.link_mode) return setTimeout(()=>{
                                (this.relayer.connected || this.relayer.connecting) && this.relayer.request(i).catch((e)=>this.logger.warn(e));
                            }, (0, s.toMiliseconds)(s.ONE_SECOND)), t;
                            const n = new Promise(async (t)=>{
                                const r = (n)=>{
                                    n.topic === e && (this.events.removeListener(re.created, r), t(n.id));
                                };
                                this.events.on(re.created, r);
                                try {
                                    const n = await (0, g.createExpiringPromise)(new Promise((e, t)=>{
                                        this.relayer.request(i).catch((e)=>{
                                            this.logger.warn(e, e?.message), t(e);
                                        }).then(e);
                                    }), this.initialSubscribeTimeout, `Subscribing to ${e} failed, please try again`);
                                    this.events.removeListener(re.created, r), t(n);
                                } catch  {}
                            }), a = await (0, g.createExpiringPromise)(n, this.subscribeTimeout, `Subscribing to ${e} failed, please try again`);
                            if (!a && o) throw new Error(`Subscribing to ${e} failed, please try again`);
                            return a ? t : null;
                        } catch (e) {
                            if (this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit($.connection_stalled), o) throw e;
                        }
                        return null;
                    }
                    async rpcBatchSubscribe(e) {
                        if (!e.length) return;
                        const t = e[0].relay, r = {
                            method: (0, g.getRelayProtocolApi)(t.protocol).batchSubscribe,
                            params: {
                                topics: e.map((e)=>e.topic)
                            }
                        };
                        this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                            type: "payload",
                            direction: "outgoing",
                            request: r
                        });
                        try {
                            await await (0, g.createExpiringPromise)(new Promise((e)=>{
                                this.relayer.request(r).catch((e)=>this.logger.warn(e)).then(e);
                            }), this.subscribeTimeout, "rpcBatchSubscribe failed, please try again");
                        } catch  {
                            this.relayer.events.emit($.connection_stalled);
                        }
                    }
                    async rpcBatchFetchMessages(e) {
                        if (!e.length) return;
                        const t = e[0].relay, r = {
                            method: (0, g.getRelayProtocolApi)(t.protocol).batchFetchMessages,
                            params: {
                                topics: e.map((e)=>e.topic)
                            }
                        };
                        let n;
                        this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                            type: "payload",
                            direction: "outgoing",
                            request: r
                        });
                        try {
                            n = await await (0, g.createExpiringPromise)(new Promise((e, t)=>{
                                this.relayer.request(r).catch((e)=>{
                                    this.logger.warn(e), t(e);
                                }).then(e);
                            }), this.subscribeTimeout, "rpcBatchFetchMessages failed, please try again");
                        } catch  {
                            this.relayer.events.emit($.connection_stalled);
                        }
                        return n;
                    }
                    rpcUnsubscribe(e, t, r) {
                        const n = {
                            method: (0, g.getRelayProtocolApi)(r.protocol).unsubscribe,
                            params: {
                                topic: e,
                                id: t
                            }
                        };
                        return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                            type: "payload",
                            direction: "outgoing",
                            request: n
                        }), this.relayer.request(n);
                    }
                    onSubscribe(e, t) {
                        this.setSubscription(e, Rr(Cr({}, t), {
                            id: e
                        })), this.pending.delete(t.topic);
                    }
                    onBatchSubscribe(e) {
                        e.length && e.forEach((e)=>{
                            this.setSubscription(e.id, Cr({}, e)), this.pending.delete(e.topic);
                        });
                    }
                    async onUnsubscribe(e, t, r) {
                        this.events.removeAllListeners(t), this.hasSubscription(t, e) && this.deleteSubscription(t, r), await this.relayer.messages.del(e);
                    }
                    async setRelayerSubscriptions(e) {
                        await this.relayer.core.storage.setItem(this.storageKey, e);
                    }
                    async getRelayerSubscriptions() {
                        return await this.relayer.core.storage.getItem(this.storageKey);
                    }
                    setSubscription(e, t) {
                        this.logger.debug("Setting subscription"), this.logger.trace({
                            type: "method",
                            method: "setSubscription",
                            id: e,
                            subscription: t
                        }), this.addSubscription(e, t);
                    }
                    addSubscription(e, t) {
                        this.subscriptions.set(e, Cr({}, t)), this.topicMap.set(t.topic, e), this.events.emit(re.created, t);
                    }
                    getSubscription(e) {
                        this.logger.debug("Getting subscription"), this.logger.trace({
                            type: "method",
                            method: "getSubscription",
                            id: e
                        });
                        const t = this.subscriptions.get(e);
                        if (!t) {
                            const { message: t } = (0, g.getInternalError)("NO_MATCHING_KEY", `${this.name}: ${e}`);
                            throw new Error(t);
                        }
                        return t;
                    }
                    deleteSubscription(e, t) {
                        this.logger.debug("Deleting subscription"), this.logger.trace({
                            type: "method",
                            method: "deleteSubscription",
                            id: e,
                            reason: t
                        });
                        const r = this.getSubscription(e);
                        this.subscriptions.delete(e), this.topicMap.delete(r.topic, e), this.events.emit(re.deleted, Rr(Cr({}, r), {
                            reason: t
                        }));
                    }
                    async persist() {
                        await this.setRelayerSubscriptions(this.values), this.events.emit(re.sync);
                    }
                    async onRestart() {
                        if (this.cached.length) {
                            const e = [
                                ...this.cached
                            ], t = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
                            for(let r = 0; r < t; r++){
                                const t = e.splice(0, this.batchSubscribeTopicsLimit);
                                await this.batchSubscribe(t);
                            }
                        }
                        this.events.emit(re.resubscribed);
                    }
                    async restore() {
                        try {
                            const e = await this.getRelayerSubscriptions();
                            if (typeof e > "u" || !e.length) return;
                            if (this.subscriptions.size) {
                                const { message: e } = (0, g.getInternalError)("RESTORE_WILL_OVERRIDE", this.name);
                                throw this.logger.error(e), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(e);
                            }
                            this.cached = e, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({
                                type: "method",
                                method: "restore",
                                subscriptions: this.values
                            });
                        } catch (e) {
                            this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e);
                        }
                    }
                    async batchSubscribe(e) {
                        e.length && (await this.rpcBatchSubscribe(e), this.onBatchSubscribe(e.map((e)=>Rr(Cr({}, e), {
                                id: this.getSubscriptionId(e.topic)
                            }))));
                    }
                    async batchFetchMessages(e) {
                        if (!e.length) return;
                        this.logger.trace(`Fetching batch messages for ${e.length} subscriptions`);
                        const t = await this.rpcBatchFetchMessages(e);
                        t && t.messages && (await (0, g.sleep)((0, s.toMiliseconds)(s.ONE_SECOND)), await this.relayer.handleBatchMessageEvents(t.messages));
                    }
                    async onConnect() {
                        await this.restart(), this.reset();
                    }
                    onDisconnect() {
                        this.onDisable();
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            const { message: e } = (0, g.getInternalError)("NOT_INITIALIZED", this.name);
                            throw new Error(e);
                        }
                    }
                    async restartToComplete() {
                        !this.relayer.connected && !this.relayer.connecting && await this.relayer.transportOpen();
                    }
                    getSubscriptionId(e) {
                        return (0, g.hashMessage)(e + this.clientId);
                    }
                }
                var Pr = Object.defineProperty, Or = Object.getOwnPropertySymbols, Nr = Object.prototype.hasOwnProperty, Ur = Object.prototype.propertyIsEnumerable, Br = (e, t, r)=>t in e ? Pr(e, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }) : e[t] = r, Lr = (e, t)=>{
                    for(var r in t || (t = {}))Nr.call(t, r) && Br(e, r, t[r]);
                    if (Or) for (var r of Or(t))Ur.call(t, r) && Br(e, r, t[r]);
                    return e;
                };
                class jr extends l.m5 {
                    constructor(e){
                        super(e), this.protocol = "wc", this.version = 2, this.events = new n.EventEmitter, this.name = V, this.transportExplicitlyClosed = !1, this.initialized = !1, this.connectionAttemptInProgress = !1, this.hasExperiencedNetworkDisruption = !1, this.heartBeatTimeout = (0, s.toMiliseconds)(s.THIRTY_SECONDS + s.FIVE_SECONDS), this.requestsInFlight = [], this.connectTimeout = (0, s.toMiliseconds)(15 * s.ONE_SECOND), this.request = async (e)=>{
                            var t, r;
                            this.logger.debug("Publishing Request Payload");
                            const n = e.id || (0, y.getBigIntRpcId)().toString();
                            await this.toEstablishConnection();
                            try {
                                this.logger.trace({
                                    id: n,
                                    method: e.method,
                                    topic: null == (t = e.params) ? void 0 : t.topic
                                }, "relayer.request - publishing...");
                                const i = `${n}:${(null == (r = e.params) ? void 0 : r.tag) || ""}`;
                                this.requestsInFlight.push(i);
                                const s = await this.provider.request(e);
                                return this.requestsInFlight = this.requestsInFlight.filter((e)=>e !== i), s;
                            } catch (e) {
                                throw this.logger.debug(`Failed to Publish Request: ${n}`), e;
                            }
                        }, this.resetPingTimeout = ()=>{
                            if ((0, g.isNode)()) try {
                                clearTimeout(this.pingTimeout), this.pingTimeout = setTimeout(()=>{
                                    var e, t, r;
                                    this.logger.debug({}, "pingTimeout: Connection stalled, terminating..."), null == (r = null == (t = null == (e = this.provider) ? void 0 : e.connection) ? void 0 : t.socket) || r.terminate();
                                }, this.heartBeatTimeout);
                            } catch (e) {
                                this.logger.warn(e, e?.message);
                            }
                        }, this.onPayloadHandler = (e)=>{
                            this.onProviderPayload(e), this.resetPingTimeout();
                        }, this.onConnectHandler = ()=>{
                            this.logger.warn({}, "Relayer connected 🛜"), this.startPingTimeout(), this.events.emit($.connect);
                        }, this.onDisconnectHandler = ()=>{
                            this.logger.warn({}, "Relayer disconnected 🛑"), this.requestsInFlight = [], this.onProviderDisconnect();
                        }, this.onProviderErrorHandler = (e)=>{
                            this.logger.fatal(e, `Fatal socket error: ${e?.message}`), this.events.emit($.error, e), this.logger.fatal("Fatal socket error received, closing transport"), this.transportClose();
                        }, this.registerProviderListeners = ()=>{
                            this.provider.on(G.payload, this.onPayloadHandler), this.provider.on(G.connect, this.onConnectHandler), this.provider.on(G.disconnect, this.onDisconnectHandler), this.provider.on(G.error, this.onProviderErrorHandler);
                        }, this.core = e.core, this.logger = typeof e.logger < "u" && "string" != typeof e.logger ? (0, f.U5)(e.logger, this.name) : (0, f.h6)((0, f.iP)({
                            level: e.logger || H
                        })), this.messages = new ur(this.logger, e.core), this.subscriber = new kr(this, this.logger), this.publisher = new wr(this, this.logger), this.relayUrl = e?.relayUrl || z, this.projectId = e.projectId, (0, g.isAndroid)() ? this.packageName = (0, g.getAppId)() : (0, g.isIos)() && (this.bundleId = (0, g.getAppId)()), this.provider = {};
                    }
                    async init() {
                        if (this.logger.trace("Initialized"), this.registerEventListeners(), await Promise.all([
                            this.messages.init(),
                            this.subscriber.init()
                        ]), this.initialized = !0, this.subscriber.cached.length > 0) try {
                            await this.transportOpen();
                        } catch (e) {
                            this.logger.warn(e, e?.message);
                        }
                    }
                    get context() {
                        return (0, f.oI)(this.logger);
                    }
                    get connected() {
                        var e, t, r;
                        return 1 === (null == (r = null == (t = null == (e = this.provider) ? void 0 : e.connection) ? void 0 : t.socket) ? void 0 : r.readyState);
                    }
                    get connecting() {
                        var e, t, r;
                        return 0 === (null == (r = null == (t = null == (e = this.provider) ? void 0 : e.connection) ? void 0 : t.socket) ? void 0 : r.readyState);
                    }
                    async publish(e, t, r) {
                        this.isInitialized(), await this.publisher.publish(e, t, r), await this.recordMessageEvent({
                            topic: e,
                            message: t,
                            publishedAt: Date.now(),
                            transportType: Z.relay
                        });
                    }
                    async subscribe(e, t) {
                        var r, n, i;
                        this.isInitialized(), (null == t || !t.transportType || "relay" === t?.transportType) && await this.toEstablishConnection();
                        const s = typeof (null == (r = t?.internal) ? void 0 : r.throwOnFailedPublish) > "u" || (null == (n = t?.internal) ? void 0 : n.throwOnFailedPublish);
                        let o, a = (null == (i = this.subscriber.topicMap.get(e)) ? void 0 : i[0]) || "";
                        const c = (t)=>{
                            t.topic === e && (this.subscriber.off(re.created, c), o());
                        };
                        return await Promise.all([
                            new Promise((e)=>{
                                o = e, this.subscriber.on(re.created, c);
                            }),
                            new Promise(async (r, n)=>{
                                a = await this.subscriber.subscribe(e, Lr({
                                    internal: {
                                        throwOnFailedPublish: s
                                    }
                                }, t)).catch((e)=>{
                                    s && n(e);
                                }) || a, r();
                            })
                        ]), a;
                    }
                    async unsubscribe(e, t) {
                        this.isInitialized(), await this.subscriber.unsubscribe(e, t);
                    }
                    on(e, t) {
                        this.events.on(e, t);
                    }
                    once(e, t) {
                        this.events.once(e, t);
                    }
                    off(e, t) {
                        this.events.off(e, t);
                    }
                    removeListener(e, t) {
                        this.events.removeListener(e, t);
                    }
                    async transportDisconnect() {
                        this.provider.disconnect && (this.hasExperiencedNetworkDisruption || this.connected) ? await (0, g.createExpiringPromise)(this.provider.disconnect(), 2e3, "provider.disconnect()").catch(()=>this.onProviderDisconnect()) : this.onProviderDisconnect();
                    }
                    async transportClose() {
                        this.transportExplicitlyClosed = !0, await this.transportDisconnect();
                    }
                    async transportOpen(e) {
                        if (this.connectPromise ? (this.logger.debug({}, "Waiting for existing connection attempt to resolve..."), await this.connectPromise, this.logger.debug({}, "Existing connection attempt resolved")) : (this.connectPromise = new Promise(async (t, r)=>{
                            await this.connect(e).then(t).catch(r).finally(()=>{
                                this.connectPromise = void 0;
                            });
                        }), await this.connectPromise), !this.connected) throw new Error(`Couldn't establish socket connection to the relay server: ${this.relayUrl}`);
                    }
                    async restartTransport(e) {
                        this.logger.debug({}, "Restarting transport..."), !this.connectionAttemptInProgress && (this.relayUrl = e || this.relayUrl, await this.confirmOnlineStateOrThrow(), await this.transportClose(), await this.transportOpen());
                    }
                    async confirmOnlineStateOrThrow() {
                        if (!await (0, g.isOnline)()) throw new Error("No internet connection detected. Please restart your network and try again.");
                    }
                    async handleBatchMessageEvents(e) {
                        if (0 === e?.length) return void this.logger.trace("Batch message events is empty. Ignoring...");
                        const t = e.sort((e, t)=>e.publishedAt - t.publishedAt);
                        this.logger.debug(`Batch of ${t.length} message events sorted`);
                        for (const e of t)try {
                            await this.onMessageEvent(e);
                        } catch (e) {
                            this.logger.warn(e, "Error while processing batch message event: " + e?.message);
                        }
                        this.logger.trace(`Batch of ${t.length} message events processed`);
                    }
                    async onLinkMessageEvent(e, t) {
                        const { topic: r } = e;
                        if (!t.sessionExists) {
                            const e = {
                                topic: r,
                                expiry: (0, g.calcExpiry)(s.FIVE_MINUTES),
                                relay: {
                                    protocol: "irn"
                                },
                                active: !1
                            };
                            await this.core.pairing.pairings.set(r, e);
                        }
                        this.events.emit($.message, e), await this.recordMessageEvent(e);
                    }
                    async connect(e) {
                        await this.confirmOnlineStateOrThrow(), e && e !== this.relayUrl && (this.relayUrl = e, await this.transportDisconnect()), this.connectionAttemptInProgress = !0, this.transportExplicitlyClosed = !1;
                        let t = 1;
                        for(; t < 6;){
                            try {
                                this.logger.debug({}, `Connecting to ${this.relayUrl}, attempt: ${t}...`), await this.createProvider(), await new Promise(async (e, t)=>{
                                    const r = ()=>{
                                        t(new Error("Connection interrupted while trying to subscribe"));
                                    };
                                    this.provider.once(G.disconnect, r), await (0, g.createExpiringPromise)(new Promise((e, t)=>{
                                        this.provider.connect().then(e).catch(t);
                                    }), this.connectTimeout, `Socket stalled when trying to connect to ${this.relayUrl}`).catch((e)=>{
                                        t(e);
                                    }).finally(()=>{
                                        this.provider.off(G.disconnect, r), clearTimeout(this.reconnectTimeout), this.reconnectTimeout = void 0;
                                    }), await new Promise(async (e, t)=>{
                                        const r = ()=>{
                                            t(new Error("Connection interrupted while trying to subscribe"));
                                        };
                                        this.provider.once(G.disconnect, r), await this.subscriber.start().then(e).catch(t).finally(()=>{
                                            this.provider.off(G.disconnect, r);
                                        });
                                    }), this.hasExperiencedNetworkDisruption = !1, e();
                                });
                            } catch (e) {
                                await this.subscriber.stop();
                                const t = e;
                                this.logger.warn({}, t.message), this.hasExperiencedNetworkDisruption = !0;
                            } finally{
                                this.connectionAttemptInProgress = !1;
                            }
                            if (this.connected) {
                                this.logger.debug({}, `Connected to ${this.relayUrl} successfully on attempt: ${t}`);
                                break;
                            }
                            await new Promise((e)=>setTimeout(e, (0, s.toMiliseconds)(1 * t))), t++;
                        }
                    }
                    startPingTimeout() {
                        var e, t, r, n, i;
                        if ((0, g.isNode)()) try {
                            null != (t = null == (e = this.provider) ? void 0 : e.connection) && t.socket && (null == (i = null == (n = null == (r = this.provider) ? void 0 : r.connection) ? void 0 : n.socket) || i.on("ping", ()=>{
                                this.resetPingTimeout();
                            })), this.resetPingTimeout();
                        } catch (e) {
                            this.logger.warn(e, e?.message);
                        }
                    }
                    async createProvider() {
                        this.provider.connection && this.unregisterProviderListeners();
                        const e = await this.core.crypto.signJWT(this.relayUrl);
                        this.provider = new v(new E((0, g.formatRelayRpcUrl)({
                            sdkVersion: Y,
                            protocol: this.protocol,
                            version: this.version,
                            relayUrl: this.relayUrl,
                            projectId: this.projectId,
                            auth: e,
                            useOnCloseEvent: !0,
                            bundleId: this.bundleId,
                            packageName: this.packageName
                        }))), this.registerProviderListeners();
                    }
                    async recordMessageEvent(e) {
                        const { topic: t, message: r } = e;
                        await this.messages.set(t, r);
                    }
                    async shouldIgnoreMessageEvent(e) {
                        const { topic: t, message: r } = e;
                        if (!r || 0 === r.length) return this.logger.warn(`Ignoring invalid/empty message: ${r}`), !0;
                        if (!await this.subscriber.isSubscribed(t)) return this.logger.warn(`Ignoring message for non-subscribed topic ${t}`), !0;
                        const n = this.messages.has(t, r);
                        return n && this.logger.warn(`Ignoring duplicate message: ${r}`), n;
                    }
                    async onProviderPayload(e) {
                        if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({
                            type: "payload",
                            direction: "incoming",
                            payload: e
                        }), (0, y.isJsonRpcRequest)(e)) {
                            if (!e.method.endsWith(K)) return;
                            const t = e.params, { topic: r, message: n, publishedAt: i, attestation: s } = t.data, o = {
                                topic: r,
                                message: n,
                                publishedAt: i,
                                transportType: Z.relay,
                                attestation: s
                            };
                            this.logger.debug("Emitting Relayer Payload"), this.logger.trace(Lr({
                                type: "event",
                                event: t.id
                            }, o)), this.events.emit(t.id, o), await this.acknowledgePayload(e), await this.onMessageEvent(o);
                        } else (0, y.isJsonRpcResponse)(e) && this.events.emit($.message_ack, e);
                    }
                    async onMessageEvent(e) {
                        await this.shouldIgnoreMessageEvent(e) || (this.events.emit($.message, e), await this.recordMessageEvent(e));
                    }
                    async acknowledgePayload(e) {
                        const t = (0, y.formatJsonRpcResult)(e.id, !0);
                        await this.provider.connection.send(t);
                    }
                    unregisterProviderListeners() {
                        this.provider.off(G.payload, this.onPayloadHandler), this.provider.off(G.connect, this.onConnectHandler), this.provider.off(G.disconnect, this.onDisconnectHandler), this.provider.off(G.error, this.onProviderErrorHandler), clearTimeout(this.pingTimeout);
                    }
                    async registerEventListeners() {
                        let e = await (0, g.isOnline)();
                        (0, g.subscribeToNetworkChange)(async (t)=>{
                            e !== t && (e = t, t ? await this.transportOpen().catch((e)=>this.logger.error(e, e?.message)) : (this.hasExperiencedNetworkDisruption = !0, await this.transportDisconnect(), this.transportExplicitlyClosed = !1));
                        });
                    }
                    async onProviderDisconnect() {
                        await this.subscriber.stop(), clearTimeout(this.pingTimeout), this.events.emit($.disconnect), this.connectionAttemptInProgress = !1, !this.transportExplicitlyClosed && (this.reconnectTimeout || this.connectPromise || (this.reconnectTimeout = setTimeout(async ()=>{
                            clearTimeout(this.reconnectTimeout), await this.transportOpen().catch((e)=>this.logger.error(e, e?.message));
                        }, (0, s.toMiliseconds)(W))));
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            const { message: e } = (0, g.getInternalError)("NOT_INITIALIZED", this.name);
                            throw new Error(e);
                        }
                    }
                    async toEstablishConnection() {
                        await this.confirmOnlineStateOrThrow(), !this.connected && await this.transportOpen();
                    }
                }
                var Dr = Object.defineProperty, qr = Object.getOwnPropertySymbols, Fr = Object.prototype.hasOwnProperty, Hr = Object.prototype.propertyIsEnumerable, zr = (e, t, r)=>t in e ? Dr(e, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }) : e[t] = r, Vr = (e, t)=>{
                    for(var r in t || (t = {}))Fr.call(t, r) && zr(e, r, t[r]);
                    if (qr) for (var r of qr(t))Hr.call(t, r) && zr(e, r, t[r]);
                    return e;
                };
                class $r extends l.pi {
                    constructor(e, t, r, n = C, i = void 0){
                        super(e, t, r, n), this.core = e, this.logger = t, this.name = r, this.map = new Map, this.version = Q, this.cached = [], this.initialized = !1, this.storagePrefix = C, this.recentlyDeleted = [], this.recentlyDeletedLimit = 200, this.init = async ()=>{
                            this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((e)=>{
                                this.getKey && null !== e && !(0, g.isUndefined)(e) ? this.map.set(this.getKey(e), e) : (0, g.isProposalStruct)(e) ? this.map.set(e.id, e) : (0, g.isSessionStruct)(e) && this.map.set(e.topic, e);
                            }), this.cached = [], this.initialized = !0);
                        }, this.set = async (e, t)=>{
                            this.isInitialized(), this.map.has(e) ? await this.update(e, t) : (this.logger.debug("Setting value"), this.logger.trace({
                                type: "method",
                                method: "set",
                                key: e,
                                value: t
                            }), this.map.set(e, t), await this.persist());
                        }, this.get = (e)=>(this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({
                                type: "method",
                                method: "get",
                                key: e
                            }), this.getData(e)), this.getAll = (e)=>(this.isInitialized(), e ? this.values.filter((t)=>Object.keys(e).every((r)=>A()(t[r], e[r]))) : this.values), this.update = async (e, t)=>{
                            this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({
                                type: "method",
                                method: "update",
                                key: e,
                                update: t
                            });
                            const r = Vr(Vr({}, this.getData(e)), t);
                            this.map.set(e, r), await this.persist();
                        }, this.delete = async (e, t)=>{
                            this.isInitialized(), this.map.has(e) && (this.logger.debug("Deleting value"), this.logger.trace({
                                type: "method",
                                method: "delete",
                                key: e,
                                reason: t
                            }), this.map.delete(e), this.addToRecentlyDeleted(e), await this.persist());
                        }, this.logger = (0, f.U5)(t, this.name), this.storagePrefix = n, this.getKey = i;
                    }
                    get context() {
                        return (0, f.oI)(this.logger);
                    }
                    get storageKey() {
                        return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
                    }
                    get length() {
                        return this.map.size;
                    }
                    get keys() {
                        return Array.from(this.map.keys());
                    }
                    get values() {
                        return Array.from(this.map.values());
                    }
                    addToRecentlyDeleted(e) {
                        this.recentlyDeleted.push(e), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);
                    }
                    async setDataStore(e) {
                        await this.core.storage.setItem(this.storageKey, e);
                    }
                    async getDataStore() {
                        return await this.core.storage.getItem(this.storageKey);
                    }
                    getData(e) {
                        const t = this.map.get(e);
                        if (!t) {
                            if (this.recentlyDeleted.includes(e)) {
                                const { message: t } = (0, g.getInternalError)("MISSING_OR_INVALID", `Record was recently deleted - ${this.name}: ${e}`);
                                throw this.logger.error(t), new Error(t);
                            }
                            const { message: t } = (0, g.getInternalError)("NO_MATCHING_KEY", `${this.name}: ${e}`);
                            throw this.logger.error(t), new Error(t);
                        }
                        return t;
                    }
                    async persist() {
                        await this.setDataStore(this.values);
                    }
                    async restore() {
                        try {
                            const e = await this.getDataStore();
                            if (typeof e > "u" || !e.length) return;
                            if (this.map.size) {
                                const { message: e } = (0, g.getInternalError)("RESTORE_WILL_OVERRIDE", this.name);
                                throw this.logger.error(e), new Error(e);
                            }
                            this.cached = e, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({
                                type: "method",
                                method: "restore",
                                value: this.values
                            });
                        } catch (e) {
                            this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e);
                        }
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            const { message: e } = (0, g.getInternalError)("NOT_INITIALIZED", this.name);
                            throw new Error(e);
                        }
                    }
                }
                class Kr {
                    constructor(e, t){
                        this.core = e, this.logger = t, this.name = ae, this.version = ce, this.events = new (i()), this.initialized = !1, this.storagePrefix = C, this.ignoredPayloadTypes = [
                            g.TYPE_1
                        ], this.registeredMethods = [], this.init = async ()=>{
                            this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = !0, this.logger.trace("Initialized"));
                        }, this.register = ({ methods: e })=>{
                            this.isInitialized(), this.registeredMethods = [
                                ...new Set([
                                    ...this.registeredMethods,
                                    ...e
                                ])
                            ];
                        }, this.create = async (e)=>{
                            this.isInitialized();
                            const t = (0, g.generateRandomBytes32)(), r = await this.core.crypto.setSymKey(t), n = (0, g.calcExpiry)(s.FIVE_MINUTES), i = {
                                protocol: F
                            }, o = {
                                topic: r,
                                expiry: n,
                                relay: i,
                                active: !1,
                                methods: e?.methods
                            }, a = (0, g.formatUri)({
                                protocol: this.core.protocol,
                                version: this.core.version,
                                topic: r,
                                symKey: t,
                                relay: i,
                                expiryTimestamp: n,
                                methods: e?.methods
                            });
                            return this.events.emit(de.create, o), this.core.expirer.set(r, n), await this.pairings.set(r, o), await this.core.relayer.subscribe(r, {
                                transportType: e?.transportType
                            }), {
                                topic: r,
                                uri: a
                            };
                        }, this.pair = async (e)=>{
                            this.isInitialized();
                            const t = this.core.eventClient.createEvent({
                                properties: {
                                    topic: e?.uri,
                                    trace: [
                                        Te.pairing_started
                                    ]
                                }
                            });
                            this.isValidPair(e, t);
                            const { topic: r, symKey: n, relay: i, expiryTimestamp: o, methods: a } = (0, g.parseUri)(e.uri);
                            let c;
                            if (t.props.properties.topic = r, t.addTrace(Te.pairing_uri_validation_success), t.addTrace(Te.pairing_uri_not_expired), this.pairings.keys.includes(r)) {
                                if (c = this.pairings.get(r), t.addTrace(Te.existing_pairing), c.active) throw t.setError(xe.active_pairing_already_exists), new Error(`Pairing already exists: ${r}. Please try again with a new connection URI.`);
                                t.addTrace(Te.pairing_not_expired);
                            }
                            const h = o || (0, g.calcExpiry)(s.FIVE_MINUTES), u = {
                                topic: r,
                                relay: i,
                                expiry: h,
                                active: !1,
                                methods: a
                            };
                            this.core.expirer.set(r, h), await this.pairings.set(r, u), t.addTrace(Te.store_new_pairing), e.activatePairing && await this.activate({
                                topic: r
                            }), this.events.emit(de.create, u), t.addTrace(Te.emit_inactive_pairing), this.core.crypto.keychain.has(r) || await this.core.crypto.setSymKey(n, r), t.addTrace(Te.subscribing_pairing_topic);
                            try {
                                await this.core.relayer.confirmOnlineStateOrThrow();
                            } catch  {
                                t.setError(xe.no_internet_connection);
                            }
                            try {
                                await this.core.relayer.subscribe(r, {
                                    relay: i
                                });
                            } catch (e) {
                                throw t.setError(xe.subscribe_pairing_topic_failure), e;
                            }
                            return t.addTrace(Te.subscribe_pairing_topic_success), u;
                        }, this.activate = async ({ topic: e })=>{
                            this.isInitialized();
                            const t = (0, g.calcExpiry)(s.THIRTY_DAYS);
                            this.core.expirer.set(e, t), await this.pairings.update(e, {
                                active: !0,
                                expiry: t
                            });
                        }, this.ping = async (e)=>{
                            this.isInitialized(), await this.isValidPing(e);
                            const { topic: t } = e;
                            if (this.pairings.keys.includes(t)) {
                                const e = await this.sendRequest(t, "wc_pairingPing", {}), { done: r, resolve: n, reject: i } = (0, g.createDelayedPromise)();
                                this.events.once((0, g.engineEvent)("pairing_ping", e), ({ error: e })=>{
                                    e ? i(e) : n();
                                }), await r();
                            }
                        }, this.updateExpiry = async ({ topic: e, expiry: t })=>{
                            this.isInitialized(), await this.pairings.update(e, {
                                expiry: t
                            });
                        }, this.updateMetadata = async ({ topic: e, metadata: t })=>{
                            this.isInitialized(), await this.pairings.update(e, {
                                peerMetadata: t
                            });
                        }, this.getPairings = ()=>(this.isInitialized(), this.pairings.values), this.disconnect = async (e)=>{
                            this.isInitialized(), await this.isValidDisconnect(e);
                            const { topic: t } = e;
                            this.pairings.keys.includes(t) && (await this.sendRequest(t, "wc_pairingDelete", (0, g.getSdkError)("USER_DISCONNECTED")), await this.deletePairing(t));
                        }, this.formatUriFromPairing = (e)=>{
                            this.isInitialized();
                            const { topic: t, relay: r, expiry: n, methods: i } = e, s = this.core.crypto.keychain.get(t);
                            return (0, g.formatUri)({
                                protocol: this.core.protocol,
                                version: this.core.version,
                                topic: t,
                                symKey: s,
                                relay: r,
                                expiryTimestamp: n,
                                methods: i
                            });
                        }, this.sendRequest = async (e, t, r)=>{
                            const n = (0, y.formatJsonRpcRequest)(t, r), i = await this.core.crypto.encode(e, n), s = ue[t].req;
                            return this.core.history.set(e, n), this.core.relayer.publish(e, i, s), n.id;
                        }, this.sendResult = async (e, t, r)=>{
                            const n = (0, y.formatJsonRpcResult)(e, r), i = await this.core.crypto.encode(t, n), s = await this.core.history.get(t, e), o = ue[s.request.method].res;
                            await this.core.relayer.publish(t, i, o), await this.core.history.resolve(n);
                        }, this.sendError = async (e, t, r)=>{
                            const n = (0, y.formatJsonRpcError)(e, r), i = await this.core.crypto.encode(t, n), s = await this.core.history.get(t, e), o = ue[s.request.method] ? ue[s.request.method].res : ue.unregistered_method.res;
                            await this.core.relayer.publish(t, i, o), await this.core.history.resolve(n);
                        }, this.deletePairing = async (e, t)=>{
                            await this.core.relayer.unsubscribe(e), await Promise.all([
                                this.pairings.delete(e, (0, g.getSdkError)("USER_DISCONNECTED")),
                                this.core.crypto.deleteSymKey(e),
                                t ? Promise.resolve() : this.core.expirer.del(e)
                            ]);
                        }, this.cleanup = async ()=>{
                            const e = this.pairings.getAll().filter((e)=>(0, g.isExpired)(e.expiry));
                            await Promise.all(e.map((e)=>this.deletePairing(e.topic)));
                        }, this.onRelayEventRequest = (e)=>{
                            const { topic: t, payload: r } = e;
                            switch(r.method){
                                case "wc_pairingPing":
                                    return this.onPairingPingRequest(t, r);
                                case "wc_pairingDelete":
                                    return this.onPairingDeleteRequest(t, r);
                                default:
                                    return this.onUnknownRpcMethodRequest(t, r);
                            }
                        }, this.onRelayEventResponse = async (e)=>{
                            const { topic: t, payload: r } = e, n = (await this.core.history.get(t, r.id)).request.method;
                            return "wc_pairingPing" === n ? this.onPairingPingResponse(t, r) : this.onUnknownRpcMethodResponse(n);
                        }, this.onPairingPingRequest = async (e, t)=>{
                            const { id: r } = t;
                            try {
                                this.isValidPing({
                                    topic: e
                                }), await this.sendResult(r, e, !0), this.events.emit(de.ping, {
                                    id: r,
                                    topic: e
                                });
                            } catch (t) {
                                await this.sendError(r, e, t), this.logger.error(t);
                            }
                        }, this.onPairingPingResponse = (e, t)=>{
                            const { id: r } = t;
                            setTimeout(()=>{
                                (0, y.isJsonRpcResult)(t) ? this.events.emit((0, g.engineEvent)("pairing_ping", r), {}) : (0, y.isJsonRpcError)(t) && this.events.emit((0, g.engineEvent)("pairing_ping", r), {
                                    error: t.error
                                });
                            }, 500);
                        }, this.onPairingDeleteRequest = async (e, t)=>{
                            const { id: r } = t;
                            try {
                                this.isValidDisconnect({
                                    topic: e
                                }), await this.deletePairing(e), this.events.emit(de.delete, {
                                    id: r,
                                    topic: e
                                });
                            } catch (t) {
                                await this.sendError(r, e, t), this.logger.error(t);
                            }
                        }, this.onUnknownRpcMethodRequest = async (e, t)=>{
                            const { id: r, method: n } = t;
                            try {
                                if (this.registeredMethods.includes(n)) return;
                                const t = (0, g.getSdkError)("WC_METHOD_UNSUPPORTED", n);
                                await this.sendError(r, e, t), this.logger.error(t);
                            } catch (t) {
                                await this.sendError(r, e, t), this.logger.error(t);
                            }
                        }, this.onUnknownRpcMethodResponse = (e)=>{
                            this.registeredMethods.includes(e) || this.logger.error((0, g.getSdkError)("WC_METHOD_UNSUPPORTED", e));
                        }, this.isValidPair = (e, t)=>{
                            var r;
                            if (!(0, g.isValidParams)(e)) {
                                const { message: r } = (0, g.getInternalError)("MISSING_OR_INVALID", `pair() params: ${e}`);
                                throw t.setError(xe.malformed_pairing_uri), new Error(r);
                            }
                            if (!(0, g.isValidUrl)(e.uri)) {
                                const { message: r } = (0, g.getInternalError)("MISSING_OR_INVALID", `pair() uri: ${e.uri}`);
                                throw t.setError(xe.malformed_pairing_uri), new Error(r);
                            }
                            const n = (0, g.parseUri)(e?.uri);
                            if (null == (r = n?.relay) || !r.protocol) {
                                const { message: e } = (0, g.getInternalError)("MISSING_OR_INVALID", "pair() uri#relay-protocol");
                                throw t.setError(xe.malformed_pairing_uri), new Error(e);
                            }
                            if (null == n || !n.symKey) {
                                const { message: e } = (0, g.getInternalError)("MISSING_OR_INVALID", "pair() uri#symKey");
                                throw t.setError(xe.malformed_pairing_uri), new Error(e);
                            }
                            if (null != n && n.expiryTimestamp && (0, s.toMiliseconds)(n?.expiryTimestamp) < Date.now()) {
                                t.setError(xe.pairing_expired);
                                const { message: e } = (0, g.getInternalError)("EXPIRED", "pair() URI has expired. Please try again with a new connection URI.");
                                throw new Error(e);
                            }
                        }, this.isValidPing = async (e)=>{
                            if (!(0, g.isValidParams)(e)) {
                                const { message: t } = (0, g.getInternalError)("MISSING_OR_INVALID", `ping() params: ${e}`);
                                throw new Error(t);
                            }
                            const { topic: t } = e;
                            await this.isValidPairingTopic(t);
                        }, this.isValidDisconnect = async (e)=>{
                            if (!(0, g.isValidParams)(e)) {
                                const { message: t } = (0, g.getInternalError)("MISSING_OR_INVALID", `disconnect() params: ${e}`);
                                throw new Error(t);
                            }
                            const { topic: t } = e;
                            await this.isValidPairingTopic(t);
                        }, this.isValidPairingTopic = async (e)=>{
                            if (!(0, g.isValidString)(e, !1)) {
                                const { message: t } = (0, g.getInternalError)("MISSING_OR_INVALID", `pairing topic should be a string: ${e}`);
                                throw new Error(t);
                            }
                            if (!this.pairings.keys.includes(e)) {
                                const { message: t } = (0, g.getInternalError)("NO_MATCHING_KEY", `pairing topic doesn't exist: ${e}`);
                                throw new Error(t);
                            }
                            if ((0, g.isExpired)(this.pairings.get(e).expiry)) {
                                await this.deletePairing(e);
                                const { message: t } = (0, g.getInternalError)("EXPIRED", `pairing topic: ${e}`);
                                throw new Error(t);
                            }
                        }, this.core = e, this.logger = (0, f.U5)(t, this.name), this.pairings = new $r(this.core, this.logger, this.name, this.storagePrefix);
                    }
                    get context() {
                        return (0, f.oI)(this.logger);
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            const { message: e } = (0, g.getInternalError)("NOT_INITIALIZED", this.name);
                            throw new Error(e);
                        }
                    }
                    registerRelayerEvents() {
                        this.core.relayer.on($.message, async (e)=>{
                            const { topic: t, message: r, transportType: n } = e;
                            if (!this.pairings.keys.includes(t) || n === Z.link_mode || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(r))) return;
                            const i = await this.core.crypto.decode(t, r);
                            try {
                                (0, y.isJsonRpcRequest)(i) ? (this.core.history.set(t, i), this.onRelayEventRequest({
                                    topic: t,
                                    payload: i
                                })) : (0, y.isJsonRpcResponse)(i) && (await this.core.history.resolve(i), await this.onRelayEventResponse({
                                    topic: t,
                                    payload: i
                                }), this.core.history.delete(t, i.id));
                            } catch (e) {
                                this.logger.error(e);
                            }
                        });
                    }
                    registerExpirerEvents() {
                        this.core.expirer.on(ge.expired, async (e)=>{
                            const { topic: t } = (0, g.parseExpirerTarget)(e.target);
                            t && this.pairings.keys.includes(t) && (await this.deletePairing(t, !0), this.events.emit(de.expire, {
                                topic: t
                            }));
                        });
                    }
                }
                class Gr extends l.lZ {
                    constructor(e, t){
                        super(e, t), this.core = e, this.logger = t, this.records = new Map, this.events = new n.EventEmitter, this.name = le, this.version = pe, this.cached = [], this.initialized = !1, this.storagePrefix = C, this.init = async ()=>{
                            this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((e)=>this.records.set(e.id, e)), this.cached = [], this.registerEventListeners(), this.initialized = !0);
                        }, this.set = (e, t, r)=>{
                            if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({
                                type: "method",
                                method: "set",
                                topic: e,
                                request: t,
                                chainId: r
                            }), this.records.has(t.id)) return;
                            const n = {
                                id: t.id,
                                topic: e,
                                request: {
                                    method: t.method,
                                    params: t.params || null
                                },
                                chainId: r,
                                expiry: (0, g.calcExpiry)(s.THIRTY_DAYS)
                            };
                            this.records.set(n.id, n), this.persist(), this.events.emit(fe.created, n);
                        }, this.resolve = async (e)=>{
                            if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({
                                type: "method",
                                method: "update",
                                response: e
                            }), !this.records.has(e.id)) return;
                            const t = await this.getRecord(e.id);
                            typeof t.response > "u" && (t.response = (0, y.isJsonRpcError)(e) ? {
                                error: e.error
                            } : {
                                result: e.result
                            }, this.records.set(t.id, t), this.persist(), this.events.emit(fe.updated, t));
                        }, this.get = async (e, t)=>(this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({
                                type: "method",
                                method: "get",
                                topic: e,
                                id: t
                            }), await this.getRecord(t)), this.delete = (e, t)=>{
                            this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({
                                type: "method",
                                method: "delete",
                                id: t
                            }), this.values.forEach((r)=>{
                                if (r.topic === e) {
                                    if (typeof t < "u" && r.id !== t) return;
                                    this.records.delete(r.id), this.events.emit(fe.deleted, r);
                                }
                            }), this.persist();
                        }, this.exists = async (e, t)=>(this.isInitialized(), !!this.records.has(t) && (await this.getRecord(t)).topic === e), this.on = (e, t)=>{
                            this.events.on(e, t);
                        }, this.once = (e, t)=>{
                            this.events.once(e, t);
                        }, this.off = (e, t)=>{
                            this.events.off(e, t);
                        }, this.removeListener = (e, t)=>{
                            this.events.removeListener(e, t);
                        }, this.logger = (0, f.U5)(t, this.name);
                    }
                    get context() {
                        return (0, f.oI)(this.logger);
                    }
                    get storageKey() {
                        return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
                    }
                    get size() {
                        return this.records.size;
                    }
                    get keys() {
                        return Array.from(this.records.keys());
                    }
                    get values() {
                        return Array.from(this.records.values());
                    }
                    get pending() {
                        const e = [];
                        return this.values.forEach((t)=>{
                            if (typeof t.response < "u") return;
                            const r = {
                                topic: t.topic,
                                request: (0, y.formatJsonRpcRequest)(t.request.method, t.request.params, t.id),
                                chainId: t.chainId
                            };
                            return e.push(r);
                        }), e;
                    }
                    async setJsonRpcRecords(e) {
                        await this.core.storage.setItem(this.storageKey, e);
                    }
                    async getJsonRpcRecords() {
                        return await this.core.storage.getItem(this.storageKey);
                    }
                    getRecord(e) {
                        this.isInitialized();
                        const t = this.records.get(e);
                        if (!t) {
                            const { message: t } = (0, g.getInternalError)("NO_MATCHING_KEY", `${this.name}: ${e}`);
                            throw new Error(t);
                        }
                        return t;
                    }
                    async persist() {
                        await this.setJsonRpcRecords(this.values), this.events.emit(fe.sync);
                    }
                    async restore() {
                        try {
                            const e = await this.getJsonRpcRecords();
                            if (typeof e > "u" || !e.length) return;
                            if (this.records.size) {
                                const { message: e } = (0, g.getInternalError)("RESTORE_WILL_OVERRIDE", this.name);
                                throw this.logger.error(e), new Error(e);
                            }
                            this.cached = e, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({
                                type: "method",
                                method: "restore",
                                records: this.values
                            });
                        } catch (e) {
                            this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e);
                        }
                    }
                    registerEventListeners() {
                        this.events.on(fe.created, (e)=>{
                            const t = fe.created;
                            this.logger.info(`Emitting ${t}`), this.logger.debug({
                                type: "event",
                                event: t,
                                record: e
                            });
                        }), this.events.on(fe.updated, (e)=>{
                            const t = fe.updated;
                            this.logger.info(`Emitting ${t}`), this.logger.debug({
                                type: "event",
                                event: t,
                                record: e
                            });
                        }), this.events.on(fe.deleted, (e)=>{
                            const t = fe.deleted;
                            this.logger.info(`Emitting ${t}`), this.logger.debug({
                                type: "event",
                                event: t,
                                record: e
                            });
                        }), this.core.heartbeat.on(h, ()=>{
                            this.cleanup();
                        });
                    }
                    cleanup() {
                        try {
                            this.isInitialized();
                            let e = !1;
                            this.records.forEach((t)=>{
                                (0, s.toMiliseconds)(t.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${t.id}`), this.records.delete(t.id), this.events.emit(fe.deleted, t, !1), e = !0);
                            }), e && this.persist();
                        } catch (e) {
                            this.logger.warn(e);
                        }
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            const { message: e } = (0, g.getInternalError)("NOT_INITIALIZED", this.name);
                            throw new Error(e);
                        }
                    }
                }
                class Wr extends l.Vx {
                    constructor(e, t){
                        super(e, t), this.core = e, this.logger = t, this.expirations = new Map, this.events = new n.EventEmitter, this.name = be, this.version = me, this.cached = [], this.initialized = !1, this.storagePrefix = C, this.init = async ()=>{
                            this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((e)=>this.expirations.set(e.target, e)), this.cached = [], this.registerEventListeners(), this.initialized = !0);
                        }, this.has = (e)=>{
                            try {
                                const t = this.formatTarget(e);
                                return typeof this.getExpiration(t) < "u";
                            } catch  {
                                return !1;
                            }
                        }, this.set = (e, t)=>{
                            this.isInitialized();
                            const r = this.formatTarget(e), n = {
                                target: r,
                                expiry: t
                            };
                            this.expirations.set(r, n), this.checkExpiry(r, n), this.events.emit(ge.created, {
                                target: r,
                                expiration: n
                            });
                        }, this.get = (e)=>{
                            this.isInitialized();
                            const t = this.formatTarget(e);
                            return this.getExpiration(t);
                        }, this.del = (e)=>{
                            if (this.isInitialized(), this.has(e)) {
                                const t = this.formatTarget(e), r = this.getExpiration(t);
                                this.expirations.delete(t), this.events.emit(ge.deleted, {
                                    target: t,
                                    expiration: r
                                });
                            }
                        }, this.on = (e, t)=>{
                            this.events.on(e, t);
                        }, this.once = (e, t)=>{
                            this.events.once(e, t);
                        }, this.off = (e, t)=>{
                            this.events.off(e, t);
                        }, this.removeListener = (e, t)=>{
                            this.events.removeListener(e, t);
                        }, this.logger = (0, f.U5)(t, this.name);
                    }
                    get context() {
                        return (0, f.oI)(this.logger);
                    }
                    get storageKey() {
                        return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
                    }
                    get length() {
                        return this.expirations.size;
                    }
                    get keys() {
                        return Array.from(this.expirations.keys());
                    }
                    get values() {
                        return Array.from(this.expirations.values());
                    }
                    formatTarget(e) {
                        if ("string" == typeof e) return (0, g.formatTopicTarget)(e);
                        if ("number" == typeof e) return (0, g.formatIdTarget)(e);
                        const { message: t } = (0, g.getInternalError)("UNKNOWN_TYPE", "Target type: " + typeof e);
                        throw new Error(t);
                    }
                    async setExpirations(e) {
                        await this.core.storage.setItem(this.storageKey, e);
                    }
                    async getExpirations() {
                        return await this.core.storage.getItem(this.storageKey);
                    }
                    async persist() {
                        await this.setExpirations(this.values), this.events.emit(ge.sync);
                    }
                    async restore() {
                        try {
                            const e = await this.getExpirations();
                            if (typeof e > "u" || !e.length) return;
                            if (this.expirations.size) {
                                const { message: e } = (0, g.getInternalError)("RESTORE_WILL_OVERRIDE", this.name);
                                throw this.logger.error(e), new Error(e);
                            }
                            this.cached = e, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({
                                type: "method",
                                method: "restore",
                                expirations: this.values
                            });
                        } catch (e) {
                            this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e);
                        }
                    }
                    getExpiration(e) {
                        const t = this.expirations.get(e);
                        if (!t) {
                            const { message: t } = (0, g.getInternalError)("NO_MATCHING_KEY", `${this.name}: ${e}`);
                            throw this.logger.warn(t), new Error(t);
                        }
                        return t;
                    }
                    checkExpiry(e, t) {
                        const { expiry: r } = t;
                        (0, s.toMiliseconds)(r) - Date.now() <= 0 && this.expire(e, t);
                    }
                    expire(e, t) {
                        this.expirations.delete(e), this.events.emit(ge.expired, {
                            target: e,
                            expiration: t
                        });
                    }
                    checkExpirations() {
                        this.core.relayer.connected && this.expirations.forEach((e, t)=>this.checkExpiry(t, e));
                    }
                    registerEventListeners() {
                        this.core.heartbeat.on(h, ()=>this.checkExpirations()), this.events.on(ge.created, (e)=>{
                            const t = ge.created;
                            this.logger.info(`Emitting ${t}`), this.logger.debug({
                                type: "event",
                                event: t,
                                data: e
                            }), this.persist();
                        }), this.events.on(ge.expired, (e)=>{
                            const t = ge.expired;
                            this.logger.info(`Emitting ${t}`), this.logger.debug({
                                type: "event",
                                event: t,
                                data: e
                            }), this.persist();
                        }), this.events.on(ge.deleted, (e)=>{
                            const t = ge.deleted;
                            this.logger.info(`Emitting ${t}`), this.logger.debug({
                                type: "event",
                                event: t,
                                data: e
                            }), this.persist();
                        });
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            const { message: e } = (0, g.getInternalError)("NOT_INITIALIZED", this.name);
                            throw new Error(e);
                        }
                    }
                }
                class Jr extends l.zl {
                    constructor(e, t, r){
                        super(e, t, r), this.core = e, this.logger = t, this.store = r, this.name = ve, this.verifyUrlV3 = Ee, this.storagePrefix = C, this.version = T, this.init = async ()=>{
                            var e;
                            this.isDevEnv || (this.publicKey = await this.store.getItem(this.storeKey), this.publicKey && (0, s.toMiliseconds)(null == (e = this.publicKey) ? void 0 : e.expiresAt) < Date.now() && (this.logger.debug("verify v2 public key expired"), await this.removePublicKey()));
                        }, this.register = async (e)=>{
                            if (!(0, g.isBrowser)() || this.isDevEnv) return;
                            const t = window.location.origin, { id: r, decryptedId: n } = e, i = `${this.verifyUrlV3}/attestation?projectId=${this.core.projectId}&origin=${t}&id=${r}&decryptedId=${n}`;
                            try {
                                const e = (0, M.getDocument)(), t = this.startAbortTimer(5 * s.ONE_SECOND), n = await new Promise((n, s)=>{
                                    const o = ()=>{
                                        window.removeEventListener("message", c), e.body.removeChild(a), s("attestation aborted");
                                    };
                                    this.abortController.signal.addEventListener("abort", o);
                                    const a = e.createElement("iframe");
                                    a.src = i, a.style.display = "none", a.addEventListener("error", o, {
                                        signal: this.abortController.signal
                                    });
                                    const c = (i)=>{
                                        if (i.data && "string" == typeof i.data) try {
                                            const s = JSON.parse(i.data);
                                            if ("verify_attestation" === s.type) {
                                                if ((0, b.decodeJWT)(s.attestation).payload.id !== r) return;
                                                clearInterval(t), e.body.removeChild(a), this.abortController.signal.removeEventListener("abort", o), window.removeEventListener("message", c), n(null === s.attestation ? "" : s.attestation);
                                            }
                                        } catch (e) {
                                            this.logger.warn(e);
                                        }
                                    };
                                    e.body.appendChild(a), window.addEventListener("message", c, {
                                        signal: this.abortController.signal
                                    });
                                });
                                return this.logger.debug("jwt attestation", n), n;
                            } catch (e) {
                                this.logger.warn(e);
                            }
                            return "";
                        }, this.resolve = async (e)=>{
                            if (this.isDevEnv) return "";
                            const { attestationId: t, hash: r, encryptedId: n } = e;
                            if ("" === t) return void this.logger.debug("resolve: attestationId is empty, skipping");
                            if (t) {
                                if ((0, b.decodeJWT)(t).payload.id !== n) return;
                                const e = await this.isValidJwtAttestation(t);
                                if (e) return e.isVerified ? e : void this.logger.warn("resolve: jwt attestation: origin url not verified");
                            }
                            if (!r) return;
                            const i = this.getVerifyUrl(e?.verifyUrl);
                            return this.fetchAttestation(r, i);
                        }, this.fetchAttestation = async (e, t)=>{
                            this.logger.debug(`resolving attestation: ${e} from url: ${t}`);
                            const r = this.startAbortTimer(5 * s.ONE_SECOND), n = await fetch(`${t}/attestation/${e}?v2Supported=true`, {
                                signal: this.abortController.signal
                            });
                            return clearTimeout(r), 200 === n.status ? await n.json() : void 0;
                        }, this.getVerifyUrl = (e)=>{
                            let t = e || _e;
                            return Se.includes(t) || (this.logger.info(`verify url: ${t}, not included in trusted list, assigning default: ${_e}`), t = _e), t;
                        }, this.fetchPublicKey = async ()=>{
                            try {
                                this.logger.debug(`fetching public key from: ${this.verifyUrlV3}`);
                                const e = this.startAbortTimer(s.FIVE_SECONDS), t = await fetch(`${this.verifyUrlV3}/public-key`, {
                                    signal: this.abortController.signal
                                });
                                return clearTimeout(e), await t.json();
                            } catch (e) {
                                this.logger.warn(e);
                            }
                        }, this.persistPublicKey = async (e)=>{
                            this.logger.debug("persisting public key to local storage", e), await this.store.setItem(this.storeKey, e), this.publicKey = e;
                        }, this.removePublicKey = async ()=>{
                            this.logger.debug("removing verify v2 public key from storage"), await this.store.removeItem(this.storeKey), this.publicKey = void 0;
                        }, this.isValidJwtAttestation = async (e)=>{
                            const t = await this.getPublicKey();
                            try {
                                if (t) return this.validateAttestation(e, t);
                            } catch (e) {
                                this.logger.error(e), this.logger.warn("error validating attestation");
                            }
                            const r = await this.fetchAndPersistPublicKey();
                            try {
                                if (r) return this.validateAttestation(e, r);
                            } catch (e) {
                                this.logger.error(e), this.logger.warn("error validating attestation");
                            }
                        }, this.getPublicKey = async ()=>this.publicKey ? this.publicKey : await this.fetchAndPersistPublicKey(), this.fetchAndPersistPublicKey = async ()=>{
                            if (this.fetchPromise) return await this.fetchPromise, this.publicKey;
                            this.fetchPromise = new Promise(async (e)=>{
                                const t = await this.fetchPublicKey();
                                t && (await this.persistPublicKey(t), e(t));
                            });
                            const e = await this.fetchPromise;
                            return this.fetchPromise = void 0, e;
                        }, this.validateAttestation = (e, t)=>{
                            const r = (0, g.verifyP256Jwt)(e, t.publicKey), n = {
                                hasExpired: (0, s.toMiliseconds)(r.exp) < Date.now(),
                                payload: r
                            };
                            if (n.hasExpired) throw this.logger.warn("resolve: jwt attestation expired"), new Error("JWT attestation expired");
                            return {
                                origin: n.payload.origin,
                                isScam: n.payload.isScam,
                                isVerified: n.payload.isVerified
                            };
                        }, this.logger = (0, f.U5)(t, this.name), this.abortController = new AbortController, this.isDevEnv = (0, g.isTestRun)(), this.init();
                    }
                    get storeKey() {
                        return this.storagePrefix + this.version + this.core.customStoragePrefix + "//verify:public:key";
                    }
                    get context() {
                        return (0, f.oI)(this.logger);
                    }
                    startAbortTimer(e) {
                        return this.abortController = new AbortController, setTimeout(()=>this.abortController.abort(), (0, s.toMiliseconds)(e));
                    }
                }
                class Yr extends l.GF {
                    constructor(e, t){
                        super(e, t), this.projectId = e, this.logger = t, this.context = Ae, this.registerDeviceToken = async (e)=>{
                            const { clientId: t, token: r, notificationType: n, enableEncrypted: i = !1 } = e, s = `${Me}/${this.projectId}/clients`;
                            await fetch(s, {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json"
                                },
                                body: JSON.stringify({
                                    client_id: t,
                                    type: n,
                                    token: r,
                                    always_raw: i
                                })
                            });
                        }, this.logger = (0, f.U5)(t, this.context);
                    }
                }
                var Xr = Object.defineProperty, Zr = Object.getOwnPropertySymbols, Qr = Object.prototype.hasOwnProperty, en = Object.prototype.propertyIsEnumerable, tn = (e, t, r)=>t in e ? Xr(e, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }) : e[t] = r, rn = (e, t)=>{
                    for(var r in t || (t = {}))Qr.call(t, r) && tn(e, r, t[r]);
                    if (Zr) for (var r of Zr(t))en.call(t, r) && tn(e, r, t[r]);
                    return e;
                };
                class nn extends l.$Q {
                    constructor(e, t, r = !0){
                        super(e, t, r), this.core = e, this.logger = t, this.context = Ne, this.storagePrefix = C, this.storageVersion = Oe, this.events = new Map, this.shouldPersist = !1, this.init = async ()=>{
                            if (!(0, g.isTestRun)()) try {
                                const e = {
                                    eventId: (0, g.uuidv4)(),
                                    timestamp: Date.now(),
                                    domain: this.getAppDomain(),
                                    props: {
                                        event: "INIT",
                                        type: "",
                                        properties: {
                                            client_id: await this.core.crypto.getClientId(),
                                            user_agent: (0, g.formatUA)(this.core.relayer.protocol, this.core.relayer.version, Y)
                                        }
                                    }
                                };
                                await this.sendEvent([
                                    e
                                ]);
                            } catch (e) {
                                this.logger.warn(e);
                            }
                        }, this.createEvent = (e)=>{
                            const { event: t = "ERROR", type: r = "", properties: { topic: n, trace: i } } = e, s = (0, g.uuidv4)(), o = this.core.projectId || "", a = Date.now(), c = rn({
                                eventId: s,
                                timestamp: a,
                                props: {
                                    event: t,
                                    type: r,
                                    properties: {
                                        topic: n,
                                        trace: i
                                    }
                                },
                                bundleId: o,
                                domain: this.getAppDomain()
                            }, this.setMethods(s));
                            return this.telemetryEnabled && (this.events.set(s, c), this.shouldPersist = !0), c;
                        }, this.getEvent = (e)=>{
                            const { eventId: t, topic: r } = e;
                            if (t) return this.events.get(t);
                            const n = Array.from(this.events.values()).find((e)=>e.props.properties.topic === r);
                            return n ? rn(rn({}, n), this.setMethods(n.eventId)) : void 0;
                        }, this.deleteEvent = (e)=>{
                            const { eventId: t } = e;
                            this.events.delete(t), this.shouldPersist = !0;
                        }, this.setEventListeners = ()=>{
                            this.core.heartbeat.on(h, async ()=>{
                                this.shouldPersist && await this.persist(), this.events.forEach((e)=>{
                                    (0, s.fromMiliseconds)(Date.now()) - (0, s.fromMiliseconds)(e.timestamp) > Ue && (this.events.delete(e.eventId), this.shouldPersist = !0);
                                });
                            });
                        }, this.setMethods = (e)=>({
                                addTrace: (t)=>this.addTrace(e, t),
                                setError: (t)=>this.setError(e, t)
                            }), this.addTrace = (e, t)=>{
                            const r = this.events.get(e);
                            r && (r.props.properties.trace.push(t), this.events.set(e, r), this.shouldPersist = !0);
                        }, this.setError = (e, t)=>{
                            const r = this.events.get(e);
                            r && (r.props.type = t, r.timestamp = Date.now(), this.events.set(e, r), this.shouldPersist = !0);
                        }, this.persist = async ()=>{
                            await this.core.storage.setItem(this.storageKey, Array.from(this.events.values())), this.shouldPersist = !1;
                        }, this.restore = async ()=>{
                            try {
                                const e = await this.core.storage.getItem(this.storageKey) || [];
                                if (!e.length) return;
                                e.forEach((e)=>{
                                    this.events.set(e.eventId, rn(rn({}, e), this.setMethods(e.eventId)));
                                });
                            } catch (e) {
                                this.logger.warn(e);
                            }
                        }, this.submit = async ()=>{
                            if (!this.telemetryEnabled || 0 === this.events.size) return;
                            const e = [];
                            for (const [t, r] of this.events)r.props.type && e.push(r);
                            if (0 !== e.length) try {
                                if ((await this.sendEvent(e)).ok) for (const t of e)this.events.delete(t.eventId), this.shouldPersist = !0;
                            } catch (e) {
                                this.logger.warn(e);
                            }
                        }, this.sendEvent = async (e)=>{
                            const t = this.getAppDomain() ? "" : "&sp=desktop";
                            return await fetch(`${Be}?projectId=${this.core.projectId}&st=events_sdk&sv=js-${Y}${t}`, {
                                method: "POST",
                                body: JSON.stringify(e)
                            });
                        }, this.getAppDomain = ()=>(0, g.getAppMetadata)().url, this.logger = (0, f.U5)(t, this.context), this.telemetryEnabled = r, r ? this.restore().then(async ()=>{
                            await this.submit(), this.setEventListeners();
                        }) : this.persist();
                    }
                    get storageKey() {
                        return this.storagePrefix + this.storageVersion + this.core.customStoragePrefix + "//" + this.context;
                    }
                }
                var sn = Object.defineProperty, on = Object.getOwnPropertySymbols, an = Object.prototype.hasOwnProperty, cn = Object.prototype.propertyIsEnumerable, hn = (e, t, r)=>t in e ? sn(e, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }) : e[t] = r, un = (e, t)=>{
                    for(var r in t || (t = {}))an.call(t, r) && hn(e, r, t[r]);
                    if (on) for (var r of on(t))cn.call(t, r) && hn(e, r, t[r]);
                    return e;
                };
                class dn extends l.ZP {
                    constructor(e){
                        var t;
                        super(e), this.protocol = I, this.version = T, this.name = x, this.events = new n.EventEmitter, this.initialized = !1, this.on = (e, t)=>this.events.on(e, t), this.once = (e, t)=>this.events.once(e, t), this.off = (e, t)=>this.events.off(e, t), this.removeListener = (e, t)=>this.events.removeListener(e, t), this.dispatchEnvelope = ({ topic: e, message: t, sessionExists: r })=>{
                            if (!e || !t) return;
                            const n = {
                                topic: e,
                                message: t,
                                publishedAt: Date.now(),
                                transportType: Z.link_mode
                            };
                            this.relayer.onLinkMessageEvent(n, {
                                sessionExists: r
                            });
                        }, this.projectId = e?.projectId, this.relayUrl = e?.relayUrl || z, this.customStoragePrefix = null != e && e.customStoragePrefix ? `:${e.customStoragePrefix}` : "";
                        const r = (0, f.iP)({
                            level: "string" == typeof e?.logger && e.logger ? e.logger : R.logger,
                            name: x
                        }), { logger: i, chunkLoggerController: s } = (0, f.D5)({
                            opts: r,
                            maxSizeInBytes: e?.maxLogBlobSizeInBytes,
                            loggerOverride: e?.logger
                        });
                        this.logChunkController = s, null != (t = this.logChunkController) && t.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = async ()=>{
                            var e, t;
                            null != (e = this.logChunkController) && e.downloadLogsBlobInBrowser && (null == (t = this.logChunkController) || t.downloadLogsBlobInBrowser({
                                clientId: await this.crypto.getClientId()
                            }));
                        }), this.logger = (0, f.U5)(i, this.name), this.heartbeat = new u, this.crypto = new hr(this, this.logger, e?.keychain), this.history = new Gr(this, this.logger), this.expirer = new Wr(this, this.logger), this.storage = null != e && e.storage ? e.storage : new d.default(un(un({}, k), e?.storageOptions)), this.relayer = new jr({
                            core: this,
                            logger: this.logger,
                            relayUrl: this.relayUrl,
                            projectId: this.projectId
                        }), this.pairing = new Kr(this, this.logger), this.verify = new Jr(this, this.logger, this.storage), this.echoClient = new Yr(this.projectId || "", this.logger), this.linkModeSupportedApps = [], this.eventClient = new nn(this, this.logger, e?.telemetryEnabled);
                    }
                    static async init(e) {
                        const t = new dn(e);
                        await t.initialize();
                        const r = await t.crypto.getClientId();
                        return await t.storage.setItem(ee, r), t;
                    }
                    get context() {
                        return (0, f.oI)(this.logger);
                    }
                    async start() {
                        this.initialized || await this.initialize();
                    }
                    async getLogsBlob() {
                        var e;
                        return null == (e = this.logChunkController) ? void 0 : e.logsToBlob({
                            clientId: await this.crypto.getClientId()
                        });
                    }
                    async addLinkModeSupportedApp(e) {
                        this.linkModeSupportedApps.includes(e) || (this.linkModeSupportedApps.push(e), await this.storage.setItem(te, this.linkModeSupportedApps));
                    }
                    async initialize() {
                        this.logger.trace("Initialized");
                        try {
                            await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.eventClient.init(), this.linkModeSupportedApps = await this.storage.getItem(te) || [], this.initialized = !0, this.logger.info("Core Initialization Success");
                        } catch (e) {
                            throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e), this.logger.error(e.message), e;
                        }
                    }
                }
                const fn = dn;
            },
            9441: (e, t, r)=>{
                "use strict";
                function n() {
                    return (null === r.g || void 0 === r.g ? void 0 : r.g.crypto) || (null === r.g || void 0 === r.g ? void 0 : r.g.msCrypto) || {};
                }
                function i() {
                    const e = n();
                    return e.subtle || e.webkitSubtle;
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.isBrowserCryptoAvailable = t.getSubtleCrypto = t.getBrowerCrypto = void 0, t.getBrowerCrypto = n, t.getSubtleCrypto = i, t.isBrowserCryptoAvailable = function() {
                    return !!n() && !!i();
                };
            },
            7149: (e, t)=>{
                "use strict";
                function r() {
                    return "undefined" == typeof document && "undefined" != typeof navigator && "ReactNative" === navigator.product;
                }
                function n() {
                    return "undefined" != typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] && void 0 !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].versions && void 0 !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].versions.node;
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.isBrowser = t.isNode = t.isReactNative = void 0, t.isReactNative = r, t.isNode = n, t.isBrowser = function() {
                    return !r() && !n();
                };
            },
            7502: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                const n = r(5927);
                n.__exportStar(r(9441), t), n.__exportStar(r(7149), t);
            },
            9920: (e, t, r)=>{
                "use strict";
                r.d(t, {
                    H: ()=>n
                });
                class n {
                }
            },
            6391: (e, t, r)=>{
                "use strict";
                r.d(t, {
                    Uf: ()=>u,
                    XW: ()=>d,
                    fO: ()=>c,
                    jf: ()=>h,
                    zR: ()=>a
                });
                const n = "PARSE_ERROR", i = "INVALID_REQUEST", s = "METHOD_NOT_FOUND", o = "INVALID_PARAMS", a = "INTERNAL_ERROR", c = "SERVER_ERROR", h = [
                    -32700,
                    -32600,
                    -32601,
                    -32602,
                    -32603
                ], u = {
                    [n]: {
                        code: -32700,
                        message: "Parse error"
                    },
                    [i]: {
                        code: -32600,
                        message: "Invalid Request"
                    },
                    [s]: {
                        code: -32601,
                        message: "Method not found"
                    },
                    [o]: {
                        code: -32602,
                        message: "Invalid params"
                    },
                    [a]: {
                        code: -32603,
                        message: "Internal error"
                    },
                    [c]: {
                        code: -32e3,
                        message: "Server error"
                    }
                }, d = c;
            },
            661: (e, t, r)=>{
                "use strict";
                var n = r(7502);
                r.o(n, "IJsonRpcProvider") && r.d(t, {
                    IJsonRpcProvider: function() {
                        return n.IJsonRpcProvider;
                    }
                }), r.o(n, "formatJsonRpcError") && r.d(t, {
                    formatJsonRpcError: function() {
                        return n.formatJsonRpcError;
                    }
                }), r.o(n, "formatJsonRpcRequest") && r.d(t, {
                    formatJsonRpcRequest: function() {
                        return n.formatJsonRpcRequest;
                    }
                }), r.o(n, "formatJsonRpcResult") && r.d(t, {
                    formatJsonRpcResult: function() {
                        return n.formatJsonRpcResult;
                    }
                }), r.o(n, "getBigIntRpcId") && r.d(t, {
                    getBigIntRpcId: function() {
                        return n.getBigIntRpcId;
                    }
                }), r.o(n, "isJsonRpcError") && r.d(t, {
                    isJsonRpcError: function() {
                        return n.isJsonRpcError;
                    }
                }), r.o(n, "isJsonRpcRequest") && r.d(t, {
                    isJsonRpcRequest: function() {
                        return n.isJsonRpcRequest;
                    }
                }), r.o(n, "isJsonRpcResponse") && r.d(t, {
                    isJsonRpcResponse: function() {
                        return n.isJsonRpcResponse;
                    }
                }), r.o(n, "isJsonRpcResult") && r.d(t, {
                    isJsonRpcResult: function() {
                        return n.isJsonRpcResult;
                    }
                }), r.o(n, "isLocalhostUrl") && r.d(t, {
                    isLocalhostUrl: function() {
                        return n.isLocalhostUrl;
                    }
                }), r.o(n, "isReactNative") && r.d(t, {
                    isReactNative: function() {
                        return n.isReactNative;
                    }
                }), r.o(n, "isWsUrl") && r.d(t, {
                    isWsUrl: function() {
                        return n.isWsUrl;
                    }
                }), r.o(n, "payloadId") && r.d(t, {
                    payloadId: function() {
                        return n.payloadId;
                    }
                });
            },
            6948: (e, t, r)=>{
                "use strict";
                r.d(t, {
                    eF: ()=>a,
                    mE: ()=>i,
                    rI: ()=>o,
                    vG: ()=>s
                });
                var n = r(6391);
                function i(e) {
                    return n.jf.includes(e);
                }
                function s(e) {
                    return Object.keys(n.Uf).includes(e) ? n.Uf[e] : n.Uf[n.XW];
                }
                function o(e) {
                    return Object.values(n.Uf).find((t)=>t.code === e) || n.Uf[n.XW];
                }
                function a(e, t, r) {
                    return e.message.includes("getaddrinfo ENOTFOUND") || e.message.includes("connect ECONNREFUSED") ? new Error(`Unavailable ${r} RPC url at ${t}`) : e;
                }
            },
            3863: (e, t, r)=>{
                "use strict";
                r.d(t, {
                    ER: ()=>s,
                    Im: ()=>c,
                    dZ: ()=>h,
                    eX: ()=>o,
                    e_: ()=>a
                });
                var n = r(6948), i = r(6391);
                function s(e = 3) {
                    return Date.now() * Math.pow(10, e) + Math.floor(Math.random() * Math.pow(10, e));
                }
                function o(e = 6) {
                    return BigInt(s(e));
                }
                function a(e, t, r) {
                    return {
                        id: r || s(),
                        jsonrpc: "2.0",
                        method: e,
                        params: t
                    };
                }
                function c(e, t) {
                    return {
                        id: e,
                        jsonrpc: "2.0",
                        result: t
                    };
                }
                function h(e, t, r) {
                    return {
                        id: e,
                        jsonrpc: "2.0",
                        error: u(t, r)
                    };
                }
                function u(e, t) {
                    return void 0 === e ? (0, n.vG)(i.zR) : ("string" == typeof e && (e = Object.assign(Object.assign({}, (0, n.vG)(i.fO)), {
                        message: e
                    })), void 0 !== t && (e.data = t), (0, n.mE)(e.code) && (e = (0, n.rI)(e.code)), e);
                }
            },
            3526: (e, t, r)=>{
                "use strict";
                r.d(t, {
                    IJsonRpcProvider: ()=>o.kF,
                    formatJsonRpcError: ()=>s.dZ,
                    formatJsonRpcRequest: ()=>s.e_,
                    formatJsonRpcResult: ()=>s.Im,
                    getBigIntRpcId: ()=>s.eX,
                    isJsonRpcError: ()=>c.U$,
                    isJsonRpcRequest: ()=>c.p3,
                    isJsonRpcResponse: ()=>c.tq,
                    isJsonRpcResult: ()=>c.xT,
                    isLocalhostUrl: ()=>a.z,
                    isWsUrl: ()=>a.A1,
                    parseConnectionError: ()=>n.eF,
                    payloadId: ()=>s.ER
                }), r(6391);
                var n = r(6948), i = r(661);
                r.o(i, "IJsonRpcProvider") && r.d(t, {
                    IJsonRpcProvider: function() {
                        return i.IJsonRpcProvider;
                    }
                }), r.o(i, "formatJsonRpcError") && r.d(t, {
                    formatJsonRpcError: function() {
                        return i.formatJsonRpcError;
                    }
                }), r.o(i, "formatJsonRpcRequest") && r.d(t, {
                    formatJsonRpcRequest: function() {
                        return i.formatJsonRpcRequest;
                    }
                }), r.o(i, "formatJsonRpcResult") && r.d(t, {
                    formatJsonRpcResult: function() {
                        return i.formatJsonRpcResult;
                    }
                }), r.o(i, "getBigIntRpcId") && r.d(t, {
                    getBigIntRpcId: function() {
                        return i.getBigIntRpcId;
                    }
                }), r.o(i, "isJsonRpcError") && r.d(t, {
                    isJsonRpcError: function() {
                        return i.isJsonRpcError;
                    }
                }), r.o(i, "isJsonRpcRequest") && r.d(t, {
                    isJsonRpcRequest: function() {
                        return i.isJsonRpcRequest;
                    }
                }), r.o(i, "isJsonRpcResponse") && r.d(t, {
                    isJsonRpcResponse: function() {
                        return i.isJsonRpcResponse;
                    }
                }), r.o(i, "isJsonRpcResult") && r.d(t, {
                    isJsonRpcResult: function() {
                        return i.isJsonRpcResult;
                    }
                }), r.o(i, "isLocalhostUrl") && r.d(t, {
                    isLocalhostUrl: function() {
                        return i.isLocalhostUrl;
                    }
                }), r.o(i, "isReactNative") && r.d(t, {
                    isReactNative: function() {
                        return i.isReactNative;
                    }
                }), r.o(i, "isWsUrl") && r.d(t, {
                    isWsUrl: function() {
                        return i.isWsUrl;
                    }
                }), r.o(i, "payloadId") && r.d(t, {
                    payloadId: function() {
                        return i.payloadId;
                    }
                });
                var s = r(3863), o = r(4110), a = r(7919), c = r(983);
            },
            4110: (e, t, r)=>{
                "use strict";
                r.d(t, {
                    kF: ()=>s
                });
                class n {
                }
                class i extends n {
                    constructor(){
                        super();
                    }
                }
                class s extends i {
                    constructor(e){
                        super();
                    }
                }
            },
            7919: (e, t, r)=>{
                "use strict";
                r.d(t, {
                    A1: ()=>i,
                    z: ()=>s
                });
                const n = "^wss?:";
                function i(e) {
                    return function(e, t) {
                        const r = function(e) {
                            const t = e.match(new RegExp(/^\w+:/, "gi"));
                            if (t && t.length) return t[0];
                        }(e);
                        return void 0 !== r && new RegExp(t).test(r);
                    }(e, n);
                }
                function s(e) {
                    return new RegExp("wss?://localhost(:d{2,5})?").test(e);
                }
            },
            983: (e, t, r)=>{
                "use strict";
                function n(e) {
                    return "object" == typeof e && "id" in e && "jsonrpc" in e && "2.0" === e.jsonrpc;
                }
                function i(e) {
                    return n(e) && "method" in e;
                }
                function s(e) {
                    return n(e) && (o(e) || a(e));
                }
                function o(e) {
                    return "result" in e;
                }
                function a(e) {
                    return "error" in e;
                }
                r.d(t, {
                    U$: ()=>a,
                    p3: ()=>i,
                    tq: ()=>s,
                    xT: ()=>o
                });
            },
            6446: (e, t, r)=>{
                "use strict";
                r.r(t), r.d(t, {
                    KeyValueStorage: ()=>R,
                    default: ()=>R
                });
                const n = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/, i = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/, s = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
                function o(e, t) {
                    if (!("__proto__" === e || "constructor" === e && t && "object" == typeof t && "prototype" in t)) return t;
                    !function(e) {
                        console.warn(`[destr] Dropping "${e}" key to prevent prototype pollution.`);
                    }(e);
                }
                function a(e, t = {}) {
                    if ("string" != typeof e) return e;
                    const r = e.trim();
                    if ('"' === e[0] && '"' === e.at(-1) && !e.includes("\\")) return r.slice(1, -1);
                    if (r.length <= 9) {
                        const e = r.toLowerCase();
                        if ("true" === e) return !0;
                        if ("false" === e) return !1;
                        if ("undefined" === e) return;
                        if ("null" === e) return null;
                        if ("nan" === e) return Number.NaN;
                        if ("infinity" === e) return Number.POSITIVE_INFINITY;
                        if ("-infinity" === e) return Number.NEGATIVE_INFINITY;
                    }
                    if (!s.test(e)) {
                        if (t.strict) throw new SyntaxError("[destr] Invalid JSON");
                        return e;
                    }
                    try {
                        if (n.test(e) || i.test(e)) {
                            if (t.strict) throw new Error("[destr] Possible prototype pollution");
                            return JSON.parse(e, o);
                        }
                        return JSON.parse(e);
                    } catch (r) {
                        if (t.strict) throw r;
                        return e;
                    }
                }
                function c(e, ...t) {
                    try {
                        return (r = e(...t)) && "function" == typeof r.then ? r : Promise.resolve(r);
                    } catch (e) {
                        return Promise.reject(e);
                    }
                    var r;
                }
                function h(e) {
                    if (function(e) {
                        const t = typeof e;
                        return null === e || "object" !== t && "function" !== t;
                    }(e)) return String(e);
                    if (function(e) {
                        const t = Object.getPrototypeOf(e);
                        return !t || t.isPrototypeOf(Object);
                    }(e) || Array.isArray(e)) return JSON.stringify(e);
                    if ("function" == typeof e.toJSON) return h(e.toJSON());
                    throw new Error("[unstorage] Cannot stringify value!");
                }
                function u() {
                    if (void 0 === typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"]) throw new TypeError("[unstorage] Buffer is not supported!");
                }
                const d = "base64:";
                function f(e) {
                    return e ? e.split("?")[0].replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "") : "";
                }
                function l(...e) {
                    return f(e.join(":"));
                }
                function p(e) {
                    return (e = f(e)) ? e + ":" : "";
                }
                const b = ()=>{
                    const e = new Map;
                    return {
                        name: "memory",
                        options: {},
                        hasItem: (t)=>e.has(t),
                        getItem: (t)=>e.get(t) ?? null,
                        getItemRaw: (t)=>e.get(t) ?? null,
                        setItem (t, r) {
                            e.set(t, r);
                        },
                        setItemRaw (t, r) {
                            e.set(t, r);
                        },
                        removeItem (t) {
                            e.delete(t);
                        },
                        getKeys: ()=>Array.from(e.keys()),
                        clear () {
                            e.clear();
                        },
                        dispose () {
                            e.clear();
                        }
                    };
                };
                function g(e, t, r) {
                    return e.watch ? e.watch((e, n)=>t(e, r + n)) : ()=>{};
                }
                async function m(e) {
                    "function" == typeof e.dispose && await c(e.dispose);
                }
                function y(e) {
                    return new Promise((t, r)=>{
                        e.oncomplete = e.onsuccess = ()=>t(e.result), e.onabort = e.onerror = ()=>r(e.error);
                    });
                }
                function v(e, t) {
                    const r = indexedDB.open(e);
                    r.onupgradeneeded = ()=>r.result.createObjectStore(t);
                    const n = y(r);
                    return (e, r)=>n.then((n)=>r(n.transaction(t, e).objectStore(t)));
                }
                let w;
                function _() {
                    return w || (w = v("keyval-store", "keyval")), w;
                }
                function E(e, t = _()) {
                    return t("readonly", (t)=>y(t.get(e)));
                }
                var S = r(8916), A = (e = {})=>{
                    const t = e.base && e.base.length > 0 ? `${e.base}:` : "", r = (e)=>t + e;
                    let n;
                    return e.dbName && e.storeName && (n = v(e.dbName, e.storeName)), {
                        name: "idb-keyval",
                        options: e,
                        hasItem: async (e)=>!(typeof await E(r(e), n) > "u"),
                        getItem: async (e)=>await E(r(e), n) ?? null,
                        setItem: (e, t)=>(function(e, t, r = _()) {
                                return r("readwrite", (r)=>(r.put(t, e), y(r.transaction)));
                            })(r(e), t, n),
                        removeItem: (e)=>(function(e, t = _()) {
                                return t("readwrite", (t)=>(t.delete(e), y(t.transaction)));
                            })(r(e), n),
                        getKeys: ()=>(function(e = _()) {
                                return e("readonly", (e)=>{
                                    if (e.getAllKeys) return y(e.getAllKeys());
                                    const t = [];
                                    return (function(e, t) {
                                        return e.openCursor().onsuccess = function() {
                                            this.result && (t(this.result), this.result.continue());
                                        }, y(e.transaction);
                                    })(e, (e)=>t.push(e.key)).then(()=>t);
                                });
                            })(n),
                        clear: ()=>(function(e = _()) {
                                return e("readwrite", (e)=>(e.clear(), y(e.transaction)));
                            })(n)
                    };
                };
                class M {
                    constructor(){
                        this.indexedDb = function(e = {}) {
                            const t = {
                                mounts: {
                                    "": e.driver || b()
                                },
                                mountpoints: [
                                    ""
                                ],
                                watching: !1,
                                watchListeners: [],
                                unwatch: {}
                            }, r = (e)=>{
                                for (const r of t.mountpoints)if (e.startsWith(r)) return {
                                    base: r,
                                    relativeKey: e.slice(r.length),
                                    driver: t.mounts[r]
                                };
                                return {
                                    base: "",
                                    relativeKey: e,
                                    driver: t.mounts[""]
                                };
                            }, n = (e, r)=>t.mountpoints.filter((t)=>t.startsWith(e) || r && e.startsWith(t)).map((r)=>({
                                        relativeBase: e.length > r.length ? e.slice(r.length) : void 0,
                                        mountpoint: r,
                                        driver: t.mounts[r]
                                    })), i = (e, r)=>{
                                if (t.watching) {
                                    r = f(r);
                                    for (const n of t.watchListeners)n(e, r);
                                }
                            }, s = async ()=>{
                                if (t.watching) {
                                    for(const e in t.unwatch)await t.unwatch[e]();
                                    t.unwatch = {}, t.watching = !1;
                                }
                            }, o = (e, t, n)=>{
                                const i = new Map, s = (e)=>{
                                    let t = i.get(e.base);
                                    return t || (t = {
                                        driver: e.driver,
                                        base: e.base,
                                        items: []
                                    }, i.set(e.base, t)), t;
                                };
                                for (const n of e){
                                    const e = "string" == typeof n, i = f(e ? n : n.key), o = e ? void 0 : n.value, a = e || !n.options ? t : {
                                        ...t,
                                        ...n.options
                                    }, c = r(i);
                                    s(c).items.push({
                                        key: i,
                                        value: o,
                                        relativeKey: c.relativeKey,
                                        options: a
                                    });
                                }
                                return Promise.all([
                                    ...i.values()
                                ].map((e)=>n(e))).then((e)=>e.flat());
                            }, y = {
                                hasItem (e, t = {}) {
                                    e = f(e);
                                    const { relativeKey: n, driver: i } = r(e);
                                    return c(i.hasItem, n, t);
                                },
                                getItem (e, t = {}) {
                                    e = f(e);
                                    const { relativeKey: n, driver: i } = r(e);
                                    return c(i.getItem, n, t).then((e)=>a(e));
                                },
                                getItems: (e, t)=>o(e, t, (e)=>e.driver.getItems ? c(e.driver.getItems, e.items.map((e)=>({
                                                key: e.relativeKey,
                                                options: e.options
                                            })), t).then((t)=>t.map((t)=>({
                                                    key: l(e.base, t.key),
                                                    value: a(t.value)
                                                }))) : Promise.all(e.items.map((t)=>c(e.driver.getItem, t.relativeKey, t.options).then((e)=>({
                                                    key: t.key,
                                                    value: a(e)
                                                }))))),
                                getItemRaw (e, t = {}) {
                                    e = f(e);
                                    const { relativeKey: n, driver: i } = r(e);
                                    return i.getItemRaw ? c(i.getItemRaw, n, t) : c(i.getItem, n, t).then((e)=>(function(e) {
                                            return "string" != typeof e ? e : e.startsWith(d) ? (u(), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(e.slice(7), "base64")) : e;
                                        })(e));
                                },
                                async setItem (e, t, n = {}) {
                                    if (void 0 === t) return y.removeItem(e);
                                    e = f(e);
                                    const { relativeKey: s, driver: o } = r(e);
                                    o.setItem && (await c(o.setItem, s, h(t), n), o.watch || i("update", e));
                                },
                                async setItems (e, t) {
                                    await o(e, t, async (e)=>{
                                        e.driver.setItems && await c(e.driver.setItems, e.items.map((e)=>({
                                                key: e.relativeKey,
                                                value: h(e.value),
                                                options: e.options
                                            })), t), e.driver.setItem && await Promise.all(e.items.map((t)=>c(e.driver.setItem, t.relativeKey, h(t.value), t.options)));
                                    });
                                },
                                async setItemRaw (e, t, n = {}) {
                                    if (void 0 === t) return y.removeItem(e, n);
                                    e = f(e);
                                    const { relativeKey: s, driver: o } = r(e);
                                    if (o.setItemRaw) await c(o.setItemRaw, s, t, n);
                                    else {
                                        if (!o.setItem) return;
                                        await c(o.setItem, s, function(e) {
                                            if ("string" == typeof e) return e;
                                            u();
                                            const t = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(e).toString("base64");
                                            return d + t;
                                        }(t), n);
                                    }
                                    o.watch || i("update", e);
                                },
                                async removeItem (e, t = {}) {
                                    "boolean" == typeof t && (t = {
                                        removeMeta: t
                                    }), e = f(e);
                                    const { relativeKey: n, driver: s } = r(e);
                                    s.removeItem && (await c(s.removeItem, n, t), (t.removeMeta || t.removeMata) && await c(s.removeItem, n + "$", t), s.watch || i("remove", e));
                                },
                                async getMeta (e, t = {}) {
                                    "boolean" == typeof t && (t = {
                                        nativeOnly: t
                                    }), e = f(e);
                                    const { relativeKey: n, driver: i } = r(e), s = Object.create(null);
                                    if (i.getMeta && Object.assign(s, await c(i.getMeta, n, t)), !t.nativeOnly) {
                                        const e = await c(i.getItem, n + "$", t).then((e)=>a(e));
                                        e && "object" == typeof e && ("string" == typeof e.atime && (e.atime = new Date(e.atime)), "string" == typeof e.mtime && (e.mtime = new Date(e.mtime)), Object.assign(s, e));
                                    }
                                    return s;
                                },
                                setMeta (e, t, r = {}) {
                                    return this.setItem(e + "$", t, r);
                                },
                                removeMeta (e, t = {}) {
                                    return this.removeItem(e + "$", t);
                                },
                                async getKeys (e, t = {}) {
                                    e = p(e);
                                    const r = n(e, !0);
                                    let i = [];
                                    const s = [];
                                    for (const e of r){
                                        const r = (await c(e.driver.getKeys, e.relativeBase, t)).map((t)=>e.mountpoint + f(t)).filter((e)=>!i.some((t)=>e.startsWith(t)));
                                        s.push(...r), i = [
                                            e.mountpoint,
                                            ...i.filter((t)=>!t.startsWith(e.mountpoint))
                                        ];
                                    }
                                    return e ? s.filter((t)=>t.startsWith(e) && !t.endsWith("$")) : s.filter((e)=>!e.endsWith("$"));
                                },
                                async clear (e, t = {}) {
                                    e = p(e), await Promise.all(n(e, !1).map(async (e)=>{
                                        if (e.driver.clear) return c(e.driver.clear, e.relativeBase, t);
                                        if (e.driver.removeItem) {
                                            const r = await e.driver.getKeys(e.relativeBase || "", t);
                                            return Promise.all(r.map((r)=>e.driver.removeItem(r, t)));
                                        }
                                    }));
                                },
                                async dispose () {
                                    await Promise.all(Object.values(t.mounts).map((e)=>m(e)));
                                },
                                watch: async (e)=>(await (async ()=>{
                                        if (!t.watching) {
                                            t.watching = !0;
                                            for(const e in t.mounts)t.unwatch[e] = await g(t.mounts[e], i, e);
                                        }
                                    })(), t.watchListeners.push(e), async ()=>{
                                        t.watchListeners = t.watchListeners.filter((t)=>t !== e), 0 === t.watchListeners.length && await s();
                                    }),
                                async unwatch () {
                                    t.watchListeners = [], await s();
                                },
                                mount (e, r) {
                                    if ((e = p(e)) && t.mounts[e]) throw new Error(`already mounted at ${e}`);
                                    return e && (t.mountpoints.push(e), t.mountpoints.sort((e, t)=>t.length - e.length)), t.mounts[e] = r, t.watching && Promise.resolve(g(r, i, e)).then((r)=>{
                                        t.unwatch[e] = r;
                                    }).catch(console.error), y;
                                },
                                async unmount (e, r = !0) {
                                    (e = p(e)) && t.mounts[e] && (t.watching && e in t.unwatch && (t.unwatch[e](), delete t.unwatch[e]), r && await m(t.mounts[e]), t.mountpoints = t.mountpoints.filter((t)=>t !== e), delete t.mounts[e]);
                                },
                                getMount (e = "") {
                                    e = f(e) + ":";
                                    const t = r(e);
                                    return {
                                        driver: t.driver,
                                        base: t.base
                                    };
                                },
                                getMounts: (e = "", t = {})=>(e = f(e), n(e, t.parents).map((e)=>({
                                            driver: e.driver,
                                            base: e.mountpoint
                                        })))
                            };
                            return y;
                        }({
                            driver: A({
                                dbName: "WALLET_CONNECT_V2_INDEXED_DB",
                                storeName: "keyvaluestorage"
                            })
                        });
                    }
                    async getKeys() {
                        return this.indexedDb.getKeys();
                    }
                    async getEntries() {
                        return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((e)=>[
                                e.key,
                                e.value
                            ]);
                    }
                    async getItem(e) {
                        const t = await this.indexedDb.getItem(e);
                        if (null !== t) return t;
                    }
                    async setItem(e, t) {
                        await this.indexedDb.setItem(e, (0, S.h)(t));
                    }
                    async removeItem(e) {
                        await this.indexedDb.removeItem(e);
                    }
                }
                var I = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof r.g < "u" ? r.g : typeof self < "u" ? self : {}, T = {
                    exports: {}
                };
                function x(e) {
                    var t;
                    return [
                        e[0],
                        (0, S.j)(null != (t = e[1]) ? t : "")
                    ];
                }
                !function() {
                    let e;
                    function t() {}
                    e = t, e.prototype.getItem = function(e) {
                        return this.hasOwnProperty(e) ? String(this[e]) : null;
                    }, e.prototype.setItem = function(e, t) {
                        this[e] = String(t);
                    }, e.prototype.removeItem = function(e) {
                        delete this[e];
                    }, e.prototype.clear = function() {
                        const e = this;
                        Object.keys(e).forEach(function(t) {
                            e[t] = void 0, delete e[t];
                        });
                    }, e.prototype.key = function(e) {
                        return e = e || 0, Object.keys(this)[e];
                    }, e.prototype.__defineGetter__("length", function() {
                        return Object.keys(this).length;
                    }), typeof I < "u" && I.localStorage ? T.exports = I.localStorage : typeof window < "u" && window.localStorage ? T.exports = window.localStorage : T.exports = new t;
                }();
                class C {
                    constructor(){
                        this.localStorage = T.exports;
                    }
                    async getKeys() {
                        return Object.keys(this.localStorage);
                    }
                    async getEntries() {
                        return Object.entries(this.localStorage).map(x);
                    }
                    async getItem(e) {
                        const t = this.localStorage.getItem(e);
                        if (null !== t) return (0, S.j)(t);
                    }
                    async setItem(e, t) {
                        this.localStorage.setItem(e, (0, S.h)(t));
                    }
                    async removeItem(e) {
                        this.localStorage.removeItem(e);
                    }
                }
                class R {
                    constructor(){
                        this.initialized = !1, this.setInitialized = (e)=>{
                            this.storage = e, this.initialized = !0;
                        };
                        const e = new C;
                        this.storage = e;
                        try {
                            (async (e, t, r)=>{
                                const n = "wc_storage_version", i = await t.getItem(n);
                                if (i && i >= 1) return void r(t);
                                const s = await e.getKeys();
                                if (!s.length) return void r(t);
                                const o = [];
                                for(; s.length;){
                                    const r = s.shift();
                                    if (!r) continue;
                                    const n = r.toLowerCase();
                                    if (n.includes("wc@") || n.includes("walletconnect") || n.includes("wc_") || n.includes("wallet_connect")) {
                                        const n = await e.getItem(r);
                                        await t.setItem(r, n), o.push(r);
                                    }
                                }
                                await t.setItem(n, 1), r(t), (async (e, t)=>{
                                    t.length && t.forEach(async (t)=>{
                                        await e.removeItem(t);
                                    });
                                })(e, o);
                            })(e, new M, this.setInitialized);
                        } catch  {
                            this.initialized = !0;
                        }
                    }
                    async getKeys() {
                        return await this.initialize(), this.storage.getKeys();
                    }
                    async getEntries() {
                        return await this.initialize(), this.storage.getEntries();
                    }
                    async getItem(e) {
                        return await this.initialize(), this.storage.getItem(e);
                    }
                    async setItem(e, t) {
                        return await this.initialize(), this.storage.setItem(e, t);
                    }
                    async removeItem(e) {
                        return await this.initialize(), this.storage.removeItem(e);
                    }
                    async initialize() {
                        this.initialized || await new Promise((e)=>{
                            const t = setInterval(()=>{
                                this.initialized && (clearInterval(t), e());
                            }, 20);
                        });
                    }
                }
            },
            6556: (e, t, r)=>{
                "use strict";
                r.d(t, {
                    D5: ()=>I,
                    U5: ()=>M,
                    h6: ()=>i.a,
                    iP: ()=>S,
                    oI: ()=>A
                });
                var n = r(9798), i = r.n(n), s = r(8916);
                const o = {
                    level: "info"
                }, a = "custom_context", c = 1024e3;
                class h {
                    constructor(e){
                        this.nodeValue = e, this.sizeInBytes = (new TextEncoder).encode(this.nodeValue).length, this.next = null;
                    }
                    get value() {
                        return this.nodeValue;
                    }
                    get size() {
                        return this.sizeInBytes;
                    }
                }
                class u {
                    constructor(e){
                        this.head = null, this.tail = null, this.lengthInNodes = 0, this.maxSizeInBytes = e, this.sizeInBytes = 0;
                    }
                    append(e) {
                        const t = new h(e);
                        if (t.size > this.maxSizeInBytes) throw new Error(`[LinkedList] Value too big to insert into list: ${e} with size ${t.size}`);
                        for(; this.size + t.size > this.maxSizeInBytes;)this.shift();
                        this.head ? (this.tail && (this.tail.next = t), this.tail = t) : (this.head = t, this.tail = t), this.lengthInNodes++, this.sizeInBytes += t.size;
                    }
                    shift() {
                        if (!this.head) return;
                        const e = this.head;
                        this.head = this.head.next, this.head || (this.tail = null), this.lengthInNodes--, this.sizeInBytes -= e.size;
                    }
                    toArray() {
                        const e = [];
                        let t = this.head;
                        for(; null !== t;)e.push(t.value), t = t.next;
                        return e;
                    }
                    get length() {
                        return this.lengthInNodes;
                    }
                    get size() {
                        return this.sizeInBytes;
                    }
                    toOrderedArray() {
                        return Array.from(this);
                    }
                    [Symbol.iterator]() {
                        let e = this.head;
                        return {
                            next: ()=>{
                                if (!e) return {
                                    done: !0,
                                    value: null
                                };
                                const t = e.value;
                                return e = e.next, {
                                    done: !1,
                                    value: t
                                };
                            }
                        };
                    }
                }
                class d {
                    constructor(e, t = c){
                        this.level = e ?? "error", this.levelValue = n.levels.values[this.level], this.MAX_LOG_SIZE_IN_BYTES = t, this.logs = new u(this.MAX_LOG_SIZE_IN_BYTES);
                    }
                    forwardToConsole(e, t) {
                        t === n.levels.values.error ? console.error(e) : t === n.levels.values.warn ? console.warn(e) : t === n.levels.values.debug ? console.debug(e) : t === n.levels.values.trace ? console.trace(e) : console.log(e);
                    }
                    appendToLogs(e) {
                        this.logs.append((0, s.h)({
                            timestamp: (new Date).toISOString(),
                            log: e
                        }));
                        const t = "string" == typeof e ? JSON.parse(e).level : e.level;
                        t >= this.levelValue && this.forwardToConsole(e, t);
                    }
                    getLogs() {
                        return this.logs;
                    }
                    clearLogs() {
                        this.logs = new u(this.MAX_LOG_SIZE_IN_BYTES);
                    }
                    getLogArray() {
                        return Array.from(this.logs);
                    }
                    logsToBlob(e) {
                        const t = this.getLogArray();
                        return t.push((0, s.h)({
                            extraMetadata: e
                        })), new Blob(t, {
                            type: "application/json"
                        });
                    }
                }
                class f {
                    constructor(e, t = c){
                        this.baseChunkLogger = new d(e, t);
                    }
                    write(e) {
                        this.baseChunkLogger.appendToLogs(e);
                    }
                    getLogs() {
                        return this.baseChunkLogger.getLogs();
                    }
                    clearLogs() {
                        this.baseChunkLogger.clearLogs();
                    }
                    getLogArray() {
                        return this.baseChunkLogger.getLogArray();
                    }
                    logsToBlob(e) {
                        return this.baseChunkLogger.logsToBlob(e);
                    }
                    downloadLogsBlobInBrowser(e) {
                        const t = URL.createObjectURL(this.logsToBlob(e)), r = document.createElement("a");
                        r.href = t, r.download = `walletconnect-logs-${(new Date).toISOString()}.txt`, document.body.appendChild(r), r.click(), document.body.removeChild(r), URL.revokeObjectURL(t);
                    }
                }
                class l {
                    constructor(e, t = c){
                        this.baseChunkLogger = new d(e, t);
                    }
                    write(e) {
                        this.baseChunkLogger.appendToLogs(e);
                    }
                    getLogs() {
                        return this.baseChunkLogger.getLogs();
                    }
                    clearLogs() {
                        this.baseChunkLogger.clearLogs();
                    }
                    getLogArray() {
                        return this.baseChunkLogger.getLogArray();
                    }
                    logsToBlob(e) {
                        return this.baseChunkLogger.logsToBlob(e);
                    }
                }
                var p = Object.defineProperty, b = Object.defineProperties, g = Object.getOwnPropertyDescriptors, m = Object.getOwnPropertySymbols, y = Object.prototype.hasOwnProperty, v = Object.prototype.propertyIsEnumerable, w = (e, t, r)=>t in e ? p(e, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }) : e[t] = r, _ = (e, t)=>{
                    for(var r in t || (t = {}))y.call(t, r) && w(e, r, t[r]);
                    if (m) for (var r of m(t))v.call(t, r) && w(e, r, t[r]);
                    return e;
                }, E = (e, t)=>b(e, g(t));
                function S(e) {
                    return E(_({}, e), {
                        level: e?.level || o.level
                    });
                }
                function A(e, t = a) {
                    let r = "";
                    return r = typeof e.bindings > "u" ? function(e, t = a) {
                        return e[t] || "";
                    }(e, t) : e.bindings().context || "", r;
                }
                function M(e, t, r = a) {
                    const n = function(e, t, r = a) {
                        const n = A(e, r);
                        return n.trim() ? `${n}/${t}` : t;
                    }(e, t, r);
                    return function(e, t, r = a) {
                        return e[r] = t, e;
                    }(e.child({
                        context: n
                    }), n, r);
                }
                function I(e) {
                    return typeof e.loggerOverride < "u" && "string" != typeof e.loggerOverride ? {
                        logger: e.loggerOverride,
                        chunkLoggerController: null
                    } : typeof window < "u" ? function(e) {
                        var t, r;
                        const n = new f(null == (t = e.opts) ? void 0 : t.level, e.maxSizeInBytes);
                        return {
                            logger: i()(E(_({}, e.opts), {
                                level: "trace",
                                browser: E(_({}, null == (r = e.opts) ? void 0 : r.browser), {
                                    write: (e)=>n.write(e)
                                })
                            })),
                            chunkLoggerController: n
                        };
                    }(e) : function(e) {
                        var t;
                        const r = new l(null == (t = e.opts) ? void 0 : t.level, e.maxSizeInBytes);
                        return {
                            logger: i()(E(_({}, e.opts), {
                                level: "trace"
                            }), r),
                            chunkLoggerController: r
                        };
                    }(e);
                }
            },
            9940: (e, t, r)=>{
                "use strict";
                r.d(t, {
                    decodeJWT: ()=>P,
                    encodeIss: ()=>k,
                    generateKeyPair: ()=>O,
                    signJWT: ()=>N
                });
                var n = r(1741), i = r(4734), s = r(7777);
                const o = "EdDSA", a = "JWT", c = ".", h = "base64url", u = "utf8", d = "utf8", f = ":", l = "did", p = "key", b = "base58btc", g = "z", m = "K36", y = 32;
                function v(e) {
                    return null != globalThis.Buffer ? new Uint8Array(e.buffer, e.byteOffset, e.byteLength) : e;
                }
                function w(e = 0) {
                    return null != globalThis.Buffer && null != globalThis.Buffer.allocUnsafe ? v(globalThis.Buffer.allocUnsafe(e)) : new Uint8Array(e);
                }
                var _ = r(8484);
                function E(e, t, r, n) {
                    return {
                        name: e,
                        prefix: t,
                        encoder: {
                            name: e,
                            prefix: t,
                            encode: r
                        },
                        decoder: {
                            decode: n
                        }
                    };
                }
                const S = E("utf8", "u", (e)=>"u" + new TextDecoder("utf8").decode(e), (e)=>(new TextEncoder).encode(e.substring(1))), A = E("ascii", "a", (e)=>{
                    let t = "a";
                    for(let r = 0; r < e.length; r++)t += String.fromCharCode(e[r]);
                    return t;
                }, (e)=>{
                    const t = w((e = e.substring(1)).length);
                    for(let r = 0; r < e.length; r++)t[r] = e.charCodeAt(r);
                    return t;
                }), M = {
                    utf8: S,
                    "utf-8": S,
                    hex: _.Fo.base16,
                    latin1: A,
                    ascii: A,
                    binary: A,
                    ..._.Fo
                };
                function I(e, t = "utf8") {
                    const r = M[t];
                    if (!r) throw new Error(`Unsupported encoding "${t}"`);
                    return "utf8" !== t && "utf-8" !== t || null == globalThis.Buffer || null == globalThis.Buffer.from ? r.encoder.encode(e).substring(1) : globalThis.Buffer.from(e.buffer, e.byteOffset, e.byteLength).toString("utf8");
                }
                function T(e, t = "utf8") {
                    const r = M[t];
                    if (!r) throw new Error(`Unsupported encoding "${t}"`);
                    return "utf8" !== t && "utf-8" !== t || null == globalThis.Buffer || null == globalThis.Buffer.from ? r.decoder.decode(`${r.prefix}${e}`) : v(globalThis.Buffer.from(e, "utf-8"));
                }
                var x = r(8916);
                function C(e) {
                    return (0, x.j)(I(T(e, h), u));
                }
                function R(e) {
                    return I(T((0, x.h)(e), u), h);
                }
                function k(e) {
                    const t = T(m, b), r = g + I(function(e, t) {
                        t || (t = e.reduce((e, t)=>e + t.length, 0));
                        const r = w(t);
                        let n = 0;
                        for (const t of e)r.set(t, n), n += t.length;
                        return v(r);
                    }([
                        t,
                        e
                    ]), b);
                    return [
                        l,
                        p,
                        r
                    ].join(f);
                }
                function P(e) {
                    const t = e.split(c);
                    return {
                        header: C(t[0]),
                        payload: C(t[1]),
                        signature: T(t[2], h),
                        data: T(t.slice(0, 2).join(c), d)
                    };
                }
                function O(e = (0, i.randomBytes)(y)) {
                    return n.K(e);
                }
                async function N(e, t, r, i, u = (0, s.fromMiliseconds)(Date.now())) {
                    const f = {
                        alg: o,
                        typ: a
                    }, l = {
                        iss: k(i.publicKey),
                        sub: e,
                        aud: t,
                        iat: u,
                        exp: u + r
                    }, p = T([
                        R((b = {
                            header: f,
                            payload: l
                        }).header),
                        R(b.payload)
                    ].join(c), d);
                    var b;
                    return function(e) {
                        return [
                            R(e.header),
                            R(e.payload),
                            (t = e.signature, I(t, h))
                        ].join(c);
                        "TURBOPACK unreachable";
                        var t;
                    }({
                        header: f,
                        payload: l,
                        signature: n._S(i.secretKey, p)
                    });
                }
                r(7477);
            },
            7477: ()=>{},
            8916: (e, t, r)=>{
                "use strict";
                r.d(t, {
                    h: ()=>o,
                    j: ()=>s
                });
                const n = (e)=>JSON.stringify(e, (e, t)=>"bigint" == typeof t ? t.toString() + "n" : t), i = (e)=>{
                    const t = e.replace(/([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g, '$1"$2n"$3');
                    return JSON.parse(t, (e, t)=>"string" == typeof t && t.match(/^\d+n$/) ? BigInt(t.substring(0, t.length - 1)) : t);
                };
                function s(e) {
                    if ("string" != typeof e) throw new Error("Cannot safe json parse value of type " + typeof e);
                    try {
                        return i(e);
                    } catch (t) {
                        return e;
                    }
                }
                function o(e) {
                    return "string" == typeof e ? e : n(e) || "";
                }
            },
            7228: (e, t, r)=>{
                "use strict";
                r.r(t), r.d(t, {
                    AUTH_CONTEXT: ()=>U,
                    AUTH_KEYS_CONTEXT: ()=>B,
                    AUTH_PAIRING_TOPIC_CONTEXT: ()=>L,
                    AUTH_PROTOCOL: ()=>O,
                    AUTH_PUBLIC_KEY_NAME: ()=>q,
                    AUTH_REQUEST_CONTEXT: ()=>j,
                    AUTH_STORAGE_PREFIX: ()=>D,
                    AUTH_VERSION: ()=>N,
                    ENGINE_CONTEXT: ()=>T,
                    ENGINE_QUEUE_STATES: ()=>R,
                    ENGINE_RPC_OPTS: ()=>x,
                    HISTORY_CONTEXT: ()=>w,
                    HISTORY_EVENTS: ()=>v,
                    HISTORY_STORAGE_VERSION: ()=>_,
                    METHODS_TO_VERIFY: ()=>P,
                    PROPOSAL_CONTEXT: ()=>E,
                    PROPOSAL_EXPIRY: ()=>S,
                    PROPOSAL_EXPIRY_MESSAGE: ()=>A,
                    REQUEST_CONTEXT: ()=>k,
                    SESSION_CONTEXT: ()=>M,
                    SESSION_EXPIRY: ()=>I,
                    SESSION_REQUEST_EXPIRY_BOUNDARIES: ()=>C,
                    SIGN_CLIENT_CONTEXT: ()=>l,
                    SIGN_CLIENT_DEFAULT: ()=>b,
                    SIGN_CLIENT_EVENTS: ()=>g,
                    SIGN_CLIENT_PROTOCOL: ()=>d,
                    SIGN_CLIENT_STORAGE_OPTIONS: ()=>m,
                    SIGN_CLIENT_STORAGE_PREFIX: ()=>p,
                    SIGN_CLIENT_VERSION: ()=>f,
                    SessionStore: ()=>se,
                    SignClient: ()=>oe,
                    WALLETCONNECT_DEEPLINK_CHOICE: ()=>y,
                    default: ()=>ie
                });
                var n = r(3245), i = r(6556), s = r(1652), o = r(7777), a = r(3317), c = r(381), h = r.n(c), u = r(3526);
                const d = "wc", f = 2, l = "client", p = `${d}@${f}:${l}:`, b = {
                    name: l,
                    logger: "error",
                    controller: !1,
                    relayUrl: "wss://relay.walletconnect.org"
                }, g = {
                    session_proposal: "session_proposal",
                    session_update: "session_update",
                    session_extend: "session_extend",
                    session_ping: "session_ping",
                    session_delete: "session_delete",
                    session_expire: "session_expire",
                    session_request: "session_request",
                    session_request_sent: "session_request_sent",
                    session_event: "session_event",
                    proposal_expire: "proposal_expire",
                    session_authenticate: "session_authenticate",
                    session_request_expire: "session_request_expire"
                }, m = {
                    database: ":memory:"
                }, y = "WALLETCONNECT_DEEPLINK_CHOICE", v = {
                    created: "history_created",
                    updated: "history_updated",
                    deleted: "history_deleted",
                    sync: "history_sync"
                }, w = "history", _ = "0.3", E = "proposal", S = o.THIRTY_DAYS, A = "Proposal expired", M = "session", I = o.SEVEN_DAYS, T = "engine", x = {
                    wc_sessionPropose: {
                        req: {
                            ttl: o.FIVE_MINUTES,
                            prompt: !0,
                            tag: 1100
                        },
                        res: {
                            ttl: o.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1101
                        },
                        reject: {
                            ttl: o.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1120
                        },
                        autoReject: {
                            ttl: o.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1121
                        }
                    },
                    wc_sessionSettle: {
                        req: {
                            ttl: o.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1102
                        },
                        res: {
                            ttl: o.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1103
                        }
                    },
                    wc_sessionUpdate: {
                        req: {
                            ttl: o.ONE_DAY,
                            prompt: !1,
                            tag: 1104
                        },
                        res: {
                            ttl: o.ONE_DAY,
                            prompt: !1,
                            tag: 1105
                        }
                    },
                    wc_sessionExtend: {
                        req: {
                            ttl: o.ONE_DAY,
                            prompt: !1,
                            tag: 1106
                        },
                        res: {
                            ttl: o.ONE_DAY,
                            prompt: !1,
                            tag: 1107
                        }
                    },
                    wc_sessionRequest: {
                        req: {
                            ttl: o.FIVE_MINUTES,
                            prompt: !0,
                            tag: 1108
                        },
                        res: {
                            ttl: o.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1109
                        }
                    },
                    wc_sessionEvent: {
                        req: {
                            ttl: o.FIVE_MINUTES,
                            prompt: !0,
                            tag: 1110
                        },
                        res: {
                            ttl: o.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1111
                        }
                    },
                    wc_sessionDelete: {
                        req: {
                            ttl: o.ONE_DAY,
                            prompt: !1,
                            tag: 1112
                        },
                        res: {
                            ttl: o.ONE_DAY,
                            prompt: !1,
                            tag: 1113
                        }
                    },
                    wc_sessionPing: {
                        req: {
                            ttl: o.ONE_DAY,
                            prompt: !1,
                            tag: 1114
                        },
                        res: {
                            ttl: o.ONE_DAY,
                            prompt: !1,
                            tag: 1115
                        }
                    },
                    wc_sessionAuthenticate: {
                        req: {
                            ttl: o.ONE_HOUR,
                            prompt: !0,
                            tag: 1116
                        },
                        res: {
                            ttl: o.ONE_HOUR,
                            prompt: !1,
                            tag: 1117
                        },
                        reject: {
                            ttl: o.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1118
                        },
                        autoReject: {
                            ttl: o.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1119
                        }
                    }
                }, C = {
                    min: o.FIVE_MINUTES,
                    max: o.SEVEN_DAYS
                }, R = {
                    idle: "IDLE",
                    active: "ACTIVE"
                }, k = "request", P = [
                    "wc_sessionPropose",
                    "wc_sessionRequest",
                    "wc_authRequest",
                    "wc_sessionAuthenticate"
                ], O = "wc", N = 1.5, U = "auth", B = "authKeys", L = "pairingTopics", j = "requests", D = `${O}@1.5:${U}:`, q = `${D}:PUB_KEY`;
                var F = Object.defineProperty, H = Object.defineProperties, z = Object.getOwnPropertyDescriptors, V = Object.getOwnPropertySymbols, $ = Object.prototype.hasOwnProperty, K = Object.prototype.propertyIsEnumerable, G = (e, t, r)=>t in e ? F(e, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }) : e[t] = r, W = (e, t)=>{
                    for(var r in t || (t = {}))$.call(t, r) && G(e, r, t[r]);
                    if (V) for (var r of V(t))K.call(t, r) && G(e, r, t[r]);
                    return e;
                }, J = (e, t)=>H(e, z(t));
                class Y extends s.yJ {
                    constructor(e){
                        super(e), this.name = T, this.events = new (h()), this.initialized = !1, this.requestQueue = {
                            state: R.idle,
                            queue: []
                        }, this.sessionRequestQueue = {
                            state: R.idle,
                            queue: []
                        }, this.requestQueueDelay = o.ONE_SECOND, this.expectedPairingMethodMap = new Map, this.recentlyDeletedMap = new Map, this.recentlyDeletedLimit = 200, this.relayMessageCache = [], this.init = async ()=>{
                            this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), await this.registerLinkModeListeners(), this.client.core.pairing.register({
                                methods: Object.keys(x)
                            }), this.initialized = !0, setTimeout(()=>{
                                this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();
                            }, (0, o.toMiliseconds)(this.requestQueueDelay)));
                        }, this.connect = async (e)=>{
                            this.isInitialized(), await this.confirmOnlineStateOrThrow();
                            const t = J(W({}, e), {
                                requiredNamespaces: e.requiredNamespaces || {},
                                optionalNamespaces: e.optionalNamespaces || {}
                            });
                            await this.isValidConnect(t);
                            const { pairingTopic: r, requiredNamespaces: i, optionalNamespaces: s, sessionProperties: c, relays: h } = t;
                            let u, d = r, f = !1;
                            try {
                                d && (f = this.client.core.pairing.pairings.get(d).active);
                            } catch (e) {
                                throw this.client.logger.error(`connect() -> pairing.get(${d}) failed`), e;
                            }
                            if (!d || !f) {
                                const { topic: e, uri: t } = await this.client.core.pairing.create();
                                d = e, u = t;
                            }
                            if (!d) {
                                const { message: e } = (0, a.getInternalError)("NO_MATCHING_KEY", `connect() pairing topic: ${d}`);
                                throw new Error(e);
                            }
                            const l = await this.client.core.crypto.generateKeyPair(), p = x.wc_sessionPropose.req.ttl || o.FIVE_MINUTES, b = (0, a.calcExpiry)(p), g = W({
                                requiredNamespaces: i,
                                optionalNamespaces: s,
                                relays: h ?? [
                                    {
                                        protocol: n.RELAYER_DEFAULT_PROTOCOL
                                    }
                                ],
                                proposer: {
                                    publicKey: l,
                                    metadata: this.client.metadata
                                },
                                expiryTimestamp: b,
                                pairingTopic: d
                            }, c && {
                                sessionProperties: c
                            }), { reject: m, resolve: y, done: v } = (0, a.createDelayedPromise)(p, A);
                            this.events.once((0, a.engineEvent)("session_connect"), async ({ error: e, session: t })=>{
                                if (e) m(e);
                                else if (t) {
                                    t.self.publicKey = l;
                                    const e = J(W({}, t), {
                                        pairingTopic: g.pairingTopic,
                                        requiredNamespaces: g.requiredNamespaces,
                                        optionalNamespaces: g.optionalNamespaces,
                                        transportType: n.TRANSPORT_TYPES.relay
                                    });
                                    await this.client.session.set(t.topic, e), await this.setExpiry(t.topic, t.expiry), d && await this.client.core.pairing.updateMetadata({
                                        topic: d,
                                        metadata: t.peer.metadata
                                    }), this.cleanupDuplicatePairings(e), y(e);
                                }
                            });
                            const w = await this.sendRequest({
                                topic: d,
                                method: "wc_sessionPropose",
                                params: g,
                                throwOnFailedPublish: !0
                            });
                            return await this.setProposal(w, W({
                                id: w
                            }, g)), {
                                uri: u,
                                approval: v
                            };
                        }, this.pair = async (e)=>{
                            this.isInitialized(), await this.confirmOnlineStateOrThrow();
                            try {
                                return await this.client.core.pairing.pair(e);
                            } catch (e) {
                                throw this.client.logger.error("pair() failed"), e;
                            }
                        }, this.approve = async (e)=>{
                            var t, r, i;
                            const s = this.client.core.eventClient.createEvent({
                                properties: {
                                    topic: null == (t = e?.id) ? void 0 : t.toString(),
                                    trace: [
                                        n.EVENT_CLIENT_SESSION_TRACES.session_approve_started
                                    ]
                                }
                            });
                            try {
                                this.isInitialized(), await this.confirmOnlineStateOrThrow();
                            } catch (e) {
                                throw s.setError(n.EVENT_CLIENT_SESSION_ERRORS.no_internet_connection), e;
                            }
                            try {
                                await this.isValidProposalId(e?.id);
                            } catch (t) {
                                throw this.client.logger.error(`approve() -> proposal.get(${e?.id}) failed`), s.setError(n.EVENT_CLIENT_SESSION_ERRORS.proposal_not_found), t;
                            }
                            try {
                                await this.isValidApprove(e);
                            } catch (e) {
                                throw this.client.logger.error("approve() -> isValidApprove() failed"), s.setError(n.EVENT_CLIENT_SESSION_ERRORS.session_approve_namespace_validation_failure), e;
                            }
                            const { id: o, relayProtocol: c, namespaces: h, sessionProperties: u, sessionConfig: d } = e, f = this.client.proposal.get(o);
                            this.client.core.eventClient.deleteEvent({
                                eventId: s.eventId
                            });
                            const { pairingTopic: l, proposer: p, requiredNamespaces: b, optionalNamespaces: g } = f;
                            let m = null == (r = this.client.core.eventClient) ? void 0 : r.getEvent({
                                topic: l
                            });
                            m || (m = null == (i = this.client.core.eventClient) ? void 0 : i.createEvent({
                                type: n.EVENT_CLIENT_SESSION_TRACES.session_approve_started,
                                properties: {
                                    topic: l,
                                    trace: [
                                        n.EVENT_CLIENT_SESSION_TRACES.session_approve_started,
                                        n.EVENT_CLIENT_SESSION_TRACES.session_namespaces_validation_success
                                    ]
                                }
                            }));
                            const y = await this.client.core.crypto.generateKeyPair(), v = p.publicKey, w = await this.client.core.crypto.generateSharedKey(y, v), _ = W(W({
                                relay: {
                                    protocol: c ?? "irn"
                                },
                                namespaces: h,
                                controller: {
                                    publicKey: y,
                                    metadata: this.client.metadata
                                },
                                expiry: (0, a.calcExpiry)(I)
                            }, u && {
                                sessionProperties: u
                            }), d && {
                                sessionConfig: d
                            }), E = n.TRANSPORT_TYPES.relay;
                            m.addTrace(n.EVENT_CLIENT_SESSION_TRACES.subscribing_session_topic);
                            try {
                                await this.client.core.relayer.subscribe(w, {
                                    transportType: E
                                });
                            } catch (e) {
                                throw m.setError(n.EVENT_CLIENT_SESSION_ERRORS.subscribe_session_topic_failure), e;
                            }
                            m.addTrace(n.EVENT_CLIENT_SESSION_TRACES.subscribe_session_topic_success);
                            const S = J(W({}, _), {
                                topic: w,
                                requiredNamespaces: b,
                                optionalNamespaces: g,
                                pairingTopic: l,
                                acknowledged: !1,
                                self: _.controller,
                                peer: {
                                    publicKey: p.publicKey,
                                    metadata: p.metadata
                                },
                                controller: y,
                                transportType: n.TRANSPORT_TYPES.relay
                            });
                            await this.client.session.set(w, S), m.addTrace(n.EVENT_CLIENT_SESSION_TRACES.store_session);
                            try {
                                m.addTrace(n.EVENT_CLIENT_SESSION_TRACES.publishing_session_settle), await this.sendRequest({
                                    topic: w,
                                    method: "wc_sessionSettle",
                                    params: _,
                                    throwOnFailedPublish: !0
                                }).catch((e)=>{
                                    throw m?.setError(n.EVENT_CLIENT_SESSION_ERRORS.session_settle_publish_failure), e;
                                }), m.addTrace(n.EVENT_CLIENT_SESSION_TRACES.session_settle_publish_success), m.addTrace(n.EVENT_CLIENT_SESSION_TRACES.publishing_session_approve), await this.sendResult({
                                    id: o,
                                    topic: l,
                                    result: {
                                        relay: {
                                            protocol: c ?? "irn"
                                        },
                                        responderPublicKey: y
                                    },
                                    throwOnFailedPublish: !0
                                }).catch((e)=>{
                                    throw m?.setError(n.EVENT_CLIENT_SESSION_ERRORS.session_approve_publish_failure), e;
                                }), m.addTrace(n.EVENT_CLIENT_SESSION_TRACES.session_approve_publish_success);
                            } catch (e) {
                                throw this.client.logger.error(e), this.client.session.delete(w, (0, a.getSdkError)("USER_DISCONNECTED")), await this.client.core.relayer.unsubscribe(w), e;
                            }
                            return this.client.core.eventClient.deleteEvent({
                                eventId: m.eventId
                            }), await this.client.core.pairing.updateMetadata({
                                topic: l,
                                metadata: p.metadata
                            }), await this.client.proposal.delete(o, (0, a.getSdkError)("USER_DISCONNECTED")), await this.client.core.pairing.activate({
                                topic: l
                            }), await this.setExpiry(w, (0, a.calcExpiry)(I)), {
                                topic: w,
                                acknowledged: ()=>Promise.resolve(this.client.session.get(w))
                            };
                        }, this.reject = async (e)=>{
                            this.isInitialized(), await this.confirmOnlineStateOrThrow();
                            try {
                                await this.isValidReject(e);
                            } catch (e) {
                                throw this.client.logger.error("reject() -> isValidReject() failed"), e;
                            }
                            const { id: t, reason: r } = e;
                            let n;
                            try {
                                n = this.client.proposal.get(t).pairingTopic;
                            } catch (e) {
                                throw this.client.logger.error(`reject() -> proposal.get(${t}) failed`), e;
                            }
                            n && (await this.sendError({
                                id: t,
                                topic: n,
                                error: r,
                                rpcOpts: x.wc_sessionPropose.reject
                            }), await this.client.proposal.delete(t, (0, a.getSdkError)("USER_DISCONNECTED")));
                        }, this.update = async (e)=>{
                            this.isInitialized(), await this.confirmOnlineStateOrThrow();
                            try {
                                await this.isValidUpdate(e);
                            } catch (e) {
                                throw this.client.logger.error("update() -> isValidUpdate() failed"), e;
                            }
                            const { topic: t, namespaces: r } = e, { done: n, resolve: i, reject: s } = (0, a.createDelayedPromise)(), o = (0, u.payloadId)(), c = (0, u.getBigIntRpcId)().toString(), h = this.client.session.get(t).namespaces;
                            return this.events.once((0, a.engineEvent)("session_update", o), ({ error: e })=>{
                                e ? s(e) : i();
                            }), await this.client.session.update(t, {
                                namespaces: r
                            }), await this.sendRequest({
                                topic: t,
                                method: "wc_sessionUpdate",
                                params: {
                                    namespaces: r
                                },
                                throwOnFailedPublish: !0,
                                clientRpcId: o,
                                relayRpcId: c
                            }).catch((e)=>{
                                this.client.logger.error(e), this.client.session.update(t, {
                                    namespaces: h
                                }), s(e);
                            }), {
                                acknowledged: n
                            };
                        }, this.extend = async (e)=>{
                            this.isInitialized(), await this.confirmOnlineStateOrThrow();
                            try {
                                await this.isValidExtend(e);
                            } catch (e) {
                                throw this.client.logger.error("extend() -> isValidExtend() failed"), e;
                            }
                            const { topic: t } = e, r = (0, u.payloadId)(), { done: n, resolve: i, reject: s } = (0, a.createDelayedPromise)();
                            return this.events.once((0, a.engineEvent)("session_extend", r), ({ error: e })=>{
                                e ? s(e) : i();
                            }), await this.setExpiry(t, (0, a.calcExpiry)(I)), this.sendRequest({
                                topic: t,
                                method: "wc_sessionExtend",
                                params: {},
                                clientRpcId: r,
                                throwOnFailedPublish: !0
                            }).catch((e)=>{
                                s(e);
                            }), {
                                acknowledged: n
                            };
                        }, this.request = async (e)=>{
                            this.isInitialized();
                            try {
                                await this.isValidRequest(e);
                            } catch (e) {
                                throw this.client.logger.error("request() -> isValidRequest() failed"), e;
                            }
                            const { chainId: t, request: r, topic: i, expiry: s = x.wc_sessionRequest.req.ttl } = e, o = this.client.session.get(i);
                            o?.transportType === n.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();
                            const c = (0, u.payloadId)(), h = (0, u.getBigIntRpcId)().toString(), { done: d, resolve: f, reject: l } = (0, a.createDelayedPromise)(s, "Request expired. Please try again.");
                            this.events.once((0, a.engineEvent)("session_request", c), ({ error: e, result: t })=>{
                                e ? l(e) : f(t);
                            });
                            const p = this.getAppLinkIfEnabled(o.peer.metadata, o.transportType);
                            return p ? (await this.sendRequest({
                                clientRpcId: c,
                                relayRpcId: h,
                                topic: i,
                                method: "wc_sessionRequest",
                                params: {
                                    request: J(W({}, r), {
                                        expiryTimestamp: (0, a.calcExpiry)(s)
                                    }),
                                    chainId: t
                                },
                                expiry: s,
                                throwOnFailedPublish: !0,
                                appLink: p
                            }).catch((e)=>l(e)), this.client.events.emit("session_request_sent", {
                                topic: i,
                                request: r,
                                chainId: t,
                                id: c
                            }), await d()) : await Promise.all([
                                new Promise(async (e)=>{
                                    await this.sendRequest({
                                        clientRpcId: c,
                                        relayRpcId: h,
                                        topic: i,
                                        method: "wc_sessionRequest",
                                        params: {
                                            request: J(W({}, r), {
                                                expiryTimestamp: (0, a.calcExpiry)(s)
                                            }),
                                            chainId: t
                                        },
                                        expiry: s,
                                        throwOnFailedPublish: !0
                                    }).catch((e)=>l(e)), this.client.events.emit("session_request_sent", {
                                        topic: i,
                                        request: r,
                                        chainId: t,
                                        id: c
                                    }), e();
                                }),
                                new Promise(async (e)=>{
                                    var t;
                                    if (null == (t = o.sessionConfig) || !t.disableDeepLink) {
                                        const e = await (0, a.getDeepLink)(this.client.core.storage, y);
                                        await (0, a.handleDeeplinkRedirect)({
                                            id: c,
                                            topic: i,
                                            wcDeepLink: e
                                        });
                                    }
                                    e();
                                }),
                                d()
                            ]).then((e)=>e[2]);
                        }, this.respond = async (e)=>{
                            this.isInitialized(), await this.isValidRespond(e);
                            const { topic: t, response: r } = e, { id: i } = r, s = this.client.session.get(t);
                            s.transportType === n.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();
                            const o = this.getAppLinkIfEnabled(s.peer.metadata, s.transportType);
                            (0, u.isJsonRpcResult)(r) ? await this.sendResult({
                                id: i,
                                topic: t,
                                result: r.result,
                                throwOnFailedPublish: !0,
                                appLink: o
                            }) : (0, u.isJsonRpcError)(r) && await this.sendError({
                                id: i,
                                topic: t,
                                error: r.error,
                                appLink: o
                            }), this.cleanupAfterResponse(e);
                        }, this.ping = async (e)=>{
                            this.isInitialized(), await this.confirmOnlineStateOrThrow();
                            try {
                                await this.isValidPing(e);
                            } catch (e) {
                                throw this.client.logger.error("ping() -> isValidPing() failed"), e;
                            }
                            const { topic: t } = e;
                            if (this.client.session.keys.includes(t)) {
                                const e = (0, u.payloadId)(), r = (0, u.getBigIntRpcId)().toString(), { done: n, resolve: i, reject: s } = (0, a.createDelayedPromise)();
                                this.events.once((0, a.engineEvent)("session_ping", e), ({ error: e })=>{
                                    e ? s(e) : i();
                                }), await Promise.all([
                                    this.sendRequest({
                                        topic: t,
                                        method: "wc_sessionPing",
                                        params: {},
                                        throwOnFailedPublish: !0,
                                        clientRpcId: e,
                                        relayRpcId: r
                                    }),
                                    n()
                                ]);
                            } else this.client.core.pairing.pairings.keys.includes(t) && await this.client.core.pairing.ping({
                                topic: t
                            });
                        }, this.emit = async (e)=>{
                            this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidEmit(e);
                            const { topic: t, event: r, chainId: n } = e, i = (0, u.getBigIntRpcId)().toString(), s = (0, u.payloadId)();
                            await this.sendRequest({
                                topic: t,
                                method: "wc_sessionEvent",
                                params: {
                                    event: r,
                                    chainId: n
                                },
                                throwOnFailedPublish: !0,
                                relayRpcId: i,
                                clientRpcId: s
                            });
                        }, this.disconnect = async (e)=>{
                            this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidDisconnect(e);
                            const { topic: t } = e;
                            if (this.client.session.keys.includes(t)) await this.sendRequest({
                                topic: t,
                                method: "wc_sessionDelete",
                                params: (0, a.getSdkError)("USER_DISCONNECTED"),
                                throwOnFailedPublish: !0
                            }), await this.deleteSession({
                                topic: t,
                                emitEvent: !1
                            });
                            else {
                                if (!this.client.core.pairing.pairings.keys.includes(t)) {
                                    const { message: e } = (0, a.getInternalError)("MISMATCHED_TOPIC", `Session or pairing topic not found: ${t}`);
                                    throw new Error(e);
                                }
                                await this.client.core.pairing.disconnect({
                                    topic: t
                                });
                            }
                        }, this.find = (e)=>(this.isInitialized(), this.client.session.getAll().filter((t)=>(0, a.isSessionCompatible)(t, e))), this.getPendingSessionRequests = ()=>this.client.pendingRequest.getAll(), this.authenticate = async (e, t)=>{
                            var r;
                            this.isInitialized(), this.isValidAuthenticate(e);
                            const i = t && this.client.core.linkModeSupportedApps.includes(t) && (null == (r = this.client.metadata.redirect) ? void 0 : r.linkMode), s = i ? n.TRANSPORT_TYPES.link_mode : n.TRANSPORT_TYPES.relay;
                            s === n.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();
                            const { chains: o, statement: c = "", uri: h, domain: d, nonce: f, type: l, exp: p, nbf: b, methods: g = [], expiry: m } = e, y = [
                                ...e.resources || []
                            ], { topic: v, uri: w } = await this.client.core.pairing.create({
                                methods: [
                                    "wc_sessionAuthenticate"
                                ],
                                transportType: s
                            });
                            this.client.logger.info({
                                message: "Generated new pairing",
                                pairing: {
                                    topic: v,
                                    uri: w
                                }
                            });
                            const _ = await this.client.core.crypto.generateKeyPair(), E = (0, a.hashKey)(_);
                            if (await Promise.all([
                                this.client.auth.authKeys.set(q, {
                                    responseTopic: E,
                                    publicKey: _
                                }),
                                this.client.auth.pairingTopics.set(E, {
                                    topic: E,
                                    pairingTopic: v
                                })
                            ]), await this.client.core.relayer.subscribe(E, {
                                transportType: s
                            }), this.client.logger.info(`sending request to new pairing topic: ${v}`), g.length > 0) {
                                const { namespace: e } = (0, a.parseChainId)(o[0]);
                                let t = (0, a.createEncodedRecap)(e, "request", g);
                                (0, a.getRecapFromResources)(y) && (t = (0, a.mergeEncodedRecaps)(t, y.pop())), y.push(t);
                            }
                            const S = m && m > x.wc_sessionAuthenticate.req.ttl ? m : x.wc_sessionAuthenticate.req.ttl, A = {
                                authPayload: {
                                    type: l ?? "caip122",
                                    chains: o,
                                    statement: c,
                                    aud: h,
                                    domain: d,
                                    version: "1",
                                    nonce: f,
                                    iat: (new Date).toISOString(),
                                    exp: p,
                                    nbf: b,
                                    resources: y
                                },
                                requester: {
                                    publicKey: _,
                                    metadata: this.client.metadata
                                },
                                expiryTimestamp: (0, a.calcExpiry)(S)
                            }, M = {
                                requiredNamespaces: {},
                                optionalNamespaces: {
                                    eip155: {
                                        chains: o,
                                        methods: [
                                            ...new Set([
                                                "personal_sign",
                                                ...g
                                            ])
                                        ],
                                        events: [
                                            "chainChanged",
                                            "accountsChanged"
                                        ]
                                    }
                                },
                                relays: [
                                    {
                                        protocol: "irn"
                                    }
                                ],
                                pairingTopic: v,
                                proposer: {
                                    publicKey: _,
                                    metadata: this.client.metadata
                                },
                                expiryTimestamp: (0, a.calcExpiry)(x.wc_sessionPropose.req.ttl)
                            }, { done: T, resolve: C, reject: R } = (0, a.createDelayedPromise)(S, "Request expired"), k = async ({ error: e, session: t })=>{
                                if (this.events.off((0, a.engineEvent)("session_request", O), P), e) R(e);
                                else if (t) {
                                    t.self.publicKey = _, await this.client.session.set(t.topic, t), await this.setExpiry(t.topic, t.expiry), v && await this.client.core.pairing.updateMetadata({
                                        topic: v,
                                        metadata: t.peer.metadata
                                    });
                                    const e = this.client.session.get(t.topic);
                                    await this.deleteProposal(N), C({
                                        session: e
                                    });
                                }
                            }, P = async (e)=>{
                                var r, i, o;
                                if (await this.deletePendingAuthRequest(O, {
                                    message: "fulfilled",
                                    code: 0
                                }), e.error) {
                                    const t = (0, a.getSdkError)("WC_METHOD_UNSUPPORTED", "wc_sessionAuthenticate");
                                    return e.error.code === t.code ? void 0 : (this.events.off((0, a.engineEvent)("session_connect"), k), R(e.error.message));
                                }
                                await this.deleteProposal(N), this.events.off((0, a.engineEvent)("session_connect"), k);
                                const { cacaos: c, responder: h } = e.result, u = [], d = [];
                                for (const e of c){
                                    await (0, a.validateSignedCacao)({
                                        cacao: e,
                                        projectId: this.client.core.projectId
                                    }) || (this.client.logger.error(e, "Signature verification failed"), R((0, a.getSdkError)("SESSION_SETTLEMENT_FAILED", "Signature verification failed")));
                                    const { p: t } = e, r = (0, a.getRecapFromResources)(t.resources), n = [
                                        (0, a.getNamespacedDidChainId)(t.iss)
                                    ], i = (0, a.getDidAddress)(t.iss);
                                    if (r) {
                                        const e = (0, a.getMethodsFromRecap)(r), t = (0, a.getChainsFromRecap)(r);
                                        u.push(...e), n.push(...t);
                                    }
                                    for (const e of n)d.push(`${e}:${i}`);
                                }
                                const f = await this.client.core.crypto.generateSharedKey(_, h.publicKey);
                                let l;
                                u.length > 0 && (l = {
                                    topic: f,
                                    acknowledged: !0,
                                    self: {
                                        publicKey: _,
                                        metadata: this.client.metadata
                                    },
                                    peer: h,
                                    controller: h.publicKey,
                                    expiry: (0, a.calcExpiry)(I),
                                    requiredNamespaces: {},
                                    optionalNamespaces: {},
                                    relay: {
                                        protocol: "irn"
                                    },
                                    pairingTopic: v,
                                    namespaces: (0, a.buildNamespacesFromAuth)([
                                        ...new Set(u)
                                    ], [
                                        ...new Set(d)
                                    ]),
                                    transportType: s
                                }, await this.client.core.relayer.subscribe(f, {
                                    transportType: s
                                }), await this.client.session.set(f, l), v && await this.client.core.pairing.updateMetadata({
                                    topic: v,
                                    metadata: h.metadata
                                }), l = this.client.session.get(f)), null != (r = this.client.metadata.redirect) && r.linkMode && null != (i = h.metadata.redirect) && i.linkMode && null != (o = h.metadata.redirect) && o.universal && t && (this.client.core.addLinkModeSupportedApp(h.metadata.redirect.universal), this.client.session.update(f, {
                                    transportType: n.TRANSPORT_TYPES.link_mode
                                })), C({
                                    auths: c,
                                    session: l
                                });
                            }, O = (0, u.payloadId)(), N = (0, u.payloadId)();
                            let U;
                            this.events.once((0, a.engineEvent)("session_connect"), k), this.events.once((0, a.engineEvent)("session_request", O), P);
                            try {
                                if (i) {
                                    const e = (0, u.formatJsonRpcRequest)("wc_sessionAuthenticate", A, O);
                                    this.client.core.history.set(v, e);
                                    const r = await this.client.core.crypto.encode("", e, {
                                        type: a.TYPE_2,
                                        encoding: a.BASE64URL
                                    });
                                    U = (0, a.getLinkModeURL)(t, v, r);
                                } else await Promise.all([
                                    this.sendRequest({
                                        topic: v,
                                        method: "wc_sessionAuthenticate",
                                        params: A,
                                        expiry: e.expiry,
                                        throwOnFailedPublish: !0,
                                        clientRpcId: O
                                    }),
                                    this.sendRequest({
                                        topic: v,
                                        method: "wc_sessionPropose",
                                        params: M,
                                        expiry: x.wc_sessionPropose.req.ttl,
                                        throwOnFailedPublish: !0,
                                        clientRpcId: N
                                    })
                                ]);
                            } catch (e) {
                                throw this.events.off((0, a.engineEvent)("session_connect"), k), this.events.off((0, a.engineEvent)("session_request", O), P), e;
                            }
                            return await this.setProposal(N, W({
                                id: N
                            }, M)), await this.setAuthRequest(O, {
                                request: J(W({}, A), {
                                    verifyContext: {}
                                }),
                                pairingTopic: v,
                                transportType: s
                            }), {
                                uri: U ?? w,
                                response: T
                            };
                        }, this.approveSessionAuthenticate = async (e)=>{
                            const { id: t, auths: r } = e, i = this.client.core.eventClient.createEvent({
                                properties: {
                                    topic: t.toString(),
                                    trace: [
                                        n.EVENT_CLIENT_AUTHENTICATE_TRACES.authenticated_session_approve_started
                                    ]
                                }
                            });
                            try {
                                this.isInitialized();
                            } catch (e) {
                                throw i.setError(n.EVENT_CLIENT_AUTHENTICATE_ERRORS.no_internet_connection), e;
                            }
                            const s = this.getPendingAuthRequest(t);
                            if (!s) throw i.setError(n.EVENT_CLIENT_AUTHENTICATE_ERRORS.authenticated_session_pending_request_not_found), new Error(`Could not find pending auth request with id ${t}`);
                            const o = s.transportType || n.TRANSPORT_TYPES.relay;
                            o === n.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();
                            const c = s.requester.publicKey, h = await this.client.core.crypto.generateKeyPair(), u = (0, a.hashKey)(c), d = {
                                type: a.TYPE_1,
                                receiverPublicKey: c,
                                senderPublicKey: h
                            }, f = [], l = [];
                            for (const e of r){
                                if (!await (0, a.validateSignedCacao)({
                                    cacao: e,
                                    projectId: this.client.core.projectId
                                })) {
                                    i.setError(n.EVENT_CLIENT_AUTHENTICATE_ERRORS.invalid_cacao);
                                    const e = (0, a.getSdkError)("SESSION_SETTLEMENT_FAILED", "Signature verification failed");
                                    throw await this.sendError({
                                        id: t,
                                        topic: u,
                                        error: e,
                                        encodeOpts: d
                                    }), new Error(e.message);
                                }
                                i.addTrace(n.EVENT_CLIENT_AUTHENTICATE_TRACES.cacaos_verified);
                                const { p: r } = e, s = (0, a.getRecapFromResources)(r.resources), o = [
                                    (0, a.getNamespacedDidChainId)(r.iss)
                                ], c = (0, a.getDidAddress)(r.iss);
                                if (s) {
                                    const e = (0, a.getMethodsFromRecap)(s), t = (0, a.getChainsFromRecap)(s);
                                    f.push(...e), o.push(...t);
                                }
                                for (const e of o)l.push(`${e}:${c}`);
                            }
                            const p = await this.client.core.crypto.generateSharedKey(h, c);
                            let b;
                            if (i.addTrace(n.EVENT_CLIENT_AUTHENTICATE_TRACES.create_authenticated_session_topic), f?.length > 0) {
                                b = {
                                    topic: p,
                                    acknowledged: !0,
                                    self: {
                                        publicKey: h,
                                        metadata: this.client.metadata
                                    },
                                    peer: {
                                        publicKey: c,
                                        metadata: s.requester.metadata
                                    },
                                    controller: c,
                                    expiry: (0, a.calcExpiry)(I),
                                    authentication: r,
                                    requiredNamespaces: {},
                                    optionalNamespaces: {},
                                    relay: {
                                        protocol: "irn"
                                    },
                                    pairingTopic: s.pairingTopic,
                                    namespaces: (0, a.buildNamespacesFromAuth)([
                                        ...new Set(f)
                                    ], [
                                        ...new Set(l)
                                    ]),
                                    transportType: o
                                }, i.addTrace(n.EVENT_CLIENT_AUTHENTICATE_TRACES.subscribing_authenticated_session_topic);
                                try {
                                    await this.client.core.relayer.subscribe(p, {
                                        transportType: o
                                    });
                                } catch (e) {
                                    throw i.setError(n.EVENT_CLIENT_AUTHENTICATE_ERRORS.subscribe_authenticated_session_topic_failure), e;
                                }
                                i.addTrace(n.EVENT_CLIENT_AUTHENTICATE_TRACES.subscribe_authenticated_session_topic_success), await this.client.session.set(p, b), i.addTrace(n.EVENT_CLIENT_AUTHENTICATE_TRACES.store_authenticated_session), await this.client.core.pairing.updateMetadata({
                                    topic: s.pairingTopic,
                                    metadata: s.requester.metadata
                                });
                            }
                            i.addTrace(n.EVENT_CLIENT_AUTHENTICATE_TRACES.publishing_authenticated_session_approve);
                            try {
                                await this.sendResult({
                                    topic: u,
                                    id: t,
                                    result: {
                                        cacaos: r,
                                        responder: {
                                            publicKey: h,
                                            metadata: this.client.metadata
                                        }
                                    },
                                    encodeOpts: d,
                                    throwOnFailedPublish: !0,
                                    appLink: this.getAppLinkIfEnabled(s.requester.metadata, o)
                                });
                            } catch (e) {
                                throw i.setError(n.EVENT_CLIENT_AUTHENTICATE_ERRORS.authenticated_session_approve_publish_failure), e;
                            }
                            return await this.client.auth.requests.delete(t, {
                                message: "fulfilled",
                                code: 0
                            }), await this.client.core.pairing.activate({
                                topic: s.pairingTopic
                            }), this.client.core.eventClient.deleteEvent({
                                eventId: i.eventId
                            }), {
                                session: b
                            };
                        }, this.rejectSessionAuthenticate = async (e)=>{
                            this.isInitialized();
                            const { id: t, reason: r } = e, i = this.getPendingAuthRequest(t);
                            if (!i) throw new Error(`Could not find pending auth request with id ${t}`);
                            i.transportType === n.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();
                            const s = i.requester.publicKey, o = await this.client.core.crypto.generateKeyPair(), c = (0, a.hashKey)(s), h = {
                                type: a.TYPE_1,
                                receiverPublicKey: s,
                                senderPublicKey: o
                            };
                            await this.sendError({
                                id: t,
                                topic: c,
                                error: r,
                                encodeOpts: h,
                                rpcOpts: x.wc_sessionAuthenticate.reject,
                                appLink: this.getAppLinkIfEnabled(i.requester.metadata, i.transportType)
                            }), await this.client.auth.requests.delete(t, {
                                message: "rejected",
                                code: 0
                            }), await this.client.proposal.delete(t, (0, a.getSdkError)("USER_DISCONNECTED"));
                        }, this.formatAuthMessage = (e)=>{
                            this.isInitialized();
                            const { request: t, iss: r } = e;
                            return (0, a.formatMessage)(t, r);
                        }, this.processRelayMessageCache = ()=>{
                            setTimeout(async ()=>{
                                if (0 !== this.relayMessageCache.length) for(; this.relayMessageCache.length > 0;)try {
                                    const e = this.relayMessageCache.shift();
                                    e && await this.onRelayMessage(e);
                                } catch (e) {
                                    this.client.logger.error(e);
                                }
                            }, 50);
                        }, this.cleanupDuplicatePairings = async (e)=>{
                            if (e.pairingTopic) try {
                                const t = this.client.core.pairing.pairings.get(e.pairingTopic), r = this.client.core.pairing.pairings.getAll().filter((r)=>{
                                    var n, i;
                                    return (null == (n = r.peerMetadata) ? void 0 : n.url) && (null == (i = r.peerMetadata) ? void 0 : i.url) === e.peer.metadata.url && r.topic && r.topic !== t.topic;
                                });
                                if (0 === r.length) return;
                                this.client.logger.info(`Cleaning up ${r.length} duplicate pairing(s)`), await Promise.all(r.map((e)=>this.client.core.pairing.disconnect({
                                        topic: e.topic
                                    }))), this.client.logger.info("Duplicate pairings clean up finished");
                            } catch (e) {
                                this.client.logger.error(e);
                            }
                        }, this.deleteSession = async (e)=>{
                            var t;
                            const { topic: r, expirerHasDeleted: n = !1, emitEvent: i = !0, id: s = 0 } = e, { self: o } = this.client.session.get(r);
                            await this.client.core.relayer.unsubscribe(r), await this.client.session.delete(r, (0, a.getSdkError)("USER_DISCONNECTED")), this.addToRecentlyDeleted(r, "session"), this.client.core.crypto.keychain.has(o.publicKey) && await this.client.core.crypto.deleteKeyPair(o.publicKey), this.client.core.crypto.keychain.has(r) && await this.client.core.crypto.deleteSymKey(r), n || this.client.core.expirer.del(r), this.client.core.storage.removeItem(y).catch((e)=>this.client.logger.warn(e)), this.getPendingSessionRequests().forEach((e)=>{
                                e.topic === r && this.deletePendingSessionRequest(e.id, (0, a.getSdkError)("USER_DISCONNECTED"));
                            }), r === (null == (t = this.sessionRequestQueue.queue[0]) ? void 0 : t.topic) && (this.sessionRequestQueue.state = R.idle), i && this.client.events.emit("session_delete", {
                                id: s,
                                topic: r
                            });
                        }, this.deleteProposal = async (e, t)=>{
                            if (t) try {
                                const t = this.client.proposal.get(e), r = this.client.core.eventClient.getEvent({
                                    topic: t.pairingTopic
                                });
                                r?.setError(n.EVENT_CLIENT_SESSION_ERRORS.proposal_expired);
                            } catch  {}
                            await Promise.all([
                                this.client.proposal.delete(e, (0, a.getSdkError)("USER_DISCONNECTED")),
                                t ? Promise.resolve() : this.client.core.expirer.del(e)
                            ]), this.addToRecentlyDeleted(e, "proposal");
                        }, this.deletePendingSessionRequest = async (e, t, r = !1)=>{
                            await Promise.all([
                                this.client.pendingRequest.delete(e, t),
                                r ? Promise.resolve() : this.client.core.expirer.del(e)
                            ]), this.addToRecentlyDeleted(e, "request"), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((t)=>t.id !== e), r && (this.sessionRequestQueue.state = R.idle, this.client.events.emit("session_request_expire", {
                                id: e
                            }));
                        }, this.deletePendingAuthRequest = async (e, t, r = !1)=>{
                            await Promise.all([
                                this.client.auth.requests.delete(e, t),
                                r ? Promise.resolve() : this.client.core.expirer.del(e)
                            ]);
                        }, this.setExpiry = async (e, t)=>{
                            this.client.session.keys.includes(e) && (this.client.core.expirer.set(e, t), await this.client.session.update(e, {
                                expiry: t
                            }));
                        }, this.setProposal = async (e, t)=>{
                            this.client.core.expirer.set(e, (0, a.calcExpiry)(x.wc_sessionPropose.req.ttl)), await this.client.proposal.set(e, t);
                        }, this.setAuthRequest = async (e, t)=>{
                            const { request: r, pairingTopic: i, transportType: s = n.TRANSPORT_TYPES.relay } = t;
                            this.client.core.expirer.set(e, r.expiryTimestamp), await this.client.auth.requests.set(e, {
                                authPayload: r.authPayload,
                                requester: r.requester,
                                expiryTimestamp: r.expiryTimestamp,
                                id: e,
                                pairingTopic: i,
                                verifyContext: r.verifyContext,
                                transportType: s
                            });
                        }, this.setPendingSessionRequest = async (e)=>{
                            const { id: t, topic: r, params: n, verifyContext: i } = e, s = n.request.expiryTimestamp || (0, a.calcExpiry)(x.wc_sessionRequest.req.ttl);
                            this.client.core.expirer.set(t, s), await this.client.pendingRequest.set(t, {
                                id: t,
                                topic: r,
                                params: n,
                                verifyContext: i
                            });
                        }, this.sendRequest = async (e)=>{
                            const { topic: t, method: n, params: i, expiry: s, relayRpcId: o, clientRpcId: c, throwOnFailedPublish: h, appLink: d } = e, f = (0, u.formatJsonRpcRequest)(n, i, c);
                            let l;
                            const p = !!d;
                            try {
                                const e = p ? a.BASE64URL : a.BASE64;
                                l = await this.client.core.crypto.encode(t, f, {
                                    encoding: e
                                });
                            } catch (e) {
                                throw await this.cleanup(), this.client.logger.error(`sendRequest() -> core.crypto.encode() for topic ${t} failed`), e;
                            }
                            let b;
                            if (P.includes(n)) {
                                const e = (0, a.hashMessage)(JSON.stringify(f)), t = (0, a.hashMessage)(l);
                                b = await this.client.core.verify.register({
                                    id: t,
                                    decryptedId: e
                                });
                            }
                            const g = x[n].req;
                            if (g.attestation = b, s && (g.ttl = s), o && (g.id = o), this.client.core.history.set(t, f), p) {
                                const e = (0, a.getLinkModeURL)(d, t, l);
                                await r.g.Linking.openURL(e, this.client.name);
                            } else {
                                const e = x[n].req;
                                s && (e.ttl = s), o && (e.id = o), h ? (e.internal = J(W({}, e.internal), {
                                    throwOnFailedPublish: !0
                                }), await this.client.core.relayer.publish(t, l, e)) : this.client.core.relayer.publish(t, l, e).catch((e)=>this.client.logger.error(e));
                            }
                            return f.id;
                        }, this.sendResult = async (e)=>{
                            const { id: t, topic: n, result: i, throwOnFailedPublish: s, encodeOpts: o, appLink: c } = e, h = (0, u.formatJsonRpcResult)(t, i);
                            let d;
                            const f = c && typeof (null == r.g ? void 0 : r.g.Linking) < "u";
                            try {
                                const e = f ? a.BASE64URL : a.BASE64;
                                d = await this.client.core.crypto.encode(n, h, J(W({}, o || {}), {
                                    encoding: e
                                }));
                            } catch (e) {
                                throw await this.cleanup(), this.client.logger.error(`sendResult() -> core.crypto.encode() for topic ${n} failed`), e;
                            }
                            let l;
                            try {
                                l = await this.client.core.history.get(n, t);
                            } catch (e) {
                                throw this.client.logger.error(`sendResult() -> history.get(${n}, ${t}) failed`), e;
                            }
                            if (f) {
                                const e = (0, a.getLinkModeURL)(c, n, d);
                                await r.g.Linking.openURL(e, this.client.name);
                            } else {
                                const e = x[l.request.method].res;
                                s ? (e.internal = J(W({}, e.internal), {
                                    throwOnFailedPublish: !0
                                }), await this.client.core.relayer.publish(n, d, e)) : this.client.core.relayer.publish(n, d, e).catch((e)=>this.client.logger.error(e));
                            }
                            await this.client.core.history.resolve(h);
                        }, this.sendError = async (e)=>{
                            const { id: t, topic: n, error: i, encodeOpts: s, rpcOpts: o, appLink: c } = e, h = (0, u.formatJsonRpcError)(t, i);
                            let d;
                            const f = c && typeof (null == r.g ? void 0 : r.g.Linking) < "u";
                            try {
                                const e = f ? a.BASE64URL : a.BASE64;
                                d = await this.client.core.crypto.encode(n, h, J(W({}, s || {}), {
                                    encoding: e
                                }));
                            } catch (e) {
                                throw await this.cleanup(), this.client.logger.error(`sendError() -> core.crypto.encode() for topic ${n} failed`), e;
                            }
                            let l;
                            try {
                                l = await this.client.core.history.get(n, t);
                            } catch (e) {
                                throw this.client.logger.error(`sendError() -> history.get(${n}, ${t}) failed`), e;
                            }
                            if (f) {
                                const e = (0, a.getLinkModeURL)(c, n, d);
                                await r.g.Linking.openURL(e, this.client.name);
                            } else {
                                const e = o || x[l.request.method].res;
                                this.client.core.relayer.publish(n, d, e);
                            }
                            await this.client.core.history.resolve(h);
                        }, this.cleanup = async ()=>{
                            const e = [], t = [];
                            this.client.session.getAll().forEach((t)=>{
                                let r = !1;
                                (0, a.isExpired)(t.expiry) && (r = !0), this.client.core.crypto.keychain.has(t.topic) || (r = !0), r && e.push(t.topic);
                            }), this.client.proposal.getAll().forEach((e)=>{
                                (0, a.isExpired)(e.expiryTimestamp) && t.push(e.id);
                            }), await Promise.all([
                                ...e.map((e)=>this.deleteSession({
                                        topic: e
                                    })),
                                ...t.map((e)=>this.deleteProposal(e))
                            ]);
                        }, this.onRelayEventRequest = async (e)=>{
                            this.requestQueue.queue.push(e), await this.processRequestsQueue();
                        }, this.processRequestsQueue = async ()=>{
                            if (this.requestQueue.state !== R.active) {
                                for(this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0;){
                                    this.requestQueue.state = R.active;
                                    const e = this.requestQueue.queue.shift();
                                    if (e) try {
                                        await this.processRequest(e);
                                    } catch (e) {
                                        this.client.logger.warn(e);
                                    }
                                }
                                this.requestQueue.state = R.idle;
                            } else this.client.logger.info("Request queue already active, skipping...");
                        }, this.processRequest = async (e)=>{
                            const { topic: t, payload: r, attestation: n, transportType: i, encryptedId: s } = e, o = r.method;
                            if (!this.shouldIgnorePairingRequest({
                                topic: t,
                                requestMethod: o
                            })) switch(o){
                                case "wc_sessionPropose":
                                    return await this.onSessionProposeRequest({
                                        topic: t,
                                        payload: r,
                                        attestation: n,
                                        encryptedId: s
                                    });
                                case "wc_sessionSettle":
                                    return await this.onSessionSettleRequest(t, r);
                                case "wc_sessionUpdate":
                                    return await this.onSessionUpdateRequest(t, r);
                                case "wc_sessionExtend":
                                    return await this.onSessionExtendRequest(t, r);
                                case "wc_sessionPing":
                                    return await this.onSessionPingRequest(t, r);
                                case "wc_sessionDelete":
                                    return await this.onSessionDeleteRequest(t, r);
                                case "wc_sessionRequest":
                                    return await this.onSessionRequest({
                                        topic: t,
                                        payload: r,
                                        attestation: n,
                                        encryptedId: s,
                                        transportType: i
                                    });
                                case "wc_sessionEvent":
                                    return await this.onSessionEventRequest(t, r);
                                case "wc_sessionAuthenticate":
                                    return await this.onSessionAuthenticateRequest({
                                        topic: t,
                                        payload: r,
                                        attestation: n,
                                        encryptedId: s,
                                        transportType: i
                                    });
                                default:
                                    return this.client.logger.info(`Unsupported request method ${o}`);
                            }
                        }, this.onRelayEventResponse = async (e)=>{
                            const { topic: t, payload: r, transportType: n } = e, i = (await this.client.core.history.get(t, r.id)).request.method;
                            switch(i){
                                case "wc_sessionPropose":
                                    return this.onSessionProposeResponse(t, r, n);
                                case "wc_sessionSettle":
                                    return this.onSessionSettleResponse(t, r);
                                case "wc_sessionUpdate":
                                    return this.onSessionUpdateResponse(t, r);
                                case "wc_sessionExtend":
                                    return this.onSessionExtendResponse(t, r);
                                case "wc_sessionPing":
                                    return this.onSessionPingResponse(t, r);
                                case "wc_sessionRequest":
                                    return this.onSessionRequestResponse(t, r);
                                case "wc_sessionAuthenticate":
                                    return this.onSessionAuthenticateResponse(t, r);
                                default:
                                    return this.client.logger.info(`Unsupported response method ${i}`);
                            }
                        }, this.onRelayEventUnknownPayload = (e)=>{
                            const { topic: t } = e, { message: r } = (0, a.getInternalError)("MISSING_OR_INVALID", `Decoded payload on topic ${t} is not identifiable as a JSON-RPC request or a response.`);
                            throw new Error(r);
                        }, this.shouldIgnorePairingRequest = (e)=>{
                            const { topic: t, requestMethod: r } = e, n = this.expectedPairingMethodMap.get(t);
                            return !(!n || n.includes(r) || !(n.includes("wc_sessionAuthenticate") && this.client.events.listenerCount("session_authenticate") > 0));
                        }, this.onSessionProposeRequest = async (e)=>{
                            const { topic: t, payload: r, attestation: i, encryptedId: s } = e, { params: o, id: c } = r;
                            try {
                                const e = this.client.core.eventClient.getEvent({
                                    topic: t
                                });
                                0 === this.client.events.listenerCount("session_proposal") && (console.warn("No listener for session_proposal event"), e?.setError(n.EVENT_CLIENT_PAIRING_ERRORS.proposal_listener_not_found)), this.isValidConnect(W({}, r.params));
                                const h = o.expiryTimestamp || (0, a.calcExpiry)(x.wc_sessionPropose.req.ttl), u = W({
                                    id: c,
                                    pairingTopic: t,
                                    expiryTimestamp: h
                                }, o);
                                await this.setProposal(c, u);
                                const d = await this.getVerifyContext({
                                    attestationId: i,
                                    hash: (0, a.hashMessage)(JSON.stringify(r)),
                                    encryptedId: s,
                                    metadata: u.proposer.metadata
                                });
                                e?.addTrace(n.EVENT_CLIENT_PAIRING_TRACES.emit_session_proposal), this.client.events.emit("session_proposal", {
                                    id: c,
                                    params: u,
                                    verifyContext: d
                                });
                            } catch (e) {
                                await this.sendError({
                                    id: c,
                                    topic: t,
                                    error: e,
                                    rpcOpts: x.wc_sessionPropose.autoReject
                                }), this.client.logger.error(e);
                            }
                        }, this.onSessionProposeResponse = async (e, t, r)=>{
                            const { id: n } = t;
                            if ((0, u.isJsonRpcResult)(t)) {
                                const { result: i } = t;
                                this.client.logger.trace({
                                    type: "method",
                                    method: "onSessionProposeResponse",
                                    result: i
                                });
                                const s = this.client.proposal.get(n);
                                this.client.logger.trace({
                                    type: "method",
                                    method: "onSessionProposeResponse",
                                    proposal: s
                                });
                                const o = s.proposer.publicKey;
                                this.client.logger.trace({
                                    type: "method",
                                    method: "onSessionProposeResponse",
                                    selfPublicKey: o
                                });
                                const a = i.responderPublicKey;
                                this.client.logger.trace({
                                    type: "method",
                                    method: "onSessionProposeResponse",
                                    peerPublicKey: a
                                });
                                const c = await this.client.core.crypto.generateSharedKey(o, a);
                                this.client.logger.trace({
                                    type: "method",
                                    method: "onSessionProposeResponse",
                                    sessionTopic: c
                                });
                                const h = await this.client.core.relayer.subscribe(c, {
                                    transportType: r
                                });
                                this.client.logger.trace({
                                    type: "method",
                                    method: "onSessionProposeResponse",
                                    subscriptionId: h
                                }), await this.client.core.pairing.activate({
                                    topic: e
                                });
                            } else if ((0, u.isJsonRpcError)(t)) {
                                await this.client.proposal.delete(n, (0, a.getSdkError)("USER_DISCONNECTED"));
                                const e = (0, a.engineEvent)("session_connect");
                                if (0 === this.events.listenerCount(e)) throw new Error(`emitting ${e} without any listeners, 954`);
                                this.events.emit((0, a.engineEvent)("session_connect"), {
                                    error: t.error
                                });
                            }
                        }, this.onSessionSettleRequest = async (e, t)=>{
                            const { id: r, params: i } = t;
                            try {
                                this.isValidSessionSettleRequest(i);
                                const { relay: r, controller: s, expiry: o, namespaces: c, sessionProperties: h, sessionConfig: u } = t.params, d = J(W(W({
                                    topic: e,
                                    relay: r,
                                    expiry: o,
                                    namespaces: c,
                                    acknowledged: !0,
                                    pairingTopic: "",
                                    requiredNamespaces: {},
                                    optionalNamespaces: {},
                                    controller: s.publicKey,
                                    self: {
                                        publicKey: "",
                                        metadata: this.client.metadata
                                    },
                                    peer: {
                                        publicKey: s.publicKey,
                                        metadata: s.metadata
                                    }
                                }, h && {
                                    sessionProperties: h
                                }), u && {
                                    sessionConfig: u
                                }), {
                                    transportType: n.TRANSPORT_TYPES.relay
                                }), f = (0, a.engineEvent)("session_connect");
                                if (0 === this.events.listenerCount(f)) throw new Error(`emitting ${f} without any listeners 997`);
                                this.events.emit((0, a.engineEvent)("session_connect"), {
                                    session: d
                                }), await this.sendResult({
                                    id: t.id,
                                    topic: e,
                                    result: !0,
                                    throwOnFailedPublish: !0
                                });
                            } catch (t) {
                                await this.sendError({
                                    id: r,
                                    topic: e,
                                    error: t
                                }), this.client.logger.error(t);
                            }
                        }, this.onSessionSettleResponse = async (e, t)=>{
                            const { id: r } = t;
                            (0, u.isJsonRpcResult)(t) ? (await this.client.session.update(e, {
                                acknowledged: !0
                            }), this.events.emit((0, a.engineEvent)("session_approve", r), {})) : (0, u.isJsonRpcError)(t) && (await this.client.session.delete(e, (0, a.getSdkError)("USER_DISCONNECTED")), this.events.emit((0, a.engineEvent)("session_approve", r), {
                                error: t.error
                            }));
                        }, this.onSessionUpdateRequest = async (e, t)=>{
                            const { params: r, id: n } = t;
                            try {
                                const t = `${e}_session_update`, i = a.MemoryStore.get(t);
                                if (i && this.isRequestOutOfSync(i, n)) return this.client.logger.warn(`Discarding out of sync request - ${n}`), void this.sendError({
                                    id: n,
                                    topic: e,
                                    error: (0, a.getSdkError)("INVALID_UPDATE_REQUEST")
                                });
                                this.isValidUpdate(W({
                                    topic: e
                                }, r));
                                try {
                                    a.MemoryStore.set(t, n), await this.client.session.update(e, {
                                        namespaces: r.namespaces
                                    }), await this.sendResult({
                                        id: n,
                                        topic: e,
                                        result: !0,
                                        throwOnFailedPublish: !0
                                    });
                                } catch (e) {
                                    throw a.MemoryStore.delete(t), e;
                                }
                                this.client.events.emit("session_update", {
                                    id: n,
                                    topic: e,
                                    params: r
                                });
                            } catch (t) {
                                await this.sendError({
                                    id: n,
                                    topic: e,
                                    error: t
                                }), this.client.logger.error(t);
                            }
                        }, this.isRequestOutOfSync = (e, t)=>t.toString().slice(0, -3) < e.toString().slice(0, -3), this.onSessionUpdateResponse = (e, t)=>{
                            const { id: r } = t, n = (0, a.engineEvent)("session_update", r);
                            if (0 === this.events.listenerCount(n)) throw new Error(`emitting ${n} without any listeners`);
                            (0, u.isJsonRpcResult)(t) ? this.events.emit((0, a.engineEvent)("session_update", r), {}) : (0, u.isJsonRpcError)(t) && this.events.emit((0, a.engineEvent)("session_update", r), {
                                error: t.error
                            });
                        }, this.onSessionExtendRequest = async (e, t)=>{
                            const { id: r } = t;
                            try {
                                this.isValidExtend({
                                    topic: e
                                }), await this.setExpiry(e, (0, a.calcExpiry)(I)), await this.sendResult({
                                    id: r,
                                    topic: e,
                                    result: !0,
                                    throwOnFailedPublish: !0
                                }), this.client.events.emit("session_extend", {
                                    id: r,
                                    topic: e
                                });
                            } catch (t) {
                                await this.sendError({
                                    id: r,
                                    topic: e,
                                    error: t
                                }), this.client.logger.error(t);
                            }
                        }, this.onSessionExtendResponse = (e, t)=>{
                            const { id: r } = t, n = (0, a.engineEvent)("session_extend", r);
                            if (0 === this.events.listenerCount(n)) throw new Error(`emitting ${n} without any listeners`);
                            (0, u.isJsonRpcResult)(t) ? this.events.emit((0, a.engineEvent)("session_extend", r), {}) : (0, u.isJsonRpcError)(t) && this.events.emit((0, a.engineEvent)("session_extend", r), {
                                error: t.error
                            });
                        }, this.onSessionPingRequest = async (e, t)=>{
                            const { id: r } = t;
                            try {
                                this.isValidPing({
                                    topic: e
                                }), await this.sendResult({
                                    id: r,
                                    topic: e,
                                    result: !0,
                                    throwOnFailedPublish: !0
                                }), this.client.events.emit("session_ping", {
                                    id: r,
                                    topic: e
                                });
                            } catch (t) {
                                await this.sendError({
                                    id: r,
                                    topic: e,
                                    error: t
                                }), this.client.logger.error(t);
                            }
                        }, this.onSessionPingResponse = (e, t)=>{
                            const { id: r } = t, n = (0, a.engineEvent)("session_ping", r);
                            if (0 === this.events.listenerCount(n)) throw new Error(`emitting ${n} without any listeners`);
                            setTimeout(()=>{
                                (0, u.isJsonRpcResult)(t) ? this.events.emit((0, a.engineEvent)("session_ping", r), {}) : (0, u.isJsonRpcError)(t) && this.events.emit((0, a.engineEvent)("session_ping", r), {
                                    error: t.error
                                });
                            }, 500);
                        }, this.onSessionDeleteRequest = async (e, t)=>{
                            const { id: r } = t;
                            try {
                                this.isValidDisconnect({
                                    topic: e,
                                    reason: t.params
                                }), Promise.all([
                                    new Promise((t)=>{
                                        this.client.core.relayer.once(n.RELAYER_EVENTS.publish, async ()=>{
                                            t(await this.deleteSession({
                                                topic: e,
                                                id: r
                                            }));
                                        });
                                    }),
                                    this.sendResult({
                                        id: r,
                                        topic: e,
                                        result: !0,
                                        throwOnFailedPublish: !0
                                    }),
                                    this.cleanupPendingSentRequestsForTopic({
                                        topic: e,
                                        error: (0, a.getSdkError)("USER_DISCONNECTED")
                                    })
                                ]).catch((e)=>this.client.logger.error(e));
                            } catch (e) {
                                this.client.logger.error(e);
                            }
                        }, this.onSessionRequest = async (e)=>{
                            var t, r, i;
                            const { topic: s, payload: o, attestation: c, encryptedId: h, transportType: d } = e, { id: f, params: l } = o;
                            try {
                                await this.isValidRequest(W({
                                    topic: s
                                }, l));
                                const e = this.client.session.get(s), o = {
                                    id: f,
                                    topic: s,
                                    params: l,
                                    verifyContext: await this.getVerifyContext({
                                        attestationId: c,
                                        hash: (0, a.hashMessage)(JSON.stringify((0, u.formatJsonRpcRequest)("wc_sessionRequest", l, f))),
                                        encryptedId: h,
                                        metadata: e.peer.metadata,
                                        transportType: d
                                    })
                                };
                                await this.setPendingSessionRequest(o), d === n.TRANSPORT_TYPES.link_mode && null != (t = e.peer.metadata.redirect) && t.universal && this.client.core.addLinkModeSupportedApp(null == (r = e.peer.metadata.redirect) ? void 0 : r.universal), null != (i = this.client.signConfig) && i.disableRequestQueue ? this.emitSessionRequest(o) : (this.addSessionRequestToSessionRequestQueue(o), this.processSessionRequestQueue());
                            } catch (e) {
                                await this.sendError({
                                    id: f,
                                    topic: s,
                                    error: e
                                }), this.client.logger.error(e);
                            }
                        }, this.onSessionRequestResponse = (e, t)=>{
                            const { id: r } = t, n = (0, a.engineEvent)("session_request", r);
                            if (0 === this.events.listenerCount(n)) throw new Error(`emitting ${n} without any listeners`);
                            (0, u.isJsonRpcResult)(t) ? this.events.emit((0, a.engineEvent)("session_request", r), {
                                result: t.result
                            }) : (0, u.isJsonRpcError)(t) && this.events.emit((0, a.engineEvent)("session_request", r), {
                                error: t.error
                            });
                        }, this.onSessionEventRequest = async (e, t)=>{
                            const { id: r, params: n } = t;
                            try {
                                const t = `${e}_session_event_${n.event.name}`, i = a.MemoryStore.get(t);
                                if (i && this.isRequestOutOfSync(i, r)) return void this.client.logger.info(`Discarding out of sync request - ${r}`);
                                this.isValidEmit(W({
                                    topic: e
                                }, n)), this.client.events.emit("session_event", {
                                    id: r,
                                    topic: e,
                                    params: n
                                }), a.MemoryStore.set(t, r);
                            } catch (t) {
                                await this.sendError({
                                    id: r,
                                    topic: e,
                                    error: t
                                }), this.client.logger.error(t);
                            }
                        }, this.onSessionAuthenticateResponse = (e, t)=>{
                            const { id: r } = t;
                            this.client.logger.trace({
                                type: "method",
                                method: "onSessionAuthenticateResponse",
                                topic: e,
                                payload: t
                            }), (0, u.isJsonRpcResult)(t) ? this.events.emit((0, a.engineEvent)("session_request", r), {
                                result: t.result
                            }) : (0, u.isJsonRpcError)(t) && this.events.emit((0, a.engineEvent)("session_request", r), {
                                error: t.error
                            });
                        }, this.onSessionAuthenticateRequest = async (e)=>{
                            var t;
                            const { topic: r, payload: i, attestation: s, encryptedId: o, transportType: c } = e;
                            try {
                                const { requester: e, authPayload: h, expiryTimestamp: u } = i.params, d = await this.getVerifyContext({
                                    attestationId: s,
                                    hash: (0, a.hashMessage)(JSON.stringify(i)),
                                    encryptedId: o,
                                    metadata: e.metadata,
                                    transportType: c
                                }), f = {
                                    requester: e,
                                    pairingTopic: r,
                                    id: i.id,
                                    authPayload: h,
                                    verifyContext: d,
                                    expiryTimestamp: u
                                };
                                await this.setAuthRequest(i.id, {
                                    request: f,
                                    pairingTopic: r,
                                    transportType: c
                                }), c === n.TRANSPORT_TYPES.link_mode && null != (t = e.metadata.redirect) && t.universal && this.client.core.addLinkModeSupportedApp(e.metadata.redirect.universal), this.client.events.emit("session_authenticate", {
                                    topic: r,
                                    params: i.params,
                                    id: i.id,
                                    verifyContext: d
                                });
                            } catch (e) {
                                this.client.logger.error(e);
                                const t = i.params.requester.publicKey, n = await this.client.core.crypto.generateKeyPair(), s = this.getAppLinkIfEnabled(i.params.requester.metadata, c), o = {
                                    type: a.TYPE_1,
                                    receiverPublicKey: t,
                                    senderPublicKey: n
                                };
                                await this.sendError({
                                    id: i.id,
                                    topic: r,
                                    error: e,
                                    encodeOpts: o,
                                    rpcOpts: x.wc_sessionAuthenticate.autoReject,
                                    appLink: s
                                });
                            }
                        }, this.addSessionRequestToSessionRequestQueue = (e)=>{
                            this.sessionRequestQueue.queue.push(e);
                        }, this.cleanupAfterResponse = (e)=>{
                            this.deletePendingSessionRequest(e.response.id, {
                                message: "fulfilled",
                                code: 0
                            }), setTimeout(()=>{
                                this.sessionRequestQueue.state = R.idle, this.processSessionRequestQueue();
                            }, (0, o.toMiliseconds)(this.requestQueueDelay));
                        }, this.cleanupPendingSentRequestsForTopic = ({ topic: e, error: t })=>{
                            const r = this.client.core.history.pending;
                            r.length > 0 && r.filter((t)=>t.topic === e && "wc_sessionRequest" === t.request.method).forEach((e)=>{
                                const r = e.request.id, n = (0, a.engineEvent)("session_request", r);
                                if (0 === this.events.listenerCount(n)) throw new Error(`emitting ${n} without any listeners`);
                                this.events.emit((0, a.engineEvent)("session_request", e.request.id), {
                                    error: t
                                });
                            });
                        }, this.processSessionRequestQueue = ()=>{
                            if (this.sessionRequestQueue.state === R.active) return void this.client.logger.info("session request queue is already active.");
                            const e = this.sessionRequestQueue.queue[0];
                            if (e) try {
                                this.sessionRequestQueue.state = R.active, this.emitSessionRequest(e);
                            } catch (e) {
                                this.client.logger.error(e);
                            }
                            else this.client.logger.info("session request queue is empty.");
                        }, this.emitSessionRequest = (e)=>{
                            this.client.events.emit("session_request", e);
                        }, this.onPairingCreated = (e)=>{
                            if (e.methods && this.expectedPairingMethodMap.set(e.topic, e.methods), e.active) return;
                            const t = this.client.proposal.getAll().find((t)=>t.pairingTopic === e.topic);
                            t && this.onSessionProposeRequest({
                                topic: e.topic,
                                payload: (0, u.formatJsonRpcRequest)("wc_sessionPropose", {
                                    requiredNamespaces: t.requiredNamespaces,
                                    optionalNamespaces: t.optionalNamespaces,
                                    relays: t.relays,
                                    proposer: t.proposer,
                                    sessionProperties: t.sessionProperties
                                }, t.id)
                            });
                        }, this.isValidConnect = async (e)=>{
                            if (!(0, a.isValidParams)(e)) {
                                const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `connect() params: ${JSON.stringify(e)}`);
                                throw new Error(t);
                            }
                            const { pairingTopic: t, requiredNamespaces: r, optionalNamespaces: n, sessionProperties: i, relays: s } = e;
                            if ((0, a.isUndefined)(t) || await this.isValidPairingTopic(t), !(0, a.isValidRelays)(s, !0)) {
                                const { message: e } = (0, a.getInternalError)("MISSING_OR_INVALID", `connect() relays: ${s}`);
                                throw new Error(e);
                            }
                            !(0, a.isUndefined)(r) && 0 !== (0, a.isValidObject)(r) && this.validateNamespaces(r, "requiredNamespaces"), !(0, a.isUndefined)(n) && 0 !== (0, a.isValidObject)(n) && this.validateNamespaces(n, "optionalNamespaces"), (0, a.isUndefined)(i) || this.validateSessionProps(i, "sessionProperties");
                        }, this.validateNamespaces = (e, t)=>{
                            const r = (0, a.isValidRequiredNamespaces)(e, "connect()", t);
                            if (r) throw new Error(r.message);
                        }, this.isValidApprove = async (e)=>{
                            if (!(0, a.isValidParams)(e)) throw new Error((0, a.getInternalError)("MISSING_OR_INVALID", `approve() params: ${e}`).message);
                            const { id: t, namespaces: r, relayProtocol: n, sessionProperties: i } = e;
                            this.checkRecentlyDeleted(t), await this.isValidProposalId(t);
                            const s = this.client.proposal.get(t), o = (0, a.isValidNamespaces)(r, "approve()");
                            if (o) throw new Error(o.message);
                            const c = (0, a.isConformingNamespaces)(s.requiredNamespaces, r, "approve()");
                            if (c) throw new Error(c.message);
                            if (!(0, a.isValidString)(n, !0)) {
                                const { message: e } = (0, a.getInternalError)("MISSING_OR_INVALID", `approve() relayProtocol: ${n}`);
                                throw new Error(e);
                            }
                            (0, a.isUndefined)(i) || this.validateSessionProps(i, "sessionProperties");
                        }, this.isValidReject = async (e)=>{
                            if (!(0, a.isValidParams)(e)) {
                                const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `reject() params: ${e}`);
                                throw new Error(t);
                            }
                            const { id: t, reason: r } = e;
                            if (this.checkRecentlyDeleted(t), await this.isValidProposalId(t), !(0, a.isValidErrorReason)(r)) {
                                const { message: e } = (0, a.getInternalError)("MISSING_OR_INVALID", `reject() reason: ${JSON.stringify(r)}`);
                                throw new Error(e);
                            }
                        }, this.isValidSessionSettleRequest = (e)=>{
                            if (!(0, a.isValidParams)(e)) {
                                const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `onSessionSettleRequest() params: ${e}`);
                                throw new Error(t);
                            }
                            const { relay: t, controller: r, namespaces: n, expiry: i } = e;
                            if (!(0, a.isValidRelay)(t)) {
                                const { message: e } = (0, a.getInternalError)("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string");
                                throw new Error(e);
                            }
                            const s = (0, a.isValidController)(r, "onSessionSettleRequest()");
                            if (s) throw new Error(s.message);
                            const o = (0, a.isValidNamespaces)(n, "onSessionSettleRequest()");
                            if (o) throw new Error(o.message);
                            if ((0, a.isExpired)(i)) {
                                const { message: e } = (0, a.getInternalError)("EXPIRED", "onSessionSettleRequest()");
                                throw new Error(e);
                            }
                        }, this.isValidUpdate = async (e)=>{
                            if (!(0, a.isValidParams)(e)) {
                                const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `update() params: ${e}`);
                                throw new Error(t);
                            }
                            const { topic: t, namespaces: r } = e;
                            this.checkRecentlyDeleted(t), await this.isValidSessionTopic(t);
                            const n = this.client.session.get(t), i = (0, a.isValidNamespaces)(r, "update()");
                            if (i) throw new Error(i.message);
                            const s = (0, a.isConformingNamespaces)(n.requiredNamespaces, r, "update()");
                            if (s) throw new Error(s.message);
                        }, this.isValidExtend = async (e)=>{
                            if (!(0, a.isValidParams)(e)) {
                                const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `extend() params: ${e}`);
                                throw new Error(t);
                            }
                            const { topic: t } = e;
                            this.checkRecentlyDeleted(t), await this.isValidSessionTopic(t);
                        }, this.isValidRequest = async (e)=>{
                            if (!(0, a.isValidParams)(e)) {
                                const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `request() params: ${e}`);
                                throw new Error(t);
                            }
                            const { topic: t, request: r, chainId: n, expiry: i } = e;
                            this.checkRecentlyDeleted(t), await this.isValidSessionTopic(t);
                            const { namespaces: s } = this.client.session.get(t);
                            if (!(0, a.isValidNamespacesChainId)(s, n)) {
                                const { message: e } = (0, a.getInternalError)("MISSING_OR_INVALID", `request() chainId: ${n}`);
                                throw new Error(e);
                            }
                            if (!(0, a.isValidRequest)(r)) {
                                const { message: e } = (0, a.getInternalError)("MISSING_OR_INVALID", `request() ${JSON.stringify(r)}`);
                                throw new Error(e);
                            }
                            if (!(0, a.isValidNamespacesRequest)(s, n, r.method)) {
                                const { message: e } = (0, a.getInternalError)("MISSING_OR_INVALID", `request() method: ${r.method}`);
                                throw new Error(e);
                            }
                            if (i && !(0, a.isValidRequestExpiry)(i, C)) {
                                const { message: e } = (0, a.getInternalError)("MISSING_OR_INVALID", `request() expiry: ${i}. Expiry must be a number (in seconds) between ${C.min} and ${C.max}`);
                                throw new Error(e);
                            }
                        }, this.isValidRespond = async (e)=>{
                            var t;
                            if (!(0, a.isValidParams)(e)) {
                                const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `respond() params: ${e}`);
                                throw new Error(t);
                            }
                            const { topic: r, response: n } = e;
                            try {
                                await this.isValidSessionTopic(r);
                            } catch (r) {
                                throw null != (t = e?.response) && t.id && this.cleanupAfterResponse(e), r;
                            }
                            if (!(0, a.isValidResponse)(n)) {
                                const { message: e } = (0, a.getInternalError)("MISSING_OR_INVALID", `respond() response: ${JSON.stringify(n)}`);
                                throw new Error(e);
                            }
                        }, this.isValidPing = async (e)=>{
                            if (!(0, a.isValidParams)(e)) {
                                const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `ping() params: ${e}`);
                                throw new Error(t);
                            }
                            const { topic: t } = e;
                            await this.isValidSessionOrPairingTopic(t);
                        }, this.isValidEmit = async (e)=>{
                            if (!(0, a.isValidParams)(e)) {
                                const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `emit() params: ${e}`);
                                throw new Error(t);
                            }
                            const { topic: t, event: r, chainId: n } = e;
                            await this.isValidSessionTopic(t);
                            const { namespaces: i } = this.client.session.get(t);
                            if (!(0, a.isValidNamespacesChainId)(i, n)) {
                                const { message: e } = (0, a.getInternalError)("MISSING_OR_INVALID", `emit() chainId: ${n}`);
                                throw new Error(e);
                            }
                            if (!(0, a.isValidEvent)(r)) {
                                const { message: e } = (0, a.getInternalError)("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(r)}`);
                                throw new Error(e);
                            }
                            if (!(0, a.isValidNamespacesEvent)(i, n, r.name)) {
                                const { message: e } = (0, a.getInternalError)("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(r)}`);
                                throw new Error(e);
                            }
                        }, this.isValidDisconnect = async (e)=>{
                            if (!(0, a.isValidParams)(e)) {
                                const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `disconnect() params: ${e}`);
                                throw new Error(t);
                            }
                            const { topic: t } = e;
                            await this.isValidSessionOrPairingTopic(t);
                        }, this.isValidAuthenticate = (e)=>{
                            const { chains: t, uri: r, domain: n, nonce: i } = e;
                            if (!Array.isArray(t) || 0 === t.length) throw new Error("chains is required and must be a non-empty array");
                            if (!(0, a.isValidString)(r, !1)) throw new Error("uri is required parameter");
                            if (!(0, a.isValidString)(n, !1)) throw new Error("domain is required parameter");
                            if (!(0, a.isValidString)(i, !1)) throw new Error("nonce is required parameter");
                            if ([
                                ...new Set(t.map((e)=>(0, a.parseChainId)(e).namespace))
                            ].length > 1) throw new Error("Multi-namespace requests are not supported. Please request single namespace only.");
                            const { namespace: s } = (0, a.parseChainId)(t[0]);
                            if ("eip155" !== s) throw new Error("Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains.");
                        }, this.getVerifyContext = async (e)=>{
                            const { attestationId: t, hash: r, encryptedId: i, metadata: s, transportType: o } = e, a = {
                                verified: {
                                    verifyUrl: s.verifyUrl || n.VERIFY_SERVER,
                                    validation: "UNKNOWN",
                                    origin: s.url || ""
                                }
                            };
                            try {
                                if (o === n.TRANSPORT_TYPES.link_mode) {
                                    const e = this.getAppLinkIfEnabled(s, o);
                                    return a.verified.validation = e && new URL(e).origin === new URL(s.url).origin ? "VALID" : "INVALID", a;
                                }
                                const e = await this.client.core.verify.resolve({
                                    attestationId: t,
                                    hash: r,
                                    encryptedId: i,
                                    verifyUrl: s.verifyUrl
                                });
                                e && (a.verified.origin = e.origin, a.verified.isScam = e.isScam, a.verified.validation = e.origin === new URL(s.url).origin ? "VALID" : "INVALID");
                            } catch (e) {
                                this.client.logger.warn(e);
                            }
                            return this.client.logger.debug(`Verify context: ${JSON.stringify(a)}`), a;
                        }, this.validateSessionProps = (e, t)=>{
                            Object.values(e).forEach((e)=>{
                                if (!(0, a.isValidString)(e, !1)) {
                                    const { message: r } = (0, a.getInternalError)("MISSING_OR_INVALID", `${t} must be in Record<string, string> format. Received: ${JSON.stringify(e)}`);
                                    throw new Error(r);
                                }
                            });
                        }, this.getPendingAuthRequest = (e)=>{
                            const t = this.client.auth.requests.get(e);
                            return "object" == typeof t ? t : void 0;
                        }, this.addToRecentlyDeleted = (e, t)=>{
                            if (this.recentlyDeletedMap.set(e, t), this.recentlyDeletedMap.size >= this.recentlyDeletedLimit) {
                                let e = 0;
                                const t = this.recentlyDeletedLimit / 2;
                                for (const r of this.recentlyDeletedMap.keys()){
                                    if (e++ >= t) break;
                                    this.recentlyDeletedMap.delete(r);
                                }
                            }
                        }, this.checkRecentlyDeleted = (e)=>{
                            const t = this.recentlyDeletedMap.get(e);
                            if (t) {
                                const { message: r } = (0, a.getInternalError)("MISSING_OR_INVALID", `Record was recently deleted - ${t}: ${e}`);
                                throw new Error(r);
                            }
                        }, this.isLinkModeEnabled = (e, t)=>{
                            var i, s, o, a, c, h, u, d, f;
                            return !(!e || t !== n.TRANSPORT_TYPES.link_mode) && !0 === (null == (s = null == (i = this.client.metadata) ? void 0 : i.redirect) ? void 0 : s.linkMode) && void 0 !== (null == (a = null == (o = this.client.metadata) ? void 0 : o.redirect) ? void 0 : a.universal) && "" !== (null == (h = null == (c = this.client.metadata) ? void 0 : c.redirect) ? void 0 : h.universal) && void 0 !== (null == (u = e?.redirect) ? void 0 : u.universal) && "" !== (null == (d = e?.redirect) ? void 0 : d.universal) && !0 === (null == (f = e?.redirect) ? void 0 : f.linkMode) && this.client.core.linkModeSupportedApps.includes(e.redirect.universal) && typeof (null == r.g ? void 0 : r.g.Linking) < "u";
                        }, this.getAppLinkIfEnabled = (e, t)=>{
                            var r;
                            return this.isLinkModeEnabled(e, t) ? null == (r = e?.redirect) ? void 0 : r.universal : void 0;
                        }, this.handleLinkModeMessage = ({ url: e })=>{
                            if (!e || !e.includes("wc_ev") || !e.includes("topic")) return;
                            const t = (0, a.getSearchParamFromURL)(e, "topic") || "", r = decodeURIComponent((0, a.getSearchParamFromURL)(e, "wc_ev") || ""), i = this.client.session.keys.includes(t);
                            i && this.client.session.update(t, {
                                transportType: n.TRANSPORT_TYPES.link_mode
                            }), this.client.core.dispatchEnvelope({
                                topic: t,
                                message: r,
                                sessionExists: i
                            });
                        }, this.registerLinkModeListeners = async ()=>{
                            var e;
                            if ((0, a.isTestRun)() || (0, a.isReactNative)() && null != (e = this.client.metadata.redirect) && e.linkMode) {
                                const e = null == r.g ? void 0 : r.g.Linking;
                                if (typeof e < "u") {
                                    e.addEventListener("url", this.handleLinkModeMessage, this.client.name);
                                    const t = await e.getInitialURL();
                                    t && setTimeout(()=>{
                                        this.handleLinkModeMessage({
                                            url: t
                                        });
                                    }, 50);
                                }
                            }
                        };
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            const { message: e } = (0, a.getInternalError)("NOT_INITIALIZED", this.name);
                            throw new Error(e);
                        }
                    }
                    async confirmOnlineStateOrThrow() {
                        await this.client.core.relayer.confirmOnlineStateOrThrow();
                    }
                    registerRelayerEvents() {
                        this.client.core.relayer.on(n.RELAYER_EVENTS.message, (e)=>{
                            !this.initialized || this.relayMessageCache.length > 0 ? this.relayMessageCache.push(e) : this.onRelayMessage(e);
                        });
                    }
                    async onRelayMessage(e) {
                        const { topic: t, message: r, attestation: i, transportType: s } = e, { publicKey: o } = this.client.auth.authKeys.keys.includes(q) ? this.client.auth.authKeys.get(q) : {
                            responseTopic: void 0,
                            publicKey: void 0
                        }, c = await this.client.core.crypto.decode(t, r, {
                            receiverPublicKey: o,
                            encoding: s === n.TRANSPORT_TYPES.link_mode ? a.BASE64URL : a.BASE64
                        });
                        try {
                            (0, u.isJsonRpcRequest)(c) ? (this.client.core.history.set(t, c), this.onRelayEventRequest({
                                topic: t,
                                payload: c,
                                attestation: i,
                                transportType: s,
                                encryptedId: (0, a.hashMessage)(r)
                            })) : (0, u.isJsonRpcResponse)(c) ? (await this.client.core.history.resolve(c), await this.onRelayEventResponse({
                                topic: t,
                                payload: c,
                                transportType: s
                            }), this.client.core.history.delete(t, c.id)) : this.onRelayEventUnknownPayload({
                                topic: t,
                                payload: c,
                                transportType: s
                            });
                        } catch (e) {
                            this.client.logger.error(e);
                        }
                    }
                    registerExpirerEvents() {
                        this.client.core.expirer.on(n.EXPIRER_EVENTS.expired, async (e)=>{
                            const { topic: t, id: r } = (0, a.parseExpirerTarget)(e.target);
                            return r && this.client.pendingRequest.keys.includes(r) ? await this.deletePendingSessionRequest(r, (0, a.getInternalError)("EXPIRED"), !0) : r && this.client.auth.requests.keys.includes(r) ? await this.deletePendingAuthRequest(r, (0, a.getInternalError)("EXPIRED"), !0) : void (t ? this.client.session.keys.includes(t) && (await this.deleteSession({
                                topic: t,
                                expirerHasDeleted: !0
                            }), this.client.events.emit("session_expire", {
                                topic: t
                            })) : r && (await this.deleteProposal(r, !0), this.client.events.emit("proposal_expire", {
                                id: r
                            })));
                        });
                    }
                    registerPairingEvents() {
                        this.client.core.pairing.events.on(n.PAIRING_EVENTS.create, (e)=>this.onPairingCreated(e)), this.client.core.pairing.events.on(n.PAIRING_EVENTS.delete, (e)=>{
                            this.addToRecentlyDeleted(e.topic, "pairing");
                        });
                    }
                    isValidPairingTopic(e) {
                        if (!(0, a.isValidString)(e, !1)) {
                            const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `pairing topic should be a string: ${e}`);
                            throw new Error(t);
                        }
                        if (!this.client.core.pairing.pairings.keys.includes(e)) {
                            const { message: t } = (0, a.getInternalError)("NO_MATCHING_KEY", `pairing topic doesn't exist: ${e}`);
                            throw new Error(t);
                        }
                        if ((0, a.isExpired)(this.client.core.pairing.pairings.get(e).expiry)) {
                            const { message: t } = (0, a.getInternalError)("EXPIRED", `pairing topic: ${e}`);
                            throw new Error(t);
                        }
                    }
                    async isValidSessionTopic(e) {
                        if (!(0, a.isValidString)(e, !1)) {
                            const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `session topic should be a string: ${e}`);
                            throw new Error(t);
                        }
                        if (this.checkRecentlyDeleted(e), !this.client.session.keys.includes(e)) {
                            const { message: t } = (0, a.getInternalError)("NO_MATCHING_KEY", `session topic doesn't exist: ${e}`);
                            throw new Error(t);
                        }
                        if ((0, a.isExpired)(this.client.session.get(e).expiry)) {
                            await this.deleteSession({
                                topic: e
                            });
                            const { message: t } = (0, a.getInternalError)("EXPIRED", `session topic: ${e}`);
                            throw new Error(t);
                        }
                        if (!this.client.core.crypto.keychain.has(e)) {
                            const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `session topic does not exist in keychain: ${e}`);
                            throw await this.deleteSession({
                                topic: e
                            }), new Error(t);
                        }
                    }
                    async isValidSessionOrPairingTopic(e) {
                        if (this.checkRecentlyDeleted(e), this.client.session.keys.includes(e)) await this.isValidSessionTopic(e);
                        else {
                            if (!this.client.core.pairing.pairings.keys.includes(e)) {
                                if ((0, a.isValidString)(e, !1)) {
                                    const { message: t } = (0, a.getInternalError)("NO_MATCHING_KEY", `session or pairing topic doesn't exist: ${e}`);
                                    throw new Error(t);
                                }
                                {
                                    const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `session or pairing topic should be a string: ${e}`);
                                    throw new Error(t);
                                }
                            }
                            this.isValidPairingTopic(e);
                        }
                    }
                    async isValidProposalId(e) {
                        if (!(0, a.isValidId)(e)) {
                            const { message: t } = (0, a.getInternalError)("MISSING_OR_INVALID", `proposal id should be a number: ${e}`);
                            throw new Error(t);
                        }
                        if (!this.client.proposal.keys.includes(e)) {
                            const { message: t } = (0, a.getInternalError)("NO_MATCHING_KEY", `proposal id doesn't exist: ${e}`);
                            throw new Error(t);
                        }
                        if ((0, a.isExpired)(this.client.proposal.get(e).expiryTimestamp)) {
                            await this.deleteProposal(e);
                            const { message: t } = (0, a.getInternalError)("EXPIRED", `proposal id: ${e}`);
                            throw new Error(t);
                        }
                    }
                }
                class X extends n.Store {
                    constructor(e, t){
                        super(e, t, E, p), this.core = e, this.logger = t;
                    }
                }
                class Z extends n.Store {
                    constructor(e, t){
                        super(e, t, M, p), this.core = e, this.logger = t;
                    }
                }
                class Q extends n.Store {
                    constructor(e, t){
                        super(e, t, k, p, (e)=>e.id), this.core = e, this.logger = t;
                    }
                }
                class ee extends n.Store {
                    constructor(e, t){
                        super(e, t, B, D, ()=>q), this.core = e, this.logger = t;
                    }
                }
                class te extends n.Store {
                    constructor(e, t){
                        super(e, t, L, D), this.core = e, this.logger = t;
                    }
                }
                class re extends n.Store {
                    constructor(e, t){
                        super(e, t, j, D, (e)=>e.id), this.core = e, this.logger = t;
                    }
                }
                class ne {
                    constructor(e, t){
                        this.core = e, this.logger = t, this.authKeys = new ee(this.core, this.logger), this.pairingTopics = new te(this.core, this.logger), this.requests = new re(this.core, this.logger);
                    }
                    async init() {
                        await this.authKeys.init(), await this.pairingTopics.init(), await this.requests.init();
                    }
                }
                class ie extends s.S9 {
                    constructor(e){
                        super(e), this.protocol = d, this.version = f, this.name = b.name, this.events = new c.EventEmitter, this.on = (e, t)=>this.events.on(e, t), this.once = (e, t)=>this.events.once(e, t), this.off = (e, t)=>this.events.off(e, t), this.removeListener = (e, t)=>this.events.removeListener(e, t), this.removeAllListeners = (e)=>this.events.removeAllListeners(e), this.connect = async (e)=>{
                            try {
                                return await this.engine.connect(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.pair = async (e)=>{
                            try {
                                return await this.engine.pair(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.approve = async (e)=>{
                            try {
                                return await this.engine.approve(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.reject = async (e)=>{
                            try {
                                return await this.engine.reject(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.update = async (e)=>{
                            try {
                                return await this.engine.update(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.extend = async (e)=>{
                            try {
                                return await this.engine.extend(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.request = async (e)=>{
                            try {
                                return await this.engine.request(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.respond = async (e)=>{
                            try {
                                return await this.engine.respond(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.ping = async (e)=>{
                            try {
                                return await this.engine.ping(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.emit = async (e)=>{
                            try {
                                return await this.engine.emit(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.disconnect = async (e)=>{
                            try {
                                return await this.engine.disconnect(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.find = (e)=>{
                            try {
                                return this.engine.find(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.getPendingSessionRequests = ()=>{
                            try {
                                return this.engine.getPendingSessionRequests();
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.authenticate = async (e, t)=>{
                            try {
                                return await this.engine.authenticate(e, t);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.formatAuthMessage = (e)=>{
                            try {
                                return this.engine.formatAuthMessage(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.approveSessionAuthenticate = async (e)=>{
                            try {
                                return await this.engine.approveSessionAuthenticate(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.rejectSessionAuthenticate = async (e)=>{
                            try {
                                return await this.engine.rejectSessionAuthenticate(e);
                            } catch (e) {
                                throw this.logger.error(e.message), e;
                            }
                        }, this.name = e?.name || b.name, this.metadata = e?.metadata || (0, a.getAppMetadata)(), this.signConfig = e?.signConfig;
                        const t = typeof e?.logger < "u" && "string" != typeof e?.logger ? e.logger : (0, i.h6)((0, i.iP)({
                            level: e?.logger || b.logger
                        }));
                        this.core = e?.core || new n.Core(e), this.logger = (0, i.U5)(t, this.name), this.session = new Z(this.core, this.logger), this.proposal = new X(this.core, this.logger), this.pendingRequest = new Q(this.core, this.logger), this.engine = new Y(this), this.auth = new ne(this.core, this.logger);
                    }
                    static async init(e) {
                        const t = new ie(e);
                        return await t.initialize(), t;
                    }
                    get context() {
                        return (0, i.oI)(this.logger);
                    }
                    get pairing() {
                        return this.core.pairing.pairings;
                    }
                    async initialize() {
                        this.logger.trace("Initialized");
                        try {
                            await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.auth.init(), await this.engine.init(), this.logger.info("SignClient Initialization Success"), setTimeout(()=>{
                                this.engine.processRelayMessageCache();
                            }, (0, o.toMiliseconds)(o.ONE_SECOND));
                        } catch (e) {
                            throw this.logger.info("SignClient Initialization Failure"), this.logger.error(e.message), e;
                        }
                    }
                }
                const se = Z, oe = ie;
            },
            6383: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                const n = r(5927);
                n.__exportStar(r(6435), t), n.__exportStar(r(5326), t);
            },
            6435: (e, t)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.ONE_THOUSAND = t.ONE_HUNDRED = void 0, t.ONE_HUNDRED = 100, t.ONE_THOUSAND = 1e3;
            },
            5326: (e, t)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.ONE_YEAR = t.FOUR_WEEKS = t.THREE_WEEKS = t.TWO_WEEKS = t.ONE_WEEK = t.THIRTY_DAYS = t.SEVEN_DAYS = t.FIVE_DAYS = t.THREE_DAYS = t.ONE_DAY = t.TWENTY_FOUR_HOURS = t.TWELVE_HOURS = t.SIX_HOURS = t.THREE_HOURS = t.ONE_HOUR = t.SIXTY_MINUTES = t.THIRTY_MINUTES = t.TEN_MINUTES = t.FIVE_MINUTES = t.ONE_MINUTE = t.SIXTY_SECONDS = t.THIRTY_SECONDS = t.TEN_SECONDS = t.FIVE_SECONDS = t.ONE_SECOND = void 0, t.ONE_SECOND = 1, t.FIVE_SECONDS = 5, t.TEN_SECONDS = 10, t.THIRTY_SECONDS = 30, t.SIXTY_SECONDS = 60, t.ONE_MINUTE = t.SIXTY_SECONDS, t.FIVE_MINUTES = 5 * t.ONE_MINUTE, t.TEN_MINUTES = 10 * t.ONE_MINUTE, t.THIRTY_MINUTES = 30 * t.ONE_MINUTE, t.SIXTY_MINUTES = 60 * t.ONE_MINUTE, t.ONE_HOUR = t.SIXTY_MINUTES, t.THREE_HOURS = 3 * t.ONE_HOUR, t.SIX_HOURS = 6 * t.ONE_HOUR, t.TWELVE_HOURS = 12 * t.ONE_HOUR, t.TWENTY_FOUR_HOURS = 24 * t.ONE_HOUR, t.ONE_DAY = t.TWENTY_FOUR_HOURS, t.THREE_DAYS = 3 * t.ONE_DAY, t.FIVE_DAYS = 5 * t.ONE_DAY, t.SEVEN_DAYS = 7 * t.ONE_DAY, t.THIRTY_DAYS = 30 * t.ONE_DAY, t.ONE_WEEK = t.SEVEN_DAYS, t.TWO_WEEKS = 2 * t.ONE_WEEK, t.THREE_WEEKS = 3 * t.ONE_WEEK, t.FOUR_WEEKS = 4 * t.ONE_WEEK, t.ONE_YEAR = 365 * t.ONE_DAY;
            },
            7777: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                const n = r(5927);
                n.__exportStar(r(9523), t), n.__exportStar(r(4186), t), n.__exportStar(r(5767), t), n.__exportStar(r(6383), t);
            },
            5767: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), r(5927).__exportStar(r(884), t);
            },
            884: (e, t)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.IWatch = void 0, t.IWatch = class {
                };
            },
            1884: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.fromMiliseconds = t.toMiliseconds = void 0;
                const n = r(6383);
                t.toMiliseconds = function(e) {
                    return e * n.ONE_THOUSAND;
                }, t.fromMiliseconds = function(e) {
                    return Math.floor(e / n.ONE_THOUSAND);
                };
            },
            4892: (e, t)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.delay = void 0, t.delay = function(e) {
                    return new Promise((t)=>{
                        setTimeout(()=>{
                            t(!0);
                        }, e);
                    });
                };
            },
            9523: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                const n = r(5927);
                n.__exportStar(r(4892), t), n.__exportStar(r(1884), t);
            },
            4186: (e, t)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.Watch = void 0;
                class r {
                    constructor(){
                        this.timestamps = new Map;
                    }
                    start(e) {
                        if (this.timestamps.has(e)) throw new Error(`Watch already started for label: ${e}`);
                        this.timestamps.set(e, {
                            started: Date.now()
                        });
                    }
                    stop(e) {
                        const t = this.get(e);
                        if (void 0 !== t.elapsed) throw new Error(`Watch already stopped for label: ${e}`);
                        const r = Date.now() - t.started;
                        this.timestamps.set(e, {
                            started: t.started,
                            elapsed: r
                        });
                    }
                    get(e) {
                        const t = this.timestamps.get(e);
                        if (void 0 === t) throw new Error(`No timestamp found for label: ${e}`);
                        return t;
                    }
                    elapsed(e) {
                        const t = this.get(e);
                        return t.elapsed || Date.now() - t.started;
                    }
                }
                t.Watch = r, t.default = r;
            },
            1652: (e, t, r)=>{
                "use strict";
                r.d(t, {
                    $Q: ()=>g,
                    GF: ()=>b,
                    S9: ()=>m,
                    Vx: ()=>l,
                    ZP: ()=>o,
                    dQ: ()=>c,
                    lZ: ()=>a,
                    m5: ()=>u,
                    mF: ()=>f,
                    pi: ()=>d,
                    qE: ()=>h,
                    yJ: ()=>y,
                    zl: ()=>p
                });
                var n = r(9920), i = r(381), s = r.n(i);
                class o extends n.H {
                    constructor(e){
                        super(), this.opts = e, this.protocol = "wc", this.version = 2;
                    }
                }
                class a extends n.H {
                    constructor(e, t){
                        super(), this.core = e, this.logger = t, this.records = new Map;
                    }
                }
                class c {
                    constructor(e, t){
                        this.logger = e, this.core = t;
                    }
                }
                class h extends n.H {
                    constructor(e, t){
                        super(), this.relayer = e, this.logger = t;
                    }
                }
                class u extends n.H {
                    constructor(e){
                        super();
                    }
                }
                class d {
                    constructor(e, t, r, n){
                        this.core = e, this.logger = t, this.name = r;
                    }
                }
                class f extends n.H {
                    constructor(e, t){
                        super(), this.relayer = e, this.logger = t;
                    }
                }
                class l extends n.H {
                    constructor(e, t){
                        super(), this.core = e, this.logger = t;
                    }
                }
                class p {
                    constructor(e, t, r){
                        this.core = e, this.logger = t, this.store = r;
                    }
                }
                class b {
                    constructor(e, t){
                        this.projectId = e, this.logger = t;
                    }
                }
                class g {
                    constructor(e, t, r){
                        this.core = e, this.logger = t, this.telemetryEnabled = r;
                    }
                }
                s();
                class m {
                    constructor(e){
                        this.opts = e, this.protocol = "wc", this.version = 2;
                    }
                }
                i.EventEmitter;
                class y {
                    constructor(e){
                        this.client = e;
                    }
                }
            },
            3317: (e, t, r)=>{
                "use strict";
                r.r(t), r.d(t, {
                    BASE10: ()=>yn,
                    BASE16: ()=>vn,
                    BASE64: ()=>wn,
                    BASE64URL: ()=>_n,
                    COLON: ()=>Rt,
                    DEFAULT_DEPTH: ()=>Pt,
                    EMPTY_SPACE: ()=>Ct,
                    ENV_MAP: ()=>xt,
                    INTERNAL_ERRORS: ()=>Ni,
                    MemoryStore: ()=>Is,
                    ONE_THOUSAND: ()=>Ot,
                    REACT_NATIVE_PRODUCT: ()=>Tt,
                    RELAYER_DEFAULT_PROTOCOL: ()=>Jn,
                    SDK_ERRORS: ()=>Oi,
                    SDK_TYPE: ()=>Nt,
                    SLASH: ()=>kt,
                    TYPE_0: ()=>Sn,
                    TYPE_1: ()=>An,
                    TYPE_2: ()=>Mn,
                    UTF8: ()=>En,
                    addResourceToRecap: ()=>sn,
                    appendToQueryString: ()=>Ht,
                    assertType: ()=>Yt,
                    assignAbilityToActions: ()=>on,
                    base64Decode: ()=>tn,
                    base64Encode: ()=>en,
                    buildApprovedNamespaces: ()=>Ti,
                    buildAuthObject: ()=>Gr,
                    buildNamespacesFromAuth: ()=>Pi,
                    buildRecapStatement: ()=>gn,
                    calcExpiry: ()=>lr,
                    capitalize: ()=>or,
                    capitalizeWord: ()=>sr,
                    createDelayedPromise: ()=>ar,
                    createEncodedRecap: ()=>hn,
                    createExpiringPromise: ()=>cr,
                    createRecap: ()=>nn,
                    decodeRecap: ()=>cn,
                    decodeTypeByte: ()=>Bn,
                    decodeTypeTwoEnvelope: ()=>qn,
                    decrypt: ()=>Dn,
                    deriveSymKey: ()=>Pn,
                    deserialize: ()=>Hn,
                    encodeRecap: ()=>an,
                    encodeTypeByte: ()=>Un,
                    encodeTypeTwoEnvelope: ()=>jn,
                    encrypt: ()=>Ln,
                    engineEvent: ()=>br,
                    enumify: ()=>ir,
                    formatAccountId: ()=>ut,
                    formatAccountWithChain: ()=>pt,
                    formatChainId: ()=>ct,
                    formatDeeplinkUrl: ()=>yr,
                    formatExpirerTarget: ()=>hr,
                    formatIdTarget: ()=>dr,
                    formatMessage: ()=>Kr,
                    formatMessageContext: ()=>Zt,
                    formatRelayParams: ()=>ui,
                    formatRelayRpcUrl: ()=>Wt,
                    formatStatementFromRecap: ()=>ln,
                    formatTopicTarget: ()=>ur,
                    formatUA: ()=>Gt,
                    formatUri: ()=>di,
                    fromBase64: ()=>Ir,
                    generateKeyPair: ()=>Rn,
                    generateRandomBytes32: ()=>kn,
                    getAccountsChains: ()=>Ei,
                    getAccountsFromNamespaces: ()=>mt,
                    getAddressFromAccount: ()=>ft,
                    getAddressesFromAccounts: ()=>bt,
                    getAppId: ()=>Ft,
                    getAppMetadata: ()=>zt,
                    getBrowserOnlineStatus: ()=>vs,
                    getChainFromAccount: ()=>lt,
                    getChainsFromAccounts: ()=>gt,
                    getChainsFromNamespace: ()=>wt,
                    getChainsFromNamespaces: ()=>yt,
                    getChainsFromRecap: ()=>bn,
                    getChainsFromRequiredNamespaces: ()=>vt,
                    getCommonValuesInArrays: ()=>wr,
                    getCryptoKeyFromKeyData: ()=>Gn,
                    getDecodedRecapFromResources: ()=>Jr,
                    getDeepLink: ()=>vr,
                    getDidAddress: ()=>Vr,
                    getDidAddressSegments: ()=>Fr,
                    getDidChainId: ()=>Hr,
                    getEnvironment: ()=>qt,
                    getHttpUrl: ()=>Jt,
                    getInternalError: ()=>Ui,
                    getJavascriptID: ()=>Kt,
                    getJavascriptOS: ()=>$t,
                    getLastItems: ()=>er,
                    getLinkModeURL: ()=>fi,
                    getMethodsFromRecap: ()=>pn,
                    getNamespacedDidChainId: ()=>zr,
                    getNamespacesChains: ()=>Si,
                    getNamespacesEventsForChainId: ()=>Mi,
                    getNamespacesFromAccounts: ()=>ki,
                    getNamespacesMethodsForChainId: ()=>Ai,
                    getNodeOnlineStatus: ()=>_s,
                    getReCapActions: ()=>Qr,
                    getReactNativeOnlineStatus: ()=>ws,
                    getRecapAbilitiesFromResource: ()=>Zr,
                    getRecapFromResources: ()=>mn,
                    getRecapResource: ()=>Xr,
                    getRelayClientMetadata: ()=>Vt,
                    getRelayProtocolApi: ()=>Xn,
                    getRelayProtocolName: ()=>Yn,
                    getRequiredNamespacesFromNamespaces: ()=>Ii,
                    getSdkError: ()=>Bi,
                    getSearchParamFromURL: ()=>_r,
                    getUniqueValues: ()=>dt,
                    handleDeeplinkRedirect: ()=>mr,
                    hasOverlap: ()=>Qt,
                    hashKey: ()=>On,
                    hashMessage: ()=>Nn,
                    isAndroid: ()=>Lt,
                    isBrowser: ()=>Dt,
                    isCaipNamespace: ()=>xi,
                    isConformingNamespaces: ()=>bs,
                    isExpired: ()=>pr,
                    isIos: ()=>jt,
                    isNode: ()=>Ut,
                    isOnline: ()=>ys,
                    isProposalStruct: ()=>Ki,
                    isReactNative: ()=>Bt,
                    isRecap: ()=>un,
                    isSessionCompatible: ()=>Hi,
                    isSessionStruct: ()=>Gi,
                    isTelegram: ()=>Ar,
                    isTestRun: ()=>Sr,
                    isTypeOneEnvelope: ()=>$n,
                    isTypeTwoEnvelope: ()=>Kn,
                    isUndefined: ()=>Di,
                    isValidAccountId: ()=>Vi,
                    isValidAccounts: ()=>Zi,
                    isValidActions: ()=>es,
                    isValidArray: ()=>Li,
                    isValidChainId: ()=>zi,
                    isValidChains: ()=>Yi,
                    isValidController: ()=>Wi,
                    isValidEip1271Signature: ()=>kr,
                    isValidEip191Signature: ()=>Rr,
                    isValidErrorReason: ()=>cs,
                    isValidEvent: ()=>ds,
                    isValidId: ()=>os,
                    isValidNamespaceAccounts: ()=>Qi,
                    isValidNamespaceActions: ()=>ts,
                    isValidNamespaceChains: ()=>Xi,
                    isValidNamespaceMethodsOrEvents: ()=>Ji,
                    isValidNamespaces: ()=>ns,
                    isValidNamespacesChainId: ()=>fs,
                    isValidNamespacesEvent: ()=>ps,
                    isValidNamespacesRequest: ()=>ls,
                    isValidNumber: ()=>Fi,
                    isValidObject: ()=>ji,
                    isValidParams: ()=>as,
                    isValidRecap: ()=>rn,
                    isValidRelay: ()=>is,
                    isValidRelays: ()=>ss,
                    isValidRequest: ()=>hs,
                    isValidRequestExpiry: ()=>ms,
                    isValidRequiredNamespaces: ()=>rs,
                    isValidResponse: ()=>us,
                    isValidString: ()=>qi,
                    isValidUrl: ()=>$i,
                    mapEntries: ()=>nr,
                    mapToObj: ()=>tr,
                    mergeArrays: ()=>gr,
                    mergeEncodedRecaps: ()=>dn,
                    mergeRecaps: ()=>fn,
                    normalizeNamespaces: ()=>Ri,
                    objToMap: ()=>rr,
                    parseAccountId: ()=>ht,
                    parseChainId: ()=>at,
                    parseContextNames: ()=>Xt,
                    parseExpirerTarget: ()=>fr,
                    parseNamespaceKey: ()=>Ci,
                    parseRelayParams: ()=>ai,
                    parseTopic: ()=>hi,
                    parseUri: ()=>ci,
                    populateAuthPayload: ()=>Wr,
                    recapHasResource: ()=>Yr,
                    serialize: ()=>Fn,
                    sleep: ()=>Tr,
                    subscribeToBrowserNetworkChange: ()=>Ss,
                    subscribeToNetworkChange: ()=>Es,
                    subscribeToReactNativeNetworkChange: ()=>As,
                    toBase64: ()=>Mr,
                    uuidv4: ()=>Er,
                    validateDecoding: ()=>zn,
                    validateEncoding: ()=>Vn,
                    validateSignedCacao: ()=>$r,
                    verifyP256Jwt: ()=>Wn,
                    verifySignature: ()=>Cr
                });
                var n = function(e, t, r) {
                    if (r || 2 === arguments.length) for(var n, i = 0, s = t.length; i < s; i++)!n && i in t || (n || (n = Array.prototype.slice.call(t, 0, i)), n[i] = t[i]);
                    return e.concat(n || Array.prototype.slice.call(t));
                }, i = function(e, t, r) {
                    this.name = e, this.version = t, this.os = r, this.type = "browser";
                }, s = function(e) {
                    this.version = e, this.type = "node", this.name = "node", this.os = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].platform;
                }, o = function(e, t, r, n) {
                    this.name = e, this.version = t, this.os = r, this.bot = n, this.type = "bot-device";
                }, a = function() {
                    this.type = "bot", this.bot = !0, this.name = "bot", this.version = null, this.os = null;
                }, c = function() {
                    this.type = "react-native", this.name = "react-native", this.version = null, this.os = null;
                }, h = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/, u = 3, d = [
                    [
                        "aol",
                        /AOLShield\/([0-9\._]+)/
                    ],
                    [
                        "edge",
                        /Edge\/([0-9\._]+)/
                    ],
                    [
                        "edge-ios",
                        /EdgiOS\/([0-9\._]+)/
                    ],
                    [
                        "yandexbrowser",
                        /YaBrowser\/([0-9\._]+)/
                    ],
                    [
                        "kakaotalk",
                        /KAKAOTALK\s([0-9\.]+)/
                    ],
                    [
                        "samsung",
                        /SamsungBrowser\/([0-9\.]+)/
                    ],
                    [
                        "silk",
                        /\bSilk\/([0-9._-]+)\b/
                    ],
                    [
                        "miui",
                        /MiuiBrowser\/([0-9\.]+)$/
                    ],
                    [
                        "beaker",
                        /BeakerBrowser\/([0-9\.]+)/
                    ],
                    [
                        "edge-chromium",
                        /EdgA?\/([0-9\.]+)/
                    ],
                    [
                        "chromium-webview",
                        /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/
                    ],
                    [
                        "chrome",
                        /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/
                    ],
                    [
                        "phantomjs",
                        /PhantomJS\/([0-9\.]+)(:?\s|$)/
                    ],
                    [
                        "crios",
                        /CriOS\/([0-9\.]+)(:?\s|$)/
                    ],
                    [
                        "firefox",
                        /Firefox\/([0-9\.]+)(?:\s|$)/
                    ],
                    [
                        "fxios",
                        /FxiOS\/([0-9\.]+)/
                    ],
                    [
                        "opera-mini",
                        /Opera Mini.*Version\/([0-9\.]+)/
                    ],
                    [
                        "opera",
                        /Opera\/([0-9\.]+)(?:\s|$)/
                    ],
                    [
                        "opera",
                        /OPR\/([0-9\.]+)(:?\s|$)/
                    ],
                    [
                        "pie",
                        /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/
                    ],
                    [
                        "pie",
                        /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/
                    ],
                    [
                        "netfront",
                        /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/
                    ],
                    [
                        "ie",
                        /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/
                    ],
                    [
                        "ie",
                        /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/
                    ],
                    [
                        "ie",
                        /MSIE\s(7\.0)/
                    ],
                    [
                        "bb10",
                        /BB10;\sTouch.*Version\/([0-9\.]+)/
                    ],
                    [
                        "android",
                        /Android\s([0-9\.]+)/
                    ],
                    [
                        "ios",
                        /Version\/([0-9\._]+).*Mobile.*Safari.*/
                    ],
                    [
                        "safari",
                        /Version\/([0-9\._]+).*Safari/
                    ],
                    [
                        "facebook",
                        /FB[AS]V\/([0-9\.]+)/
                    ],
                    [
                        "instagram",
                        /Instagram\s([0-9\.]+)/
                    ],
                    [
                        "ios-webview",
                        /AppleWebKit\/([0-9\.]+).*Mobile/
                    ],
                    [
                        "ios-webview",
                        /AppleWebKit\/([0-9\.]+).*Gecko\)$/
                    ],
                    [
                        "curl",
                        /^curl\/([0-9\.]+)$/
                    ],
                    [
                        "searchbot",
                        /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/
                    ]
                ], f = [
                    [
                        "iOS",
                        /iP(hone|od|ad)/
                    ],
                    [
                        "Android OS",
                        /Android/
                    ],
                    [
                        "BlackBerry OS",
                        /BlackBerry|BB10/
                    ],
                    [
                        "Windows Mobile",
                        /IEMobile/
                    ],
                    [
                        "Amazon OS",
                        /Kindle/
                    ],
                    [
                        "Windows 3.11",
                        /Win16/
                    ],
                    [
                        "Windows 95",
                        /(Windows 95)|(Win95)|(Windows_95)/
                    ],
                    [
                        "Windows 98",
                        /(Windows 98)|(Win98)/
                    ],
                    [
                        "Windows 2000",
                        /(Windows NT 5.0)|(Windows 2000)/
                    ],
                    [
                        "Windows XP",
                        /(Windows NT 5.1)|(Windows XP)/
                    ],
                    [
                        "Windows Server 2003",
                        /(Windows NT 5.2)/
                    ],
                    [
                        "Windows Vista",
                        /(Windows NT 6.0)/
                    ],
                    [
                        "Windows 7",
                        /(Windows NT 6.1)/
                    ],
                    [
                        "Windows 8",
                        /(Windows NT 6.2)/
                    ],
                    [
                        "Windows 8.1",
                        /(Windows NT 6.3)/
                    ],
                    [
                        "Windows 10",
                        /(Windows NT 10.0)/
                    ],
                    [
                        "Windows ME",
                        /Windows ME/
                    ],
                    [
                        "Windows CE",
                        /Windows CE|WinCE|Microsoft Pocket Internet Explorer/
                    ],
                    [
                        "Open BSD",
                        /OpenBSD/
                    ],
                    [
                        "Sun OS",
                        /SunOS/
                    ],
                    [
                        "Chrome OS",
                        /CrOS/
                    ],
                    [
                        "Linux",
                        /(Linux)|(X11)/
                    ],
                    [
                        "Mac OS",
                        /(Mac_PowerPC)|(Macintosh)/
                    ],
                    [
                        "QNX",
                        /QNX/
                    ],
                    [
                        "BeOS",
                        /BeOS/
                    ],
                    [
                        "OS/2",
                        /OS\/2/
                    ]
                ];
                function l(e) {
                    var t = function(e) {
                        return "" !== e && d.reduce(function(t, r) {
                            var n = r[0], i = r[1];
                            if (t) return t;
                            var s = i.exec(e);
                            return !!s && [
                                n,
                                s
                            ];
                        }, !1);
                    }(e);
                    if (!t) return null;
                    var r = t[0], s = t[1];
                    if ("searchbot" === r) return new a;
                    var c = s[1] && s[1].split(".").join("_").split("_").slice(0, 3);
                    c ? c.length < u && (c = n(n([], c, !0), function(e) {
                        for(var t = [], r = 0; r < e; r++)t.push("0");
                        return t;
                    }(u - c.length), !0)) : c = [];
                    var l = c.join("."), p = function(e) {
                        for(var t = 0, r = f.length; t < r; t++){
                            var n = f[t], i = n[0];
                            if (n[1].exec(e)) return i;
                        }
                        return null;
                    }(e), b = h.exec(e);
                    return b && b[1] ? new o(r, l, p, b[1]) : new i(r, l, p);
                }
                var p = r(7777), b = r(5280), g = r(5206), m = r(8605);
                let y = !1, v = !1;
                const w = {
                    debug: 1,
                    default: 2,
                    info: 2,
                    warning: 3,
                    error: 4,
                    off: 5
                };
                let _ = w.default, E = null;
                const S = function() {
                    try {
                        const e = [];
                        if ([
                            "NFD",
                            "NFC",
                            "NFKD",
                            "NFKC"
                        ].forEach((t)=>{
                            try {
                                if ("test" !== "test".normalize(t)) throw new Error("bad normalize");
                            } catch (r) {
                                e.push(t);
                            }
                        }), e.length) throw new Error("missing " + e.join(", "));
                        if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation");
                    } catch (e) {
                        return e.message;
                    }
                    return null;
                }();
                var A, M;
                !function(e) {
                    e.DEBUG = "DEBUG", e.INFO = "INFO", e.WARNING = "WARNING", e.ERROR = "ERROR", e.OFF = "OFF";
                }(A || (A = {})), function(e) {
                    e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", e.NETWORK_ERROR = "NETWORK_ERROR", e.SERVER_ERROR = "SERVER_ERROR", e.TIMEOUT = "TIMEOUT", e.BUFFER_OVERRUN = "BUFFER_OVERRUN", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.MISSING_NEW = "MISSING_NEW", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", e.NONCE_EXPIRED = "NONCE_EXPIRED", e.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", e.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", e.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", e.ACTION_REJECTED = "ACTION_REJECTED";
                }(M || (M = {}));
                const I = "0123456789abcdef";
                class T {
                    constructor(e){
                        Object.defineProperty(this, "version", {
                            enumerable: !0,
                            value: e,
                            writable: !1
                        });
                    }
                    _log(e, t) {
                        const r = e.toLowerCase();
                        null == w[r] && this.throwArgumentError("invalid log level name", "logLevel", e), _ > w[r] || console.log.apply(console, t);
                    }
                    debug(...e) {
                        this._log(T.levels.DEBUG, e);
                    }
                    info(...e) {
                        this._log(T.levels.INFO, e);
                    }
                    warn(...e) {
                        this._log(T.levels.WARNING, e);
                    }
                    makeError(e, t, r) {
                        if (v) return this.makeError("censored error", t, {});
                        t || (t = T.errors.UNKNOWN_ERROR), r || (r = {});
                        const n = [];
                        Object.keys(r).forEach((e)=>{
                            const t = r[e];
                            try {
                                if (t instanceof Uint8Array) {
                                    let r = "";
                                    for(let e = 0; e < t.length; e++)r += I[t[e] >> 4], r += I[15 & t[e]];
                                    n.push(e + "=Uint8Array(0x" + r + ")");
                                } else n.push(e + "=" + JSON.stringify(t));
                            } catch (t) {
                                n.push(e + "=" + JSON.stringify(r[e].toString()));
                            }
                        }), n.push(`code=${t}`), n.push(`version=${this.version}`);
                        const i = e;
                        let s = "";
                        switch(t){
                            case M.NUMERIC_FAULT:
                                {
                                    s = "NUMERIC_FAULT";
                                    const t = e;
                                    switch(t){
                                        case "overflow":
                                        case "underflow":
                                        case "division-by-zero":
                                            s += "-" + t;
                                            break;
                                        case "negative-power":
                                        case "negative-width":
                                            s += "-unsupported";
                                            break;
                                        case "unbound-bitwise-result":
                                            s += "-unbound-result";
                                    }
                                    break;
                                }
                            case M.CALL_EXCEPTION:
                            case M.INSUFFICIENT_FUNDS:
                            case M.MISSING_NEW:
                            case M.NONCE_EXPIRED:
                            case M.REPLACEMENT_UNDERPRICED:
                            case M.TRANSACTION_REPLACED:
                            case M.UNPREDICTABLE_GAS_LIMIT:
                                s = t;
                        }
                        s && (e += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"), n.length && (e += " (" + n.join(", ") + ")");
                        const o = new Error(e);
                        return o.reason = i, o.code = t, Object.keys(r).forEach(function(e) {
                            o[e] = r[e];
                        }), o;
                    }
                    throwError(e, t, r) {
                        throw this.makeError(e, t, r);
                    }
                    throwArgumentError(e, t, r) {
                        return this.throwError(e, T.errors.INVALID_ARGUMENT, {
                            argument: t,
                            value: r
                        });
                    }
                    assert(e, t, r, n) {
                        e || this.throwError(t, r, n);
                    }
                    assertArgument(e, t, r, n) {
                        e || this.throwArgumentError(t, r, n);
                    }
                    checkNormalize(e) {
                        null == e && (e = "platform missing String.prototype.normalize"), S && this.throwError("platform missing String.prototype.normalize", T.errors.UNSUPPORTED_OPERATION, {
                            operation: "String.prototype.normalize",
                            form: S
                        });
                    }
                    checkSafeUint53(e, t) {
                        "number" == typeof e && (null == t && (t = "value not safe"), (e < 0 || e >= 9007199254740991) && this.throwError(t, T.errors.NUMERIC_FAULT, {
                            operation: "checkSafeInteger",
                            fault: "out-of-safe-range",
                            value: e
                        }), e % 1 && this.throwError(t, T.errors.NUMERIC_FAULT, {
                            operation: "checkSafeInteger",
                            fault: "non-integer",
                            value: e
                        }));
                    }
                    checkArgumentCount(e, t, r) {
                        r = r ? ": " + r : "", e < t && this.throwError("missing argument" + r, T.errors.MISSING_ARGUMENT, {
                            count: e,
                            expectedCount: t
                        }), e > t && this.throwError("too many arguments" + r, T.errors.UNEXPECTED_ARGUMENT, {
                            count: e,
                            expectedCount: t
                        });
                    }
                    checkNew(e, t) {
                        e !== Object && null != e || this.throwError("missing new", T.errors.MISSING_NEW, {
                            name: t.name
                        });
                    }
                    checkAbstract(e, t) {
                        e === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", T.errors.UNSUPPORTED_OPERATION, {
                            name: e.name,
                            operation: "new"
                        }) : e !== Object && null != e || this.throwError("missing new", T.errors.MISSING_NEW, {
                            name: t.name
                        });
                    }
                    static globalLogger() {
                        return E || (E = new T("logger/5.8.0")), E;
                    }
                    static setCensorship(e, t) {
                        if (!e && t && this.globalLogger().throwError("cannot permanently disable censorship", T.errors.UNSUPPORTED_OPERATION, {
                            operation: "setCensorship"
                        }), y) {
                            if (!e) return;
                            this.globalLogger().throwError("error censorship permanent", T.errors.UNSUPPORTED_OPERATION, {
                                operation: "setCensorship"
                            });
                        }
                        v = !!e, y = !!t;
                    }
                    static setLogLevel(e) {
                        const t = w[e.toLowerCase()];
                        null != t ? _ = t : T.globalLogger().warn("invalid log level - " + e);
                    }
                    static from(e) {
                        return new T(e);
                    }
                }
                T.errors = M, T.levels = A;
                const x = new T("bytes/5.8.0");
                function C(e) {
                    return !!e.toHexString;
                }
                function R(e) {
                    return e.slice || (e.slice = function() {
                        const t = Array.prototype.slice.call(arguments);
                        return R(new Uint8Array(Array.prototype.slice.apply(e, t)));
                    }), e;
                }
                function k(e) {
                    return "number" == typeof e && e == e && e % 1 == 0;
                }
                function P(e) {
                    if (null == e) return !1;
                    if (e.constructor === Uint8Array) return !0;
                    if ("string" == typeof e) return !1;
                    if (!k(e.length) || e.length < 0) return !1;
                    for(let t = 0; t < e.length; t++){
                        const r = e[t];
                        if (!k(r) || r < 0 || r >= 256) return !1;
                    }
                    return !0;
                }
                function O(e, t) {
                    if (t || (t = {}), "number" == typeof e) {
                        x.checkSafeUint53(e, "invalid arrayify value");
                        const t = [];
                        for(; e;)t.unshift(255 & e), e = parseInt(String(e / 256));
                        return 0 === t.length && t.push(0), R(new Uint8Array(t));
                    }
                    if (t.allowMissingPrefix && "string" == typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), C(e) && (e = e.toHexString()), N(e)) {
                        let r = e.substring(2);
                        r.length % 2 && ("left" === t.hexPad ? r = "0" + r : "right" === t.hexPad ? r += "0" : x.throwArgumentError("hex data is odd-length", "value", e));
                        const n = [];
                        for(let e = 0; e < r.length; e += 2)n.push(parseInt(r.substring(e, e + 2), 16));
                        return R(new Uint8Array(n));
                    }
                    return P(e) ? R(new Uint8Array(e)) : x.throwArgumentError("invalid arrayify value", "value", e);
                }
                function N(e, t) {
                    return !("string" != typeof e || !e.match(/^0x[0-9A-Fa-f]*$/) || t && e.length !== 2 + 2 * t);
                }
                const U = "0123456789abcdef";
                function B(e, t) {
                    if (t || (t = {}), "number" == typeof e) {
                        x.checkSafeUint53(e, "invalid hexlify value");
                        let t = "";
                        for(; e;)t = U[15 & e] + t, e = Math.floor(e / 16);
                        return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00";
                    }
                    if ("bigint" == typeof e) return (e = e.toString(16)).length % 2 ? "0x0" + e : "0x" + e;
                    if (t.allowMissingPrefix && "string" == typeof e && "0x" !== e.substring(0, 2) && (e = "0x" + e), C(e)) return e.toHexString();
                    if (N(e)) return e.length % 2 && ("left" === t.hexPad ? e = "0x0" + e.substring(2) : "right" === t.hexPad ? e += "0" : x.throwArgumentError("hex data is odd-length", "value", e)), e.toLowerCase();
                    if (P(e)) {
                        let t = "0x";
                        for(let r = 0; r < e.length; r++){
                            let n = e[r];
                            t += U[(240 & n) >> 4] + U[15 & n];
                        }
                        return t;
                    }
                    return x.throwArgumentError("invalid hexlify value", "value", e);
                }
                function L(e, t, r) {
                    return "string" != typeof e ? e = B(e) : (!N(e) || e.length % 2) && x.throwArgumentError("invalid hexData", "value", e), t = 2 + 2 * t, null != r ? "0x" + e.substring(t, 2 + 2 * r) : "0x" + e.substring(t);
                }
                function j(e, t) {
                    for("string" != typeof e ? e = B(e) : N(e) || x.throwArgumentError("invalid hex string", "value", e), e.length > 2 * t + 2 && x.throwArgumentError("value out of range", "value", arguments[1]); e.length < 2 * t + 2;)e = "0x0" + e.substring(2);
                    return e;
                }
                function D(e) {
                    const t = {
                        r: "0x",
                        s: "0x",
                        _vs: "0x",
                        recoveryParam: 0,
                        v: 0,
                        yParityAndS: "0x",
                        compact: "0x"
                    };
                    if (N(r = e) && !(r.length % 2) || P(r)) {
                        let r = O(e);
                        64 === r.length ? (t.v = 27 + (r[32] >> 7), r[32] &= 127, t.r = B(r.slice(0, 32)), t.s = B(r.slice(32, 64))) : 65 === r.length ? (t.r = B(r.slice(0, 32)), t.s = B(r.slice(32, 64)), t.v = r[64]) : x.throwArgumentError("invalid signature string", "signature", e), t.v < 27 && (0 === t.v || 1 === t.v ? t.v += 27 : x.throwArgumentError("signature invalid v byte", "signature", e)), t.recoveryParam = 1 - t.v % 2, t.recoveryParam && (r[32] |= 128), t._vs = B(r.slice(32, 64));
                    } else {
                        if (t.r = e.r, t.s = e.s, t.v = e.v, t.recoveryParam = e.recoveryParam, t._vs = e._vs, null != t._vs) {
                            const r = function(e, t) {
                                (e = O(e)).length > t && x.throwArgumentError("value out of range", "value", arguments[0]);
                                const r = new Uint8Array(t);
                                return r.set(e, t - e.length), R(r);
                            }(O(t._vs), 32);
                            t._vs = B(r);
                            const n = r[0] >= 128 ? 1 : 0;
                            null == t.recoveryParam ? t.recoveryParam = n : t.recoveryParam !== n && x.throwArgumentError("signature recoveryParam mismatch _vs", "signature", e), r[0] &= 127;
                            const i = B(r);
                            null == t.s ? t.s = i : t.s !== i && x.throwArgumentError("signature v mismatch _vs", "signature", e);
                        }
                        if (null == t.recoveryParam) null == t.v ? x.throwArgumentError("signature missing v and recoveryParam", "signature", e) : 0 === t.v || 1 === t.v ? t.recoveryParam = t.v : t.recoveryParam = 1 - t.v % 2;
                        else if (null == t.v) t.v = 27 + t.recoveryParam;
                        else {
                            const r = 0 === t.v || 1 === t.v ? t.v : 1 - t.v % 2;
                            t.recoveryParam !== r && x.throwArgumentError("signature recoveryParam mismatch v", "signature", e);
                        }
                        null != t.r && N(t.r) ? t.r = j(t.r, 32) : x.throwArgumentError("signature missing or invalid r", "signature", e), null != t.s && N(t.s) ? t.s = j(t.s, 32) : x.throwArgumentError("signature missing or invalid s", "signature", e);
                        const r = O(t.s);
                        r[0] >= 128 && x.throwArgumentError("signature s out of range", "signature", e), t.recoveryParam && (r[0] |= 128);
                        const n = B(r);
                        t._vs && (N(t._vs) || x.throwArgumentError("signature invalid _vs", "signature", e), t._vs = j(t._vs, 32)), null == t._vs ? t._vs = n : t._vs !== n && x.throwArgumentError("signature _vs mismatch v and s", "signature", e);
                    }
                    var r;
                    return t.yParityAndS = t._vs, t.compact = t.r + t.yParityAndS.substring(2), t;
                }
                var q = r(9162), F = r.n(q);
                function H(e) {
                    return "0x" + F().keccak_256(O(e));
                }
                const z = new T("strings/5.8.0");
                var V, $;
                function K(e, t, r, n, i) {
                    if (e === $.BAD_PREFIX || e === $.UNEXPECTED_CONTINUE) {
                        let e = 0;
                        for(let n = t + 1; n < r.length && r[n] >> 6 == 2; n++)e++;
                        return e;
                    }
                    return e === $.OVERRUN ? r.length - t - 1 : 0;
                }
                function G(e, t = V.current) {
                    t != V.current && (z.checkNormalize(), e = e.normalize(t));
                    let r = [];
                    for(let t = 0; t < e.length; t++){
                        const n = e.charCodeAt(t);
                        if (n < 128) r.push(n);
                        else if (n < 2048) r.push(n >> 6 | 192), r.push(63 & n | 128);
                        else if (55296 == (64512 & n)) {
                            t++;
                            const i = e.charCodeAt(t);
                            if (t >= e.length || 56320 != (64512 & i)) throw new Error("invalid utf-8 string");
                            const s = 65536 + ((1023 & n) << 10) + (1023 & i);
                            r.push(s >> 18 | 240), r.push(s >> 12 & 63 | 128), r.push(s >> 6 & 63 | 128), r.push(63 & s | 128);
                        } else r.push(n >> 12 | 224), r.push(n >> 6 & 63 | 128), r.push(63 & n | 128);
                    }
                    return O(r);
                }
                !function(e) {
                    e.current = "", e.NFC = "NFC", e.NFD = "NFD", e.NFKC = "NFKC", e.NFKD = "NFKD";
                }(V || (V = {})), function(e) {
                    e.UNEXPECTED_CONTINUE = "unexpected continuation byte", e.BAD_PREFIX = "bad codepoint prefix", e.OVERRUN = "string overrun", e.MISSING_CONTINUE = "missing continuation byte", e.OUT_OF_RANGE = "out of UTF-8 range", e.UTF16_SURROGATE = "UTF-16 surrogate", e.OVERLONG = "overlong representation";
                }($ || ($ = {})), Object.freeze({
                    error: function(e, t, r, n, i) {
                        return z.throwArgumentError(`invalid codepoint at offset ${t}; ${e}`, "bytes", r);
                    },
                    ignore: K,
                    replace: function(e, t, r, n, i) {
                        return e === $.OVERLONG ? (n.push(i), 0) : (n.push(65533), K(e, t, r));
                    }
                });
                const W = "Ethereum Signed Message:\n";
                function J(e) {
                    return "string" == typeof e && (e = G(e)), H(function(e) {
                        const t = e.map((e)=>O(e)), r = t.reduce((e, t)=>e + t.length, 0), n = new Uint8Array(r);
                        return t.reduce((e, t)=>(n.set(t, e), e + t.length), 0), R(n);
                    }([
                        G(W),
                        G(String(e.length)),
                        e
                    ]));
                }
                var Y = r(3900), X = r.n(Y), Z = X().BN;
                new T("bignumber/5.8.0");
                const Q = new T("address/5.8.0");
                function ee(e) {
                    N(e, 20) || Q.throwArgumentError("invalid address", "address", e);
                    const t = (e = e.toLowerCase()).substring(2).split(""), r = new Uint8Array(40);
                    for(let e = 0; e < 40; e++)r[e] = t[e].charCodeAt(0);
                    const n = O(H(r));
                    for(let e = 0; e < 40; e += 2)n[e >> 1] >> 4 >= 8 && (t[e] = t[e].toUpperCase()), (15 & n[e >> 1]) >= 8 && (t[e + 1] = t[e + 1].toUpperCase());
                    return "0x" + t.join("");
                }
                const te = {};
                for(let e = 0; e < 10; e++)te[String(e)] = String(e);
                for(let e = 0; e < 26; e++)te[String.fromCharCode(65 + e)] = String(10 + e);
                const re = Math.floor((ne = 9007199254740991, Math.log10 ? Math.log10(ne) : Math.log(ne) / Math.LN10));
                var ne;
                function ie(e) {
                    let t = null;
                    if ("string" != typeof e && Q.throwArgumentError("invalid address", "address", e), e.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== e.substring(0, 2) && (e = "0x" + e), t = ee(e), e.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && t !== e && Q.throwArgumentError("bad address checksum", "address", e);
                    else if (e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                        for(e.substring(2, 4) !== function(e) {
                            let t = (e = (e = e.toUpperCase()).substring(4) + e.substring(0, 2) + "00").split("").map((e)=>te[e]).join("");
                            for(; t.length >= re;){
                                let e = t.substring(0, re);
                                t = parseInt(e, 10) % 97 + t.substring(e.length);
                            }
                            let r = String(98 - parseInt(t, 10) % 97);
                            for(; r.length < 2;)r = "0" + r;
                            return r;
                        }(e) && Q.throwArgumentError("bad icap checksum", "address", e), r = e.substring(4), t = new Z(r, 36).toString(16); t.length < 40;)t = "0" + t;
                        t = ee("0x" + t);
                    } else Q.throwArgumentError("invalid address", "address", e);
                    var r;
                    return t;
                }
                var se = r(1631), oe = r.n(se);
                function ae(e, t, r) {
                    return r = {
                        path: t,
                        exports: {},
                        require: function(e, t) {
                            return function() {
                                throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
                            }(null == t && r.path);
                        }
                    }, e(r, r.exports), r.exports;
                }
                "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== r.g ? r.g : "undefined" != typeof self && self;
                var ce = he;
                function he(e, t) {
                    if (!e) throw new Error(t || "Assertion failed");
                }
                he.equal = function(e, t, r) {
                    if (e != t) throw new Error(r || "Assertion failed: " + e + " != " + t);
                };
                var ue = ae(function(e, t) {
                    var r = t;
                    function n(e) {
                        return 1 === e.length ? "0" + e : e;
                    }
                    function i(e) {
                        for(var t = "", r = 0; r < e.length; r++)t += n(e[r].toString(16));
                        return t;
                    }
                    r.toArray = function(e, t) {
                        if (Array.isArray(e)) return e.slice();
                        if (!e) return [];
                        var r = [];
                        if ("string" != typeof e) {
                            for(var n = 0; n < e.length; n++)r[n] = 0 | e[n];
                            return r;
                        }
                        if ("hex" === t) for((e = e.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e = "0" + e), n = 0; n < e.length; n += 2)r.push(parseInt(e[n] + e[n + 1], 16));
                        else for(n = 0; n < e.length; n++){
                            var i = e.charCodeAt(n), s = i >> 8, o = 255 & i;
                            s ? r.push(s, o) : r.push(o);
                        }
                        return r;
                    }, r.zero2 = n, r.toHex = i, r.encode = function(e, t) {
                        return "hex" === t ? i(e) : e;
                    };
                }), de = ae(function(e, t) {
                    var r = t;
                    r.assert = ce, r.toArray = ue.toArray, r.zero2 = ue.zero2, r.toHex = ue.toHex, r.encode = ue.encode, r.getNAF = function(e, t, r) {
                        var n, i = new Array(Math.max(e.bitLength(), r) + 1);
                        for(n = 0; n < i.length; n += 1)i[n] = 0;
                        var s = 1 << t + 1, o = e.clone();
                        for(n = 0; n < i.length; n++){
                            var a, c = o.andln(s - 1);
                            o.isOdd() ? (a = c > (s >> 1) - 1 ? (s >> 1) - c : c, o.isubn(a)) : a = 0, i[n] = a, o.iushrn(1);
                        }
                        return i;
                    }, r.getJSF = function(e, t) {
                        var r = [
                            [],
                            []
                        ];
                        e = e.clone(), t = t.clone();
                        for(var n, i = 0, s = 0; e.cmpn(-i) > 0 || t.cmpn(-s) > 0;){
                            var o, a, c = e.andln(3) + i & 3, h = t.andln(3) + s & 3;
                            3 === c && (c = -1), 3 === h && (h = -1), o = 1 & c ? 3 != (n = e.andln(7) + i & 7) && 5 !== n || 2 !== h ? c : -c : 0, r[0].push(o), a = 1 & h ? 3 != (n = t.andln(7) + s & 7) && 5 !== n || 2 !== c ? h : -h : 0, r[1].push(a), 2 * i === o + 1 && (i = 1 - i), 2 * s === a + 1 && (s = 1 - s), e.iushrn(1), t.iushrn(1);
                        }
                        return r;
                    }, r.cachedProperty = function(e, t, r) {
                        var n = "_" + t;
                        e.prototype[t] = function() {
                            return void 0 !== this[n] ? this[n] : this[n] = r.call(this);
                        };
                    }, r.parseBytes = function(e) {
                        return "string" == typeof e ? r.toArray(e, "hex") : e;
                    }, r.intFromLE = function(e) {
                        return new (X())(e, "hex", "le");
                    };
                }), fe = de.getNAF, le = de.getJSF, pe = de.assert;
                function be(e, t) {
                    this.type = e, this.p = new (X())(t.p, 16), this.red = t.prime ? X().red(t.prime) : X().mont(this.p), this.zero = new (X())(0).toRed(this.red), this.one = new (X())(1).toRed(this.red), this.two = new (X())(2).toRed(this.red), this.n = t.n && new (X())(t.n, 16), this.g = t.g && this.pointFromJSON(t.g, t.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
                    var r = this.n && this.p.div(this.n);
                    !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));
                }
                var ge = be;
                function me(e, t) {
                    this.curve = e, this.type = t, this.precomputed = null;
                }
                be.prototype.point = function() {
                    throw new Error("Not implemented");
                }, be.prototype.validate = function() {
                    throw new Error("Not implemented");
                }, be.prototype._fixedNafMul = function(e, t) {
                    pe(e.precomputed);
                    var r = e._getDoubles(), n = fe(t, 1, this._bitLength), i = (1 << r.step + 1) - (r.step % 2 == 0 ? 2 : 1);
                    i /= 3;
                    var s, o, a = [];
                    for(s = 0; s < n.length; s += r.step){
                        o = 0;
                        for(var c = s + r.step - 1; c >= s; c--)o = (o << 1) + n[c];
                        a.push(o);
                    }
                    for(var h = this.jpoint(null, null, null), u = this.jpoint(null, null, null), d = i; d > 0; d--){
                        for(s = 0; s < a.length; s++)(o = a[s]) === d ? u = u.mixedAdd(r.points[s]) : o === -d && (u = u.mixedAdd(r.points[s].neg()));
                        h = h.add(u);
                    }
                    return h.toP();
                }, be.prototype._wnafMul = function(e, t) {
                    var r = 4, n = e._getNAFPoints(r);
                    r = n.wnd;
                    for(var i = n.points, s = fe(t, r, this._bitLength), o = this.jpoint(null, null, null), a = s.length - 1; a >= 0; a--){
                        for(var c = 0; a >= 0 && 0 === s[a]; a--)c++;
                        if (a >= 0 && c++, o = o.dblp(c), a < 0) break;
                        var h = s[a];
                        pe(0 !== h), o = "affine" === e.type ? h > 0 ? o.mixedAdd(i[h - 1 >> 1]) : o.mixedAdd(i[-h - 1 >> 1].neg()) : h > 0 ? o.add(i[h - 1 >> 1]) : o.add(i[-h - 1 >> 1].neg());
                    }
                    return "affine" === e.type ? o.toP() : o;
                }, be.prototype._wnafMulAdd = function(e, t, r, n, i) {
                    var s, o, a, c = this._wnafT1, h = this._wnafT2, u = this._wnafT3, d = 0;
                    for(s = 0; s < n; s++){
                        var f = (a = t[s])._getNAFPoints(e);
                        c[s] = f.wnd, h[s] = f.points;
                    }
                    for(s = n - 1; s >= 1; s -= 2){
                        var l = s - 1, p = s;
                        if (1 === c[l] && 1 === c[p]) {
                            var b = [
                                t[l],
                                null,
                                null,
                                t[p]
                            ];
                            0 === t[l].y.cmp(t[p].y) ? (b[1] = t[l].add(t[p]), b[2] = t[l].toJ().mixedAdd(t[p].neg())) : 0 === t[l].y.cmp(t[p].y.redNeg()) ? (b[1] = t[l].toJ().mixedAdd(t[p]), b[2] = t[l].add(t[p].neg())) : (b[1] = t[l].toJ().mixedAdd(t[p]), b[2] = t[l].toJ().mixedAdd(t[p].neg()));
                            var g = [
                                -3,
                                -1,
                                -5,
                                -7,
                                0,
                                7,
                                5,
                                1,
                                3
                            ], m = le(r[l], r[p]);
                            for(d = Math.max(m[0].length, d), u[l] = new Array(d), u[p] = new Array(d), o = 0; o < d; o++){
                                var y = 0 | m[0][o], v = 0 | m[1][o];
                                u[l][o] = g[3 * (y + 1) + (v + 1)], u[p][o] = 0, h[l] = b;
                            }
                        } else u[l] = fe(r[l], c[l], this._bitLength), u[p] = fe(r[p], c[p], this._bitLength), d = Math.max(u[l].length, d), d = Math.max(u[p].length, d);
                    }
                    var w = this.jpoint(null, null, null), _ = this._wnafT4;
                    for(s = d; s >= 0; s--){
                        for(var E = 0; s >= 0;){
                            var S = !0;
                            for(o = 0; o < n; o++)_[o] = 0 | u[o][s], 0 !== _[o] && (S = !1);
                            if (!S) break;
                            E++, s--;
                        }
                        if (s >= 0 && E++, w = w.dblp(E), s < 0) break;
                        for(o = 0; o < n; o++){
                            var A = _[o];
                            0 !== A && (A > 0 ? a = h[o][A - 1 >> 1] : A < 0 && (a = h[o][-A - 1 >> 1].neg()), w = "affine" === a.type ? w.mixedAdd(a) : w.add(a));
                        }
                    }
                    for(s = 0; s < n; s++)h[s] = null;
                    return i ? w : w.toP();
                }, be.BasePoint = me, me.prototype.eq = function() {
                    throw new Error("Not implemented");
                }, me.prototype.validate = function() {
                    return this.curve.validate(this);
                }, be.prototype.decodePoint = function(e, t) {
                    e = de.toArray(e, t);
                    var r = this.p.byteLength();
                    if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 == 2 * r) return 6 === e[0] ? pe(e[e.length - 1] % 2 == 0) : 7 === e[0] && pe(e[e.length - 1] % 2 == 1), this.point(e.slice(1, 1 + r), e.slice(1 + r, 1 + 2 * r));
                    if ((2 === e[0] || 3 === e[0]) && e.length - 1 === r) return this.pointFromX(e.slice(1, 1 + r), 3 === e[0]);
                    throw new Error("Unknown point format");
                }, me.prototype.encodeCompressed = function(e) {
                    return this.encode(e, !0);
                }, me.prototype._encode = function(e) {
                    var t = this.curve.p.byteLength(), r = this.getX().toArray("be", t);
                    return e ? [
                        this.getY().isEven() ? 2 : 3
                    ].concat(r) : [
                        4
                    ].concat(r, this.getY().toArray("be", t));
                }, me.prototype.encode = function(e, t) {
                    return de.encode(this._encode(t), e);
                }, me.prototype.precompute = function(e) {
                    if (this.precomputed) return this;
                    var t = {
                        doubles: null,
                        naf: null,
                        beta: null
                    };
                    return t.naf = this._getNAFPoints(8), t.doubles = this._getDoubles(4, e), t.beta = this._getBeta(), this.precomputed = t, this;
                }, me.prototype._hasDoubles = function(e) {
                    if (!this.precomputed) return !1;
                    var t = this.precomputed.doubles;
                    return !!t && t.points.length >= Math.ceil((e.bitLength() + 1) / t.step);
                }, me.prototype._getDoubles = function(e, t) {
                    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                    for(var r = [
                        this
                    ], n = this, i = 0; i < t; i += e){
                        for(var s = 0; s < e; s++)n = n.dbl();
                        r.push(n);
                    }
                    return {
                        step: e,
                        points: r
                    };
                }, me.prototype._getNAFPoints = function(e) {
                    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                    for(var t = [
                        this
                    ], r = (1 << e) - 1, n = 1 === r ? null : this.dbl(), i = 1; i < r; i++)t[i] = t[i - 1].add(n);
                    return {
                        wnd: e,
                        points: t
                    };
                }, me.prototype._getBeta = function() {
                    return null;
                }, me.prototype.dblp = function(e) {
                    for(var t = this, r = 0; r < e; r++)t = t.dbl();
                    return t;
                };
                var ye = ae(function(e) {
                    "function" == typeof Object.create ? e.exports = function(e, t) {
                        t && (e.super_ = t, e.prototype = Object.create(t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }));
                    } : e.exports = function(e, t) {
                        if (t) {
                            e.super_ = t;
                            var r = function() {};
                            r.prototype = t.prototype, e.prototype = new r, e.prototype.constructor = e;
                        }
                    };
                }), ve = de.assert;
                function we(e) {
                    ge.call(this, "short", e), this.a = new (X())(e.a, 16).toRed(this.red), this.b = new (X())(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(e), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
                }
                ye(we, ge);
                var _e = we;
                function Ee(e, t, r, n) {
                    ge.BasePoint.call(this, e, "affine"), null === t && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new (X())(t, 16), this.y = new (X())(r, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);
                }
                function Se(e, t, r, n) {
                    ge.BasePoint.call(this, e, "jacobian"), null === t && null === r && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new (X())(0)) : (this.x = new (X())(t, 16), this.y = new (X())(r, 16), this.z = new (X())(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
                }
                we.prototype._getEndomorphism = function(e) {
                    if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                        var t, r;
                        if (e.beta) t = new (X())(e.beta, 16).toRed(this.red);
                        else {
                            var n = this._getEndoRoots(this.p);
                            t = (t = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red);
                        }
                        if (e.lambda) r = new (X())(e.lambda, 16);
                        else {
                            var i = this._getEndoRoots(this.n);
                            0 === this.g.mul(i[0]).x.cmp(this.g.x.redMul(t)) ? r = i[0] : (r = i[1], ve(0 === this.g.mul(r).x.cmp(this.g.x.redMul(t))));
                        }
                        return {
                            beta: t,
                            lambda: r,
                            basis: e.basis ? e.basis.map(function(e) {
                                return {
                                    a: new (X())(e.a, 16),
                                    b: new (X())(e.b, 16)
                                };
                            }) : this._getEndoBasis(r)
                        };
                    }
                }, we.prototype._getEndoRoots = function(e) {
                    var t = e === this.p ? this.red : X().mont(e), r = new (X())(2).toRed(t).redInvm(), n = r.redNeg(), i = new (X())(3).toRed(t).redNeg().redSqrt().redMul(r);
                    return [
                        n.redAdd(i).fromRed(),
                        n.redSub(i).fromRed()
                    ];
                }, we.prototype._getEndoBasis = function(e) {
                    for(var t, r, n, i, s, o, a, c, h, u = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), d = e, f = this.n.clone(), l = new (X())(1), p = new (X())(0), b = new (X())(0), g = new (X())(1), m = 0; 0 !== d.cmpn(0);){
                        var y = f.div(d);
                        c = f.sub(y.mul(d)), h = b.sub(y.mul(l));
                        var v = g.sub(y.mul(p));
                        if (!n && c.cmp(u) < 0) t = a.neg(), r = l, n = c.neg(), i = h;
                        else if (n && 2 == ++m) break;
                        a = c, f = d, d = c, b = l, l = h, g = p, p = v;
                    }
                    s = c.neg(), o = h;
                    var w = n.sqr().add(i.sqr());
                    return s.sqr().add(o.sqr()).cmp(w) >= 0 && (s = t, o = r), n.negative && (n = n.neg(), i = i.neg()), s.negative && (s = s.neg(), o = o.neg()), [
                        {
                            a: n,
                            b: i
                        },
                        {
                            a: s,
                            b: o
                        }
                    ];
                }, we.prototype._endoSplit = function(e) {
                    var t = this.endo.basis, r = t[0], n = t[1], i = n.b.mul(e).divRound(this.n), s = r.b.neg().mul(e).divRound(this.n), o = i.mul(r.a), a = s.mul(n.a), c = i.mul(r.b), h = s.mul(n.b);
                    return {
                        k1: e.sub(o).sub(a),
                        k2: c.add(h).neg()
                    };
                }, we.prototype.pointFromX = function(e, t) {
                    (e = new (X())(e, 16)).red || (e = e.toRed(this.red));
                    var r = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b), n = r.redSqrt();
                    if (0 !== n.redSqr().redSub(r).cmp(this.zero)) throw new Error("invalid point");
                    var i = n.fromRed().isOdd();
                    return (t && !i || !t && i) && (n = n.redNeg()), this.point(e, n);
                }, we.prototype.validate = function(e) {
                    if (e.inf) return !0;
                    var t = e.x, r = e.y, n = this.a.redMul(t), i = t.redSqr().redMul(t).redIAdd(n).redIAdd(this.b);
                    return 0 === r.redSqr().redISub(i).cmpn(0);
                }, we.prototype._endoWnafMulAdd = function(e, t, r) {
                    for(var n = this._endoWnafT1, i = this._endoWnafT2, s = 0; s < e.length; s++){
                        var o = this._endoSplit(t[s]), a = e[s], c = a._getBeta();
                        o.k1.negative && (o.k1.ineg(), a = a.neg(!0)), o.k2.negative && (o.k2.ineg(), c = c.neg(!0)), n[2 * s] = a, n[2 * s + 1] = c, i[2 * s] = o.k1, i[2 * s + 1] = o.k2;
                    }
                    for(var h = this._wnafMulAdd(1, n, i, 2 * s, r), u = 0; u < 2 * s; u++)n[u] = null, i[u] = null;
                    return h;
                }, ye(Ee, ge.BasePoint), we.prototype.point = function(e, t, r) {
                    return new Ee(this, e, t, r);
                }, we.prototype.pointFromJSON = function(e, t) {
                    return Ee.fromJSON(this, e, t);
                }, Ee.prototype._getBeta = function() {
                    if (this.curve.endo) {
                        var e = this.precomputed;
                        if (e && e.beta) return e.beta;
                        var t = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                        if (e) {
                            var r = this.curve, n = function(e) {
                                return r.point(e.x.redMul(r.endo.beta), e.y);
                            };
                            e.beta = t, t.precomputed = {
                                beta: null,
                                naf: e.naf && {
                                    wnd: e.naf.wnd,
                                    points: e.naf.points.map(n)
                                },
                                doubles: e.doubles && {
                                    step: e.doubles.step,
                                    points: e.doubles.points.map(n)
                                }
                            };
                        }
                        return t;
                    }
                }, Ee.prototype.toJSON = function() {
                    return this.precomputed ? [
                        this.x,
                        this.y,
                        this.precomputed && {
                            doubles: this.precomputed.doubles && {
                                step: this.precomputed.doubles.step,
                                points: this.precomputed.doubles.points.slice(1)
                            },
                            naf: this.precomputed.naf && {
                                wnd: this.precomputed.naf.wnd,
                                points: this.precomputed.naf.points.slice(1)
                            }
                        }
                    ] : [
                        this.x,
                        this.y
                    ];
                }, Ee.fromJSON = function(e, t, r) {
                    "string" == typeof t && (t = JSON.parse(t));
                    var n = e.point(t[0], t[1], r);
                    if (!t[2]) return n;
                    function i(t) {
                        return e.point(t[0], t[1], r);
                    }
                    var s = t[2];
                    return n.precomputed = {
                        beta: null,
                        doubles: s.doubles && {
                            step: s.doubles.step,
                            points: [
                                n
                            ].concat(s.doubles.points.map(i))
                        },
                        naf: s.naf && {
                            wnd: s.naf.wnd,
                            points: [
                                n
                            ].concat(s.naf.points.map(i))
                        }
                    }, n;
                }, Ee.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
                }, Ee.prototype.isInfinity = function() {
                    return this.inf;
                }, Ee.prototype.add = function(e) {
                    if (this.inf) return e;
                    if (e.inf) return this;
                    if (this.eq(e)) return this.dbl();
                    if (this.neg().eq(e)) return this.curve.point(null, null);
                    if (0 === this.x.cmp(e.x)) return this.curve.point(null, null);
                    var t = this.y.redSub(e.y);
                    0 !== t.cmpn(0) && (t = t.redMul(this.x.redSub(e.x).redInvm()));
                    var r = t.redSqr().redISub(this.x).redISub(e.x), n = t.redMul(this.x.redSub(r)).redISub(this.y);
                    return this.curve.point(r, n);
                }, Ee.prototype.dbl = function() {
                    if (this.inf) return this;
                    var e = this.y.redAdd(this.y);
                    if (0 === e.cmpn(0)) return this.curve.point(null, null);
                    var t = this.curve.a, r = this.x.redSqr(), n = e.redInvm(), i = r.redAdd(r).redIAdd(r).redIAdd(t).redMul(n), s = i.redSqr().redISub(this.x.redAdd(this.x)), o = i.redMul(this.x.redSub(s)).redISub(this.y);
                    return this.curve.point(s, o);
                }, Ee.prototype.getX = function() {
                    return this.x.fromRed();
                }, Ee.prototype.getY = function() {
                    return this.y.fromRed();
                }, Ee.prototype.mul = function(e) {
                    return e = new (X())(e, 16), this.isInfinity() ? this : this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([
                        this
                    ], [
                        e
                    ]) : this.curve._wnafMul(this, e);
                }, Ee.prototype.mulAdd = function(e, t, r) {
                    var n = [
                        this,
                        t
                    ], i = [
                        e,
                        r
                    ];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2);
                }, Ee.prototype.jmulAdd = function(e, t, r) {
                    var n = [
                        this,
                        t
                    ], i = [
                        e,
                        r
                    ];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0);
                }, Ee.prototype.eq = function(e) {
                    return this === e || this.inf === e.inf && (this.inf || 0 === this.x.cmp(e.x) && 0 === this.y.cmp(e.y));
                }, Ee.prototype.neg = function(e) {
                    if (this.inf) return this;
                    var t = this.curve.point(this.x, this.y.redNeg());
                    if (e && this.precomputed) {
                        var r = this.precomputed, n = function(e) {
                            return e.neg();
                        };
                        t.precomputed = {
                            naf: r.naf && {
                                wnd: r.naf.wnd,
                                points: r.naf.points.map(n)
                            },
                            doubles: r.doubles && {
                                step: r.doubles.step,
                                points: r.doubles.points.map(n)
                            }
                        };
                    }
                    return t;
                }, Ee.prototype.toJ = function() {
                    return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
                }, ye(Se, ge.BasePoint), we.prototype.jpoint = function(e, t, r) {
                    return new Se(this, e, t, r);
                }, Se.prototype.toP = function() {
                    if (this.isInfinity()) return this.curve.point(null, null);
                    var e = this.z.redInvm(), t = e.redSqr(), r = this.x.redMul(t), n = this.y.redMul(t).redMul(e);
                    return this.curve.point(r, n);
                }, Se.prototype.neg = function() {
                    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
                }, Se.prototype.add = function(e) {
                    if (this.isInfinity()) return e;
                    if (e.isInfinity()) return this;
                    var t = e.z.redSqr(), r = this.z.redSqr(), n = this.x.redMul(t), i = e.x.redMul(r), s = this.y.redMul(t.redMul(e.z)), o = e.y.redMul(r.redMul(this.z)), a = n.redSub(i), c = s.redSub(o);
                    if (0 === a.cmpn(0)) return 0 !== c.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var h = a.redSqr(), u = h.redMul(a), d = n.redMul(h), f = c.redSqr().redIAdd(u).redISub(d).redISub(d), l = c.redMul(d.redISub(f)).redISub(s.redMul(u)), p = this.z.redMul(e.z).redMul(a);
                    return this.curve.jpoint(f, l, p);
                }, Se.prototype.mixedAdd = function(e) {
                    if (this.isInfinity()) return e.toJ();
                    if (e.isInfinity()) return this;
                    var t = this.z.redSqr(), r = this.x, n = e.x.redMul(t), i = this.y, s = e.y.redMul(t).redMul(this.z), o = r.redSub(n), a = i.redSub(s);
                    if (0 === o.cmpn(0)) return 0 !== a.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var c = o.redSqr(), h = c.redMul(o), u = r.redMul(c), d = a.redSqr().redIAdd(h).redISub(u).redISub(u), f = a.redMul(u.redISub(d)).redISub(i.redMul(h)), l = this.z.redMul(o);
                    return this.curve.jpoint(d, f, l);
                }, Se.prototype.dblp = function(e) {
                    if (0 === e) return this;
                    if (this.isInfinity()) return this;
                    if (!e) return this.dbl();
                    var t;
                    if (this.curve.zeroA || this.curve.threeA) {
                        var r = this;
                        for(t = 0; t < e; t++)r = r.dbl();
                        return r;
                    }
                    var n = this.curve.a, i = this.curve.tinv, s = this.x, o = this.y, a = this.z, c = a.redSqr().redSqr(), h = o.redAdd(o);
                    for(t = 0; t < e; t++){
                        var u = s.redSqr(), d = h.redSqr(), f = d.redSqr(), l = u.redAdd(u).redIAdd(u).redIAdd(n.redMul(c)), p = s.redMul(d), b = l.redSqr().redISub(p.redAdd(p)), g = p.redISub(b), m = l.redMul(g);
                        m = m.redIAdd(m).redISub(f);
                        var y = h.redMul(a);
                        t + 1 < e && (c = c.redMul(f)), s = b, a = y, h = m;
                    }
                    return this.curve.jpoint(s, h.redMul(i), a);
                }, Se.prototype.dbl = function() {
                    return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
                }, Se.prototype._zeroDbl = function() {
                    var e, t, r;
                    if (this.zOne) {
                        var n = this.x.redSqr(), i = this.y.redSqr(), s = i.redSqr(), o = this.x.redAdd(i).redSqr().redISub(n).redISub(s);
                        o = o.redIAdd(o);
                        var a = n.redAdd(n).redIAdd(n), c = a.redSqr().redISub(o).redISub(o), h = s.redIAdd(s);
                        h = (h = h.redIAdd(h)).redIAdd(h), e = c, t = a.redMul(o.redISub(c)).redISub(h), r = this.y.redAdd(this.y);
                    } else {
                        var u = this.x.redSqr(), d = this.y.redSqr(), f = d.redSqr(), l = this.x.redAdd(d).redSqr().redISub(u).redISub(f);
                        l = l.redIAdd(l);
                        var p = u.redAdd(u).redIAdd(u), b = p.redSqr(), g = f.redIAdd(f);
                        g = (g = g.redIAdd(g)).redIAdd(g), e = b.redISub(l).redISub(l), t = p.redMul(l.redISub(e)).redISub(g), r = (r = this.y.redMul(this.z)).redIAdd(r);
                    }
                    return this.curve.jpoint(e, t, r);
                }, Se.prototype._threeDbl = function() {
                    var e, t, r;
                    if (this.zOne) {
                        var n = this.x.redSqr(), i = this.y.redSqr(), s = i.redSqr(), o = this.x.redAdd(i).redSqr().redISub(n).redISub(s);
                        o = o.redIAdd(o);
                        var a = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a), c = a.redSqr().redISub(o).redISub(o);
                        e = c;
                        var h = s.redIAdd(s);
                        h = (h = h.redIAdd(h)).redIAdd(h), t = a.redMul(o.redISub(c)).redISub(h), r = this.y.redAdd(this.y);
                    } else {
                        var u = this.z.redSqr(), d = this.y.redSqr(), f = this.x.redMul(d), l = this.x.redSub(u).redMul(this.x.redAdd(u));
                        l = l.redAdd(l).redIAdd(l);
                        var p = f.redIAdd(f), b = (p = p.redIAdd(p)).redAdd(p);
                        e = l.redSqr().redISub(b), r = this.y.redAdd(this.z).redSqr().redISub(d).redISub(u);
                        var g = d.redSqr();
                        g = (g = (g = g.redIAdd(g)).redIAdd(g)).redIAdd(g), t = l.redMul(p.redISub(e)).redISub(g);
                    }
                    return this.curve.jpoint(e, t, r);
                }, Se.prototype._dbl = function() {
                    var e = this.curve.a, t = this.x, r = this.y, n = this.z, i = n.redSqr().redSqr(), s = t.redSqr(), o = r.redSqr(), a = s.redAdd(s).redIAdd(s).redIAdd(e.redMul(i)), c = t.redAdd(t), h = (c = c.redIAdd(c)).redMul(o), u = a.redSqr().redISub(h.redAdd(h)), d = h.redISub(u), f = o.redSqr();
                    f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
                    var l = a.redMul(d).redISub(f), p = r.redAdd(r).redMul(n);
                    return this.curve.jpoint(u, l, p);
                }, Se.prototype.trpl = function() {
                    if (!this.curve.zeroA) return this.dbl().add(this);
                    var e = this.x.redSqr(), t = this.y.redSqr(), r = this.z.redSqr(), n = t.redSqr(), i = e.redAdd(e).redIAdd(e), s = i.redSqr(), o = this.x.redAdd(t).redSqr().redISub(e).redISub(n), a = (o = (o = (o = o.redIAdd(o)).redAdd(o).redIAdd(o)).redISub(s)).redSqr(), c = n.redIAdd(n);
                    c = (c = (c = c.redIAdd(c)).redIAdd(c)).redIAdd(c);
                    var h = i.redIAdd(o).redSqr().redISub(s).redISub(a).redISub(c), u = t.redMul(h);
                    u = (u = u.redIAdd(u)).redIAdd(u);
                    var d = this.x.redMul(a).redISub(u);
                    d = (d = d.redIAdd(d)).redIAdd(d);
                    var f = this.y.redMul(h.redMul(c.redISub(h)).redISub(o.redMul(a)));
                    f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
                    var l = this.z.redAdd(o).redSqr().redISub(r).redISub(a);
                    return this.curve.jpoint(d, f, l);
                }, Se.prototype.mul = function(e, t) {
                    return e = new (X())(e, t), this.curve._wnafMul(this, e);
                }, Se.prototype.eq = function(e) {
                    if ("affine" === e.type) return this.eq(e.toJ());
                    if (this === e) return !0;
                    var t = this.z.redSqr(), r = e.z.redSqr();
                    if (0 !== this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0)) return !1;
                    var n = t.redMul(this.z), i = r.redMul(e.z);
                    return 0 === this.y.redMul(i).redISub(e.y.redMul(n)).cmpn(0);
                }, Se.prototype.eqXToP = function(e) {
                    var t = this.z.redSqr(), r = e.toRed(this.curve.red).redMul(t);
                    if (0 === this.x.cmp(r)) return !0;
                    for(var n = e.clone(), i = this.curve.redN.redMul(t);;){
                        if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                        if (r.redIAdd(i), 0 === this.x.cmp(r)) return !0;
                    }
                }, Se.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
                }, Se.prototype.isInfinity = function() {
                    return 0 === this.z.cmpn(0);
                };
                var Ae = ae(function(e, t) {
                    var r = t;
                    r.base = ge, r.short = _e, r.mont = null, r.edwards = null;
                }), Me = ae(function(e, t) {
                    var r, n = t, i = de.assert;
                    function s(e) {
                        "short" === e.type ? this.curve = new Ae.short(e) : "edwards" === e.type ? this.curve = new Ae.edwards(e) : this.curve = new Ae.mont(e), this.g = this.curve.g, this.n = this.curve.n, this.hash = e.hash, i(this.g.validate(), "Invalid curve"), i(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
                    }
                    function o(e, t) {
                        Object.defineProperty(n, e, {
                            configurable: !0,
                            enumerable: !0,
                            get: function() {
                                var r = new s(t);
                                return Object.defineProperty(n, e, {
                                    configurable: !0,
                                    enumerable: !0,
                                    value: r
                                }), r;
                            }
                        });
                    }
                    n.PresetCurve = s, o("p192", {
                        type: "short",
                        prime: "p192",
                        p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                        b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                        n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                        hash: oe().sha256,
                        gRed: !1,
                        g: [
                            "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
                            "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
                        ]
                    }), o("p224", {
                        type: "short",
                        prime: "p224",
                        p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                        b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                        n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                        hash: oe().sha256,
                        gRed: !1,
                        g: [
                            "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
                            "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
                        ]
                    }), o("p256", {
                        type: "short",
                        prime: null,
                        p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                        a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                        b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                        n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                        hash: oe().sha256,
                        gRed: !1,
                        g: [
                            "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
                            "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
                        ]
                    }), o("p384", {
                        type: "short",
                        prime: null,
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                        a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                        b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                        n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                        hash: oe().sha384,
                        gRed: !1,
                        g: [
                            "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
                            "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
                        ]
                    }), o("p521", {
                        type: "short",
                        prime: null,
                        p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                        a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                        b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                        n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                        hash: oe().sha512,
                        gRed: !1,
                        g: [
                            "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
                            "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
                        ]
                    }), o("curve25519", {
                        type: "mont",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "76d06",
                        b: "1",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: oe().sha256,
                        gRed: !1,
                        g: [
                            "9"
                        ]
                    }), o("ed25519", {
                        type: "edwards",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "-1",
                        c: "1",
                        d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: oe().sha256,
                        gRed: !1,
                        g: [
                            "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
                            "6666666666666666666666666666666666666666666666666666666666666658"
                        ]
                    });
                    try {
                        r = null.crash();
                    } catch (e) {
                        r = void 0;
                    }
                    o("secp256k1", {
                        type: "short",
                        prime: "k256",
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                        a: "0",
                        b: "7",
                        n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                        h: "1",
                        hash: oe().sha256,
                        beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                        lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                        basis: [
                            {
                                a: "3086d221a7d46bcde86c90e49284eb15",
                                b: "-e4437ed6010e88286f547fa90abfe4c3"
                            },
                            {
                                a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                                b: "3086d221a7d46bcde86c90e49284eb15"
                            }
                        ],
                        gRed: !1,
                        g: [
                            "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
                            "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
                            r
                        ]
                    });
                });
                function Ie(e) {
                    if (!(this instanceof Ie)) return new Ie(e);
                    this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                    var t = ue.toArray(e.entropy, e.entropyEnc || "hex"), r = ue.toArray(e.nonce, e.nonceEnc || "hex"), n = ue.toArray(e.pers, e.persEnc || "hex");
                    ce(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(t, r, n);
                }
                var Te = Ie;
                Ie.prototype._init = function(e, t, r) {
                    var n = e.concat(t).concat(r);
                    this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
                    for(var i = 0; i < this.V.length; i++)this.K[i] = 0, this.V[i] = 1;
                    this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656;
                }, Ie.prototype._hmac = function() {
                    return new (oe()).hmac(this.hash, this.K);
                }, Ie.prototype._update = function(e) {
                    var t = this._hmac().update(this.V).update([
                        0
                    ]);
                    e && (t = t.update(e)), this.K = t.digest(), this.V = this._hmac().update(this.V).digest(), e && (this.K = this._hmac().update(this.V).update([
                        1
                    ]).update(e).digest(), this.V = this._hmac().update(this.V).digest());
                }, Ie.prototype.reseed = function(e, t, r, n) {
                    "string" != typeof t && (n = r, r = t, t = null), e = ue.toArray(e, t), r = ue.toArray(r, n), ce(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e.concat(r || [])), this._reseed = 1;
                }, Ie.prototype.generate = function(e, t, r, n) {
                    if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
                    "string" != typeof t && (n = r, r = t, t = null), r && (r = ue.toArray(r, n || "hex"), this._update(r));
                    for(var i = []; i.length < e;)this.V = this._hmac().update(this.V).digest(), i = i.concat(this.V);
                    var s = i.slice(0, e);
                    return this._update(r), this._reseed++, ue.encode(s, t);
                };
                var xe = de.assert;
                function Ce(e, t) {
                    this.ec = e, this.priv = null, this.pub = null, t.priv && this._importPrivate(t.priv, t.privEnc), t.pub && this._importPublic(t.pub, t.pubEnc);
                }
                var Re = Ce;
                Ce.fromPublic = function(e, t, r) {
                    return t instanceof Ce ? t : new Ce(e, {
                        pub: t,
                        pubEnc: r
                    });
                }, Ce.fromPrivate = function(e, t, r) {
                    return t instanceof Ce ? t : new Ce(e, {
                        priv: t,
                        privEnc: r
                    });
                }, Ce.prototype.validate = function() {
                    var e = this.getPublic();
                    return e.isInfinity() ? {
                        result: !1,
                        reason: "Invalid public key"
                    } : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? {
                        result: !0,
                        reason: null
                    } : {
                        result: !1,
                        reason: "Public key * N != O"
                    } : {
                        result: !1,
                        reason: "Public key is not a point"
                    };
                }, Ce.prototype.getPublic = function(e, t) {
                    return "string" == typeof e && (t = e, e = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), t ? this.pub.encode(t, e) : this.pub;
                }, Ce.prototype.getPrivate = function(e) {
                    return "hex" === e ? this.priv.toString(16, 2) : this.priv;
                }, Ce.prototype._importPrivate = function(e, t) {
                    this.priv = new (X())(e, t || 16), this.priv = this.priv.umod(this.ec.curve.n);
                }, Ce.prototype._importPublic = function(e, t) {
                    if (e.x || e.y) return "mont" === this.ec.curve.type ? xe(e.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || xe(e.x && e.y, "Need both x and y coordinate"), void (this.pub = this.ec.curve.point(e.x, e.y));
                    this.pub = this.ec.curve.decodePoint(e, t);
                }, Ce.prototype.derive = function(e) {
                    return e.validate() || xe(e.validate(), "public point not validated"), e.mul(this.priv).getX();
                }, Ce.prototype.sign = function(e, t, r) {
                    return this.ec.sign(e, this, t, r);
                }, Ce.prototype.verify = function(e, t, r) {
                    return this.ec.verify(e, t, this, void 0, r);
                }, Ce.prototype.inspect = function() {
                    return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
                };
                var ke = de.assert;
                function Pe(e, t) {
                    if (e instanceof Pe) return e;
                    this._importDER(e, t) || (ke(e.r && e.s, "Signature without r or s"), this.r = new (X())(e.r, 16), this.s = new (X())(e.s, 16), void 0 === e.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam);
                }
                var Oe = Pe;
                function Ne() {
                    this.place = 0;
                }
                function Ue(e, t) {
                    var r = e[t.place++];
                    if (!(128 & r)) return r;
                    var n = 15 & r;
                    if (0 === n || n > 4) return !1;
                    if (0 === e[t.place]) return !1;
                    for(var i = 0, s = 0, o = t.place; s < n; s++, o++)i <<= 8, i |= e[o], i >>>= 0;
                    return !(i <= 127) && (t.place = o, i);
                }
                function Be(e) {
                    for(var t = 0, r = e.length - 1; !e[t] && !(128 & e[t + 1]) && t < r;)t++;
                    return 0 === t ? e : e.slice(t);
                }
                function Le(e, t) {
                    if (t < 128) e.push(t);
                    else {
                        var r = 1 + (Math.log(t) / Math.LN2 >>> 3);
                        for(e.push(128 | r); --r;)e.push(t >>> (r << 3) & 255);
                        e.push(t);
                    }
                }
                Pe.prototype._importDER = function(e, t) {
                    e = de.toArray(e, t);
                    var r = new Ne;
                    if (48 !== e[r.place++]) return !1;
                    var n = Ue(e, r);
                    if (!1 === n) return !1;
                    if (n + r.place !== e.length) return !1;
                    if (2 !== e[r.place++]) return !1;
                    var i = Ue(e, r);
                    if (!1 === i) return !1;
                    if (128 & e[r.place]) return !1;
                    var s = e.slice(r.place, i + r.place);
                    if (r.place += i, 2 !== e[r.place++]) return !1;
                    var o = Ue(e, r);
                    if (!1 === o) return !1;
                    if (e.length !== o + r.place) return !1;
                    if (128 & e[r.place]) return !1;
                    var a = e.slice(r.place, o + r.place);
                    if (0 === s[0]) {
                        if (!(128 & s[1])) return !1;
                        s = s.slice(1);
                    }
                    if (0 === a[0]) {
                        if (!(128 & a[1])) return !1;
                        a = a.slice(1);
                    }
                    return this.r = new (X())(s), this.s = new (X())(a), this.recoveryParam = null, !0;
                }, Pe.prototype.toDER = function(e) {
                    var t = this.r.toArray(), r = this.s.toArray();
                    for(128 & t[0] && (t = [
                        0
                    ].concat(t)), 128 & r[0] && (r = [
                        0
                    ].concat(r)), t = Be(t), r = Be(r); !(r[0] || 128 & r[1]);)r = r.slice(1);
                    var n = [
                        2
                    ];
                    Le(n, t.length), (n = n.concat(t)).push(2), Le(n, r.length);
                    var i = n.concat(r), s = [
                        48
                    ];
                    return Le(s, i.length), s = s.concat(i), de.encode(s, e);
                };
                var je = function() {
                    throw new Error("unsupported");
                }, De = de.assert;
                function qe(e) {
                    if (!(this instanceof qe)) return new qe(e);
                    "string" == typeof e && (De(Object.prototype.hasOwnProperty.call(Me, e), "Unknown curve " + e), e = Me[e]), e instanceof Me.PresetCurve && (e = {
                        curve: e
                    }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash;
                }
                var Fe = qe;
                qe.prototype.keyPair = function(e) {
                    return new Re(this, e);
                }, qe.prototype.keyFromPrivate = function(e, t) {
                    return Re.fromPrivate(this, e, t);
                }, qe.prototype.keyFromPublic = function(e, t) {
                    return Re.fromPublic(this, e, t);
                }, qe.prototype.genKeyPair = function(e) {
                    e || (e = {});
                    for(var t = new Te({
                        hash: this.hash,
                        pers: e.pers,
                        persEnc: e.persEnc || "utf8",
                        entropy: e.entropy || je(this.hash.hmacStrength),
                        entropyEnc: e.entropy && e.entropyEnc || "utf8",
                        nonce: this.n.toArray()
                    }), r = this.n.byteLength(), n = this.n.sub(new (X())(2));;){
                        var i = new (X())(t.generate(r));
                        if (!(i.cmp(n) > 0)) return i.iaddn(1), this.keyFromPrivate(i);
                    }
                }, qe.prototype._truncateToN = function(e, t, r) {
                    var n;
                    if (X().isBN(e) || "number" == typeof e) n = (e = new (X())(e, 16)).byteLength();
                    else if ("object" == typeof e) n = e.length, e = new (X())(e, 16);
                    else {
                        var i = e.toString();
                        n = i.length + 1 >>> 1, e = new (X())(i, 16);
                    }
                    "number" != typeof r && (r = 8 * n);
                    var s = r - this.n.bitLength();
                    return s > 0 && (e = e.ushrn(s)), !t && e.cmp(this.n) >= 0 ? e.sub(this.n) : e;
                }, qe.prototype.sign = function(e, t, r, n) {
                    if ("object" == typeof r && (n = r, r = null), n || (n = {}), "string" != typeof e && "number" != typeof e && !X().isBN(e)) {
                        De("object" == typeof e && e && "number" == typeof e.length, "Expected message to be an array-like, a hex string, or a BN instance"), De(e.length >>> 0 === e.length);
                        for(var i = 0; i < e.length; i++)De((255 & e[i]) === e[i]);
                    }
                    t = this.keyFromPrivate(t, r), e = this._truncateToN(e, !1, n.msgBitLength), De(!e.isNeg(), "Can not sign a negative message");
                    var s = this.n.byteLength(), o = t.getPrivate().toArray("be", s), a = e.toArray("be", s);
                    De(new (X())(a).eq(e), "Can not sign message");
                    for(var c = new Te({
                        hash: this.hash,
                        entropy: o,
                        nonce: a,
                        pers: n.pers,
                        persEnc: n.persEnc || "utf8"
                    }), h = this.n.sub(new (X())(1)), u = 0;; u++){
                        var d = n.k ? n.k(u) : new (X())(c.generate(this.n.byteLength()));
                        if (!((d = this._truncateToN(d, !0)).cmpn(1) <= 0 || d.cmp(h) >= 0)) {
                            var f = this.g.mul(d);
                            if (!f.isInfinity()) {
                                var l = f.getX(), p = l.umod(this.n);
                                if (0 !== p.cmpn(0)) {
                                    var b = d.invm(this.n).mul(p.mul(t.getPrivate()).iadd(e));
                                    if (0 !== (b = b.umod(this.n)).cmpn(0)) {
                                        var g = (f.getY().isOdd() ? 1 : 0) | (0 !== l.cmp(p) ? 2 : 0);
                                        return n.canonical && b.cmp(this.nh) > 0 && (b = this.n.sub(b), g ^= 1), new Oe({
                                            r: p,
                                            s: b,
                                            recoveryParam: g
                                        });
                                    }
                                }
                            }
                        }
                    }
                }, qe.prototype.verify = function(e, t, r, n, i) {
                    i || (i = {}), e = this._truncateToN(e, !1, i.msgBitLength), r = this.keyFromPublic(r, n);
                    var s = (t = new Oe(t, "hex")).r, o = t.s;
                    if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return !1;
                    if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
                    var a, c = o.invm(this.n), h = c.mul(e).umod(this.n), u = c.mul(s).umod(this.n);
                    return this.curve._maxwellTrick ? !(a = this.g.jmulAdd(h, r.getPublic(), u)).isInfinity() && a.eqXToP(s) : !(a = this.g.mulAdd(h, r.getPublic(), u)).isInfinity() && 0 === a.getX().umod(this.n).cmp(s);
                }, qe.prototype.recoverPubKey = function(e, t, r, n) {
                    De((3 & r) === r, "The recovery param is more than two bits"), t = new Oe(t, n);
                    var i = this.n, s = new (X())(e), o = t.r, a = t.s, c = 1 & r, h = r >> 1;
                    if (o.cmp(this.curve.p.umod(this.curve.n)) >= 0 && h) throw new Error("Unable to find sencond key candinate");
                    o = h ? this.curve.pointFromX(o.add(this.curve.n), c) : this.curve.pointFromX(o, c);
                    var u = t.r.invm(i), d = i.sub(s).mul(u).umod(i), f = a.mul(u).umod(i);
                    return this.g.mulAdd(d, o, f);
                }, qe.prototype.getKeyRecoveryParam = function(e, t, r, n) {
                    if (null !== (t = new Oe(t, n)).recoveryParam) return t.recoveryParam;
                    for(var i = 0; i < 4; i++){
                        var s;
                        try {
                            s = this.recoverPubKey(e, t, i);
                        } catch (e) {
                            continue;
                        }
                        if (s.eq(r)) return i;
                    }
                    throw new Error("Unable to find valid recovery factor");
                };
                var He = ae(function(e, t) {
                    var r = t;
                    r.version = "6.6.1", r.utils = de, r.rand = function() {
                        throw new Error("unsupported");
                    }, r.curve = Ae, r.curves = Me, r.ec = Fe, r.eddsa = null;
                }), ze = He.ec;
                function Ve(e, t, r) {
                    Object.defineProperty(e, t, {
                        enumerable: !0,
                        value: r,
                        writable: !1
                    });
                }
                new T("properties/5.8.0");
                const $e = new T("signing-key/5.8.0");
                let Ke = null;
                function Ge() {
                    return Ke || (Ke = new ze("secp256k1")), Ke;
                }
                class We {
                    constructor(e){
                        Ve(this, "curve", "secp256k1"), Ve(this, "privateKey", B(e)), 32 !== function(e) {
                            if ("string" != typeof e) e = B(e);
                            else if (!N(e) || e.length % 2) return null;
                            return (e.length - 2) / 2;
                        }(this.privateKey) && $e.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
                        const t = Ge().keyFromPrivate(O(this.privateKey));
                        Ve(this, "publicKey", "0x" + t.getPublic(!1, "hex")), Ve(this, "compressedPublicKey", "0x" + t.getPublic(!0, "hex")), Ve(this, "_isSigningKey", !0);
                    }
                    _addPoint(e) {
                        const t = Ge().keyFromPublic(O(this.publicKey)), r = Ge().keyFromPublic(O(e));
                        return "0x" + t.pub.add(r.pub).encodeCompressed("hex");
                    }
                    signDigest(e) {
                        const t = Ge().keyFromPrivate(O(this.privateKey)), r = O(e);
                        32 !== r.length && $e.throwArgumentError("bad digest length", "digest", e);
                        const n = t.sign(r, {
                            canonical: !0
                        });
                        return D({
                            recoveryParam: n.recoveryParam,
                            r: j("0x" + n.r.toString(16), 32),
                            s: j("0x" + n.s.toString(16), 32)
                        });
                    }
                    computeSharedSecret(e) {
                        const t = Ge().keyFromPrivate(O(this.privateKey)), r = Ge().keyFromPublic(O(Je(e)));
                        return j("0x" + t.derive(r.getPublic()).toString(16), 32);
                    }
                    static isSigningKey(e) {
                        return !(!e || !e._isSigningKey);
                    }
                }
                function Je(e, t) {
                    const r = O(e);
                    if (32 === r.length) {
                        const e = new We(r);
                        return t ? "0x" + Ge().keyFromPrivate(r).getPublic(!0, "hex") : e.publicKey;
                    }
                    return 33 === r.length ? t ? B(r) : "0x" + Ge().keyFromPublic(r).getPublic(!1, "hex") : 65 === r.length ? t ? "0x" + Ge().keyFromPublic(r).getPublic(!0, "hex") : B(r) : $e.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
                }
                var Ye;
                new T("transactions/5.7.0"), function(e) {
                    e[e.legacy = 0] = "legacy", e[e.eip2930 = 1] = "eip2930", e[e.eip1559 = 2] = "eip1559";
                }(Ye || (Ye = {}));
                var Xe = r(3043), Ze = r(1619), Qe = r(4734), et = r(6247), tt = r(2945), rt = r(2376), nt = r(3071), it = r(9940);
                const st = {
                    waku: {
                        publish: "waku_publish",
                        batchPublish: "waku_batchPublish",
                        subscribe: "waku_subscribe",
                        batchSubscribe: "waku_batchSubscribe",
                        subscription: "waku_subscription",
                        unsubscribe: "waku_unsubscribe",
                        batchUnsubscribe: "waku_batchUnsubscribe",
                        batchFetchMessages: "waku_batchFetchMessages"
                    },
                    irn: {
                        publish: "irn_publish",
                        batchPublish: "irn_batchPublish",
                        subscribe: "irn_subscribe",
                        batchSubscribe: "irn_batchSubscribe",
                        subscription: "irn_subscription",
                        unsubscribe: "irn_unsubscribe",
                        batchUnsubscribe: "irn_batchUnsubscribe",
                        batchFetchMessages: "irn_batchFetchMessages"
                    },
                    iridium: {
                        publish: "iridium_publish",
                        batchPublish: "iridium_batchPublish",
                        subscribe: "iridium_subscribe",
                        batchSubscribe: "iridium_batchSubscribe",
                        subscription: "iridium_subscription",
                        unsubscribe: "iridium_unsubscribe",
                        batchUnsubscribe: "iridium_batchUnsubscribe",
                        batchFetchMessages: "iridium_batchFetchMessages"
                    }
                }, ot = ":";
                function at(e) {
                    const [t, r] = e.split(ot);
                    return {
                        namespace: t,
                        reference: r
                    };
                }
                function ct(e) {
                    const { namespace: t, reference: r } = e;
                    return [
                        t,
                        r
                    ].join(ot);
                }
                function ht(e) {
                    const [t, r, n] = e.split(ot);
                    return {
                        namespace: t,
                        reference: r,
                        address: n
                    };
                }
                function ut(e) {
                    const { namespace: t, reference: r, address: n } = e;
                    return [
                        t,
                        r,
                        n
                    ].join(ot);
                }
                function dt(e, t) {
                    const r = [];
                    return e.forEach((e)=>{
                        const n = t(e);
                        r.includes(n) || r.push(n);
                    }), r;
                }
                function ft(e) {
                    const { address: t } = ht(e);
                    return t;
                }
                function lt(e) {
                    const { namespace: t, reference: r } = ht(e);
                    return ct({
                        namespace: t,
                        reference: r
                    });
                }
                function pt(e, t) {
                    const { namespace: r, reference: n } = at(t);
                    return ut({
                        namespace: r,
                        reference: n,
                        address: e
                    });
                }
                function bt(e) {
                    return dt(e, ft);
                }
                function gt(e) {
                    return dt(e, lt);
                }
                function mt(e, t = []) {
                    const r = [];
                    return Object.keys(e).forEach((n)=>{
                        if (t.length && !t.includes(n)) return;
                        const i = e[n];
                        r.push(...i.accounts);
                    }), r;
                }
                function yt(e, t = []) {
                    const r = [];
                    return Object.keys(e).forEach((n)=>{
                        if (t.length && !t.includes(n)) return;
                        const i = e[n];
                        r.push(...gt(i.accounts));
                    }), r;
                }
                function vt(e, t = []) {
                    const r = [];
                    return Object.keys(e).forEach((n)=>{
                        if (t.length && !t.includes(n)) return;
                        const i = e[n];
                        r.push(...wt(n, i));
                    }), r;
                }
                function wt(e, t) {
                    return e.includes(":") ? [
                        e
                    ] : t.chains || [];
                }
                var _t = Object.defineProperty, Et = Object.getOwnPropertySymbols, St = Object.prototype.hasOwnProperty, At = Object.prototype.propertyIsEnumerable, Mt = (e, t, r)=>t in e ? _t(e, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }) : e[t] = r, It = (e, t)=>{
                    for(var r in t || (t = {}))St.call(t, r) && Mt(e, r, t[r]);
                    if (Et) for (var r of Et(t))At.call(t, r) && Mt(e, r, t[r]);
                    return e;
                };
                const Tt = "ReactNative", xt = {
                    reactNative: "react-native",
                    node: "node",
                    browser: "browser",
                    unknown: "unknown"
                }, Ct = " ", Rt = ":", kt = "/", Pt = 2, Ot = 1e3, Nt = "js";
                function Ut() {
                    return typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] < "u" && typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].versions < "u" && typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].versions.node < "u";
                }
                function Bt() {
                    return !(0, b.getDocument)() && !!(0, b.getNavigator)() && navigator.product === Tt;
                }
                function Lt() {
                    return Bt() && typeof r.g < "u" && typeof (null == r.g ? void 0 : r.g.Platform) < "u" && "android" === (null == r.g ? void 0 : r.g.Platform.OS);
                }
                function jt() {
                    return Bt() && typeof r.g < "u" && typeof (null == r.g ? void 0 : r.g.Platform) < "u" && "ios" === (null == r.g ? void 0 : r.g.Platform.OS);
                }
                function Dt() {
                    return !Ut() && !!(0, b.getNavigator)() && !!(0, b.getDocument)();
                }
                function qt() {
                    return Bt() ? xt.reactNative : Ut() ? xt.node : Dt() ? xt.browser : xt.unknown;
                }
                function Ft() {
                    var e;
                    try {
                        return Bt() && typeof r.g < "u" && typeof (null == r.g ? void 0 : r.g.Application) < "u" ? null == (e = r.g.Application) ? void 0 : e.applicationId : void 0;
                    } catch  {
                        return;
                    }
                }
                function Ht(e, t) {
                    let r = m.parse(e);
                    return r = It(It({}, r), t), m.stringify(r);
                }
                function zt() {
                    return (0, g.g)() || {
                        name: "",
                        description: "",
                        url: "",
                        icons: [
                            ""
                        ]
                    };
                }
                function Vt(e, t) {
                    var r;
                    const n = qt(), i = {
                        protocol: e,
                        version: t,
                        env: n
                    };
                    return "browser" === n && (i.host = (null == (r = (0, b.getLocation)()) ? void 0 : r.host) || "unknown"), i;
                }
                function $t() {
                    if (qt() === xt.reactNative && typeof r.g < "u" && typeof (null == r.g ? void 0 : r.g.Platform) < "u") {
                        const { OS: e, Version: t } = r.g.Platform;
                        return [
                            e,
                            t
                        ].join("-");
                    }
                    const e = t ? l(t) : "undefined" == typeof document && "undefined" != typeof navigator && "ReactNative" === navigator.product ? new c : "undefined" != typeof navigator ? l(navigator.userAgent) : "undefined" != typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].version ? new s(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].version.slice(1)) : null;
                    var t;
                    if (null === e) return "unknown";
                    const n = e.os ? e.os.replace(" ", "").toLowerCase() : "unknown";
                    return "browser" === e.type ? [
                        n,
                        e.name,
                        e.version
                    ].join("-") : [
                        n,
                        e.version
                    ].join("-");
                }
                function Kt() {
                    var e;
                    const t = qt();
                    return t === xt.browser ? [
                        t,
                        (null == (e = (0, b.getLocation)()) ? void 0 : e.host) || "unknown"
                    ].join(":") : t;
                }
                function Gt(e, t, r) {
                    const n = $t(), i = Kt();
                    return [
                        [
                            e,
                            t
                        ].join("-"),
                        [
                            Nt,
                            r
                        ].join("-"),
                        n,
                        i
                    ].join("/");
                }
                function Wt({ protocol: e, version: t, relayUrl: r, sdkVersion: n, auth: i, projectId: s, useOnCloseEvent: o, bundleId: a, packageName: c }) {
                    const h = r.split("?"), u = {
                        auth: i,
                        ua: Gt(e, t, n),
                        projectId: s,
                        useOnCloseEvent: o || void 0,
                        packageName: c || void 0,
                        bundleId: a || void 0
                    }, d = Ht(h[1] || "", u);
                    return h[0] + "?" + d;
                }
                function Jt(e) {
                    let t = (e.match(/^[^:]+(?=:\/\/)/gi) || [])[0];
                    const r = typeof t < "u" ? e.split("://")[1] : e;
                    return t = "wss" === t ? "https" : "http", [
                        t,
                        r
                    ].join("://");
                }
                function Yt(e, t, r) {
                    if (!e[t] || typeof e[t] !== r) throw new Error(`Missing or invalid "${t}" param`);
                }
                function Xt(e, t = Pt) {
                    return er(e.split(kt), t);
                }
                function Zt(e) {
                    return Xt(e).join(Ct);
                }
                function Qt(e, t) {
                    return e.filter((e)=>t.includes(e)).length === e.length;
                }
                function er(e, t = Pt) {
                    return e.slice(Math.max(e.length - t, 0));
                }
                function tr(e) {
                    return Object.fromEntries(e.entries());
                }
                function rr(e) {
                    return new Map(Object.entries(e));
                }
                function nr(e, t) {
                    const r = {};
                    return Object.keys(e).forEach((n)=>{
                        r[n] = t(e[n]);
                    }), r;
                }
                const ir = (e)=>e;
                function sr(e) {
                    return e.trim().replace(/^\w/, (e)=>e.toUpperCase());
                }
                function or(e) {
                    return e.split(Ct).map((e)=>sr(e)).join(Ct);
                }
                function ar(e = p.FIVE_MINUTES, t) {
                    const r = (0, p.toMiliseconds)(e || p.FIVE_MINUTES);
                    let n, i, s, o;
                    return {
                        resolve: (e)=>{
                            s && n && (clearTimeout(s), n(e), o = Promise.resolve(e));
                        },
                        reject: (e)=>{
                            s && i && (clearTimeout(s), i(e));
                        },
                        done: ()=>new Promise((e, a)=>{
                                if (o) return e(o);
                                s = setTimeout(()=>{
                                    const e = new Error(t);
                                    o = Promise.reject(e), a(e);
                                }, r), n = e, i = a;
                            })
                    };
                }
                function cr(e, t, r) {
                    return new Promise(async (n, i)=>{
                        const s = setTimeout(()=>i(new Error(r)), t);
                        try {
                            n(await e);
                        } catch (e) {
                            i(e);
                        }
                        clearTimeout(s);
                    });
                }
                function hr(e, t) {
                    if ("string" == typeof t && t.startsWith(`${e}:`)) return t;
                    if ("topic" === e.toLowerCase()) {
                        if ("string" != typeof t) throw new Error('Value must be "string" for expirer target type: topic');
                        return `topic:${t}`;
                    }
                    if ("id" === e.toLowerCase()) {
                        if ("number" != typeof t) throw new Error('Value must be "number" for expirer target type: id');
                        return `id:${t}`;
                    }
                    throw new Error(`Unknown expirer target type: ${e}`);
                }
                function ur(e) {
                    return hr("topic", e);
                }
                function dr(e) {
                    return hr("id", e);
                }
                function fr(e) {
                    const [t, r] = e.split(":"), n = {
                        id: void 0,
                        topic: void 0
                    };
                    if ("topic" === t && "string" == typeof r) n.topic = r;
                    else {
                        if ("id" !== t || !Number.isInteger(Number(r))) throw new Error(`Invalid target, expected id:number or topic:string, got ${t}:${r}`);
                        n.id = Number(r);
                    }
                    return n;
                }
                function lr(e, t) {
                    return (0, p.fromMiliseconds)((t || Date.now()) + (0, p.toMiliseconds)(e));
                }
                function pr(e) {
                    return Date.now() >= (0, p.toMiliseconds)(e);
                }
                function br(e, t) {
                    return `${e}${t ? `:${t}` : ""}`;
                }
                function gr(e = [], t = []) {
                    return [
                        ...new Set([
                            ...e,
                            ...t
                        ])
                    ];
                }
                async function mr({ id: e, topic: t, wcDeepLink: n }) {
                    var i;
                    try {
                        if (!n) return;
                        const s = "string" == typeof n ? JSON.parse(n) : n, o = s?.href;
                        if ("string" != typeof o) return;
                        const a = yr(o, e, t), c = qt();
                        if (c === xt.browser) {
                            if (null == (i = (0, b.getDocument)()) || !i.hasFocus()) return void console.warn("Document does not have focus, skipping deeplink.");
                            a.startsWith("https://") || a.startsWith("http://") ? window.open(a, "_blank", "noreferrer noopener") : window.open(a, Ar() ? "_blank" : "_self", "noreferrer noopener");
                        } else c === xt.reactNative && typeof (null == r.g ? void 0 : r.g.Linking) < "u" && await r.g.Linking.openURL(a);
                    } catch (e) {
                        console.error(e);
                    }
                }
                function yr(e, t, r) {
                    const n = `requestId=${t}&sessionTopic=${r}`;
                    e.endsWith("/") && (e = e.slice(0, -1));
                    let i = `${e}`;
                    return i = e.startsWith("https://t.me") ? `${i}${e.includes("?") ? "&startapp=" : "?startapp="}${Mr(n, !0)}` : `${i}/wc?${n}`, i;
                }
                async function vr(e, t) {
                    let r = "";
                    try {
                        if (Dt() && (r = localStorage.getItem(t), r)) return r;
                        r = await e.getItem(t);
                    } catch (e) {
                        console.error(e);
                    }
                    return r;
                }
                function wr(e, t) {
                    return e.filter((e)=>t.includes(e));
                }
                function _r(e, t) {
                    if (!e.includes(t)) return null;
                    const r = e.split(/([&,?,=])/), n = r.indexOf(t);
                    return r[n + 2];
                }
                function Er() {
                    return typeof crypto < "u" && null != crypto && crypto.randomUUID ? crypto.randomUUID() : "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/gu, (e)=>{
                        const t = 16 * Math.random() | 0;
                        return ("x" === e ? t : 3 & t | 8).toString(16);
                    });
                }
                function Sr() {
                    return typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] < "u" && "true" === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].env.IS_VITEST;
                }
                function Ar() {
                    return typeof window < "u" && (!!window.TelegramWebviewProxy || !!window.Telegram || !!window.TelegramWebviewProxyProto);
                }
                function Mr(e, t = !1) {
                    const r = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(e).toString("base64");
                    return t ? r.replace(/[=]/g, "") : r;
                }
                function Ir(e) {
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(e, "base64").toString("utf-8");
                }
                function Tr(e) {
                    return new Promise((t)=>setTimeout(t, e));
                }
                const xr = "https://rpc.walletconnect.org/v1";
                async function Cr(e, t, r, n, i, s) {
                    switch(r.t){
                        case "eip191":
                            return Rr(e, t, r.s);
                        case "eip1271":
                            return await kr(e, t, r.s, n, i, s);
                        default:
                            throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${r.t}`);
                    }
                }
                function Rr(e, t, r) {
                    return (function(e, t) {
                        return function(e) {
                            return ie(L(H(L(Je(e), 1)), 12));
                        }(function(e, t) {
                            const r = D(t), n = {
                                r: O(r.r),
                                s: O(r.s)
                            };
                            return "0x" + Ge().recoverPubKey(O(e), n, r.recoveryParam).encode("hex", !1);
                        }(O(e), t));
                    })(J(t), r).toLowerCase() === e.toLowerCase();
                }
                async function kr(e, t, r, n, i, s) {
                    const o = at(n);
                    if (!o.namespace || !o.reference) throw new Error(`isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ${n}`);
                    try {
                        const o = "0x1626ba7e", a = "0000000000000000000000000000000000000000000000000000000000000040", c = "0000000000000000000000000000000000000000000000000000000000000041", h = r.substring(2), u = o + J(t).substring(2) + a + c + h, d = await fetch(`${s || xr}/?chainId=${n}&projectId=${i}`, {
                            method: "POST",
                            body: JSON.stringify({
                                id: Date.now() + Math.floor(1e3 * Math.random()),
                                jsonrpc: "2.0",
                                method: "eth_call",
                                params: [
                                    {
                                        to: e,
                                        data: u
                                    },
                                    "latest"
                                ]
                            })
                        }), { result: f } = await d.json();
                        return !!f && f.slice(0, o.length).toLowerCase() === o.toLowerCase();
                    } catch (e) {
                        return console.error("isValidEip1271Signature: ", e), !1;
                    }
                }
                var Pr = Object.defineProperty, Or = Object.defineProperties, Nr = Object.getOwnPropertyDescriptors, Ur = Object.getOwnPropertySymbols, Br = Object.prototype.hasOwnProperty, Lr = Object.prototype.propertyIsEnumerable, jr = (e, t, r)=>t in e ? Pr(e, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }) : e[t] = r, Dr = (e, t)=>{
                    for(var r in t || (t = {}))Br.call(t, r) && jr(e, r, t[r]);
                    if (Ur) for (var r of Ur(t))Lr.call(t, r) && jr(e, r, t[r]);
                    return e;
                }, qr = (e, t)=>Or(e, Nr(t));
                const Fr = (e)=>e?.split(":"), Hr = (e)=>{
                    const t = e && Fr(e);
                    if (t) return e.includes("did:pkh:") ? t[3] : t[1];
                }, zr = (e)=>{
                    const t = e && Fr(e);
                    if (t) return t[2] + ":" + t[3];
                }, Vr = (e)=>{
                    const t = e && Fr(e);
                    if (t) return t.pop();
                };
                async function $r(e) {
                    const { cacao: t, projectId: r } = e, { s: n, p: i } = t, s = Kr(i, i.iss), o = Vr(i.iss);
                    return await Cr(o, s, n, zr(i.iss), r);
                }
                const Kr = (e, t)=>{
                    const r = `${e.domain} wants you to sign in with your Ethereum account:`, n = Vr(t);
                    if (!e.aud && !e.uri) throw new Error("Either `aud` or `uri` is required to construct the message");
                    let i = e.statement || void 0;
                    const s = `URI: ${e.aud || e.uri}`, o = `Version: ${e.version}`, a = `Chain ID: ${Hr(t)}`, c = `Nonce: ${e.nonce}`, h = `Issued At: ${e.iat}`, u = e.exp ? `Expiration Time: ${e.exp}` : void 0, d = e.nbf ? `Not Before: ${e.nbf}` : void 0, f = e.requestId ? `Request ID: ${e.requestId}` : void 0, l = e.resources ? `Resources:${e.resources.map((e)=>`\n- ${e}`).join("")}` : void 0, p = mn(e.resources);
                    return p && (i = ln(i, cn(p))), [
                        r,
                        n,
                        "",
                        i,
                        "",
                        s,
                        o,
                        a,
                        c,
                        h,
                        u,
                        d,
                        f,
                        l
                    ].filter((e)=>null != e).join("\n");
                };
                function Gr(e, t, r) {
                    return r.includes("did:pkh:") || (r = `did:pkh:${r}`), {
                        h: {
                            t: "caip122"
                        },
                        p: {
                            iss: r,
                            domain: e.domain,
                            aud: e.aud,
                            version: e.version,
                            nonce: e.nonce,
                            iat: e.iat,
                            statement: e.statement,
                            requestId: e.requestId,
                            resources: e.resources,
                            nbf: e.nbf,
                            exp: e.exp
                        },
                        s: t
                    };
                }
                function Wr(e) {
                    var t;
                    const { authPayload: r, chains: n, methods: i } = e, s = r.statement || "";
                    if (null == n || !n.length) return r;
                    const o = wr(r.chains, n);
                    if (null == o || !o.length) throw new Error("No supported chains");
                    const a = Jr(r.resources);
                    if (!a) return r;
                    rn(a);
                    const c = Xr(a, "eip155");
                    let h = r?.resources || [];
                    if (null != c && c.length) {
                        const e = Qr(c), n = wr(e, i);
                        if (null == n || !n.length) throw new Error(`Supported methods don't satisfy the requested: ${JSON.stringify(e)}, supported: ${JSON.stringify(i)}`);
                        const s = sn(a, "eip155", on("request", n, {
                            chains: o
                        }));
                        h = (null == (t = r?.resources) ? void 0 : t.slice(0, -1)) || [], h.push(an(s));
                    }
                    return qr(Dr({}, r), {
                        statement: gn(s, mn(h)),
                        chains: o,
                        resources: null != r && r.resources || h.length > 0 ? h : void 0
                    });
                }
                function Jr(e) {
                    const t = mn(e);
                    if (t && un(t)) return cn(t);
                }
                function Yr(e, t) {
                    var r;
                    return null == (r = e?.att) ? void 0 : r.hasOwnProperty(t);
                }
                function Xr(e, t) {
                    var r, n;
                    return null != (r = e?.att) && r[t] ? Object.keys(null == (n = e?.att) ? void 0 : n[t]) : [];
                }
                function Zr(e) {
                    return e?.map((e)=>Object.keys(e)) || [];
                }
                function Qr(e) {
                    return e?.map((e)=>{
                        var t;
                        return null == (t = e.split("/")) ? void 0 : t[1];
                    }) || [];
                }
                function en(e) {
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(JSON.stringify(e)).toString("base64");
                }
                function tn(e) {
                    return JSON.parse(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(e, "base64").toString("utf-8"));
                }
                function rn(e) {
                    if (!e) throw new Error("No recap provided, value is undefined");
                    if (!e.att) throw new Error("No `att` property found");
                    const t = Object.keys(e.att);
                    if (null == t || !t.length) throw new Error("No resources found in `att` property");
                    t.forEach((t)=>{
                        const r = e.att[t];
                        if (Array.isArray(r)) throw new Error(`Resource must be an object: ${t}`);
                        if ("object" != typeof r) throw new Error(`Resource must be an object: ${t}`);
                        if (!Object.keys(r).length) throw new Error(`Resource object is empty: ${t}`);
                        Object.keys(r).forEach((e)=>{
                            const t = r[e];
                            if (!Array.isArray(t)) throw new Error(`Ability limits ${e} must be an array of objects, found: ${t}`);
                            if (!t.length) throw new Error(`Value of ${e} is empty array, must be an array with objects`);
                            t.forEach((t)=>{
                                if ("object" != typeof t) throw new Error(`Ability limits (${e}) must be an array of objects, found: ${t}`);
                            });
                        });
                    });
                }
                function nn(e, t, r, n = {}) {
                    return r?.sort((e, t)=>e.localeCompare(t)), {
                        att: {
                            [e]: on(t, r, n)
                        }
                    };
                }
                function sn(e, t, r) {
                    var n;
                    return e.att[t] = Dr({}, r), (null == (n = Object.keys(e.att)) ? void 0 : n.sort((e, t)=>e.localeCompare(t))).reduce((t, r)=>(t.att[r] = e.att[r], t), {
                        att: {}
                    });
                }
                function on(e, t, r = {}) {
                    t = t?.sort((e, t)=>e.localeCompare(t));
                    const n = t.map((t)=>({
                            [`${e}/${t}`]: [
                                r
                            ]
                        }));
                    return Object.assign({}, ...n);
                }
                function an(e) {
                    return rn(e), `urn:recap:${en(e).replace(/=/g, "")}`;
                }
                function cn(e) {
                    const t = tn(e.replace("urn:recap:", ""));
                    return rn(t), t;
                }
                function hn(e, t, r) {
                    return an(nn(e, t, r));
                }
                function un(e) {
                    return e && e.includes("urn:recap:");
                }
                function dn(e, t) {
                    return an(fn(cn(e), cn(t)));
                }
                function fn(e, t) {
                    rn(e), rn(t);
                    const r = Object.keys(e.att).concat(Object.keys(t.att)).sort((e, t)=>e.localeCompare(t)), n = {
                        att: {}
                    };
                    return r.forEach((r)=>{
                        var i, s;
                        Object.keys((null == (i = e.att) ? void 0 : i[r]) || {}).concat(Object.keys((null == (s = t.att) ? void 0 : s[r]) || {})).sort((e, t)=>e.localeCompare(t)).forEach((i)=>{
                            var s, o;
                            n.att[r] = qr(Dr({}, n.att[r]), {
                                [i]: (null == (s = e.att[r]) ? void 0 : s[i]) || (null == (o = t.att[r]) ? void 0 : o[i])
                            });
                        });
                    }), n;
                }
                function ln(e = "", t) {
                    rn(t);
                    const r = "I further authorize the stated URI to perform the following actions on my behalf: ";
                    if (e.includes(r)) return e;
                    const n = [];
                    let i = 0;
                    return Object.keys(t.att).forEach((e)=>{
                        const r = Object.keys(t.att[e]).map((e)=>({
                                ability: e.split("/")[0],
                                action: e.split("/")[1]
                            }));
                        r.sort((e, t)=>e.action.localeCompare(t.action));
                        const s = {};
                        r.forEach((e)=>{
                            s[e.ability] || (s[e.ability] = []), s[e.ability].push(e.action);
                        });
                        const o = Object.keys(s).map((t)=>(i++, `(${i}) '${t}': '${s[t].join("', '")}' for '${e}'.`));
                        n.push(o.join(", ").replace(".,", "."));
                    }), `${e ? e + " " : ""}${r}${n.join(" ")}`;
                }
                function pn(e) {
                    var t;
                    const r = cn(e);
                    rn(r);
                    const n = null == (t = r.att) ? void 0 : t.eip155;
                    return n ? Object.keys(n).map((e)=>e.split("/")[1]) : [];
                }
                function bn(e) {
                    const t = cn(e);
                    rn(t);
                    const r = [];
                    return Object.values(t.att).forEach((e)=>{
                        Object.values(e).forEach((e)=>{
                            var t;
                            null != (t = e?.[0]) && t.chains && r.push(e[0].chains);
                        });
                    }), [
                        ...new Set(r.flat())
                    ];
                }
                function gn(e, t) {
                    if (!t) return e;
                    const r = cn(t);
                    return rn(r), ln(e, r);
                }
                function mn(e) {
                    if (!e) return;
                    const t = e?.[e.length - 1];
                    return un(t) ? t : void 0;
                }
                const yn = "base10", vn = "base16", wn = "base64pad", _n = "base64url", En = "utf8", Sn = 0, An = 1, Mn = 2, In = 0, Tn = 1, xn = 12, Cn = 32;
                function Rn() {
                    const e = tt.TZ();
                    return {
                        privateKey: (0, rt.dI)(e.secretKey, vn),
                        publicKey: (0, rt.dI)(e.publicKey, vn)
                    };
                }
                function kn() {
                    const e = (0, Qe.randomBytes)(Cn);
                    return (0, rt.dI)(e, vn);
                }
                function Pn(e, t) {
                    const r = tt.Tc((0, rt.sH)(e, vn), (0, rt.sH)(t, vn), !0), n = new Ze.i(et.aD, r).expand(Cn);
                    return (0, rt.dI)(n, vn);
                }
                function On(e) {
                    const t = (0, et.tW)((0, rt.sH)(e, vn));
                    return (0, rt.dI)(t, vn);
                }
                function Nn(e) {
                    const t = (0, et.tW)((0, rt.sH)(e, En));
                    return (0, rt.dI)(t, vn);
                }
                function Un(e) {
                    return (0, rt.sH)(`${e}`, yn);
                }
                function Bn(e) {
                    return Number((0, rt.dI)(e, yn));
                }
                function Ln(e) {
                    const t = Un(typeof e.type < "u" ? e.type : Sn);
                    if (Bn(t) === An && typeof e.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
                    const r = typeof e.senderPublicKey < "u" ? (0, rt.sH)(e.senderPublicKey, vn) : void 0, n = typeof e.iv < "u" ? (0, rt.sH)(e.iv, vn) : (0, Qe.randomBytes)(xn);
                    return Fn({
                        type: t,
                        sealed: new Xe.g6((0, rt.sH)(e.symKey, vn)).seal(n, (0, rt.sH)(e.message, En)),
                        iv: n,
                        senderPublicKey: r,
                        encoding: e.encoding
                    });
                }
                function jn(e, t) {
                    const r = Un(Mn), n = (0, Qe.randomBytes)(xn);
                    return Fn({
                        type: r,
                        sealed: (0, rt.sH)(e, En),
                        iv: n,
                        encoding: t
                    });
                }
                function Dn(e) {
                    const t = new Xe.g6((0, rt.sH)(e.symKey, vn)), { sealed: r, iv: n } = Hn({
                        encoded: e.encoded,
                        encoding: e?.encoding
                    }), i = t.open(n, r);
                    if (null === i) throw new Error("Failed to decrypt");
                    return (0, rt.dI)(i, En);
                }
                function qn(e, t) {
                    const { sealed: r } = Hn({
                        encoded: e,
                        encoding: t
                    });
                    return (0, rt.dI)(r, En);
                }
                function Fn(e) {
                    const { encoding: t = wn } = e;
                    if (Bn(e.type) === Mn) return (0, rt.dI)((0, rt.xW)([
                        e.type,
                        e.sealed
                    ]), t);
                    if (Bn(e.type) === An) {
                        if (typeof e.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
                        return (0, rt.dI)((0, rt.xW)([
                            e.type,
                            e.senderPublicKey,
                            e.iv,
                            e.sealed
                        ]), t);
                    }
                    return (0, rt.dI)((0, rt.xW)([
                        e.type,
                        e.iv,
                        e.sealed
                    ]), t);
                }
                function Hn(e) {
                    const { encoded: t, encoding: r = wn } = e, n = (0, rt.sH)(t, r), i = n.slice(In, Tn), s = Tn;
                    if (Bn(i) === An) {
                        const e = s + Cn, t = e + xn, r = n.slice(s, e), o = n.slice(e, t);
                        return {
                            type: i,
                            sealed: n.slice(t),
                            iv: o,
                            senderPublicKey: r
                        };
                    }
                    if (Bn(i) === Mn) return {
                        type: i,
                        sealed: n.slice(s),
                        iv: (0, Qe.randomBytes)(xn)
                    };
                    const o = s + xn, a = n.slice(s, o);
                    return {
                        type: i,
                        sealed: n.slice(o),
                        iv: a
                    };
                }
                function zn(e, t) {
                    const r = Hn({
                        encoded: e,
                        encoding: t?.encoding
                    });
                    return Vn({
                        type: Bn(r.type),
                        senderPublicKey: typeof r.senderPublicKey < "u" ? (0, rt.dI)(r.senderPublicKey, vn) : void 0,
                        receiverPublicKey: t?.receiverPublicKey
                    });
                }
                function Vn(e) {
                    const t = e?.type || Sn;
                    if (t === An) {
                        if (typeof e?.senderPublicKey > "u") throw new Error("missing sender public key");
                        if (typeof e?.receiverPublicKey > "u") throw new Error("missing receiver public key");
                    }
                    return {
                        type: t,
                        senderPublicKey: e?.senderPublicKey,
                        receiverPublicKey: e?.receiverPublicKey
                    };
                }
                function $n(e) {
                    return e.type === An && "string" == typeof e.senderPublicKey && "string" == typeof e.receiverPublicKey;
                }
                function Kn(e) {
                    return e.type === Mn;
                }
                function Gn(e) {
                    return new nt.ec("p256").keyFromPublic({
                        x: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(e.x, "base64").toString("hex"),
                        y: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(e.y, "base64").toString("hex")
                    }, "hex");
                }
                function Wn(e, t) {
                    const [r, n, i] = e.split("."), s = function(e) {
                        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(function(e) {
                            let t = e.replace(/-/g, "+").replace(/_/g, "/");
                            const r = t.length % 4;
                            return r > 0 && (t += "=".repeat(4 - r)), t;
                        }(e), "base64");
                    }(i);
                    if (64 !== s.length) throw new Error("Invalid signature length");
                    const o = s.slice(0, 32).toString("hex"), a = s.slice(32, 64).toString("hex"), c = `${r}.${n}`, h = (new et.aD).update(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(c)).digest(), u = Gn(t), d = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(h).toString("hex");
                    if (!u.verify(d, {
                        r: o,
                        s: a
                    })) throw new Error("Invalid signature");
                    return (0, it.decodeJWT)(e).payload;
                }
                const Jn = "irn";
                function Yn(e) {
                    return e?.relay || {
                        protocol: Jn
                    };
                }
                function Xn(e) {
                    const t = st[e];
                    if (typeof t > "u") throw new Error(`Relay Protocol not supported: ${e}`);
                    return t;
                }
                var Zn = Object.defineProperty, Qn = Object.defineProperties, ei = Object.getOwnPropertyDescriptors, ti = Object.getOwnPropertySymbols, ri = Object.prototype.hasOwnProperty, ni = Object.prototype.propertyIsEnumerable, ii = (e, t, r)=>t in e ? Zn(e, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }) : e[t] = r, si = (e, t)=>{
                    for(var r in t || (t = {}))ri.call(t, r) && ii(e, r, t[r]);
                    if (ti) for (var r of ti(t))ni.call(t, r) && ii(e, r, t[r]);
                    return e;
                }, oi = (e, t)=>Qn(e, ei(t));
                function ai(e, t = "-") {
                    const r = {}, n = "relay" + t;
                    return Object.keys(e).forEach((t)=>{
                        if (t.startsWith(n)) {
                            const i = t.replace(n, ""), s = e[t];
                            r[i] = s;
                        }
                    }), r;
                }
                function ci(e) {
                    if (!e.includes("wc:")) {
                        const t = Ir(e);
                        null != t && t.includes("wc:") && (e = t);
                    }
                    const t = (e = (e = e.includes("wc://") ? e.replace("wc://", "") : e).includes("wc:") ? e.replace("wc:", "") : e).indexOf(":"), r = -1 !== e.indexOf("?") ? e.indexOf("?") : void 0, n = e.substring(0, t), i = e.substring(t + 1, r).split("@"), s = typeof r < "u" ? e.substring(r) : "", o = m.parse(s), a = "string" == typeof o.methods ? o.methods.split(",") : void 0;
                    return {
                        protocol: n,
                        topic: hi(i[0]),
                        version: parseInt(i[1], 10),
                        symKey: o.symKey,
                        relay: ai(o),
                        methods: a,
                        expiryTimestamp: o.expiryTimestamp ? parseInt(o.expiryTimestamp, 10) : void 0
                    };
                }
                function hi(e) {
                    return e.startsWith("//") ? e.substring(2) : e;
                }
                function ui(e, t = "-") {
                    const r = {};
                    return Object.keys(e).forEach((n)=>{
                        const i = "relay" + t + n;
                        e[n] && (r[i] = e[n]);
                    }), r;
                }
                function di(e) {
                    return `${e.protocol}:${e.topic}@${e.version}?` + m.stringify(si(oi(si({
                        symKey: e.symKey
                    }, ui(e.relay)), {
                        expiryTimestamp: e.expiryTimestamp
                    }), e.methods ? {
                        methods: e.methods.join(",")
                    } : {}));
                }
                function fi(e, t, r) {
                    return `${e}?wc_ev=${r}&topic=${t}`;
                }
                var li = Object.defineProperty, pi = Object.defineProperties, bi = Object.getOwnPropertyDescriptors, gi = Object.getOwnPropertySymbols, mi = Object.prototype.hasOwnProperty, yi = Object.prototype.propertyIsEnumerable, vi = (e, t, r)=>t in e ? li(e, t, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }) : e[t] = r, wi = (e, t)=>{
                    for(var r in t || (t = {}))mi.call(t, r) && vi(e, r, t[r]);
                    if (gi) for (var r of gi(t))yi.call(t, r) && vi(e, r, t[r]);
                    return e;
                }, _i = (e, t)=>pi(e, bi(t));
                function Ei(e) {
                    const t = [];
                    return e.forEach((e)=>{
                        const [r, n] = e.split(":");
                        t.push(`${r}:${n}`);
                    }), t;
                }
                function Si(e) {
                    const t = [];
                    return Object.values(e).forEach((e)=>{
                        t.push(...Ei(e.accounts));
                    }), t;
                }
                function Ai(e, t) {
                    const r = [];
                    return Object.values(e).forEach((e)=>{
                        Ei(e.accounts).includes(t) && r.push(...e.methods);
                    }), r;
                }
                function Mi(e, t) {
                    const r = [];
                    return Object.values(e).forEach((e)=>{
                        Ei(e.accounts).includes(t) && r.push(...e.events);
                    }), r;
                }
                function Ii(e, t) {
                    const r = ns(e, t);
                    if (r) throw new Error(r.message);
                    const n = {};
                    for (const [t, r] of Object.entries(e))n[t] = {
                        methods: r.methods,
                        events: r.events,
                        chains: r.accounts.map((e)=>`${e.split(":")[0]}:${e.split(":")[1]}`)
                    };
                    return n;
                }
                function Ti(e) {
                    const { proposal: { requiredNamespaces: t, optionalNamespaces: r = {} }, supportedNamespaces: n } = e, i = Ri(t), s = Ri(r), o = {};
                    Object.keys(n).forEach((e)=>{
                        const t = n[e].chains, r = n[e].methods, i = n[e].events, s = n[e].accounts;
                        t.forEach((t)=>{
                            if (!s.some((e)=>e.includes(t))) throw new Error(`No accounts provided for chain ${t} in namespace ${e}`);
                        }), o[e] = {
                            chains: t,
                            methods: r,
                            events: i,
                            accounts: s
                        };
                    });
                    const a = bs(t, o, "approve()");
                    if (a) throw new Error(a.message);
                    const c = {};
                    return Object.keys(t).length || Object.keys(r).length ? (Object.keys(i).forEach((e)=>{
                        const t = n[e].chains.filter((t)=>{
                            var r, n;
                            return null == (n = null == (r = i[e]) ? void 0 : r.chains) ? void 0 : n.includes(t);
                        }), r = n[e].methods.filter((t)=>{
                            var r, n;
                            return null == (n = null == (r = i[e]) ? void 0 : r.methods) ? void 0 : n.includes(t);
                        }), s = n[e].events.filter((t)=>{
                            var r, n;
                            return null == (n = null == (r = i[e]) ? void 0 : r.events) ? void 0 : n.includes(t);
                        }), o = t.map((t)=>n[e].accounts.filter((e)=>e.includes(`${t}:`))).flat();
                        c[e] = {
                            chains: t,
                            methods: r,
                            events: s,
                            accounts: o
                        };
                    }), Object.keys(s).forEach((e)=>{
                        var t, r, i, o, a, h;
                        if (!n[e]) return;
                        const u = null == (r = null == (t = s[e]) ? void 0 : t.chains) ? void 0 : r.filter((t)=>n[e].chains.includes(t)), d = n[e].methods.filter((t)=>{
                            var r, n;
                            return null == (n = null == (r = s[e]) ? void 0 : r.methods) ? void 0 : n.includes(t);
                        }), f = n[e].events.filter((t)=>{
                            var r, n;
                            return null == (n = null == (r = s[e]) ? void 0 : r.events) ? void 0 : n.includes(t);
                        }), l = u?.map((t)=>n[e].accounts.filter((e)=>e.includes(`${t}:`))).flat();
                        c[e] = {
                            chains: gr(null == (i = c[e]) ? void 0 : i.chains, u),
                            methods: gr(null == (o = c[e]) ? void 0 : o.methods, d),
                            events: gr(null == (a = c[e]) ? void 0 : a.events, f),
                            accounts: gr(null == (h = c[e]) ? void 0 : h.accounts, l)
                        };
                    }), c) : o;
                }
                function xi(e) {
                    return e.includes(":");
                }
                function Ci(e) {
                    return xi(e) ? e.split(":")[0] : e;
                }
                function Ri(e) {
                    var t, r, n;
                    const i = {};
                    if (!ji(e)) return i;
                    for (const [s, o] of Object.entries(e)){
                        const e = xi(s) ? [
                            s
                        ] : o.chains, a = o.methods || [], c = o.events || [], h = Ci(s);
                        i[h] = _i(wi({}, i[h]), {
                            chains: gr(e, null == (t = i[h]) ? void 0 : t.chains),
                            methods: gr(a, null == (r = i[h]) ? void 0 : r.methods),
                            events: gr(c, null == (n = i[h]) ? void 0 : n.events)
                        });
                    }
                    return i;
                }
                function ki(e) {
                    const t = {};
                    return e?.forEach((e)=>{
                        const [r, n] = e.split(":");
                        t[r] || (t[r] = {
                            accounts: [],
                            chains: [],
                            events: []
                        }), t[r].accounts.push(e), t[r].chains.push(`${r}:${n}`);
                    }), t;
                }
                function Pi(e, t) {
                    const r = ki(t = t.map((e)=>e.replace("did:pkh:", "")));
                    for (const [t, n] of Object.entries(r))n.methods ? n.methods = gr(n.methods, e) : n.methods = e, n.events = [
                        "chainChanged",
                        "accountsChanged"
                    ];
                    return r;
                }
                const Oi = {
                    INVALID_METHOD: {
                        message: "Invalid method.",
                        code: 1001
                    },
                    INVALID_EVENT: {
                        message: "Invalid event.",
                        code: 1002
                    },
                    INVALID_UPDATE_REQUEST: {
                        message: "Invalid update request.",
                        code: 1003
                    },
                    INVALID_EXTEND_REQUEST: {
                        message: "Invalid extend request.",
                        code: 1004
                    },
                    INVALID_SESSION_SETTLE_REQUEST: {
                        message: "Invalid session settle request.",
                        code: 1005
                    },
                    UNAUTHORIZED_METHOD: {
                        message: "Unauthorized method.",
                        code: 3001
                    },
                    UNAUTHORIZED_EVENT: {
                        message: "Unauthorized event.",
                        code: 3002
                    },
                    UNAUTHORIZED_UPDATE_REQUEST: {
                        message: "Unauthorized update request.",
                        code: 3003
                    },
                    UNAUTHORIZED_EXTEND_REQUEST: {
                        message: "Unauthorized extend request.",
                        code: 3004
                    },
                    USER_REJECTED: {
                        message: "User rejected.",
                        code: 5e3
                    },
                    USER_REJECTED_CHAINS: {
                        message: "User rejected chains.",
                        code: 5001
                    },
                    USER_REJECTED_METHODS: {
                        message: "User rejected methods.",
                        code: 5002
                    },
                    USER_REJECTED_EVENTS: {
                        message: "User rejected events.",
                        code: 5003
                    },
                    UNSUPPORTED_CHAINS: {
                        message: "Unsupported chains.",
                        code: 5100
                    },
                    UNSUPPORTED_METHODS: {
                        message: "Unsupported methods.",
                        code: 5101
                    },
                    UNSUPPORTED_EVENTS: {
                        message: "Unsupported events.",
                        code: 5102
                    },
                    UNSUPPORTED_ACCOUNTS: {
                        message: "Unsupported accounts.",
                        code: 5103
                    },
                    UNSUPPORTED_NAMESPACE_KEY: {
                        message: "Unsupported namespace key.",
                        code: 5104
                    },
                    USER_DISCONNECTED: {
                        message: "User disconnected.",
                        code: 6e3
                    },
                    SESSION_SETTLEMENT_FAILED: {
                        message: "Session settlement failed.",
                        code: 7e3
                    },
                    WC_METHOD_UNSUPPORTED: {
                        message: "Unsupported wc_ method.",
                        code: 10001
                    }
                }, Ni = {
                    NOT_INITIALIZED: {
                        message: "Not initialized.",
                        code: 1
                    },
                    NO_MATCHING_KEY: {
                        message: "No matching key.",
                        code: 2
                    },
                    RESTORE_WILL_OVERRIDE: {
                        message: "Restore will override.",
                        code: 3
                    },
                    RESUBSCRIBED: {
                        message: "Resubscribed.",
                        code: 4
                    },
                    MISSING_OR_INVALID: {
                        message: "Missing or invalid.",
                        code: 5
                    },
                    EXPIRED: {
                        message: "Expired.",
                        code: 6
                    },
                    UNKNOWN_TYPE: {
                        message: "Unknown type.",
                        code: 7
                    },
                    MISMATCHED_TOPIC: {
                        message: "Mismatched topic.",
                        code: 8
                    },
                    NON_CONFORMING_NAMESPACES: {
                        message: "Non conforming namespaces.",
                        code: 9
                    }
                };
                function Ui(e, t) {
                    const { message: r, code: n } = Ni[e];
                    return {
                        message: t ? `${r} ${t}` : r,
                        code: n
                    };
                }
                function Bi(e, t) {
                    const { message: r, code: n } = Oi[e];
                    return {
                        message: t ? `${r} ${t}` : r,
                        code: n
                    };
                }
                function Li(e, t) {
                    return !!Array.isArray(e) && (!(typeof t < "u" && e.length) || e.every(t));
                }
                function ji(e) {
                    return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length;
                }
                function Di(e) {
                    return typeof e > "u";
                }
                function qi(e, t) {
                    return !(!t || !Di(e)) || "string" == typeof e && !!e.trim().length;
                }
                function Fi(e, t) {
                    return !(!t || !Di(e)) || "number" == typeof e && !isNaN(e);
                }
                function Hi(e, t) {
                    const { requiredNamespaces: r } = t, n = Object.keys(e.namespaces), i = Object.keys(r);
                    let s = !0;
                    return !!Qt(i, n) && (n.forEach((t)=>{
                        const { accounts: n, methods: i, events: o } = e.namespaces[t], a = Ei(n), c = r[t];
                        Qt(wt(t, c), a) && Qt(c.methods, i) && Qt(c.events, o) || (s = !1);
                    }), s);
                }
                function zi(e) {
                    return !(!qi(e, !1) || !e.includes(":")) && 2 === e.split(":").length;
                }
                function Vi(e) {
                    if (qi(e, !1) && e.includes(":")) {
                        const t = e.split(":");
                        if (3 === t.length) {
                            const e = t[0] + ":" + t[1];
                            return !!t[2] && zi(e);
                        }
                    }
                    return !1;
                }
                function $i(e) {
                    function t(e) {
                        try {
                            return typeof new URL(e) < "u";
                        } catch  {
                            return !1;
                        }
                    }
                    try {
                        if (qi(e, !1)) return !!t(e) || t(Ir(e));
                    } catch  {}
                    return !1;
                }
                function Ki(e) {
                    var t;
                    return null == (t = e?.proposer) ? void 0 : t.publicKey;
                }
                function Gi(e) {
                    return e?.topic;
                }
                function Wi(e, t) {
                    let r = null;
                    return qi(e?.publicKey, !1) || (r = Ui("MISSING_OR_INVALID", `${t} controller public key should be a string`)), r;
                }
                function Ji(e) {
                    let t = !0;
                    return Li(e) ? e.length && (t = e.every((e)=>qi(e, !1))) : t = !1, t;
                }
                function Yi(e, t, r) {
                    let n = null;
                    return Li(t) && t.length ? t.forEach((e)=>{
                        n || zi(e) || (n = Bi("UNSUPPORTED_CHAINS", `${r}, chain ${e} should be a string and conform to "namespace:chainId" format`));
                    }) : zi(e) || (n = Bi("UNSUPPORTED_CHAINS", `${r}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), n;
                }
                function Xi(e, t, r) {
                    let n = null;
                    return Object.entries(e).forEach(([e, i])=>{
                        if (n) return;
                        const s = Yi(e, wt(e, i), `${t} ${r}`);
                        s && (n = s);
                    }), n;
                }
                function Zi(e, t) {
                    let r = null;
                    return Li(e) ? e.forEach((e)=>{
                        r || Vi(e) || (r = Bi("UNSUPPORTED_ACCOUNTS", `${t}, account ${e} should be a string and conform to "namespace:chainId:address" format`));
                    }) : r = Bi("UNSUPPORTED_ACCOUNTS", `${t}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), r;
                }
                function Qi(e, t) {
                    let r = null;
                    return Object.values(e).forEach((e)=>{
                        if (r) return;
                        const n = Zi(e?.accounts, `${t} namespace`);
                        n && (r = n);
                    }), r;
                }
                function es(e, t) {
                    let r = null;
                    return Ji(e?.methods) ? Ji(e?.events) || (r = Bi("UNSUPPORTED_EVENTS", `${t}, events should be an array of strings or empty array for no events`)) : r = Bi("UNSUPPORTED_METHODS", `${t}, methods should be an array of strings or empty array for no methods`), r;
                }
                function ts(e, t) {
                    let r = null;
                    return Object.values(e).forEach((e)=>{
                        if (r) return;
                        const n = es(e, `${t}, namespace`);
                        n && (r = n);
                    }), r;
                }
                function rs(e, t, r) {
                    let n = null;
                    if (e && ji(e)) {
                        const i = ts(e, t);
                        i && (n = i);
                        const s = Xi(e, t, r);
                        s && (n = s);
                    } else n = Ui("MISSING_OR_INVALID", `${t}, ${r} should be an object with data`);
                    return n;
                }
                function ns(e, t) {
                    let r = null;
                    if (e && ji(e)) {
                        const n = ts(e, t);
                        n && (r = n);
                        const i = Qi(e, t);
                        i && (r = i);
                    } else r = Ui("MISSING_OR_INVALID", `${t}, namespaces should be an object with data`);
                    return r;
                }
                function is(e) {
                    return qi(e.protocol, !0);
                }
                function ss(e, t) {
                    let r = !1;
                    return t && !e ? r = !0 : e && Li(e) && e.length && e.forEach((e)=>{
                        r = is(e);
                    }), r;
                }
                function os(e) {
                    return "number" == typeof e;
                }
                function as(e) {
                    return typeof e < "u" && null !== typeof e;
                }
                function cs(e) {
                    return !!(e && "object" == typeof e && e.code && Fi(e.code, !1) && e.message && qi(e.message, !1));
                }
                function hs(e) {
                    return !(Di(e) || !qi(e.method, !1));
                }
                function us(e) {
                    return !(Di(e) || Di(e.result) && Di(e.error) || !Fi(e.id, !1) || !qi(e.jsonrpc, !1));
                }
                function ds(e) {
                    return !(Di(e) || !qi(e.name, !1));
                }
                function fs(e, t) {
                    return !(!zi(t) || !Si(e).includes(t));
                }
                function ls(e, t, r) {
                    return !!qi(r, !1) && Ai(e, t).includes(r);
                }
                function ps(e, t, r) {
                    return !!qi(r, !1) && Mi(e, t).includes(r);
                }
                function bs(e, t, r) {
                    let n = null;
                    const i = function(e) {
                        const t = {};
                        return Object.keys(e).forEach((r)=>{
                            var n;
                            r.includes(":") ? t[r] = e[r] : null == (n = e[r].chains) || n.forEach((n)=>{
                                t[n] = {
                                    methods: e[r].methods,
                                    events: e[r].events
                                };
                            });
                        }), t;
                    }(e), s = function(e) {
                        const t = {};
                        return Object.keys(e).forEach((r)=>{
                            if (r.includes(":")) t[r] = e[r];
                            else {
                                const n = Ei(e[r].accounts);
                                n?.forEach((n)=>{
                                    t[n] = {
                                        accounts: e[r].accounts.filter((e)=>e.includes(`${n}:`)),
                                        methods: e[r].methods,
                                        events: e[r].events
                                    };
                                });
                            }
                        }), t;
                    }(t), o = Object.keys(i), a = Object.keys(s), c = gs(Object.keys(e)), h = gs(Object.keys(t)), u = c.filter((e)=>!h.includes(e));
                    return u.length && (n = Ui("NON_CONFORMING_NAMESPACES", `${r} namespaces keys don't satisfy requiredNamespaces.\n      Required: ${u.toString()}\n      Received: ${Object.keys(t).toString()}`)), Qt(o, a) || (n = Ui("NON_CONFORMING_NAMESPACES", `${r} namespaces chains don't satisfy required namespaces.\n      Required: ${o.toString()}\n      Approved: ${a.toString()}`)), Object.keys(t).forEach((e)=>{
                        if (!e.includes(":") || n) return;
                        const i = Ei(t[e].accounts);
                        i.includes(e) || (n = Ui("NON_CONFORMING_NAMESPACES", `${r} namespaces accounts don't satisfy namespace accounts for ${e}\n        Required: ${e}\n        Approved: ${i.toString()}`));
                    }), o.forEach((e)=>{
                        n || (Qt(i[e].methods, s[e].methods) ? Qt(i[e].events, s[e].events) || (n = Ui("NON_CONFORMING_NAMESPACES", `${r} namespaces events don't satisfy namespace events for ${e}`)) : n = Ui("NON_CONFORMING_NAMESPACES", `${r} namespaces methods don't satisfy namespace methods for ${e}`));
                    }), n;
                }
                function gs(e) {
                    return [
                        ...new Set(e.map((e)=>e.includes(":") ? e.split(":")[0] : e))
                    ];
                }
                function ms(e, t) {
                    return Fi(e, !1) && e <= t.max && e >= t.min;
                }
                function ys() {
                    const e = qt();
                    return new Promise((t)=>{
                        switch(e){
                            case xt.browser:
                                t(vs());
                                break;
                            case xt.reactNative:
                                t(ws());
                                break;
                            case xt.node:
                            default:
                                t(!0);
                        }
                    });
                }
                function vs() {
                    return Dt() && navigator?.onLine;
                }
                async function ws() {
                    if (Bt() && typeof r.g < "u" && null != r.g && r.g.NetInfo) {
                        const e = await (null == r.g ? void 0 : r.g.NetInfo.fetch());
                        return e?.isConnected;
                    }
                    return !0;
                }
                function _s() {
                    return !0;
                }
                function Es(e) {
                    switch(qt()){
                        case xt.browser:
                            Ss(e);
                            break;
                        case xt.reactNative:
                            As(e);
                        case xt.node:
                    }
                }
                function Ss(e) {
                    !Bt() && Dt() && (window.addEventListener("online", ()=>e(!0)), window.addEventListener("offline", ()=>e(!1)));
                }
                function As(e) {
                    Bt() && typeof r.g < "u" && null != r.g && r.g.NetInfo && r.g?.NetInfo.addEventListener((t)=>e(t?.isConnected));
                }
                const Ms = {};
                class Is {
                    static get(e) {
                        return Ms[e];
                    }
                    static set(e, t) {
                        Ms[e] = t;
                    }
                    static delete(e) {
                        delete Ms[e];
                    }
                }
            },
            5280: (e, t)=>{
                "use strict";
                function r(e) {
                    let t;
                    return "undefined" != typeof window && void 0 !== window[e] && (t = window[e]), t;
                }
                function n(e) {
                    const t = r(e);
                    if (!t) throw new Error(`${e} is not defined in Window`);
                    return t;
                }
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.getLocalStorage = t.getLocalStorageOrThrow = t.getCrypto = t.getCryptoOrThrow = t.getLocation = t.getLocationOrThrow = t.getNavigator = t.getNavigatorOrThrow = t.getDocument = t.getDocumentOrThrow = t.getFromWindowOrThrow = t.getFromWindow = void 0, t.getFromWindow = r, t.getFromWindowOrThrow = n, t.getDocumentOrThrow = function() {
                    return n("document");
                }, t.getDocument = function() {
                    return r("document");
                }, t.getNavigatorOrThrow = function() {
                    return n("navigator");
                }, t.getNavigator = function() {
                    return r("navigator");
                }, t.getLocationOrThrow = function() {
                    return n("location");
                }, t.getLocation = function() {
                    return r("location");
                }, t.getCryptoOrThrow = function() {
                    return n("crypto");
                }, t.getCrypto = function() {
                    return r("crypto");
                }, t.getLocalStorageOrThrow = function() {
                    return n("localStorage");
                }, t.getLocalStorage = function() {
                    return r("localStorage");
                };
            },
            5206: (e, t, r)=>{
                "use strict";
                t.g = void 0;
                const n = r(5280);
                t.g = function() {
                    let e, t;
                    try {
                        e = n.getDocumentOrThrow(), t = n.getLocationOrThrow();
                    } catch (e) {
                        return null;
                    }
                    function r(...t) {
                        const r1 = e.getElementsByTagName("meta");
                        for(let e = 0; e < r1.length; e++){
                            const n = r1[e], i = [
                                "itemprop",
                                "property",
                                "name"
                            ].map((e)=>n.getAttribute(e)).filter((e)=>!!e && t.includes(e));
                            if (i.length && i) {
                                const e = n.getAttribute("content");
                                if (e) return e;
                            }
                        }
                        return "";
                    }
                    const i = function() {
                        let t = r("name", "og:site_name", "og:title", "twitter:title");
                        return t || (t = e.title), t;
                    }();
                    return {
                        description: r("description", "og:description", "twitter:description", "keywords"),
                        url: t.origin,
                        icons: function() {
                            const r = e.getElementsByTagName("link"), n = [];
                            for(let e = 0; e < r.length; e++){
                                const i = r[e], s = i.getAttribute("rel");
                                if (s && s.toLowerCase().indexOf("icon") > -1) {
                                    const e = i.getAttribute("href");
                                    if (e) if (-1 === e.toLowerCase().indexOf("https:") && -1 === e.toLowerCase().indexOf("http:") && 0 !== e.indexOf("//")) {
                                        let r = t.protocol + "//" + t.host;
                                        if (0 === e.indexOf("/")) r += e;
                                        else {
                                            const n = t.pathname.split("/");
                                            n.pop(), r += n.join("/") + "/" + e;
                                        }
                                        n.push(r);
                                    } else if (0 === e.indexOf("//")) {
                                        const r = t.protocol + e;
                                        n.push(r);
                                    } else n.push(e);
                                }
                            }
                            return n;
                        }(),
                        name: i
                    };
                };
            },
            9423: function(e, t, r) {
                "use strict";
                var n = this && this.__importDefault || function(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    };
                };
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.RateLimit = t.Sema = void 0;
                const i = n(r(381));
                function s(e) {
                    return t = Math.min(Math.max(16, e), 1073741824), t >>>= 0, t -= 1, t |= t >> 1, t |= t >> 2, t |= t >> 4, 1 + ((t |= t >> 8) | t >> 16);
                    "TURBOPACK unreachable";
                    var t;
                }
                class o {
                    constructor(e){
                        this._capacity = s(e), this._length = 0, this._front = 0, this.arr = [];
                    }
                    push(e) {
                        const t = this._length;
                        this.checkCapacity(t + 1);
                        const r = this._front + t & this._capacity - 1;
                        return this.arr[r] = e, this._length = t + 1, t + 1;
                    }
                    pop() {
                        const e = this._length;
                        if (0 === e) return;
                        const t = this._front + e - 1 & this._capacity - 1, r = this.arr[t];
                        return this.arr[t] = void 0, this._length = e - 1, r;
                    }
                    shift() {
                        const e = this._length;
                        if (0 === e) return;
                        const t = this._front, r = this.arr[t];
                        return this.arr[t] = void 0, this._front = t + 1 & this._capacity - 1, this._length = e - 1, r;
                    }
                    get length() {
                        return this._length;
                    }
                    checkCapacity(e) {
                        this._capacity < e && this.resizeTo(s(1.5 * this._capacity + 16));
                    }
                    resizeTo(e) {
                        const t = this._capacity;
                        this._capacity = e;
                        const r = this._front, n = this._length;
                        if (r + n > t) {
                            const e = r + n & t - 1;
                            !function(e, t, r, n, i) {
                                for(let t = 0; t < i; ++t)r[t + n] = e[t + 0], e[t + 0] = void 0;
                            }(this.arr, 0, this.arr, t, e);
                        }
                    }
                }
                class a extends i.default {
                }
                function c(e) {
                    return "function" == typeof e;
                }
                function h() {
                    return "1";
                }
                class u {
                    constructor(e, { initFn: t = h, pauseFn: r, resumeFn: n, capacity: i = 10 } = {}){
                        if (c(r) !== c(n)) throw new Error("pauseFn and resumeFn must be both set for pausing");
                        this.nrTokens = e, this.free = new o(e), this.waiting = new o(i), this.releaseEmitter = new a, this.noTokens = t === h, this.pauseFn = r, this.resumeFn = n, this.paused = !1, this.releaseEmitter.on("release", (e)=>{
                            const t = this.waiting.shift();
                            t ? t.resolve(e) : (this.resumeFn && this.paused && (this.paused = !1, this.resumeFn()), this.free.push(e));
                        });
                        for(let r = 0; r < e; r++)this.free.push(t());
                    }
                    tryAcquire() {
                        return this.free.pop();
                    }
                    async acquire() {
                        let e = this.tryAcquire();
                        return void 0 !== e ? e : new Promise((e, t)=>{
                            this.pauseFn && !this.paused && (this.paused = !0, this.pauseFn()), this.waiting.push({
                                resolve: e,
                                reject: t
                            });
                        });
                    }
                    release(e) {
                        this.releaseEmitter.emit("release", this.noTokens ? "1" : e);
                    }
                    drain() {
                        const e = new Array(this.nrTokens);
                        for(let t = 0; t < this.nrTokens; t++)e[t] = this.acquire();
                        return Promise.all(e);
                    }
                    nrWaiting() {
                        return this.waiting.length;
                    }
                }
                t.Sema = u, t.RateLimit = function(e, { timeUnit: t = 1e3, uniformDistribution: r = !1 } = {}) {
                    const n = new u(r ? 1 : e), i = r ? t / e : t;
                    return async function() {
                        await n.acquire(), setTimeout(()=>n.release(), i);
                    };
                };
            },
            4619: function(e, t, r) {
                !function(e, t) {
                    "use strict";
                    function n(e, t) {
                        if (!e) throw new Error(t || "Assertion failed");
                    }
                    function i(e, t) {
                        e.super_ = t;
                        var r = function() {};
                        r.prototype = t.prototype, e.prototype = new r, e.prototype.constructor = e;
                    }
                    function s(e, t, r) {
                        if (s.isBN(e)) return e;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== e && ("le" !== t && "be" !== t || (r = t, t = 10), this._init(e || 0, t || 10, r || "be"));
                    }
                    var o;
                    "object" == typeof e ? e.exports = s : t.BN = s, s.BN = s, s.wordSize = 26;
                    try {
                        o = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(7175).Buffer;
                    } catch (e) {}
                    function a(e, t) {
                        var r = e.charCodeAt(t);
                        return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15;
                    }
                    function c(e, t, r) {
                        var n = a(e, r);
                        return r - 1 >= t && (n |= a(e, r - 1) << 4), n;
                    }
                    function h(e, t, r, n) {
                        for(var i = 0, s = Math.min(e.length, r), o = t; o < s; o++){
                            var a = e.charCodeAt(o) - 48;
                            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a;
                        }
                        return i;
                    }
                    s.isBN = function(e) {
                        return e instanceof s || null !== e && "object" == typeof e && e.constructor.wordSize === s.wordSize && Array.isArray(e.words);
                    }, s.max = function(e, t) {
                        return e.cmp(t) > 0 ? e : t;
                    }, s.min = function(e, t) {
                        return e.cmp(t) < 0 ? e : t;
                    }, s.prototype._init = function(e, t, r) {
                        if ("number" == typeof e) return this._initNumber(e, t, r);
                        if ("object" == typeof e) return this._initArray(e, t, r);
                        "hex" === t && (t = 16), n(t === (0 | t) && t >= 2 && t <= 36);
                        var i = 0;
                        "-" === (e = e.toString().replace(/\s+/g, ""))[0] && (i++, this.negative = 1), i < e.length && (16 === t ? this._parseHex(e, i, r) : (this._parseBase(e, t, i), "le" === r && this._initArray(this.toArray(), t, r)));
                    }, s.prototype._initNumber = function(e, t, r) {
                        e < 0 && (this.negative = 1, e = -e), e < 67108864 ? (this.words = [
                            67108863 & e
                        ], this.length = 1) : e < 4503599627370496 ? (this.words = [
                            67108863 & e,
                            e / 67108864 & 67108863
                        ], this.length = 2) : (n(e < 9007199254740992), this.words = [
                            67108863 & e,
                            e / 67108864 & 67108863,
                            1
                        ], this.length = 3), "le" === r && this._initArray(this.toArray(), t, r);
                    }, s.prototype._initArray = function(e, t, r) {
                        if (n("number" == typeof e.length), e.length <= 0) return this.words = [
                            0
                        ], this.length = 1, this;
                        this.length = Math.ceil(e.length / 3), this.words = new Array(this.length);
                        for(var i = 0; i < this.length; i++)this.words[i] = 0;
                        var s, o, a = 0;
                        if ("be" === r) for(i = e.length - 1, s = 0; i >= 0; i -= 3)o = e[i] | e[i - 1] << 8 | e[i - 2] << 16, this.words[s] |= o << a & 67108863, this.words[s + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, s++);
                        else if ("le" === r) for(i = 0, s = 0; i < e.length; i += 3)o = e[i] | e[i + 1] << 8 | e[i + 2] << 16, this.words[s] |= o << a & 67108863, this.words[s + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, s++);
                        return this.strip();
                    }, s.prototype._parseHex = function(e, t, r) {
                        this.length = Math.ceil((e.length - t) / 6), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var i, s = 0, o = 0;
                        if ("be" === r) for(n = e.length - 1; n >= t; n -= 2)i = c(e, t, n) << s, this.words[o] |= 67108863 & i, s >= 18 ? (s -= 18, o += 1, this.words[o] |= i >>> 26) : s += 8;
                        else for(n = (e.length - t) % 2 == 0 ? t + 1 : t; n < e.length; n += 2)i = c(e, t, n) << s, this.words[o] |= 67108863 & i, s >= 18 ? (s -= 18, o += 1, this.words[o] |= i >>> 26) : s += 8;
                        this.strip();
                    }, s.prototype._parseBase = function(e, t, r) {
                        this.words = [
                            0
                        ], this.length = 1;
                        for(var n = 0, i = 1; i <= 67108863; i *= t)n++;
                        n--, i = i / t | 0;
                        for(var s = e.length - r, o = s % n, a = Math.min(s, s - o) + r, c = 0, u = r; u < a; u += n)c = h(e, u, u + n, t), this.imuln(i), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                        if (0 !== o) {
                            var d = 1;
                            for(c = h(e, u, e.length, t), u = 0; u < o; u++)d *= t;
                            this.imuln(d), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                        }
                        this.strip();
                    }, s.prototype.copy = function(e) {
                        e.words = new Array(this.length);
                        for(var t = 0; t < this.length; t++)e.words[t] = this.words[t];
                        e.length = this.length, e.negative = this.negative, e.red = this.red;
                    }, s.prototype.clone = function() {
                        var e = new s(null);
                        return this.copy(e), e;
                    }, s.prototype._expand = function(e) {
                        for(; this.length < e;)this.words[this.length++] = 0;
                        return this;
                    }, s.prototype.strip = function() {
                        for(; this.length > 1 && 0 === this.words[this.length - 1];)this.length--;
                        return this._normSign();
                    }, s.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }, s.prototype.inspect = function() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    };
                    var u = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000"
                    ], d = [
                        0,
                        0,
                        25,
                        16,
                        12,
                        11,
                        10,
                        9,
                        8,
                        8,
                        7,
                        7,
                        7,
                        7,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5
                    ], f = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        1e7,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64e6,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        243e5,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176
                    ];
                    function l(e, t, r) {
                        r.negative = t.negative ^ e.negative;
                        var n = e.length + t.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | e.words[0], s = 0 | t.words[0], o = i * s, a = 67108863 & o, c = o / 67108864 | 0;
                        r.words[0] = a;
                        for(var h = 1; h < n; h++){
                            for(var u = c >>> 26, d = 67108863 & c, f = Math.min(h, t.length - 1), l = Math.max(0, h - e.length + 1); l <= f; l++){
                                var p = h - l | 0;
                                u += (o = (i = 0 | e.words[p]) * (s = 0 | t.words[l]) + d) / 67108864 | 0, d = 67108863 & o;
                            }
                            r.words[h] = 0 | d, c = 0 | u;
                        }
                        return 0 !== c ? r.words[h] = 0 | c : r.length--, r.strip();
                    }
                    s.prototype.toString = function(e, t) {
                        var r;
                        if (t = 0 | t || 1, 16 === (e = e || 10) || "hex" === e) {
                            r = "";
                            for(var i = 0, s = 0, o = 0; o < this.length; o++){
                                var a = this.words[o], c = (16777215 & (a << i | s)).toString(16);
                                r = 0 != (s = a >>> 24 - i & 16777215) || o !== this.length - 1 ? u[6 - c.length] + c + r : c + r, (i += 2) >= 26 && (i -= 26, o--);
                            }
                            for(0 !== s && (r = s.toString(16) + r); r.length % t != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        if (e === (0 | e) && e >= 2 && e <= 36) {
                            var h = d[e], l = f[e];
                            r = "";
                            var p = this.clone();
                            for(p.negative = 0; !p.isZero();){
                                var b = p.modn(l).toString(e);
                                r = (p = p.idivn(l)).isZero() ? b + r : u[h - b.length] + b + r;
                            }
                            for(this.isZero() && (r = "0" + r); r.length % t != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        n(!1, "Base should be between 2 and 36");
                    }, s.prototype.toNumber = function() {
                        var e = this.words[0];
                        return 2 === this.length ? e += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? e += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -e : e;
                    }, s.prototype.toJSON = function() {
                        return this.toString(16);
                    }, s.prototype.toBuffer = function(e, t) {
                        return n(void 0 !== o), this.toArrayLike(o, e, t);
                    }, s.prototype.toArray = function(e, t) {
                        return this.toArrayLike(Array, e, t);
                    }, s.prototype.toArrayLike = function(e, t, r) {
                        var i = this.byteLength(), s = r || Math.max(1, i);
                        n(i <= s, "byte array longer than desired length"), n(s > 0, "Requested array length <= 0"), this.strip();
                        var o, a, c = "le" === t, h = new e(s), u = this.clone();
                        if (c) {
                            for(a = 0; !u.isZero(); a++)o = u.andln(255), u.iushrn(8), h[a] = o;
                            for(; a < s; a++)h[a] = 0;
                        } else {
                            for(a = 0; a < s - i; a++)h[a] = 0;
                            for(a = 0; !u.isZero(); a++)o = u.andln(255), u.iushrn(8), h[s - a - 1] = o;
                        }
                        return h;
                    }, Math.clz32 ? s.prototype._countBits = function(e) {
                        return 32 - Math.clz32(e);
                    } : s.prototype._countBits = function(e) {
                        var t = e, r = 0;
                        return t >= 4096 && (r += 13, t >>>= 13), t >= 64 && (r += 7, t >>>= 7), t >= 8 && (r += 4, t >>>= 4), t >= 2 && (r += 2, t >>>= 2), r + t;
                    }, s.prototype._zeroBits = function(e) {
                        if (0 === e) return 26;
                        var t = e, r = 0;
                        return 8191 & t || (r += 13, t >>>= 13), 127 & t || (r += 7, t >>>= 7), 15 & t || (r += 4, t >>>= 4), 3 & t || (r += 2, t >>>= 2), 1 & t || r++, r;
                    }, s.prototype.bitLength = function() {
                        var e = this.words[this.length - 1], t = this._countBits(e);
                        return 26 * (this.length - 1) + t;
                    }, s.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for(var e = 0, t = 0; t < this.length; t++){
                            var r = this._zeroBits(this.words[t]);
                            if (e += r, 26 !== r) break;
                        }
                        return e;
                    }, s.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8);
                    }, s.prototype.toTwos = function(e) {
                        return 0 !== this.negative ? this.abs().inotn(e).iaddn(1) : this.clone();
                    }, s.prototype.fromTwos = function(e) {
                        return this.testn(e - 1) ? this.notn(e).iaddn(1).ineg() : this.clone();
                    }, s.prototype.isNeg = function() {
                        return 0 !== this.negative;
                    }, s.prototype.neg = function() {
                        return this.clone().ineg();
                    }, s.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this;
                    }, s.prototype.iuor = function(e) {
                        for(; this.length < e.length;)this.words[this.length++] = 0;
                        for(var t = 0; t < e.length; t++)this.words[t] = this.words[t] | e.words[t];
                        return this.strip();
                    }, s.prototype.ior = function(e) {
                        return n(!(this.negative | e.negative)), this.iuor(e);
                    }, s.prototype.or = function(e) {
                        return this.length > e.length ? this.clone().ior(e) : e.clone().ior(this);
                    }, s.prototype.uor = function(e) {
                        return this.length > e.length ? this.clone().iuor(e) : e.clone().iuor(this);
                    }, s.prototype.iuand = function(e) {
                        var t;
                        t = this.length > e.length ? e : this;
                        for(var r = 0; r < t.length; r++)this.words[r] = this.words[r] & e.words[r];
                        return this.length = t.length, this.strip();
                    }, s.prototype.iand = function(e) {
                        return n(!(this.negative | e.negative)), this.iuand(e);
                    }, s.prototype.and = function(e) {
                        return this.length > e.length ? this.clone().iand(e) : e.clone().iand(this);
                    }, s.prototype.uand = function(e) {
                        return this.length > e.length ? this.clone().iuand(e) : e.clone().iuand(this);
                    }, s.prototype.iuxor = function(e) {
                        var t, r;
                        this.length > e.length ? (t = this, r = e) : (t = e, r = this);
                        for(var n = 0; n < r.length; n++)this.words[n] = t.words[n] ^ r.words[n];
                        if (this !== t) for(; n < t.length; n++)this.words[n] = t.words[n];
                        return this.length = t.length, this.strip();
                    }, s.prototype.ixor = function(e) {
                        return n(!(this.negative | e.negative)), this.iuxor(e);
                    }, s.prototype.xor = function(e) {
                        return this.length > e.length ? this.clone().ixor(e) : e.clone().ixor(this);
                    }, s.prototype.uxor = function(e) {
                        return this.length > e.length ? this.clone().iuxor(e) : e.clone().iuxor(this);
                    }, s.prototype.inotn = function(e) {
                        n("number" == typeof e && e >= 0);
                        var t = 0 | Math.ceil(e / 26), r = e % 26;
                        this._expand(t), r > 0 && t--;
                        for(var i = 0; i < t; i++)this.words[i] = 67108863 & ~this.words[i];
                        return r > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - r), this.strip();
                    }, s.prototype.notn = function(e) {
                        return this.clone().inotn(e);
                    }, s.prototype.setn = function(e, t) {
                        n("number" == typeof e && e >= 0);
                        var r = e / 26 | 0, i = e % 26;
                        return this._expand(r + 1), this.words[r] = t ? this.words[r] | 1 << i : this.words[r] & ~(1 << i), this.strip();
                    }, s.prototype.iadd = function(e) {
                        var t, r, n;
                        if (0 !== this.negative && 0 === e.negative) return this.negative = 0, t = this.isub(e), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== e.negative) return e.negative = 0, t = this.isub(e), e.negative = 1, t._normSign();
                        this.length > e.length ? (r = this, n = e) : (r = e, n = this);
                        for(var i = 0, s = 0; s < n.length; s++)t = (0 | r.words[s]) + (0 | n.words[s]) + i, this.words[s] = 67108863 & t, i = t >>> 26;
                        for(; 0 !== i && s < r.length; s++)t = (0 | r.words[s]) + i, this.words[s] = 67108863 & t, i = t >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this) for(; s < r.length; s++)this.words[s] = r.words[s];
                        return this;
                    }, s.prototype.add = function(e) {
                        var t;
                        return 0 !== e.negative && 0 === this.negative ? (e.negative = 0, t = this.sub(e), e.negative ^= 1, t) : 0 === e.negative && 0 !== this.negative ? (this.negative = 0, t = e.sub(this), this.negative = 1, t) : this.length > e.length ? this.clone().iadd(e) : e.clone().iadd(this);
                    }, s.prototype.isub = function(e) {
                        if (0 !== e.negative) {
                            e.negative = 0;
                            var t = this.iadd(e);
                            return e.negative = 1, t._normSign();
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(e), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(e);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = e) : (r = e, n = this);
                        for(var s = 0, o = 0; o < n.length; o++)s = (t = (0 | r.words[o]) - (0 | n.words[o]) + s) >> 26, this.words[o] = 67108863 & t;
                        for(; 0 !== s && o < r.length; o++)s = (t = (0 | r.words[o]) + s) >> 26, this.words[o] = 67108863 & t;
                        if (0 === s && o < r.length && r !== this) for(; o < r.length; o++)this.words[o] = r.words[o];
                        return this.length = Math.max(this.length, o), r !== this && (this.negative = 1), this.strip();
                    }, s.prototype.sub = function(e) {
                        return this.clone().isub(e);
                    };
                    var p = function(e, t, r) {
                        var n, i, s, o = e.words, a = t.words, c = r.words, h = 0, u = 0 | o[0], d = 8191 & u, f = u >>> 13, l = 0 | o[1], p = 8191 & l, b = l >>> 13, g = 0 | o[2], m = 8191 & g, y = g >>> 13, v = 0 | o[3], w = 8191 & v, _ = v >>> 13, E = 0 | o[4], S = 8191 & E, A = E >>> 13, M = 0 | o[5], I = 8191 & M, T = M >>> 13, x = 0 | o[6], C = 8191 & x, R = x >>> 13, k = 0 | o[7], P = 8191 & k, O = k >>> 13, N = 0 | o[8], U = 8191 & N, B = N >>> 13, L = 0 | o[9], j = 8191 & L, D = L >>> 13, q = 0 | a[0], F = 8191 & q, H = q >>> 13, z = 0 | a[1], V = 8191 & z, $ = z >>> 13, K = 0 | a[2], G = 8191 & K, W = K >>> 13, J = 0 | a[3], Y = 8191 & J, X = J >>> 13, Z = 0 | a[4], Q = 8191 & Z, ee = Z >>> 13, te = 0 | a[5], re = 8191 & te, ne = te >>> 13, ie = 0 | a[6], se = 8191 & ie, oe = ie >>> 13, ae = 0 | a[7], ce = 8191 & ae, he = ae >>> 13, ue = 0 | a[8], de = 8191 & ue, fe = ue >>> 13, le = 0 | a[9], pe = 8191 & le, be = le >>> 13;
                        r.negative = e.negative ^ t.negative, r.length = 19;
                        var ge = (h + (n = Math.imul(d, F)) | 0) + ((8191 & (i = (i = Math.imul(d, H)) + Math.imul(f, F) | 0)) << 13) | 0;
                        h = ((s = Math.imul(f, H)) + (i >>> 13) | 0) + (ge >>> 26) | 0, ge &= 67108863, n = Math.imul(p, F), i = (i = Math.imul(p, H)) + Math.imul(b, F) | 0, s = Math.imul(b, H);
                        var me = (h + (n = n + Math.imul(d, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, $) | 0) + Math.imul(f, V) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, $) | 0) + (i >>> 13) | 0) + (me >>> 26) | 0, me &= 67108863, n = Math.imul(m, F), i = (i = Math.imul(m, H)) + Math.imul(y, F) | 0, s = Math.imul(y, H), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, $) | 0) + Math.imul(b, V) | 0, s = s + Math.imul(b, $) | 0;
                        var ye = (h + (n = n + Math.imul(d, G) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, W) | 0) + Math.imul(f, G) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, W) | 0) + (i >>> 13) | 0) + (ye >>> 26) | 0, ye &= 67108863, n = Math.imul(w, F), i = (i = Math.imul(w, H)) + Math.imul(_, F) | 0, s = Math.imul(_, H), n = n + Math.imul(m, V) | 0, i = (i = i + Math.imul(m, $) | 0) + Math.imul(y, V) | 0, s = s + Math.imul(y, $) | 0, n = n + Math.imul(p, G) | 0, i = (i = i + Math.imul(p, W) | 0) + Math.imul(b, G) | 0, s = s + Math.imul(b, W) | 0;
                        var ve = (h + (n = n + Math.imul(d, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, X) | 0) + Math.imul(f, Y) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, X) | 0) + (i >>> 13) | 0) + (ve >>> 26) | 0, ve &= 67108863, n = Math.imul(S, F), i = (i = Math.imul(S, H)) + Math.imul(A, F) | 0, s = Math.imul(A, H), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, $) | 0) + Math.imul(_, V) | 0, s = s + Math.imul(_, $) | 0, n = n + Math.imul(m, G) | 0, i = (i = i + Math.imul(m, W) | 0) + Math.imul(y, G) | 0, s = s + Math.imul(y, W) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, X) | 0) + Math.imul(b, Y) | 0, s = s + Math.imul(b, X) | 0;
                        var we = (h + (n = n + Math.imul(d, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, ee) | 0) + Math.imul(f, Q) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, ee) | 0) + (i >>> 13) | 0) + (we >>> 26) | 0, we &= 67108863, n = Math.imul(I, F), i = (i = Math.imul(I, H)) + Math.imul(T, F) | 0, s = Math.imul(T, H), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, $) | 0) + Math.imul(A, V) | 0, s = s + Math.imul(A, $) | 0, n = n + Math.imul(w, G) | 0, i = (i = i + Math.imul(w, W) | 0) + Math.imul(_, G) | 0, s = s + Math.imul(_, W) | 0, n = n + Math.imul(m, Y) | 0, i = (i = i + Math.imul(m, X) | 0) + Math.imul(y, Y) | 0, s = s + Math.imul(y, X) | 0, n = n + Math.imul(p, Q) | 0, i = (i = i + Math.imul(p, ee) | 0) + Math.imul(b, Q) | 0, s = s + Math.imul(b, ee) | 0;
                        var _e = (h + (n = n + Math.imul(d, re) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, ne) | 0) + Math.imul(f, re) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, ne) | 0) + (i >>> 13) | 0) + (_e >>> 26) | 0, _e &= 67108863, n = Math.imul(C, F), i = (i = Math.imul(C, H)) + Math.imul(R, F) | 0, s = Math.imul(R, H), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, $) | 0) + Math.imul(T, V) | 0, s = s + Math.imul(T, $) | 0, n = n + Math.imul(S, G) | 0, i = (i = i + Math.imul(S, W) | 0) + Math.imul(A, G) | 0, s = s + Math.imul(A, W) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, X) | 0) + Math.imul(_, Y) | 0, s = s + Math.imul(_, X) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, ee) | 0) + Math.imul(y, Q) | 0, s = s + Math.imul(y, ee) | 0, n = n + Math.imul(p, re) | 0, i = (i = i + Math.imul(p, ne) | 0) + Math.imul(b, re) | 0, s = s + Math.imul(b, ne) | 0;
                        var Ee = (h + (n = n + Math.imul(d, se) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, oe) | 0) + Math.imul(f, se) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, oe) | 0) + (i >>> 13) | 0) + (Ee >>> 26) | 0, Ee &= 67108863, n = Math.imul(P, F), i = (i = Math.imul(P, H)) + Math.imul(O, F) | 0, s = Math.imul(O, H), n = n + Math.imul(C, V) | 0, i = (i = i + Math.imul(C, $) | 0) + Math.imul(R, V) | 0, s = s + Math.imul(R, $) | 0, n = n + Math.imul(I, G) | 0, i = (i = i + Math.imul(I, W) | 0) + Math.imul(T, G) | 0, s = s + Math.imul(T, W) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, X) | 0) + Math.imul(A, Y) | 0, s = s + Math.imul(A, X) | 0, n = n + Math.imul(w, Q) | 0, i = (i = i + Math.imul(w, ee) | 0) + Math.imul(_, Q) | 0, s = s + Math.imul(_, ee) | 0, n = n + Math.imul(m, re) | 0, i = (i = i + Math.imul(m, ne) | 0) + Math.imul(y, re) | 0, s = s + Math.imul(y, ne) | 0, n = n + Math.imul(p, se) | 0, i = (i = i + Math.imul(p, oe) | 0) + Math.imul(b, se) | 0, s = s + Math.imul(b, oe) | 0;
                        var Se = (h + (n = n + Math.imul(d, ce) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, he) | 0) + Math.imul(f, ce) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, he) | 0) + (i >>> 13) | 0) + (Se >>> 26) | 0, Se &= 67108863, n = Math.imul(U, F), i = (i = Math.imul(U, H)) + Math.imul(B, F) | 0, s = Math.imul(B, H), n = n + Math.imul(P, V) | 0, i = (i = i + Math.imul(P, $) | 0) + Math.imul(O, V) | 0, s = s + Math.imul(O, $) | 0, n = n + Math.imul(C, G) | 0, i = (i = i + Math.imul(C, W) | 0) + Math.imul(R, G) | 0, s = s + Math.imul(R, W) | 0, n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, X) | 0) + Math.imul(T, Y) | 0, s = s + Math.imul(T, X) | 0, n = n + Math.imul(S, Q) | 0, i = (i = i + Math.imul(S, ee) | 0) + Math.imul(A, Q) | 0, s = s + Math.imul(A, ee) | 0, n = n + Math.imul(w, re) | 0, i = (i = i + Math.imul(w, ne) | 0) + Math.imul(_, re) | 0, s = s + Math.imul(_, ne) | 0, n = n + Math.imul(m, se) | 0, i = (i = i + Math.imul(m, oe) | 0) + Math.imul(y, se) | 0, s = s + Math.imul(y, oe) | 0, n = n + Math.imul(p, ce) | 0, i = (i = i + Math.imul(p, he) | 0) + Math.imul(b, ce) | 0, s = s + Math.imul(b, he) | 0;
                        var Ae = (h + (n = n + Math.imul(d, de) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, fe) | 0) + Math.imul(f, de) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, fe) | 0) + (i >>> 13) | 0) + (Ae >>> 26) | 0, Ae &= 67108863, n = Math.imul(j, F), i = (i = Math.imul(j, H)) + Math.imul(D, F) | 0, s = Math.imul(D, H), n = n + Math.imul(U, V) | 0, i = (i = i + Math.imul(U, $) | 0) + Math.imul(B, V) | 0, s = s + Math.imul(B, $) | 0, n = n + Math.imul(P, G) | 0, i = (i = i + Math.imul(P, W) | 0) + Math.imul(O, G) | 0, s = s + Math.imul(O, W) | 0, n = n + Math.imul(C, Y) | 0, i = (i = i + Math.imul(C, X) | 0) + Math.imul(R, Y) | 0, s = s + Math.imul(R, X) | 0, n = n + Math.imul(I, Q) | 0, i = (i = i + Math.imul(I, ee) | 0) + Math.imul(T, Q) | 0, s = s + Math.imul(T, ee) | 0, n = n + Math.imul(S, re) | 0, i = (i = i + Math.imul(S, ne) | 0) + Math.imul(A, re) | 0, s = s + Math.imul(A, ne) | 0, n = n + Math.imul(w, se) | 0, i = (i = i + Math.imul(w, oe) | 0) + Math.imul(_, se) | 0, s = s + Math.imul(_, oe) | 0, n = n + Math.imul(m, ce) | 0, i = (i = i + Math.imul(m, he) | 0) + Math.imul(y, ce) | 0, s = s + Math.imul(y, he) | 0, n = n + Math.imul(p, de) | 0, i = (i = i + Math.imul(p, fe) | 0) + Math.imul(b, de) | 0, s = s + Math.imul(b, fe) | 0;
                        var Me = (h + (n = n + Math.imul(d, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, be) | 0) + Math.imul(f, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, be) | 0) + (i >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, n = Math.imul(j, V), i = (i = Math.imul(j, $)) + Math.imul(D, V) | 0, s = Math.imul(D, $), n = n + Math.imul(U, G) | 0, i = (i = i + Math.imul(U, W) | 0) + Math.imul(B, G) | 0, s = s + Math.imul(B, W) | 0, n = n + Math.imul(P, Y) | 0, i = (i = i + Math.imul(P, X) | 0) + Math.imul(O, Y) | 0, s = s + Math.imul(O, X) | 0, n = n + Math.imul(C, Q) | 0, i = (i = i + Math.imul(C, ee) | 0) + Math.imul(R, Q) | 0, s = s + Math.imul(R, ee) | 0, n = n + Math.imul(I, re) | 0, i = (i = i + Math.imul(I, ne) | 0) + Math.imul(T, re) | 0, s = s + Math.imul(T, ne) | 0, n = n + Math.imul(S, se) | 0, i = (i = i + Math.imul(S, oe) | 0) + Math.imul(A, se) | 0, s = s + Math.imul(A, oe) | 0, n = n + Math.imul(w, ce) | 0, i = (i = i + Math.imul(w, he) | 0) + Math.imul(_, ce) | 0, s = s + Math.imul(_, he) | 0, n = n + Math.imul(m, de) | 0, i = (i = i + Math.imul(m, fe) | 0) + Math.imul(y, de) | 0, s = s + Math.imul(y, fe) | 0;
                        var Ie = (h + (n = n + Math.imul(p, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, be) | 0) + Math.imul(b, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(b, be) | 0) + (i >>> 13) | 0) + (Ie >>> 26) | 0, Ie &= 67108863, n = Math.imul(j, G), i = (i = Math.imul(j, W)) + Math.imul(D, G) | 0, s = Math.imul(D, W), n = n + Math.imul(U, Y) | 0, i = (i = i + Math.imul(U, X) | 0) + Math.imul(B, Y) | 0, s = s + Math.imul(B, X) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, ee) | 0) + Math.imul(O, Q) | 0, s = s + Math.imul(O, ee) | 0, n = n + Math.imul(C, re) | 0, i = (i = i + Math.imul(C, ne) | 0) + Math.imul(R, re) | 0, s = s + Math.imul(R, ne) | 0, n = n + Math.imul(I, se) | 0, i = (i = i + Math.imul(I, oe) | 0) + Math.imul(T, se) | 0, s = s + Math.imul(T, oe) | 0, n = n + Math.imul(S, ce) | 0, i = (i = i + Math.imul(S, he) | 0) + Math.imul(A, ce) | 0, s = s + Math.imul(A, he) | 0, n = n + Math.imul(w, de) | 0, i = (i = i + Math.imul(w, fe) | 0) + Math.imul(_, de) | 0, s = s + Math.imul(_, fe) | 0;
                        var Te = (h + (n = n + Math.imul(m, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, be) | 0) + Math.imul(y, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(y, be) | 0) + (i >>> 13) | 0) + (Te >>> 26) | 0, Te &= 67108863, n = Math.imul(j, Y), i = (i = Math.imul(j, X)) + Math.imul(D, Y) | 0, s = Math.imul(D, X), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, ee) | 0) + Math.imul(B, Q) | 0, s = s + Math.imul(B, ee) | 0, n = n + Math.imul(P, re) | 0, i = (i = i + Math.imul(P, ne) | 0) + Math.imul(O, re) | 0, s = s + Math.imul(O, ne) | 0, n = n + Math.imul(C, se) | 0, i = (i = i + Math.imul(C, oe) | 0) + Math.imul(R, se) | 0, s = s + Math.imul(R, oe) | 0, n = n + Math.imul(I, ce) | 0, i = (i = i + Math.imul(I, he) | 0) + Math.imul(T, ce) | 0, s = s + Math.imul(T, he) | 0, n = n + Math.imul(S, de) | 0, i = (i = i + Math.imul(S, fe) | 0) + Math.imul(A, de) | 0, s = s + Math.imul(A, fe) | 0;
                        var xe = (h + (n = n + Math.imul(w, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, be) | 0) + Math.imul(_, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(_, be) | 0) + (i >>> 13) | 0) + (xe >>> 26) | 0, xe &= 67108863, n = Math.imul(j, Q), i = (i = Math.imul(j, ee)) + Math.imul(D, Q) | 0, s = Math.imul(D, ee), n = n + Math.imul(U, re) | 0, i = (i = i + Math.imul(U, ne) | 0) + Math.imul(B, re) | 0, s = s + Math.imul(B, ne) | 0, n = n + Math.imul(P, se) | 0, i = (i = i + Math.imul(P, oe) | 0) + Math.imul(O, se) | 0, s = s + Math.imul(O, oe) | 0, n = n + Math.imul(C, ce) | 0, i = (i = i + Math.imul(C, he) | 0) + Math.imul(R, ce) | 0, s = s + Math.imul(R, he) | 0, n = n + Math.imul(I, de) | 0, i = (i = i + Math.imul(I, fe) | 0) + Math.imul(T, de) | 0, s = s + Math.imul(T, fe) | 0;
                        var Ce = (h + (n = n + Math.imul(S, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, be) | 0) + Math.imul(A, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(A, be) | 0) + (i >>> 13) | 0) + (Ce >>> 26) | 0, Ce &= 67108863, n = Math.imul(j, re), i = (i = Math.imul(j, ne)) + Math.imul(D, re) | 0, s = Math.imul(D, ne), n = n + Math.imul(U, se) | 0, i = (i = i + Math.imul(U, oe) | 0) + Math.imul(B, se) | 0, s = s + Math.imul(B, oe) | 0, n = n + Math.imul(P, ce) | 0, i = (i = i + Math.imul(P, he) | 0) + Math.imul(O, ce) | 0, s = s + Math.imul(O, he) | 0, n = n + Math.imul(C, de) | 0, i = (i = i + Math.imul(C, fe) | 0) + Math.imul(R, de) | 0, s = s + Math.imul(R, fe) | 0;
                        var Re = (h + (n = n + Math.imul(I, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, be) | 0) + Math.imul(T, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(T, be) | 0) + (i >>> 13) | 0) + (Re >>> 26) | 0, Re &= 67108863, n = Math.imul(j, se), i = (i = Math.imul(j, oe)) + Math.imul(D, se) | 0, s = Math.imul(D, oe), n = n + Math.imul(U, ce) | 0, i = (i = i + Math.imul(U, he) | 0) + Math.imul(B, ce) | 0, s = s + Math.imul(B, he) | 0, n = n + Math.imul(P, de) | 0, i = (i = i + Math.imul(P, fe) | 0) + Math.imul(O, de) | 0, s = s + Math.imul(O, fe) | 0;
                        var ke = (h + (n = n + Math.imul(C, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(C, be) | 0) + Math.imul(R, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(R, be) | 0) + (i >>> 13) | 0) + (ke >>> 26) | 0, ke &= 67108863, n = Math.imul(j, ce), i = (i = Math.imul(j, he)) + Math.imul(D, ce) | 0, s = Math.imul(D, he), n = n + Math.imul(U, de) | 0, i = (i = i + Math.imul(U, fe) | 0) + Math.imul(B, de) | 0, s = s + Math.imul(B, fe) | 0;
                        var Pe = (h + (n = n + Math.imul(P, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, be) | 0) + Math.imul(O, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(O, be) | 0) + (i >>> 13) | 0) + (Pe >>> 26) | 0, Pe &= 67108863, n = Math.imul(j, de), i = (i = Math.imul(j, fe)) + Math.imul(D, de) | 0, s = Math.imul(D, fe);
                        var Oe = (h + (n = n + Math.imul(U, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, be) | 0) + Math.imul(B, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(B, be) | 0) + (i >>> 13) | 0) + (Oe >>> 26) | 0, Oe &= 67108863;
                        var Ne = (h + (n = Math.imul(j, pe)) | 0) + ((8191 & (i = (i = Math.imul(j, be)) + Math.imul(D, pe) | 0)) << 13) | 0;
                        return h = ((s = Math.imul(D, be)) + (i >>> 13) | 0) + (Ne >>> 26) | 0, Ne &= 67108863, c[0] = ge, c[1] = me, c[2] = ye, c[3] = ve, c[4] = we, c[5] = _e, c[6] = Ee, c[7] = Se, c[8] = Ae, c[9] = Me, c[10] = Ie, c[11] = Te, c[12] = xe, c[13] = Ce, c[14] = Re, c[15] = ke, c[16] = Pe, c[17] = Oe, c[18] = Ne, 0 !== h && (c[19] = h, r.length++), r;
                    };
                    function b(e, t, r) {
                        return (new g).mulp(e, t, r);
                    }
                    function g(e, t) {
                        this.x = e, this.y = t;
                    }
                    Math.imul || (p = l), s.prototype.mulTo = function(e, t) {
                        var r, n = this.length + e.length;
                        return r = 10 === this.length && 10 === e.length ? p(this, e, t) : n < 63 ? l(this, e, t) : n < 1024 ? function(e, t, r) {
                            r.negative = t.negative ^ e.negative, r.length = e.length + t.length;
                            for(var n = 0, i = 0, s = 0; s < r.length - 1; s++){
                                var o = i;
                                i = 0;
                                for(var a = 67108863 & n, c = Math.min(s, t.length - 1), h = Math.max(0, s - e.length + 1); h <= c; h++){
                                    var u = s - h, d = (0 | e.words[u]) * (0 | t.words[h]), f = 67108863 & d;
                                    a = 67108863 & (f = f + a | 0), i += (o = (o = o + (d / 67108864 | 0) | 0) + (f >>> 26) | 0) >>> 26, o &= 67108863;
                                }
                                r.words[s] = a, n = o, o = i;
                            }
                            return 0 !== n ? r.words[s] = n : r.length--, r.strip();
                        }(this, e, t) : b(this, e, t), r;
                    }, g.prototype.makeRBT = function(e) {
                        for(var t = new Array(e), r = s.prototype._countBits(e) - 1, n = 0; n < e; n++)t[n] = this.revBin(n, r, e);
                        return t;
                    }, g.prototype.revBin = function(e, t, r) {
                        if (0 === e || e === r - 1) return e;
                        for(var n = 0, i = 0; i < t; i++)n |= (1 & e) << t - i - 1, e >>= 1;
                        return n;
                    }, g.prototype.permute = function(e, t, r, n, i, s) {
                        for(var o = 0; o < s; o++)n[o] = t[e[o]], i[o] = r[e[o]];
                    }, g.prototype.transform = function(e, t, r, n, i, s) {
                        this.permute(s, e, t, r, n, i);
                        for(var o = 1; o < i; o <<= 1)for(var a = o << 1, c = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), u = 0; u < i; u += a)for(var d = c, f = h, l = 0; l < o; l++){
                            var p = r[u + l], b = n[u + l], g = r[u + l + o], m = n[u + l + o], y = d * g - f * m;
                            m = d * m + f * g, g = y, r[u + l] = p + g, n[u + l] = b + m, r[u + l + o] = p - g, n[u + l + o] = b - m, l !== a && (y = c * d - h * f, f = c * f + h * d, d = y);
                        }
                    }, g.prototype.guessLen13b = function(e, t) {
                        var r = 1 | Math.max(t, e), n = 1 & r, i = 0;
                        for(r = r / 2 | 0; r; r >>>= 1)i++;
                        return 1 << i + 1 + n;
                    }, g.prototype.conjugate = function(e, t, r) {
                        if (!(r <= 1)) for(var n = 0; n < r / 2; n++){
                            var i = e[n];
                            e[n] = e[r - n - 1], e[r - n - 1] = i, i = t[n], t[n] = -t[r - n - 1], t[r - n - 1] = -i;
                        }
                    }, g.prototype.normalize13b = function(e, t) {
                        for(var r = 0, n = 0; n < t / 2; n++){
                            var i = 8192 * Math.round(e[2 * n + 1] / t) + Math.round(e[2 * n] / t) + r;
                            e[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
                        }
                        return e;
                    }, g.prototype.convert13b = function(e, t, r, i) {
                        for(var s = 0, o = 0; o < t; o++)s += 0 | e[o], r[2 * o] = 8191 & s, s >>>= 13, r[2 * o + 1] = 8191 & s, s >>>= 13;
                        for(o = 2 * t; o < i; ++o)r[o] = 0;
                        n(0 === s), n(!(-8192 & s));
                    }, g.prototype.stub = function(e) {
                        for(var t = new Array(e), r = 0; r < e; r++)t[r] = 0;
                        return t;
                    }, g.prototype.mulp = function(e, t, r) {
                        var n = 2 * this.guessLen13b(e.length, t.length), i = this.makeRBT(n), s = this.stub(n), o = new Array(n), a = new Array(n), c = new Array(n), h = new Array(n), u = new Array(n), d = new Array(n), f = r.words;
                        f.length = n, this.convert13b(e.words, e.length, o, n), this.convert13b(t.words, t.length, h, n), this.transform(o, s, a, c, n, i), this.transform(h, s, u, d, n, i);
                        for(var l = 0; l < n; l++){
                            var p = a[l] * u[l] - c[l] * d[l];
                            c[l] = a[l] * d[l] + c[l] * u[l], a[l] = p;
                        }
                        return this.conjugate(a, c, n), this.transform(a, c, f, s, n, i), this.conjugate(f, s, n), this.normalize13b(f, n), r.negative = e.negative ^ t.negative, r.length = e.length + t.length, r.strip();
                    }, s.prototype.mul = function(e) {
                        var t = new s(null);
                        return t.words = new Array(this.length + e.length), this.mulTo(e, t);
                    }, s.prototype.mulf = function(e) {
                        var t = new s(null);
                        return t.words = new Array(this.length + e.length), b(this, e, t);
                    }, s.prototype.imul = function(e) {
                        return this.clone().mulTo(e, this);
                    }, s.prototype.imuln = function(e) {
                        n("number" == typeof e), n(e < 67108864);
                        for(var t = 0, r = 0; r < this.length; r++){
                            var i = (0 | this.words[r]) * e, s = (67108863 & i) + (67108863 & t);
                            t >>= 26, t += i / 67108864 | 0, t += s >>> 26, this.words[r] = 67108863 & s;
                        }
                        return 0 !== t && (this.words[r] = t, this.length++), this;
                    }, s.prototype.muln = function(e) {
                        return this.clone().imuln(e);
                    }, s.prototype.sqr = function() {
                        return this.mul(this);
                    }, s.prototype.isqr = function() {
                        return this.imul(this.clone());
                    }, s.prototype.pow = function(e) {
                        var t = function(e) {
                            for(var t = new Array(e.bitLength()), r = 0; r < t.length; r++){
                                var n = r / 26 | 0, i = r % 26;
                                t[r] = (e.words[n] & 1 << i) >>> i;
                            }
                            return t;
                        }(e);
                        if (0 === t.length) return new s(1);
                        for(var r = this, n = 0; n < t.length && 0 === t[n]; n++, r = r.sqr());
                        if (++n < t.length) for(var i = r.sqr(); n < t.length; n++, i = i.sqr())0 !== t[n] && (r = r.mul(i));
                        return r;
                    }, s.prototype.iushln = function(e) {
                        n("number" == typeof e && e >= 0);
                        var t, r = e % 26, i = (e - r) / 26, s = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var o = 0;
                            for(t = 0; t < this.length; t++){
                                var a = this.words[t] & s, c = (0 | this.words[t]) - a << r;
                                this.words[t] = c | o, o = a >>> 26 - r;
                            }
                            o && (this.words[t] = o, this.length++);
                        }
                        if (0 !== i) {
                            for(t = this.length - 1; t >= 0; t--)this.words[t + i] = this.words[t];
                            for(t = 0; t < i; t++)this.words[t] = 0;
                            this.length += i;
                        }
                        return this.strip();
                    }, s.prototype.ishln = function(e) {
                        return n(0 === this.negative), this.iushln(e);
                    }, s.prototype.iushrn = function(e, t, r) {
                        var i;
                        n("number" == typeof e && e >= 0), i = t ? (t - t % 26) / 26 : 0;
                        var s = e % 26, o = Math.min((e - s) / 26, this.length), a = 67108863 ^ 67108863 >>> s << s, c = r;
                        if (i -= o, i = Math.max(0, i), c) {
                            for(var h = 0; h < o; h++)c.words[h] = this.words[h];
                            c.length = o;
                        }
                        if (0 === o) ;
                        else if (this.length > o) for(this.length -= o, h = 0; h < this.length; h++)this.words[h] = this.words[h + o];
                        else this.words[0] = 0, this.length = 1;
                        var u = 0;
                        for(h = this.length - 1; h >= 0 && (0 !== u || h >= i); h--){
                            var d = 0 | this.words[h];
                            this.words[h] = u << 26 - s | d >>> s, u = d & a;
                        }
                        return c && 0 !== u && (c.words[c.length++] = u), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
                    }, s.prototype.ishrn = function(e, t, r) {
                        return n(0 === this.negative), this.iushrn(e, t, r);
                    }, s.prototype.shln = function(e) {
                        return this.clone().ishln(e);
                    }, s.prototype.ushln = function(e) {
                        return this.clone().iushln(e);
                    }, s.prototype.shrn = function(e) {
                        return this.clone().ishrn(e);
                    }, s.prototype.ushrn = function(e) {
                        return this.clone().iushrn(e);
                    }, s.prototype.testn = function(e) {
                        n("number" == typeof e && e >= 0);
                        var t = e % 26, r = (e - t) / 26, i = 1 << t;
                        return !(this.length <= r || !(this.words[r] & i));
                    }, s.prototype.imaskn = function(e) {
                        n("number" == typeof e && e >= 0);
                        var t = e % 26, r = (e - t) / 26;
                        if (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== t && r++, this.length = Math.min(r, this.length), 0 !== t) {
                            var i = 67108863 ^ 67108863 >>> t << t;
                            this.words[this.length - 1] &= i;
                        }
                        return this.strip();
                    }, s.prototype.maskn = function(e) {
                        return this.clone().imaskn(e);
                    }, s.prototype.iaddn = function(e) {
                        return n("number" == typeof e), n(e < 67108864), e < 0 ? this.isubn(-e) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < e ? (this.words[0] = e - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(e), this.negative = 1, this) : this._iaddn(e);
                    }, s.prototype._iaddn = function(e) {
                        this.words[0] += e;
                        for(var t = 0; t < this.length && this.words[t] >= 67108864; t++)this.words[t] -= 67108864, t === this.length - 1 ? this.words[t + 1] = 1 : this.words[t + 1]++;
                        return this.length = Math.max(this.length, t + 1), this;
                    }, s.prototype.isubn = function(e) {
                        if (n("number" == typeof e), n(e < 67108864), e < 0) return this.iaddn(-e);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(e), this.negative = 1, this;
                        if (this.words[0] -= e, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else for(var t = 0; t < this.length && this.words[t] < 0; t++)this.words[t] += 67108864, this.words[t + 1] -= 1;
                        return this.strip();
                    }, s.prototype.addn = function(e) {
                        return this.clone().iaddn(e);
                    }, s.prototype.subn = function(e) {
                        return this.clone().isubn(e);
                    }, s.prototype.iabs = function() {
                        return this.negative = 0, this;
                    }, s.prototype.abs = function() {
                        return this.clone().iabs();
                    }, s.prototype._ishlnsubmul = function(e, t, r) {
                        var i, s, o = e.length + r;
                        this._expand(o);
                        var a = 0;
                        for(i = 0; i < e.length; i++){
                            s = (0 | this.words[i + r]) + a;
                            var c = (0 | e.words[i]) * t;
                            a = ((s -= 67108863 & c) >> 26) - (c / 67108864 | 0), this.words[i + r] = 67108863 & s;
                        }
                        for(; i < this.length - r; i++)a = (s = (0 | this.words[i + r]) + a) >> 26, this.words[i + r] = 67108863 & s;
                        if (0 === a) return this.strip();
                        for(n(-1 === a), a = 0, i = 0; i < this.length; i++)a = (s = -(0 | this.words[i]) + a) >> 26, this.words[i] = 67108863 & s;
                        return this.negative = 1, this.strip();
                    }, s.prototype._wordDiv = function(e, t) {
                        var r = (this.length, e.length), n = this.clone(), i = e, o = 0 | i.words[i.length - 1];
                        0 != (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                        var a, c = n.length - i.length;
                        if ("mod" !== t) {
                            (a = new s(null)).length = c + 1, a.words = new Array(a.length);
                            for(var h = 0; h < a.length; h++)a.words[h] = 0;
                        }
                        var u = n.clone()._ishlnsubmul(i, 1, c);
                        0 === u.negative && (n = u, a && (a.words[c] = 1));
                        for(var d = c - 1; d >= 0; d--){
                            var f = 67108864 * (0 | n.words[i.length + d]) + (0 | n.words[i.length + d - 1]);
                            for(f = Math.min(f / o | 0, 67108863), n._ishlnsubmul(i, f, d); 0 !== n.negative;)f--, n.negative = 0, n._ishlnsubmul(i, 1, d), n.isZero() || (n.negative ^= 1);
                            a && (a.words[d] = f);
                        }
                        return a && a.strip(), n.strip(), "div" !== t && 0 !== r && n.iushrn(r), {
                            div: a || null,
                            mod: n
                        };
                    }, s.prototype.divmod = function(e, t, r) {
                        return n(!e.isZero()), this.isZero() ? {
                            div: new s(0),
                            mod: new s(0)
                        } : 0 !== this.negative && 0 === e.negative ? (a = this.neg().divmod(e, t), "mod" !== t && (i = a.div.neg()), "div" !== t && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(e)), {
                            div: i,
                            mod: o
                        }) : 0 === this.negative && 0 !== e.negative ? (a = this.divmod(e.neg(), t), "mod" !== t && (i = a.div.neg()), {
                            div: i,
                            mod: a.mod
                        }) : this.negative & e.negative ? (a = this.neg().divmod(e.neg(), t), "div" !== t && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(e)), {
                            div: a.div,
                            mod: o
                        }) : e.length > this.length || this.cmp(e) < 0 ? {
                            div: new s(0),
                            mod: this
                        } : 1 === e.length ? "div" === t ? {
                            div: this.divn(e.words[0]),
                            mod: null
                        } : "mod" === t ? {
                            div: null,
                            mod: new s(this.modn(e.words[0]))
                        } : {
                            div: this.divn(e.words[0]),
                            mod: new s(this.modn(e.words[0]))
                        } : this._wordDiv(e, t);
                        "TURBOPACK unreachable";
                        var i, o, a;
                    }, s.prototype.div = function(e) {
                        return this.divmod(e, "div", !1).div;
                    }, s.prototype.mod = function(e) {
                        return this.divmod(e, "mod", !1).mod;
                    }, s.prototype.umod = function(e) {
                        return this.divmod(e, "mod", !0).mod;
                    }, s.prototype.divRound = function(e) {
                        var t = this.divmod(e);
                        if (t.mod.isZero()) return t.div;
                        var r = 0 !== t.div.negative ? t.mod.isub(e) : t.mod, n = e.ushrn(1), i = e.andln(1), s = r.cmp(n);
                        return s < 0 || 1 === i && 0 === s ? t.div : 0 !== t.div.negative ? t.div.isubn(1) : t.div.iaddn(1);
                    }, s.prototype.modn = function(e) {
                        n(e <= 67108863);
                        for(var t = (1 << 26) % e, r = 0, i = this.length - 1; i >= 0; i--)r = (t * r + (0 | this.words[i])) % e;
                        return r;
                    }, s.prototype.idivn = function(e) {
                        n(e <= 67108863);
                        for(var t = 0, r = this.length - 1; r >= 0; r--){
                            var i = (0 | this.words[r]) + 67108864 * t;
                            this.words[r] = i / e | 0, t = i % e;
                        }
                        return this.strip();
                    }, s.prototype.divn = function(e) {
                        return this.clone().idivn(e);
                    }, s.prototype.egcd = function(e) {
                        n(0 === e.negative), n(!e.isZero());
                        var t = this, r = e.clone();
                        t = 0 !== t.negative ? t.umod(e) : t.clone();
                        for(var i = new s(1), o = new s(0), a = new s(0), c = new s(1), h = 0; t.isEven() && r.isEven();)t.iushrn(1), r.iushrn(1), ++h;
                        for(var u = r.clone(), d = t.clone(); !t.isZero();){
                            for(var f = 0, l = 1; !(t.words[0] & l) && f < 26; ++f, l <<= 1);
                            if (f > 0) for(t.iushrn(f); f-- > 0;)(i.isOdd() || o.isOdd()) && (i.iadd(u), o.isub(d)), i.iushrn(1), o.iushrn(1);
                            for(var p = 0, b = 1; !(r.words[0] & b) && p < 26; ++p, b <<= 1);
                            if (p > 0) for(r.iushrn(p); p-- > 0;)(a.isOdd() || c.isOdd()) && (a.iadd(u), c.isub(d)), a.iushrn(1), c.iushrn(1);
                            t.cmp(r) >= 0 ? (t.isub(r), i.isub(a), o.isub(c)) : (r.isub(t), a.isub(i), c.isub(o));
                        }
                        return {
                            a,
                            b: c,
                            gcd: r.iushln(h)
                        };
                    }, s.prototype._invmp = function(e) {
                        n(0 === e.negative), n(!e.isZero());
                        var t = this, r = e.clone();
                        t = 0 !== t.negative ? t.umod(e) : t.clone();
                        for(var i, o = new s(1), a = new s(0), c = r.clone(); t.cmpn(1) > 0 && r.cmpn(1) > 0;){
                            for(var h = 0, u = 1; !(t.words[0] & u) && h < 26; ++h, u <<= 1);
                            if (h > 0) for(t.iushrn(h); h-- > 0;)o.isOdd() && o.iadd(c), o.iushrn(1);
                            for(var d = 0, f = 1; !(r.words[0] & f) && d < 26; ++d, f <<= 1);
                            if (d > 0) for(r.iushrn(d); d-- > 0;)a.isOdd() && a.iadd(c), a.iushrn(1);
                            t.cmp(r) >= 0 ? (t.isub(r), o.isub(a)) : (r.isub(t), a.isub(o));
                        }
                        return (i = 0 === t.cmpn(1) ? o : a).cmpn(0) < 0 && i.iadd(e), i;
                    }, s.prototype.gcd = function(e) {
                        if (this.isZero()) return e.abs();
                        if (e.isZero()) return this.abs();
                        var t = this.clone(), r = e.clone();
                        t.negative = 0, r.negative = 0;
                        for(var n = 0; t.isEven() && r.isEven(); n++)t.iushrn(1), r.iushrn(1);
                        for(;;){
                            for(; t.isEven();)t.iushrn(1);
                            for(; r.isEven();)r.iushrn(1);
                            var i = t.cmp(r);
                            if (i < 0) {
                                var s = t;
                                t = r, r = s;
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            t.isub(r);
                        }
                        return r.iushln(n);
                    }, s.prototype.invm = function(e) {
                        return this.egcd(e).a.umod(e);
                    }, s.prototype.isEven = function() {
                        return !(1 & this.words[0]);
                    }, s.prototype.isOdd = function() {
                        return !(1 & ~this.words[0]);
                    }, s.prototype.andln = function(e) {
                        return this.words[0] & e;
                    }, s.prototype.bincn = function(e) {
                        n("number" == typeof e);
                        var t = e % 26, r = (e - t) / 26, i = 1 << t;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= i, this;
                        for(var s = i, o = r; 0 !== s && o < this.length; o++){
                            var a = 0 | this.words[o];
                            s = (a += s) >>> 26, a &= 67108863, this.words[o] = a;
                        }
                        return 0 !== s && (this.words[o] = s, this.length++), this;
                    }, s.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0];
                    }, s.prototype.cmpn = function(e) {
                        var t, r = e < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this.strip(), this.length > 1) t = 1;
                        else {
                            r && (e = -e), n(e <= 67108863, "Number is too big");
                            var i = 0 | this.words[0];
                            t = i === e ? 0 : i < e ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -t : t;
                    }, s.prototype.cmp = function(e) {
                        if (0 !== this.negative && 0 === e.negative) return -1;
                        if (0 === this.negative && 0 !== e.negative) return 1;
                        var t = this.ucmp(e);
                        return 0 !== this.negative ? 0 | -t : t;
                    }, s.prototype.ucmp = function(e) {
                        if (this.length > e.length) return 1;
                        if (this.length < e.length) return -1;
                        for(var t = 0, r = this.length - 1; r >= 0; r--){
                            var n = 0 | this.words[r], i = 0 | e.words[r];
                            if (n !== i) {
                                n < i ? t = -1 : n > i && (t = 1);
                                break;
                            }
                        }
                        return t;
                    }, s.prototype.gtn = function(e) {
                        return 1 === this.cmpn(e);
                    }, s.prototype.gt = function(e) {
                        return 1 === this.cmp(e);
                    }, s.prototype.gten = function(e) {
                        return this.cmpn(e) >= 0;
                    }, s.prototype.gte = function(e) {
                        return this.cmp(e) >= 0;
                    }, s.prototype.ltn = function(e) {
                        return -1 === this.cmpn(e);
                    }, s.prototype.lt = function(e) {
                        return -1 === this.cmp(e);
                    }, s.prototype.lten = function(e) {
                        return this.cmpn(e) <= 0;
                    }, s.prototype.lte = function(e) {
                        return this.cmp(e) <= 0;
                    }, s.prototype.eqn = function(e) {
                        return 0 === this.cmpn(e);
                    }, s.prototype.eq = function(e) {
                        return 0 === this.cmp(e);
                    }, s.red = function(e) {
                        return new S(e);
                    }, s.prototype.toRed = function(e) {
                        return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), e.convertTo(this)._forceRed(e);
                    }, s.prototype.fromRed = function() {
                        return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }, s.prototype._forceRed = function(e) {
                        return this.red = e, this;
                    }, s.prototype.forceRed = function(e) {
                        return n(!this.red, "Already a number in reduction context"), this._forceRed(e);
                    }, s.prototype.redAdd = function(e) {
                        return n(this.red, "redAdd works only with red numbers"), this.red.add(this, e);
                    }, s.prototype.redIAdd = function(e) {
                        return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, e);
                    }, s.prototype.redSub = function(e) {
                        return n(this.red, "redSub works only with red numbers"), this.red.sub(this, e);
                    }, s.prototype.redISub = function(e) {
                        return n(this.red, "redISub works only with red numbers"), this.red.isub(this, e);
                    }, s.prototype.redShl = function(e) {
                        return n(this.red, "redShl works only with red numbers"), this.red.shl(this, e);
                    }, s.prototype.redMul = function(e) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.mul(this, e);
                    }, s.prototype.redIMul = function(e) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.imul(this, e);
                    }, s.prototype.redSqr = function() {
                        return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }, s.prototype.redISqr = function() {
                        return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }, s.prototype.redSqrt = function() {
                        return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }, s.prototype.redInvm = function() {
                        return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }, s.prototype.redNeg = function() {
                        return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }, s.prototype.redPow = function(e) {
                        return n(this.red && !e.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, e);
                    };
                    var m = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };
                    function y(e, t) {
                        this.name = e, this.p = new s(t, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
                    }
                    function v() {
                        y.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                    }
                    function w() {
                        y.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                    }
                    function _() {
                        y.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                    }
                    function E() {
                        y.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                    }
                    function S(e) {
                        if ("string" == typeof e) {
                            var t = s._prime(e);
                            this.m = t.p, this.prime = t;
                        } else n(e.gtn(1), "modulus must be greater than 1"), this.m = e, this.prime = null;
                    }
                    function A(e) {
                        S.call(this, e), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
                    }
                    y.prototype._tmp = function() {
                        var e = new s(null);
                        return e.words = new Array(Math.ceil(this.n / 13)), e;
                    }, y.prototype.ireduce = function(e) {
                        var t, r = e;
                        do {
                            this.split(r, this.tmp), t = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
                        }while (t > this.n)
                        var n = t < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }, y.prototype.split = function(e, t) {
                        e.iushrn(this.n, 0, t);
                    }, y.prototype.imulK = function(e) {
                        return e.imul(this.k);
                    }, i(v, y), v.prototype.split = function(e, t) {
                        for(var r = 4194303, n = Math.min(e.length, 9), i = 0; i < n; i++)t.words[i] = e.words[i];
                        if (t.length = n, e.length <= 9) return e.words[0] = 0, void (e.length = 1);
                        var s = e.words[9];
                        for(t.words[t.length++] = s & r, i = 10; i < e.length; i++){
                            var o = 0 | e.words[i];
                            e.words[i - 10] = (o & r) << 4 | s >>> 22, s = o;
                        }
                        s >>>= 22, e.words[i - 10] = s, 0 === s && e.length > 10 ? e.length -= 10 : e.length -= 9;
                    }, v.prototype.imulK = function(e) {
                        e.words[e.length] = 0, e.words[e.length + 1] = 0, e.length += 2;
                        for(var t = 0, r = 0; r < e.length; r++){
                            var n = 0 | e.words[r];
                            t += 977 * n, e.words[r] = 67108863 & t, t = 64 * n + (t / 67108864 | 0);
                        }
                        return 0 === e.words[e.length - 1] && (e.length--, 0 === e.words[e.length - 1] && e.length--), e;
                    }, i(w, y), i(_, y), i(E, y), E.prototype.imulK = function(e) {
                        for(var t = 0, r = 0; r < e.length; r++){
                            var n = 19 * (0 | e.words[r]) + t, i = 67108863 & n;
                            n >>>= 26, e.words[r] = i, t = n;
                        }
                        return 0 !== t && (e.words[e.length++] = t), e;
                    }, s._prime = function(e) {
                        if (m[e]) return m[e];
                        var t;
                        if ("k256" === e) t = new v;
                        else if ("p224" === e) t = new w;
                        else if ("p192" === e) t = new _;
                        else {
                            if ("p25519" !== e) throw new Error("Unknown prime " + e);
                            t = new E;
                        }
                        return m[e] = t, t;
                    }, S.prototype._verify1 = function(e) {
                        n(0 === e.negative, "red works only with positives"), n(e.red, "red works only with red numbers");
                    }, S.prototype._verify2 = function(e, t) {
                        n(!(e.negative | t.negative), "red works only with positives"), n(e.red && e.red === t.red, "red works only with red numbers");
                    }, S.prototype.imod = function(e) {
                        return this.prime ? this.prime.ireduce(e)._forceRed(this) : e.umod(this.m)._forceRed(this);
                    }, S.prototype.neg = function(e) {
                        return e.isZero() ? e.clone() : this.m.sub(e)._forceRed(this);
                    }, S.prototype.add = function(e, t) {
                        this._verify2(e, t);
                        var r = e.add(t);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
                    }, S.prototype.iadd = function(e, t) {
                        this._verify2(e, t);
                        var r = e.iadd(t);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r;
                    }, S.prototype.sub = function(e, t) {
                        this._verify2(e, t);
                        var r = e.sub(t);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
                    }, S.prototype.isub = function(e, t) {
                        this._verify2(e, t);
                        var r = e.isub(t);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r;
                    }, S.prototype.shl = function(e, t) {
                        return this._verify1(e), this.imod(e.ushln(t));
                    }, S.prototype.imul = function(e, t) {
                        return this._verify2(e, t), this.imod(e.imul(t));
                    }, S.prototype.mul = function(e, t) {
                        return this._verify2(e, t), this.imod(e.mul(t));
                    }, S.prototype.isqr = function(e) {
                        return this.imul(e, e.clone());
                    }, S.prototype.sqr = function(e) {
                        return this.mul(e, e);
                    }, S.prototype.sqrt = function(e) {
                        if (e.isZero()) return e.clone();
                        var t = this.m.andln(3);
                        if (n(t % 2 == 1), 3 === t) {
                            var r = this.m.add(new s(1)).iushrn(2);
                            return this.pow(e, r);
                        }
                        for(var i = this.m.subn(1), o = 0; !i.isZero() && 0 === i.andln(1);)o++, i.iushrn(1);
                        n(!i.isZero());
                        var a = new s(1).toRed(this), c = a.redNeg(), h = this.m.subn(1).iushrn(1), u = this.m.bitLength();
                        for(u = new s(2 * u * u).toRed(this); 0 !== this.pow(u, h).cmp(c);)u.redIAdd(c);
                        for(var d = this.pow(u, i), f = this.pow(e, i.addn(1).iushrn(1)), l = this.pow(e, i), p = o; 0 !== l.cmp(a);){
                            for(var b = l, g = 0; 0 !== b.cmp(a); g++)b = b.redSqr();
                            n(g < p);
                            var m = this.pow(d, new s(1).iushln(p - g - 1));
                            f = f.redMul(m), d = m.redSqr(), l = l.redMul(d), p = g;
                        }
                        return f;
                    }, S.prototype.invm = function(e) {
                        var t = e._invmp(this.m);
                        return 0 !== t.negative ? (t.negative = 0, this.imod(t).redNeg()) : this.imod(t);
                    }, S.prototype.pow = function(e, t) {
                        if (t.isZero()) return new s(1).toRed(this);
                        if (0 === t.cmpn(1)) return e.clone();
                        var r = new Array(16);
                        r[0] = new s(1).toRed(this), r[1] = e;
                        for(var n = 2; n < r.length; n++)r[n] = this.mul(r[n - 1], e);
                        var i = r[0], o = 0, a = 0, c = t.bitLength() % 26;
                        for(0 === c && (c = 26), n = t.length - 1; n >= 0; n--){
                            for(var h = t.words[n], u = c - 1; u >= 0; u--){
                                var d = h >> u & 1;
                                i !== r[0] && (i = this.sqr(i)), 0 !== d || 0 !== o ? (o <<= 1, o |= d, (4 == ++a || 0 === n && 0 === u) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
                            }
                            c = 26;
                        }
                        return i;
                    }, S.prototype.convertTo = function(e) {
                        var t = e.umod(this.m);
                        return t === e ? t.clone() : t;
                    }, S.prototype.convertFrom = function(e) {
                        var t = e.clone();
                        return t.red = null, t;
                    }, s.mont = function(e) {
                        return new A(e);
                    }, i(A, S), A.prototype.convertTo = function(e) {
                        return this.imod(e.ushln(this.shift));
                    }, A.prototype.convertFrom = function(e) {
                        var t = this.imod(e.mul(this.rinv));
                        return t.red = null, t;
                    }, A.prototype.imul = function(e, t) {
                        if (e.isZero() || t.isZero()) return e.words[0] = 0, e.length = 1, e;
                        var r = e.imul(t), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), s = i;
                        return i.cmp(this.m) >= 0 ? s = i.isub(this.m) : i.cmpn(0) < 0 && (s = i.iadd(this.m)), s._forceRed(this);
                    }, A.prototype.mul = function(e, t) {
                        if (e.isZero() || t.isZero()) return new s(0)._forceRed(this);
                        var r = e.mul(t), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, A.prototype.invm = function(e) {
                        return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this);
                    };
                }(e = r.nmd(e), this);
            },
            3900: function(e, t, r) {
                !function(e, t) {
                    "use strict";
                    function n(e, t) {
                        if (!e) throw new Error(t || "Assertion failed");
                    }
                    function i(e, t) {
                        e.super_ = t;
                        var r = function() {};
                        r.prototype = t.prototype, e.prototype = new r, e.prototype.constructor = e;
                    }
                    function s(e, t, r) {
                        if (s.isBN(e)) return e;
                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== e && ("le" !== t && "be" !== t || (r = t, t = 10), this._init(e || 0, t || 10, r || "be"));
                    }
                    var o;
                    "object" == typeof e ? e.exports = s : t.BN = s, s.BN = s, s.wordSize = 26;
                    try {
                        o = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(9322).Buffer;
                    } catch (e) {}
                    function a(e, t) {
                        var r = e.charCodeAt(t);
                        return r >= 48 && r <= 57 ? r - 48 : r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : void n(!1, "Invalid character in " + e);
                    }
                    function c(e, t, r) {
                        var n = a(e, r);
                        return r - 1 >= t && (n |= a(e, r - 1) << 4), n;
                    }
                    function h(e, t, r, i) {
                        for(var s = 0, o = 0, a = Math.min(e.length, r), c = t; c < a; c++){
                            var h = e.charCodeAt(c) - 48;
                            s *= i, o = h >= 49 ? h - 49 + 10 : h >= 17 ? h - 17 + 10 : h, n(h >= 0 && o < i, "Invalid character"), s += o;
                        }
                        return s;
                    }
                    function u(e, t) {
                        e.words = t.words, e.length = t.length, e.negative = t.negative, e.red = t.red;
                    }
                    if (s.isBN = function(e) {
                        return e instanceof s || null !== e && "object" == typeof e && e.constructor.wordSize === s.wordSize && Array.isArray(e.words);
                    }, s.max = function(e, t) {
                        return e.cmp(t) > 0 ? e : t;
                    }, s.min = function(e, t) {
                        return e.cmp(t) < 0 ? e : t;
                    }, s.prototype._init = function(e, t, r) {
                        if ("number" == typeof e) return this._initNumber(e, t, r);
                        if ("object" == typeof e) return this._initArray(e, t, r);
                        "hex" === t && (t = 16), n(t === (0 | t) && t >= 2 && t <= 36);
                        var i = 0;
                        "-" === (e = e.toString().replace(/\s+/g, ""))[0] && (i++, this.negative = 1), i < e.length && (16 === t ? this._parseHex(e, i, r) : (this._parseBase(e, t, i), "le" === r && this._initArray(this.toArray(), t, r)));
                    }, s.prototype._initNumber = function(e, t, r) {
                        e < 0 && (this.negative = 1, e = -e), e < 67108864 ? (this.words = [
                            67108863 & e
                        ], this.length = 1) : e < 4503599627370496 ? (this.words = [
                            67108863 & e,
                            e / 67108864 & 67108863
                        ], this.length = 2) : (n(e < 9007199254740992), this.words = [
                            67108863 & e,
                            e / 67108864 & 67108863,
                            1
                        ], this.length = 3), "le" === r && this._initArray(this.toArray(), t, r);
                    }, s.prototype._initArray = function(e, t, r) {
                        if (n("number" == typeof e.length), e.length <= 0) return this.words = [
                            0
                        ], this.length = 1, this;
                        this.length = Math.ceil(e.length / 3), this.words = new Array(this.length);
                        for(var i = 0; i < this.length; i++)this.words[i] = 0;
                        var s, o, a = 0;
                        if ("be" === r) for(i = e.length - 1, s = 0; i >= 0; i -= 3)o = e[i] | e[i - 1] << 8 | e[i - 2] << 16, this.words[s] |= o << a & 67108863, this.words[s + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, s++);
                        else if ("le" === r) for(i = 0, s = 0; i < e.length; i += 3)o = e[i] | e[i + 1] << 8 | e[i + 2] << 16, this.words[s] |= o << a & 67108863, this.words[s + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, s++);
                        return this._strip();
                    }, s.prototype._parseHex = function(e, t, r) {
                        this.length = Math.ceil((e.length - t) / 6), this.words = new Array(this.length);
                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                        var i, s = 0, o = 0;
                        if ("be" === r) for(n = e.length - 1; n >= t; n -= 2)i = c(e, t, n) << s, this.words[o] |= 67108863 & i, s >= 18 ? (s -= 18, o += 1, this.words[o] |= i >>> 26) : s += 8;
                        else for(n = (e.length - t) % 2 == 0 ? t + 1 : t; n < e.length; n += 2)i = c(e, t, n) << s, this.words[o] |= 67108863 & i, s >= 18 ? (s -= 18, o += 1, this.words[o] |= i >>> 26) : s += 8;
                        this._strip();
                    }, s.prototype._parseBase = function(e, t, r) {
                        this.words = [
                            0
                        ], this.length = 1;
                        for(var n = 0, i = 1; i <= 67108863; i *= t)n++;
                        n--, i = i / t | 0;
                        for(var s = e.length - r, o = s % n, a = Math.min(s, s - o) + r, c = 0, u = r; u < a; u += n)c = h(e, u, u + n, t), this.imuln(i), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                        if (0 !== o) {
                            var d = 1;
                            for(c = h(e, u, e.length, t), u = 0; u < o; u++)d *= t;
                            this.imuln(d), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                        }
                        this._strip();
                    }, s.prototype.copy = function(e) {
                        e.words = new Array(this.length);
                        for(var t = 0; t < this.length; t++)e.words[t] = this.words[t];
                        e.length = this.length, e.negative = this.negative, e.red = this.red;
                    }, s.prototype._move = function(e) {
                        u(e, this);
                    }, s.prototype.clone = function() {
                        var e = new s(null);
                        return this.copy(e), e;
                    }, s.prototype._expand = function(e) {
                        for(; this.length < e;)this.words[this.length++] = 0;
                        return this;
                    }, s.prototype._strip = function() {
                        for(; this.length > 1 && 0 === this.words[this.length - 1];)this.length--;
                        return this._normSign();
                    }, s.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                    }, "undefined" != typeof Symbol && "function" == typeof Symbol.for) try {
                        s.prototype[Symbol.for("nodejs.util.inspect.custom")] = d;
                    } catch (e) {
                        s.prototype.inspect = d;
                    }
                    else s.prototype.inspect = d;
                    function d() {
                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                    }
                    var f = [
                        "",
                        "0",
                        "00",
                        "000",
                        "0000",
                        "00000",
                        "000000",
                        "0000000",
                        "00000000",
                        "000000000",
                        "0000000000",
                        "00000000000",
                        "000000000000",
                        "0000000000000",
                        "00000000000000",
                        "000000000000000",
                        "0000000000000000",
                        "00000000000000000",
                        "000000000000000000",
                        "0000000000000000000",
                        "00000000000000000000",
                        "000000000000000000000",
                        "0000000000000000000000",
                        "00000000000000000000000",
                        "000000000000000000000000",
                        "0000000000000000000000000"
                    ], l = [
                        0,
                        0,
                        25,
                        16,
                        12,
                        11,
                        10,
                        9,
                        8,
                        8,
                        7,
                        7,
                        7,
                        7,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        6,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5,
                        5
                    ], p = [
                        0,
                        0,
                        33554432,
                        43046721,
                        16777216,
                        48828125,
                        60466176,
                        40353607,
                        16777216,
                        43046721,
                        1e7,
                        19487171,
                        35831808,
                        62748517,
                        7529536,
                        11390625,
                        16777216,
                        24137569,
                        34012224,
                        47045881,
                        64e6,
                        4084101,
                        5153632,
                        6436343,
                        7962624,
                        9765625,
                        11881376,
                        14348907,
                        17210368,
                        20511149,
                        243e5,
                        28629151,
                        33554432,
                        39135393,
                        45435424,
                        52521875,
                        60466176
                    ];
                    function b(e, t, r) {
                        r.negative = t.negative ^ e.negative;
                        var n = e.length + t.length | 0;
                        r.length = n, n = n - 1 | 0;
                        var i = 0 | e.words[0], s = 0 | t.words[0], o = i * s, a = 67108863 & o, c = o / 67108864 | 0;
                        r.words[0] = a;
                        for(var h = 1; h < n; h++){
                            for(var u = c >>> 26, d = 67108863 & c, f = Math.min(h, t.length - 1), l = Math.max(0, h - e.length + 1); l <= f; l++){
                                var p = h - l | 0;
                                u += (o = (i = 0 | e.words[p]) * (s = 0 | t.words[l]) + d) / 67108864 | 0, d = 67108863 & o;
                            }
                            r.words[h] = 0 | d, c = 0 | u;
                        }
                        return 0 !== c ? r.words[h] = 0 | c : r.length--, r._strip();
                    }
                    s.prototype.toString = function(e, t) {
                        var r;
                        if (t = 0 | t || 1, 16 === (e = e || 10) || "hex" === e) {
                            r = "";
                            for(var i = 0, s = 0, o = 0; o < this.length; o++){
                                var a = this.words[o], c = (16777215 & (a << i | s)).toString(16);
                                s = a >>> 24 - i & 16777215, (i += 2) >= 26 && (i -= 26, o--), r = 0 !== s || o !== this.length - 1 ? f[6 - c.length] + c + r : c + r;
                            }
                            for(0 !== s && (r = s.toString(16) + r); r.length % t != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        if (e === (0 | e) && e >= 2 && e <= 36) {
                            var h = l[e], u = p[e];
                            r = "";
                            var d = this.clone();
                            for(d.negative = 0; !d.isZero();){
                                var b = d.modrn(u).toString(e);
                                r = (d = d.idivn(u)).isZero() ? b + r : f[h - b.length] + b + r;
                            }
                            for(this.isZero() && (r = "0" + r); r.length % t != 0;)r = "0" + r;
                            return 0 !== this.negative && (r = "-" + r), r;
                        }
                        n(!1, "Base should be between 2 and 36");
                    }, s.prototype.toNumber = function() {
                        var e = this.words[0];
                        return 2 === this.length ? e += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? e += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -e : e;
                    }, s.prototype.toJSON = function() {
                        return this.toString(16, 2);
                    }, o && (s.prototype.toBuffer = function(e, t) {
                        return this.toArrayLike(o, e, t);
                    }), s.prototype.toArray = function(e, t) {
                        return this.toArrayLike(Array, e, t);
                    }, s.prototype.toArrayLike = function(e, t, r) {
                        this._strip();
                        var i = this.byteLength(), s = r || Math.max(1, i);
                        n(i <= s, "byte array longer than desired length"), n(s > 0, "Requested array length <= 0");
                        var o = function(e, t) {
                            return e.allocUnsafe ? e.allocUnsafe(t) : new e(t);
                        }(e, s);
                        return this["_toArrayLike" + ("le" === t ? "LE" : "BE")](o, i), o;
                    }, s.prototype._toArrayLikeLE = function(e, t) {
                        for(var r = 0, n = 0, i = 0, s = 0; i < this.length; i++){
                            var o = this.words[i] << s | n;
                            e[r++] = 255 & o, r < e.length && (e[r++] = o >> 8 & 255), r < e.length && (e[r++] = o >> 16 & 255), 6 === s ? (r < e.length && (e[r++] = o >> 24 & 255), n = 0, s = 0) : (n = o >>> 24, s += 2);
                        }
                        if (r < e.length) for(e[r++] = n; r < e.length;)e[r++] = 0;
                    }, s.prototype._toArrayLikeBE = function(e, t) {
                        for(var r = e.length - 1, n = 0, i = 0, s = 0; i < this.length; i++){
                            var o = this.words[i] << s | n;
                            e[r--] = 255 & o, r >= 0 && (e[r--] = o >> 8 & 255), r >= 0 && (e[r--] = o >> 16 & 255), 6 === s ? (r >= 0 && (e[r--] = o >> 24 & 255), n = 0, s = 0) : (n = o >>> 24, s += 2);
                        }
                        if (r >= 0) for(e[r--] = n; r >= 0;)e[r--] = 0;
                    }, Math.clz32 ? s.prototype._countBits = function(e) {
                        return 32 - Math.clz32(e);
                    } : s.prototype._countBits = function(e) {
                        var t = e, r = 0;
                        return t >= 4096 && (r += 13, t >>>= 13), t >= 64 && (r += 7, t >>>= 7), t >= 8 && (r += 4, t >>>= 4), t >= 2 && (r += 2, t >>>= 2), r + t;
                    }, s.prototype._zeroBits = function(e) {
                        if (0 === e) return 26;
                        var t = e, r = 0;
                        return 8191 & t || (r += 13, t >>>= 13), 127 & t || (r += 7, t >>>= 7), 15 & t || (r += 4, t >>>= 4), 3 & t || (r += 2, t >>>= 2), 1 & t || r++, r;
                    }, s.prototype.bitLength = function() {
                        var e = this.words[this.length - 1], t = this._countBits(e);
                        return 26 * (this.length - 1) + t;
                    }, s.prototype.zeroBits = function() {
                        if (this.isZero()) return 0;
                        for(var e = 0, t = 0; t < this.length; t++){
                            var r = this._zeroBits(this.words[t]);
                            if (e += r, 26 !== r) break;
                        }
                        return e;
                    }, s.prototype.byteLength = function() {
                        return Math.ceil(this.bitLength() / 8);
                    }, s.prototype.toTwos = function(e) {
                        return 0 !== this.negative ? this.abs().inotn(e).iaddn(1) : this.clone();
                    }, s.prototype.fromTwos = function(e) {
                        return this.testn(e - 1) ? this.notn(e).iaddn(1).ineg() : this.clone();
                    }, s.prototype.isNeg = function() {
                        return 0 !== this.negative;
                    }, s.prototype.neg = function() {
                        return this.clone().ineg();
                    }, s.prototype.ineg = function() {
                        return this.isZero() || (this.negative ^= 1), this;
                    }, s.prototype.iuor = function(e) {
                        for(; this.length < e.length;)this.words[this.length++] = 0;
                        for(var t = 0; t < e.length; t++)this.words[t] = this.words[t] | e.words[t];
                        return this._strip();
                    }, s.prototype.ior = function(e) {
                        return n(!(this.negative | e.negative)), this.iuor(e);
                    }, s.prototype.or = function(e) {
                        return this.length > e.length ? this.clone().ior(e) : e.clone().ior(this);
                    }, s.prototype.uor = function(e) {
                        return this.length > e.length ? this.clone().iuor(e) : e.clone().iuor(this);
                    }, s.prototype.iuand = function(e) {
                        var t;
                        t = this.length > e.length ? e : this;
                        for(var r = 0; r < t.length; r++)this.words[r] = this.words[r] & e.words[r];
                        return this.length = t.length, this._strip();
                    }, s.prototype.iand = function(e) {
                        return n(!(this.negative | e.negative)), this.iuand(e);
                    }, s.prototype.and = function(e) {
                        return this.length > e.length ? this.clone().iand(e) : e.clone().iand(this);
                    }, s.prototype.uand = function(e) {
                        return this.length > e.length ? this.clone().iuand(e) : e.clone().iuand(this);
                    }, s.prototype.iuxor = function(e) {
                        var t, r;
                        this.length > e.length ? (t = this, r = e) : (t = e, r = this);
                        for(var n = 0; n < r.length; n++)this.words[n] = t.words[n] ^ r.words[n];
                        if (this !== t) for(; n < t.length; n++)this.words[n] = t.words[n];
                        return this.length = t.length, this._strip();
                    }, s.prototype.ixor = function(e) {
                        return n(!(this.negative | e.negative)), this.iuxor(e);
                    }, s.prototype.xor = function(e) {
                        return this.length > e.length ? this.clone().ixor(e) : e.clone().ixor(this);
                    }, s.prototype.uxor = function(e) {
                        return this.length > e.length ? this.clone().iuxor(e) : e.clone().iuxor(this);
                    }, s.prototype.inotn = function(e) {
                        n("number" == typeof e && e >= 0);
                        var t = 0 | Math.ceil(e / 26), r = e % 26;
                        this._expand(t), r > 0 && t--;
                        for(var i = 0; i < t; i++)this.words[i] = 67108863 & ~this.words[i];
                        return r > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - r), this._strip();
                    }, s.prototype.notn = function(e) {
                        return this.clone().inotn(e);
                    }, s.prototype.setn = function(e, t) {
                        n("number" == typeof e && e >= 0);
                        var r = e / 26 | 0, i = e % 26;
                        return this._expand(r + 1), this.words[r] = t ? this.words[r] | 1 << i : this.words[r] & ~(1 << i), this._strip();
                    }, s.prototype.iadd = function(e) {
                        var t, r, n;
                        if (0 !== this.negative && 0 === e.negative) return this.negative = 0, t = this.isub(e), this.negative ^= 1, this._normSign();
                        if (0 === this.negative && 0 !== e.negative) return e.negative = 0, t = this.isub(e), e.negative = 1, t._normSign();
                        this.length > e.length ? (r = this, n = e) : (r = e, n = this);
                        for(var i = 0, s = 0; s < n.length; s++)t = (0 | r.words[s]) + (0 | n.words[s]) + i, this.words[s] = 67108863 & t, i = t >>> 26;
                        for(; 0 !== i && s < r.length; s++)t = (0 | r.words[s]) + i, this.words[s] = 67108863 & t, i = t >>> 26;
                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                        else if (r !== this) for(; s < r.length; s++)this.words[s] = r.words[s];
                        return this;
                    }, s.prototype.add = function(e) {
                        var t;
                        return 0 !== e.negative && 0 === this.negative ? (e.negative = 0, t = this.sub(e), e.negative ^= 1, t) : 0 === e.negative && 0 !== this.negative ? (this.negative = 0, t = e.sub(this), this.negative = 1, t) : this.length > e.length ? this.clone().iadd(e) : e.clone().iadd(this);
                    }, s.prototype.isub = function(e) {
                        if (0 !== e.negative) {
                            e.negative = 0;
                            var t = this.iadd(e);
                            return e.negative = 1, t._normSign();
                        }
                        if (0 !== this.negative) return this.negative = 0, this.iadd(e), this.negative = 1, this._normSign();
                        var r, n, i = this.cmp(e);
                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                        i > 0 ? (r = this, n = e) : (r = e, n = this);
                        for(var s = 0, o = 0; o < n.length; o++)s = (t = (0 | r.words[o]) - (0 | n.words[o]) + s) >> 26, this.words[o] = 67108863 & t;
                        for(; 0 !== s && o < r.length; o++)s = (t = (0 | r.words[o]) + s) >> 26, this.words[o] = 67108863 & t;
                        if (0 === s && o < r.length && r !== this) for(; o < r.length; o++)this.words[o] = r.words[o];
                        return this.length = Math.max(this.length, o), r !== this && (this.negative = 1), this._strip();
                    }, s.prototype.sub = function(e) {
                        return this.clone().isub(e);
                    };
                    var g = function(e, t, r) {
                        var n, i, s, o = e.words, a = t.words, c = r.words, h = 0, u = 0 | o[0], d = 8191 & u, f = u >>> 13, l = 0 | o[1], p = 8191 & l, b = l >>> 13, g = 0 | o[2], m = 8191 & g, y = g >>> 13, v = 0 | o[3], w = 8191 & v, _ = v >>> 13, E = 0 | o[4], S = 8191 & E, A = E >>> 13, M = 0 | o[5], I = 8191 & M, T = M >>> 13, x = 0 | o[6], C = 8191 & x, R = x >>> 13, k = 0 | o[7], P = 8191 & k, O = k >>> 13, N = 0 | o[8], U = 8191 & N, B = N >>> 13, L = 0 | o[9], j = 8191 & L, D = L >>> 13, q = 0 | a[0], F = 8191 & q, H = q >>> 13, z = 0 | a[1], V = 8191 & z, $ = z >>> 13, K = 0 | a[2], G = 8191 & K, W = K >>> 13, J = 0 | a[3], Y = 8191 & J, X = J >>> 13, Z = 0 | a[4], Q = 8191 & Z, ee = Z >>> 13, te = 0 | a[5], re = 8191 & te, ne = te >>> 13, ie = 0 | a[6], se = 8191 & ie, oe = ie >>> 13, ae = 0 | a[7], ce = 8191 & ae, he = ae >>> 13, ue = 0 | a[8], de = 8191 & ue, fe = ue >>> 13, le = 0 | a[9], pe = 8191 & le, be = le >>> 13;
                        r.negative = e.negative ^ t.negative, r.length = 19;
                        var ge = (h + (n = Math.imul(d, F)) | 0) + ((8191 & (i = (i = Math.imul(d, H)) + Math.imul(f, F) | 0)) << 13) | 0;
                        h = ((s = Math.imul(f, H)) + (i >>> 13) | 0) + (ge >>> 26) | 0, ge &= 67108863, n = Math.imul(p, F), i = (i = Math.imul(p, H)) + Math.imul(b, F) | 0, s = Math.imul(b, H);
                        var me = (h + (n = n + Math.imul(d, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, $) | 0) + Math.imul(f, V) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, $) | 0) + (i >>> 13) | 0) + (me >>> 26) | 0, me &= 67108863, n = Math.imul(m, F), i = (i = Math.imul(m, H)) + Math.imul(y, F) | 0, s = Math.imul(y, H), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, $) | 0) + Math.imul(b, V) | 0, s = s + Math.imul(b, $) | 0;
                        var ye = (h + (n = n + Math.imul(d, G) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, W) | 0) + Math.imul(f, G) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, W) | 0) + (i >>> 13) | 0) + (ye >>> 26) | 0, ye &= 67108863, n = Math.imul(w, F), i = (i = Math.imul(w, H)) + Math.imul(_, F) | 0, s = Math.imul(_, H), n = n + Math.imul(m, V) | 0, i = (i = i + Math.imul(m, $) | 0) + Math.imul(y, V) | 0, s = s + Math.imul(y, $) | 0, n = n + Math.imul(p, G) | 0, i = (i = i + Math.imul(p, W) | 0) + Math.imul(b, G) | 0, s = s + Math.imul(b, W) | 0;
                        var ve = (h + (n = n + Math.imul(d, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, X) | 0) + Math.imul(f, Y) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, X) | 0) + (i >>> 13) | 0) + (ve >>> 26) | 0, ve &= 67108863, n = Math.imul(S, F), i = (i = Math.imul(S, H)) + Math.imul(A, F) | 0, s = Math.imul(A, H), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, $) | 0) + Math.imul(_, V) | 0, s = s + Math.imul(_, $) | 0, n = n + Math.imul(m, G) | 0, i = (i = i + Math.imul(m, W) | 0) + Math.imul(y, G) | 0, s = s + Math.imul(y, W) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, X) | 0) + Math.imul(b, Y) | 0, s = s + Math.imul(b, X) | 0;
                        var we = (h + (n = n + Math.imul(d, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, ee) | 0) + Math.imul(f, Q) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, ee) | 0) + (i >>> 13) | 0) + (we >>> 26) | 0, we &= 67108863, n = Math.imul(I, F), i = (i = Math.imul(I, H)) + Math.imul(T, F) | 0, s = Math.imul(T, H), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, $) | 0) + Math.imul(A, V) | 0, s = s + Math.imul(A, $) | 0, n = n + Math.imul(w, G) | 0, i = (i = i + Math.imul(w, W) | 0) + Math.imul(_, G) | 0, s = s + Math.imul(_, W) | 0, n = n + Math.imul(m, Y) | 0, i = (i = i + Math.imul(m, X) | 0) + Math.imul(y, Y) | 0, s = s + Math.imul(y, X) | 0, n = n + Math.imul(p, Q) | 0, i = (i = i + Math.imul(p, ee) | 0) + Math.imul(b, Q) | 0, s = s + Math.imul(b, ee) | 0;
                        var _e = (h + (n = n + Math.imul(d, re) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, ne) | 0) + Math.imul(f, re) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, ne) | 0) + (i >>> 13) | 0) + (_e >>> 26) | 0, _e &= 67108863, n = Math.imul(C, F), i = (i = Math.imul(C, H)) + Math.imul(R, F) | 0, s = Math.imul(R, H), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, $) | 0) + Math.imul(T, V) | 0, s = s + Math.imul(T, $) | 0, n = n + Math.imul(S, G) | 0, i = (i = i + Math.imul(S, W) | 0) + Math.imul(A, G) | 0, s = s + Math.imul(A, W) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, X) | 0) + Math.imul(_, Y) | 0, s = s + Math.imul(_, X) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, ee) | 0) + Math.imul(y, Q) | 0, s = s + Math.imul(y, ee) | 0, n = n + Math.imul(p, re) | 0, i = (i = i + Math.imul(p, ne) | 0) + Math.imul(b, re) | 0, s = s + Math.imul(b, ne) | 0;
                        var Ee = (h + (n = n + Math.imul(d, se) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, oe) | 0) + Math.imul(f, se) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, oe) | 0) + (i >>> 13) | 0) + (Ee >>> 26) | 0, Ee &= 67108863, n = Math.imul(P, F), i = (i = Math.imul(P, H)) + Math.imul(O, F) | 0, s = Math.imul(O, H), n = n + Math.imul(C, V) | 0, i = (i = i + Math.imul(C, $) | 0) + Math.imul(R, V) | 0, s = s + Math.imul(R, $) | 0, n = n + Math.imul(I, G) | 0, i = (i = i + Math.imul(I, W) | 0) + Math.imul(T, G) | 0, s = s + Math.imul(T, W) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, X) | 0) + Math.imul(A, Y) | 0, s = s + Math.imul(A, X) | 0, n = n + Math.imul(w, Q) | 0, i = (i = i + Math.imul(w, ee) | 0) + Math.imul(_, Q) | 0, s = s + Math.imul(_, ee) | 0, n = n + Math.imul(m, re) | 0, i = (i = i + Math.imul(m, ne) | 0) + Math.imul(y, re) | 0, s = s + Math.imul(y, ne) | 0, n = n + Math.imul(p, se) | 0, i = (i = i + Math.imul(p, oe) | 0) + Math.imul(b, se) | 0, s = s + Math.imul(b, oe) | 0;
                        var Se = (h + (n = n + Math.imul(d, ce) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, he) | 0) + Math.imul(f, ce) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, he) | 0) + (i >>> 13) | 0) + (Se >>> 26) | 0, Se &= 67108863, n = Math.imul(U, F), i = (i = Math.imul(U, H)) + Math.imul(B, F) | 0, s = Math.imul(B, H), n = n + Math.imul(P, V) | 0, i = (i = i + Math.imul(P, $) | 0) + Math.imul(O, V) | 0, s = s + Math.imul(O, $) | 0, n = n + Math.imul(C, G) | 0, i = (i = i + Math.imul(C, W) | 0) + Math.imul(R, G) | 0, s = s + Math.imul(R, W) | 0, n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, X) | 0) + Math.imul(T, Y) | 0, s = s + Math.imul(T, X) | 0, n = n + Math.imul(S, Q) | 0, i = (i = i + Math.imul(S, ee) | 0) + Math.imul(A, Q) | 0, s = s + Math.imul(A, ee) | 0, n = n + Math.imul(w, re) | 0, i = (i = i + Math.imul(w, ne) | 0) + Math.imul(_, re) | 0, s = s + Math.imul(_, ne) | 0, n = n + Math.imul(m, se) | 0, i = (i = i + Math.imul(m, oe) | 0) + Math.imul(y, se) | 0, s = s + Math.imul(y, oe) | 0, n = n + Math.imul(p, ce) | 0, i = (i = i + Math.imul(p, he) | 0) + Math.imul(b, ce) | 0, s = s + Math.imul(b, he) | 0;
                        var Ae = (h + (n = n + Math.imul(d, de) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, fe) | 0) + Math.imul(f, de) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, fe) | 0) + (i >>> 13) | 0) + (Ae >>> 26) | 0, Ae &= 67108863, n = Math.imul(j, F), i = (i = Math.imul(j, H)) + Math.imul(D, F) | 0, s = Math.imul(D, H), n = n + Math.imul(U, V) | 0, i = (i = i + Math.imul(U, $) | 0) + Math.imul(B, V) | 0, s = s + Math.imul(B, $) | 0, n = n + Math.imul(P, G) | 0, i = (i = i + Math.imul(P, W) | 0) + Math.imul(O, G) | 0, s = s + Math.imul(O, W) | 0, n = n + Math.imul(C, Y) | 0, i = (i = i + Math.imul(C, X) | 0) + Math.imul(R, Y) | 0, s = s + Math.imul(R, X) | 0, n = n + Math.imul(I, Q) | 0, i = (i = i + Math.imul(I, ee) | 0) + Math.imul(T, Q) | 0, s = s + Math.imul(T, ee) | 0, n = n + Math.imul(S, re) | 0, i = (i = i + Math.imul(S, ne) | 0) + Math.imul(A, re) | 0, s = s + Math.imul(A, ne) | 0, n = n + Math.imul(w, se) | 0, i = (i = i + Math.imul(w, oe) | 0) + Math.imul(_, se) | 0, s = s + Math.imul(_, oe) | 0, n = n + Math.imul(m, ce) | 0, i = (i = i + Math.imul(m, he) | 0) + Math.imul(y, ce) | 0, s = s + Math.imul(y, he) | 0, n = n + Math.imul(p, de) | 0, i = (i = i + Math.imul(p, fe) | 0) + Math.imul(b, de) | 0, s = s + Math.imul(b, fe) | 0;
                        var Me = (h + (n = n + Math.imul(d, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, be) | 0) + Math.imul(f, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(f, be) | 0) + (i >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, n = Math.imul(j, V), i = (i = Math.imul(j, $)) + Math.imul(D, V) | 0, s = Math.imul(D, $), n = n + Math.imul(U, G) | 0, i = (i = i + Math.imul(U, W) | 0) + Math.imul(B, G) | 0, s = s + Math.imul(B, W) | 0, n = n + Math.imul(P, Y) | 0, i = (i = i + Math.imul(P, X) | 0) + Math.imul(O, Y) | 0, s = s + Math.imul(O, X) | 0, n = n + Math.imul(C, Q) | 0, i = (i = i + Math.imul(C, ee) | 0) + Math.imul(R, Q) | 0, s = s + Math.imul(R, ee) | 0, n = n + Math.imul(I, re) | 0, i = (i = i + Math.imul(I, ne) | 0) + Math.imul(T, re) | 0, s = s + Math.imul(T, ne) | 0, n = n + Math.imul(S, se) | 0, i = (i = i + Math.imul(S, oe) | 0) + Math.imul(A, se) | 0, s = s + Math.imul(A, oe) | 0, n = n + Math.imul(w, ce) | 0, i = (i = i + Math.imul(w, he) | 0) + Math.imul(_, ce) | 0, s = s + Math.imul(_, he) | 0, n = n + Math.imul(m, de) | 0, i = (i = i + Math.imul(m, fe) | 0) + Math.imul(y, de) | 0, s = s + Math.imul(y, fe) | 0;
                        var Ie = (h + (n = n + Math.imul(p, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, be) | 0) + Math.imul(b, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(b, be) | 0) + (i >>> 13) | 0) + (Ie >>> 26) | 0, Ie &= 67108863, n = Math.imul(j, G), i = (i = Math.imul(j, W)) + Math.imul(D, G) | 0, s = Math.imul(D, W), n = n + Math.imul(U, Y) | 0, i = (i = i + Math.imul(U, X) | 0) + Math.imul(B, Y) | 0, s = s + Math.imul(B, X) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, ee) | 0) + Math.imul(O, Q) | 0, s = s + Math.imul(O, ee) | 0, n = n + Math.imul(C, re) | 0, i = (i = i + Math.imul(C, ne) | 0) + Math.imul(R, re) | 0, s = s + Math.imul(R, ne) | 0, n = n + Math.imul(I, se) | 0, i = (i = i + Math.imul(I, oe) | 0) + Math.imul(T, se) | 0, s = s + Math.imul(T, oe) | 0, n = n + Math.imul(S, ce) | 0, i = (i = i + Math.imul(S, he) | 0) + Math.imul(A, ce) | 0, s = s + Math.imul(A, he) | 0, n = n + Math.imul(w, de) | 0, i = (i = i + Math.imul(w, fe) | 0) + Math.imul(_, de) | 0, s = s + Math.imul(_, fe) | 0;
                        var Te = (h + (n = n + Math.imul(m, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, be) | 0) + Math.imul(y, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(y, be) | 0) + (i >>> 13) | 0) + (Te >>> 26) | 0, Te &= 67108863, n = Math.imul(j, Y), i = (i = Math.imul(j, X)) + Math.imul(D, Y) | 0, s = Math.imul(D, X), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, ee) | 0) + Math.imul(B, Q) | 0, s = s + Math.imul(B, ee) | 0, n = n + Math.imul(P, re) | 0, i = (i = i + Math.imul(P, ne) | 0) + Math.imul(O, re) | 0, s = s + Math.imul(O, ne) | 0, n = n + Math.imul(C, se) | 0, i = (i = i + Math.imul(C, oe) | 0) + Math.imul(R, se) | 0, s = s + Math.imul(R, oe) | 0, n = n + Math.imul(I, ce) | 0, i = (i = i + Math.imul(I, he) | 0) + Math.imul(T, ce) | 0, s = s + Math.imul(T, he) | 0, n = n + Math.imul(S, de) | 0, i = (i = i + Math.imul(S, fe) | 0) + Math.imul(A, de) | 0, s = s + Math.imul(A, fe) | 0;
                        var xe = (h + (n = n + Math.imul(w, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, be) | 0) + Math.imul(_, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(_, be) | 0) + (i >>> 13) | 0) + (xe >>> 26) | 0, xe &= 67108863, n = Math.imul(j, Q), i = (i = Math.imul(j, ee)) + Math.imul(D, Q) | 0, s = Math.imul(D, ee), n = n + Math.imul(U, re) | 0, i = (i = i + Math.imul(U, ne) | 0) + Math.imul(B, re) | 0, s = s + Math.imul(B, ne) | 0, n = n + Math.imul(P, se) | 0, i = (i = i + Math.imul(P, oe) | 0) + Math.imul(O, se) | 0, s = s + Math.imul(O, oe) | 0, n = n + Math.imul(C, ce) | 0, i = (i = i + Math.imul(C, he) | 0) + Math.imul(R, ce) | 0, s = s + Math.imul(R, he) | 0, n = n + Math.imul(I, de) | 0, i = (i = i + Math.imul(I, fe) | 0) + Math.imul(T, de) | 0, s = s + Math.imul(T, fe) | 0;
                        var Ce = (h + (n = n + Math.imul(S, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, be) | 0) + Math.imul(A, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(A, be) | 0) + (i >>> 13) | 0) + (Ce >>> 26) | 0, Ce &= 67108863, n = Math.imul(j, re), i = (i = Math.imul(j, ne)) + Math.imul(D, re) | 0, s = Math.imul(D, ne), n = n + Math.imul(U, se) | 0, i = (i = i + Math.imul(U, oe) | 0) + Math.imul(B, se) | 0, s = s + Math.imul(B, oe) | 0, n = n + Math.imul(P, ce) | 0, i = (i = i + Math.imul(P, he) | 0) + Math.imul(O, ce) | 0, s = s + Math.imul(O, he) | 0, n = n + Math.imul(C, de) | 0, i = (i = i + Math.imul(C, fe) | 0) + Math.imul(R, de) | 0, s = s + Math.imul(R, fe) | 0;
                        var Re = (h + (n = n + Math.imul(I, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, be) | 0) + Math.imul(T, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(T, be) | 0) + (i >>> 13) | 0) + (Re >>> 26) | 0, Re &= 67108863, n = Math.imul(j, se), i = (i = Math.imul(j, oe)) + Math.imul(D, se) | 0, s = Math.imul(D, oe), n = n + Math.imul(U, ce) | 0, i = (i = i + Math.imul(U, he) | 0) + Math.imul(B, ce) | 0, s = s + Math.imul(B, he) | 0, n = n + Math.imul(P, de) | 0, i = (i = i + Math.imul(P, fe) | 0) + Math.imul(O, de) | 0, s = s + Math.imul(O, fe) | 0;
                        var ke = (h + (n = n + Math.imul(C, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(C, be) | 0) + Math.imul(R, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(R, be) | 0) + (i >>> 13) | 0) + (ke >>> 26) | 0, ke &= 67108863, n = Math.imul(j, ce), i = (i = Math.imul(j, he)) + Math.imul(D, ce) | 0, s = Math.imul(D, he), n = n + Math.imul(U, de) | 0, i = (i = i + Math.imul(U, fe) | 0) + Math.imul(B, de) | 0, s = s + Math.imul(B, fe) | 0;
                        var Pe = (h + (n = n + Math.imul(P, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, be) | 0) + Math.imul(O, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(O, be) | 0) + (i >>> 13) | 0) + (Pe >>> 26) | 0, Pe &= 67108863, n = Math.imul(j, de), i = (i = Math.imul(j, fe)) + Math.imul(D, de) | 0, s = Math.imul(D, fe);
                        var Oe = (h + (n = n + Math.imul(U, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, be) | 0) + Math.imul(B, pe) | 0)) << 13) | 0;
                        h = ((s = s + Math.imul(B, be) | 0) + (i >>> 13) | 0) + (Oe >>> 26) | 0, Oe &= 67108863;
                        var Ne = (h + (n = Math.imul(j, pe)) | 0) + ((8191 & (i = (i = Math.imul(j, be)) + Math.imul(D, pe) | 0)) << 13) | 0;
                        return h = ((s = Math.imul(D, be)) + (i >>> 13) | 0) + (Ne >>> 26) | 0, Ne &= 67108863, c[0] = ge, c[1] = me, c[2] = ye, c[3] = ve, c[4] = we, c[5] = _e, c[6] = Ee, c[7] = Se, c[8] = Ae, c[9] = Me, c[10] = Ie, c[11] = Te, c[12] = xe, c[13] = Ce, c[14] = Re, c[15] = ke, c[16] = Pe, c[17] = Oe, c[18] = Ne, 0 !== h && (c[19] = h, r.length++), r;
                    };
                    function m(e, t, r) {
                        r.negative = t.negative ^ e.negative, r.length = e.length + t.length;
                        for(var n = 0, i = 0, s = 0; s < r.length - 1; s++){
                            var o = i;
                            i = 0;
                            for(var a = 67108863 & n, c = Math.min(s, t.length - 1), h = Math.max(0, s - e.length + 1); h <= c; h++){
                                var u = s - h, d = (0 | e.words[u]) * (0 | t.words[h]), f = 67108863 & d;
                                a = 67108863 & (f = f + a | 0), i += (o = (o = o + (d / 67108864 | 0) | 0) + (f >>> 26) | 0) >>> 26, o &= 67108863;
                            }
                            r.words[s] = a, n = o, o = i;
                        }
                        return 0 !== n ? r.words[s] = n : r.length--, r._strip();
                    }
                    function y(e, t, r) {
                        return m(e, t, r);
                    }
                    function v(e, t) {
                        this.x = e, this.y = t;
                    }
                    Math.imul || (g = b), s.prototype.mulTo = function(e, t) {
                        var r = this.length + e.length;
                        return 10 === this.length && 10 === e.length ? g(this, e, t) : r < 63 ? b(this, e, t) : r < 1024 ? m(this, e, t) : y(this, e, t);
                    }, v.prototype.makeRBT = function(e) {
                        for(var t = new Array(e), r = s.prototype._countBits(e) - 1, n = 0; n < e; n++)t[n] = this.revBin(n, r, e);
                        return t;
                    }, v.prototype.revBin = function(e, t, r) {
                        if (0 === e || e === r - 1) return e;
                        for(var n = 0, i = 0; i < t; i++)n |= (1 & e) << t - i - 1, e >>= 1;
                        return n;
                    }, v.prototype.permute = function(e, t, r, n, i, s) {
                        for(var o = 0; o < s; o++)n[o] = t[e[o]], i[o] = r[e[o]];
                    }, v.prototype.transform = function(e, t, r, n, i, s) {
                        this.permute(s, e, t, r, n, i);
                        for(var o = 1; o < i; o <<= 1)for(var a = o << 1, c = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), u = 0; u < i; u += a)for(var d = c, f = h, l = 0; l < o; l++){
                            var p = r[u + l], b = n[u + l], g = r[u + l + o], m = n[u + l + o], y = d * g - f * m;
                            m = d * m + f * g, g = y, r[u + l] = p + g, n[u + l] = b + m, r[u + l + o] = p - g, n[u + l + o] = b - m, l !== a && (y = c * d - h * f, f = c * f + h * d, d = y);
                        }
                    }, v.prototype.guessLen13b = function(e, t) {
                        var r = 1 | Math.max(t, e), n = 1 & r, i = 0;
                        for(r = r / 2 | 0; r; r >>>= 1)i++;
                        return 1 << i + 1 + n;
                    }, v.prototype.conjugate = function(e, t, r) {
                        if (!(r <= 1)) for(var n = 0; n < r / 2; n++){
                            var i = e[n];
                            e[n] = e[r - n - 1], e[r - n - 1] = i, i = t[n], t[n] = -t[r - n - 1], t[r - n - 1] = -i;
                        }
                    }, v.prototype.normalize13b = function(e, t) {
                        for(var r = 0, n = 0; n < t / 2; n++){
                            var i = 8192 * Math.round(e[2 * n + 1] / t) + Math.round(e[2 * n] / t) + r;
                            e[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
                        }
                        return e;
                    }, v.prototype.convert13b = function(e, t, r, i) {
                        for(var s = 0, o = 0; o < t; o++)s += 0 | e[o], r[2 * o] = 8191 & s, s >>>= 13, r[2 * o + 1] = 8191 & s, s >>>= 13;
                        for(o = 2 * t; o < i; ++o)r[o] = 0;
                        n(0 === s), n(!(-8192 & s));
                    }, v.prototype.stub = function(e) {
                        for(var t = new Array(e), r = 0; r < e; r++)t[r] = 0;
                        return t;
                    }, v.prototype.mulp = function(e, t, r) {
                        var n = 2 * this.guessLen13b(e.length, t.length), i = this.makeRBT(n), s = this.stub(n), o = new Array(n), a = new Array(n), c = new Array(n), h = new Array(n), u = new Array(n), d = new Array(n), f = r.words;
                        f.length = n, this.convert13b(e.words, e.length, o, n), this.convert13b(t.words, t.length, h, n), this.transform(o, s, a, c, n, i), this.transform(h, s, u, d, n, i);
                        for(var l = 0; l < n; l++){
                            var p = a[l] * u[l] - c[l] * d[l];
                            c[l] = a[l] * d[l] + c[l] * u[l], a[l] = p;
                        }
                        return this.conjugate(a, c, n), this.transform(a, c, f, s, n, i), this.conjugate(f, s, n), this.normalize13b(f, n), r.negative = e.negative ^ t.negative, r.length = e.length + t.length, r._strip();
                    }, s.prototype.mul = function(e) {
                        var t = new s(null);
                        return t.words = new Array(this.length + e.length), this.mulTo(e, t);
                    }, s.prototype.mulf = function(e) {
                        var t = new s(null);
                        return t.words = new Array(this.length + e.length), y(this, e, t);
                    }, s.prototype.imul = function(e) {
                        return this.clone().mulTo(e, this);
                    }, s.prototype.imuln = function(e) {
                        var t = e < 0;
                        t && (e = -e), n("number" == typeof e), n(e < 67108864);
                        for(var r = 0, i = 0; i < this.length; i++){
                            var s = (0 | this.words[i]) * e, o = (67108863 & s) + (67108863 & r);
                            r >>= 26, r += s / 67108864 | 0, r += o >>> 26, this.words[i] = 67108863 & o;
                        }
                        return 0 !== r && (this.words[i] = r, this.length++), t ? this.ineg() : this;
                    }, s.prototype.muln = function(e) {
                        return this.clone().imuln(e);
                    }, s.prototype.sqr = function() {
                        return this.mul(this);
                    }, s.prototype.isqr = function() {
                        return this.imul(this.clone());
                    }, s.prototype.pow = function(e) {
                        var t = function(e) {
                            for(var t = new Array(e.bitLength()), r = 0; r < t.length; r++){
                                var n = r / 26 | 0, i = r % 26;
                                t[r] = e.words[n] >>> i & 1;
                            }
                            return t;
                        }(e);
                        if (0 === t.length) return new s(1);
                        for(var r = this, n = 0; n < t.length && 0 === t[n]; n++, r = r.sqr());
                        if (++n < t.length) for(var i = r.sqr(); n < t.length; n++, i = i.sqr())0 !== t[n] && (r = r.mul(i));
                        return r;
                    }, s.prototype.iushln = function(e) {
                        n("number" == typeof e && e >= 0);
                        var t, r = e % 26, i = (e - r) / 26, s = 67108863 >>> 26 - r << 26 - r;
                        if (0 !== r) {
                            var o = 0;
                            for(t = 0; t < this.length; t++){
                                var a = this.words[t] & s, c = (0 | this.words[t]) - a << r;
                                this.words[t] = c | o, o = a >>> 26 - r;
                            }
                            o && (this.words[t] = o, this.length++);
                        }
                        if (0 !== i) {
                            for(t = this.length - 1; t >= 0; t--)this.words[t + i] = this.words[t];
                            for(t = 0; t < i; t++)this.words[t] = 0;
                            this.length += i;
                        }
                        return this._strip();
                    }, s.prototype.ishln = function(e) {
                        return n(0 === this.negative), this.iushln(e);
                    }, s.prototype.iushrn = function(e, t, r) {
                        var i;
                        n("number" == typeof e && e >= 0), i = t ? (t - t % 26) / 26 : 0;
                        var s = e % 26, o = Math.min((e - s) / 26, this.length), a = 67108863 ^ 67108863 >>> s << s, c = r;
                        if (i -= o, i = Math.max(0, i), c) {
                            for(var h = 0; h < o; h++)c.words[h] = this.words[h];
                            c.length = o;
                        }
                        if (0 === o) ;
                        else if (this.length > o) for(this.length -= o, h = 0; h < this.length; h++)this.words[h] = this.words[h + o];
                        else this.words[0] = 0, this.length = 1;
                        var u = 0;
                        for(h = this.length - 1; h >= 0 && (0 !== u || h >= i); h--){
                            var d = 0 | this.words[h];
                            this.words[h] = u << 26 - s | d >>> s, u = d & a;
                        }
                        return c && 0 !== u && (c.words[c.length++] = u), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip();
                    }, s.prototype.ishrn = function(e, t, r) {
                        return n(0 === this.negative), this.iushrn(e, t, r);
                    }, s.prototype.shln = function(e) {
                        return this.clone().ishln(e);
                    }, s.prototype.ushln = function(e) {
                        return this.clone().iushln(e);
                    }, s.prototype.shrn = function(e) {
                        return this.clone().ishrn(e);
                    }, s.prototype.ushrn = function(e) {
                        return this.clone().iushrn(e);
                    }, s.prototype.testn = function(e) {
                        n("number" == typeof e && e >= 0);
                        var t = e % 26, r = (e - t) / 26, i = 1 << t;
                        return !(this.length <= r || !(this.words[r] & i));
                    }, s.prototype.imaskn = function(e) {
                        n("number" == typeof e && e >= 0);
                        var t = e % 26, r = (e - t) / 26;
                        if (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                        if (0 !== t && r++, this.length = Math.min(r, this.length), 0 !== t) {
                            var i = 67108863 ^ 67108863 >>> t << t;
                            this.words[this.length - 1] &= i;
                        }
                        return this._strip();
                    }, s.prototype.maskn = function(e) {
                        return this.clone().imaskn(e);
                    }, s.prototype.iaddn = function(e) {
                        return n("number" == typeof e), n(e < 67108864), e < 0 ? this.isubn(-e) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= e ? (this.words[0] = e - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(e), this.negative = 1, this) : this._iaddn(e);
                    }, s.prototype._iaddn = function(e) {
                        this.words[0] += e;
                        for(var t = 0; t < this.length && this.words[t] >= 67108864; t++)this.words[t] -= 67108864, t === this.length - 1 ? this.words[t + 1] = 1 : this.words[t + 1]++;
                        return this.length = Math.max(this.length, t + 1), this;
                    }, s.prototype.isubn = function(e) {
                        if (n("number" == typeof e), n(e < 67108864), e < 0) return this.iaddn(-e);
                        if (0 !== this.negative) return this.negative = 0, this.iaddn(e), this.negative = 1, this;
                        if (this.words[0] -= e, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                        else for(var t = 0; t < this.length && this.words[t] < 0; t++)this.words[t] += 67108864, this.words[t + 1] -= 1;
                        return this._strip();
                    }, s.prototype.addn = function(e) {
                        return this.clone().iaddn(e);
                    }, s.prototype.subn = function(e) {
                        return this.clone().isubn(e);
                    }, s.prototype.iabs = function() {
                        return this.negative = 0, this;
                    }, s.prototype.abs = function() {
                        return this.clone().iabs();
                    }, s.prototype._ishlnsubmul = function(e, t, r) {
                        var i, s, o = e.length + r;
                        this._expand(o);
                        var a = 0;
                        for(i = 0; i < e.length; i++){
                            s = (0 | this.words[i + r]) + a;
                            var c = (0 | e.words[i]) * t;
                            a = ((s -= 67108863 & c) >> 26) - (c / 67108864 | 0), this.words[i + r] = 67108863 & s;
                        }
                        for(; i < this.length - r; i++)a = (s = (0 | this.words[i + r]) + a) >> 26, this.words[i + r] = 67108863 & s;
                        if (0 === a) return this._strip();
                        for(n(-1 === a), a = 0, i = 0; i < this.length; i++)a = (s = -(0 | this.words[i]) + a) >> 26, this.words[i] = 67108863 & s;
                        return this.negative = 1, this._strip();
                    }, s.prototype._wordDiv = function(e, t) {
                        var r = (this.length, e.length), n = this.clone(), i = e, o = 0 | i.words[i.length - 1];
                        0 != (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                        var a, c = n.length - i.length;
                        if ("mod" !== t) {
                            (a = new s(null)).length = c + 1, a.words = new Array(a.length);
                            for(var h = 0; h < a.length; h++)a.words[h] = 0;
                        }
                        var u = n.clone()._ishlnsubmul(i, 1, c);
                        0 === u.negative && (n = u, a && (a.words[c] = 1));
                        for(var d = c - 1; d >= 0; d--){
                            var f = 67108864 * (0 | n.words[i.length + d]) + (0 | n.words[i.length + d - 1]);
                            for(f = Math.min(f / o | 0, 67108863), n._ishlnsubmul(i, f, d); 0 !== n.negative;)f--, n.negative = 0, n._ishlnsubmul(i, 1, d), n.isZero() || (n.negative ^= 1);
                            a && (a.words[d] = f);
                        }
                        return a && a._strip(), n._strip(), "div" !== t && 0 !== r && n.iushrn(r), {
                            div: a || null,
                            mod: n
                        };
                    }, s.prototype.divmod = function(e, t, r) {
                        return n(!e.isZero()), this.isZero() ? {
                            div: new s(0),
                            mod: new s(0)
                        } : 0 !== this.negative && 0 === e.negative ? (a = this.neg().divmod(e, t), "mod" !== t && (i = a.div.neg()), "div" !== t && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(e)), {
                            div: i,
                            mod: o
                        }) : 0 === this.negative && 0 !== e.negative ? (a = this.divmod(e.neg(), t), "mod" !== t && (i = a.div.neg()), {
                            div: i,
                            mod: a.mod
                        }) : this.negative & e.negative ? (a = this.neg().divmod(e.neg(), t), "div" !== t && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(e)), {
                            div: a.div,
                            mod: o
                        }) : e.length > this.length || this.cmp(e) < 0 ? {
                            div: new s(0),
                            mod: this
                        } : 1 === e.length ? "div" === t ? {
                            div: this.divn(e.words[0]),
                            mod: null
                        } : "mod" === t ? {
                            div: null,
                            mod: new s(this.modrn(e.words[0]))
                        } : {
                            div: this.divn(e.words[0]),
                            mod: new s(this.modrn(e.words[0]))
                        } : this._wordDiv(e, t);
                        "TURBOPACK unreachable";
                        var i, o, a;
                    }, s.prototype.div = function(e) {
                        return this.divmod(e, "div", !1).div;
                    }, s.prototype.mod = function(e) {
                        return this.divmod(e, "mod", !1).mod;
                    }, s.prototype.umod = function(e) {
                        return this.divmod(e, "mod", !0).mod;
                    }, s.prototype.divRound = function(e) {
                        var t = this.divmod(e);
                        if (t.mod.isZero()) return t.div;
                        var r = 0 !== t.div.negative ? t.mod.isub(e) : t.mod, n = e.ushrn(1), i = e.andln(1), s = r.cmp(n);
                        return s < 0 || 1 === i && 0 === s ? t.div : 0 !== t.div.negative ? t.div.isubn(1) : t.div.iaddn(1);
                    }, s.prototype.modrn = function(e) {
                        var t = e < 0;
                        t && (e = -e), n(e <= 67108863);
                        for(var r = (1 << 26) % e, i = 0, s = this.length - 1; s >= 0; s--)i = (r * i + (0 | this.words[s])) % e;
                        return t ? -i : i;
                    }, s.prototype.modn = function(e) {
                        return this.modrn(e);
                    }, s.prototype.idivn = function(e) {
                        var t = e < 0;
                        t && (e = -e), n(e <= 67108863);
                        for(var r = 0, i = this.length - 1; i >= 0; i--){
                            var s = (0 | this.words[i]) + 67108864 * r;
                            this.words[i] = s / e | 0, r = s % e;
                        }
                        return this._strip(), t ? this.ineg() : this;
                    }, s.prototype.divn = function(e) {
                        return this.clone().idivn(e);
                    }, s.prototype.egcd = function(e) {
                        n(0 === e.negative), n(!e.isZero());
                        var t = this, r = e.clone();
                        t = 0 !== t.negative ? t.umod(e) : t.clone();
                        for(var i = new s(1), o = new s(0), a = new s(0), c = new s(1), h = 0; t.isEven() && r.isEven();)t.iushrn(1), r.iushrn(1), ++h;
                        for(var u = r.clone(), d = t.clone(); !t.isZero();){
                            for(var f = 0, l = 1; !(t.words[0] & l) && f < 26; ++f, l <<= 1);
                            if (f > 0) for(t.iushrn(f); f-- > 0;)(i.isOdd() || o.isOdd()) && (i.iadd(u), o.isub(d)), i.iushrn(1), o.iushrn(1);
                            for(var p = 0, b = 1; !(r.words[0] & b) && p < 26; ++p, b <<= 1);
                            if (p > 0) for(r.iushrn(p); p-- > 0;)(a.isOdd() || c.isOdd()) && (a.iadd(u), c.isub(d)), a.iushrn(1), c.iushrn(1);
                            t.cmp(r) >= 0 ? (t.isub(r), i.isub(a), o.isub(c)) : (r.isub(t), a.isub(i), c.isub(o));
                        }
                        return {
                            a,
                            b: c,
                            gcd: r.iushln(h)
                        };
                    }, s.prototype._invmp = function(e) {
                        n(0 === e.negative), n(!e.isZero());
                        var t = this, r = e.clone();
                        t = 0 !== t.negative ? t.umod(e) : t.clone();
                        for(var i, o = new s(1), a = new s(0), c = r.clone(); t.cmpn(1) > 0 && r.cmpn(1) > 0;){
                            for(var h = 0, u = 1; !(t.words[0] & u) && h < 26; ++h, u <<= 1);
                            if (h > 0) for(t.iushrn(h); h-- > 0;)o.isOdd() && o.iadd(c), o.iushrn(1);
                            for(var d = 0, f = 1; !(r.words[0] & f) && d < 26; ++d, f <<= 1);
                            if (d > 0) for(r.iushrn(d); d-- > 0;)a.isOdd() && a.iadd(c), a.iushrn(1);
                            t.cmp(r) >= 0 ? (t.isub(r), o.isub(a)) : (r.isub(t), a.isub(o));
                        }
                        return (i = 0 === t.cmpn(1) ? o : a).cmpn(0) < 0 && i.iadd(e), i;
                    }, s.prototype.gcd = function(e) {
                        if (this.isZero()) return e.abs();
                        if (e.isZero()) return this.abs();
                        var t = this.clone(), r = e.clone();
                        t.negative = 0, r.negative = 0;
                        for(var n = 0; t.isEven() && r.isEven(); n++)t.iushrn(1), r.iushrn(1);
                        for(;;){
                            for(; t.isEven();)t.iushrn(1);
                            for(; r.isEven();)r.iushrn(1);
                            var i = t.cmp(r);
                            if (i < 0) {
                                var s = t;
                                t = r, r = s;
                            } else if (0 === i || 0 === r.cmpn(1)) break;
                            t.isub(r);
                        }
                        return r.iushln(n);
                    }, s.prototype.invm = function(e) {
                        return this.egcd(e).a.umod(e);
                    }, s.prototype.isEven = function() {
                        return !(1 & this.words[0]);
                    }, s.prototype.isOdd = function() {
                        return !(1 & ~this.words[0]);
                    }, s.prototype.andln = function(e) {
                        return this.words[0] & e;
                    }, s.prototype.bincn = function(e) {
                        n("number" == typeof e);
                        var t = e % 26, r = (e - t) / 26, i = 1 << t;
                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= i, this;
                        for(var s = i, o = r; 0 !== s && o < this.length; o++){
                            var a = 0 | this.words[o];
                            s = (a += s) >>> 26, a &= 67108863, this.words[o] = a;
                        }
                        return 0 !== s && (this.words[o] = s, this.length++), this;
                    }, s.prototype.isZero = function() {
                        return 1 === this.length && 0 === this.words[0];
                    }, s.prototype.cmpn = function(e) {
                        var t, r = e < 0;
                        if (0 !== this.negative && !r) return -1;
                        if (0 === this.negative && r) return 1;
                        if (this._strip(), this.length > 1) t = 1;
                        else {
                            r && (e = -e), n(e <= 67108863, "Number is too big");
                            var i = 0 | this.words[0];
                            t = i === e ? 0 : i < e ? -1 : 1;
                        }
                        return 0 !== this.negative ? 0 | -t : t;
                    }, s.prototype.cmp = function(e) {
                        if (0 !== this.negative && 0 === e.negative) return -1;
                        if (0 === this.negative && 0 !== e.negative) return 1;
                        var t = this.ucmp(e);
                        return 0 !== this.negative ? 0 | -t : t;
                    }, s.prototype.ucmp = function(e) {
                        if (this.length > e.length) return 1;
                        if (this.length < e.length) return -1;
                        for(var t = 0, r = this.length - 1; r >= 0; r--){
                            var n = 0 | this.words[r], i = 0 | e.words[r];
                            if (n !== i) {
                                n < i ? t = -1 : n > i && (t = 1);
                                break;
                            }
                        }
                        return t;
                    }, s.prototype.gtn = function(e) {
                        return 1 === this.cmpn(e);
                    }, s.prototype.gt = function(e) {
                        return 1 === this.cmp(e);
                    }, s.prototype.gten = function(e) {
                        return this.cmpn(e) >= 0;
                    }, s.prototype.gte = function(e) {
                        return this.cmp(e) >= 0;
                    }, s.prototype.ltn = function(e) {
                        return -1 === this.cmpn(e);
                    }, s.prototype.lt = function(e) {
                        return -1 === this.cmp(e);
                    }, s.prototype.lten = function(e) {
                        return this.cmpn(e) <= 0;
                    }, s.prototype.lte = function(e) {
                        return this.cmp(e) <= 0;
                    }, s.prototype.eqn = function(e) {
                        return 0 === this.cmpn(e);
                    }, s.prototype.eq = function(e) {
                        return 0 === this.cmp(e);
                    }, s.red = function(e) {
                        return new I(e);
                    }, s.prototype.toRed = function(e) {
                        return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), e.convertTo(this)._forceRed(e);
                    }, s.prototype.fromRed = function() {
                        return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                    }, s.prototype._forceRed = function(e) {
                        return this.red = e, this;
                    }, s.prototype.forceRed = function(e) {
                        return n(!this.red, "Already a number in reduction context"), this._forceRed(e);
                    }, s.prototype.redAdd = function(e) {
                        return n(this.red, "redAdd works only with red numbers"), this.red.add(this, e);
                    }, s.prototype.redIAdd = function(e) {
                        return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, e);
                    }, s.prototype.redSub = function(e) {
                        return n(this.red, "redSub works only with red numbers"), this.red.sub(this, e);
                    }, s.prototype.redISub = function(e) {
                        return n(this.red, "redISub works only with red numbers"), this.red.isub(this, e);
                    }, s.prototype.redShl = function(e) {
                        return n(this.red, "redShl works only with red numbers"), this.red.shl(this, e);
                    }, s.prototype.redMul = function(e) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.mul(this, e);
                    }, s.prototype.redIMul = function(e) {
                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.imul(this, e);
                    }, s.prototype.redSqr = function() {
                        return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                    }, s.prototype.redISqr = function() {
                        return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                    }, s.prototype.redSqrt = function() {
                        return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                    }, s.prototype.redInvm = function() {
                        return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                    }, s.prototype.redNeg = function() {
                        return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                    }, s.prototype.redPow = function(e) {
                        return n(this.red && !e.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, e);
                    };
                    var w = {
                        k256: null,
                        p224: null,
                        p192: null,
                        p25519: null
                    };
                    function _(e, t) {
                        this.name = e, this.p = new s(t, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
                    }
                    function E() {
                        _.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                    }
                    function S() {
                        _.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                    }
                    function A() {
                        _.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                    }
                    function M() {
                        _.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                    }
                    function I(e) {
                        if ("string" == typeof e) {
                            var t = s._prime(e);
                            this.m = t.p, this.prime = t;
                        } else n(e.gtn(1), "modulus must be greater than 1"), this.m = e, this.prime = null;
                    }
                    function T(e) {
                        I.call(this, e), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
                    }
                    _.prototype._tmp = function() {
                        var e = new s(null);
                        return e.words = new Array(Math.ceil(this.n / 13)), e;
                    }, _.prototype.ireduce = function(e) {
                        var t, r = e;
                        do {
                            this.split(r, this.tmp), t = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
                        }while (t > this.n)
                        var n = t < this.n ? -1 : r.ucmp(this.p);
                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                    }, _.prototype.split = function(e, t) {
                        e.iushrn(this.n, 0, t);
                    }, _.prototype.imulK = function(e) {
                        return e.imul(this.k);
                    }, i(E, _), E.prototype.split = function(e, t) {
                        for(var r = 4194303, n = Math.min(e.length, 9), i = 0; i < n; i++)t.words[i] = e.words[i];
                        if (t.length = n, e.length <= 9) return e.words[0] = 0, void (e.length = 1);
                        var s = e.words[9];
                        for(t.words[t.length++] = s & r, i = 10; i < e.length; i++){
                            var o = 0 | e.words[i];
                            e.words[i - 10] = (o & r) << 4 | s >>> 22, s = o;
                        }
                        s >>>= 22, e.words[i - 10] = s, 0 === s && e.length > 10 ? e.length -= 10 : e.length -= 9;
                    }, E.prototype.imulK = function(e) {
                        e.words[e.length] = 0, e.words[e.length + 1] = 0, e.length += 2;
                        for(var t = 0, r = 0; r < e.length; r++){
                            var n = 0 | e.words[r];
                            t += 977 * n, e.words[r] = 67108863 & t, t = 64 * n + (t / 67108864 | 0);
                        }
                        return 0 === e.words[e.length - 1] && (e.length--, 0 === e.words[e.length - 1] && e.length--), e;
                    }, i(S, _), i(A, _), i(M, _), M.prototype.imulK = function(e) {
                        for(var t = 0, r = 0; r < e.length; r++){
                            var n = 19 * (0 | e.words[r]) + t, i = 67108863 & n;
                            n >>>= 26, e.words[r] = i, t = n;
                        }
                        return 0 !== t && (e.words[e.length++] = t), e;
                    }, s._prime = function(e) {
                        if (w[e]) return w[e];
                        var t;
                        if ("k256" === e) t = new E;
                        else if ("p224" === e) t = new S;
                        else if ("p192" === e) t = new A;
                        else {
                            if ("p25519" !== e) throw new Error("Unknown prime " + e);
                            t = new M;
                        }
                        return w[e] = t, t;
                    }, I.prototype._verify1 = function(e) {
                        n(0 === e.negative, "red works only with positives"), n(e.red, "red works only with red numbers");
                    }, I.prototype._verify2 = function(e, t) {
                        n(!(e.negative | t.negative), "red works only with positives"), n(e.red && e.red === t.red, "red works only with red numbers");
                    }, I.prototype.imod = function(e) {
                        return this.prime ? this.prime.ireduce(e)._forceRed(this) : (u(e, e.umod(this.m)._forceRed(this)), e);
                    }, I.prototype.neg = function(e) {
                        return e.isZero() ? e.clone() : this.m.sub(e)._forceRed(this);
                    }, I.prototype.add = function(e, t) {
                        this._verify2(e, t);
                        var r = e.add(t);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
                    }, I.prototype.iadd = function(e, t) {
                        this._verify2(e, t);
                        var r = e.iadd(t);
                        return r.cmp(this.m) >= 0 && r.isub(this.m), r;
                    }, I.prototype.sub = function(e, t) {
                        this._verify2(e, t);
                        var r = e.sub(t);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
                    }, I.prototype.isub = function(e, t) {
                        this._verify2(e, t);
                        var r = e.isub(t);
                        return r.cmpn(0) < 0 && r.iadd(this.m), r;
                    }, I.prototype.shl = function(e, t) {
                        return this._verify1(e), this.imod(e.ushln(t));
                    }, I.prototype.imul = function(e, t) {
                        return this._verify2(e, t), this.imod(e.imul(t));
                    }, I.prototype.mul = function(e, t) {
                        return this._verify2(e, t), this.imod(e.mul(t));
                    }, I.prototype.isqr = function(e) {
                        return this.imul(e, e.clone());
                    }, I.prototype.sqr = function(e) {
                        return this.mul(e, e);
                    }, I.prototype.sqrt = function(e) {
                        if (e.isZero()) return e.clone();
                        var t = this.m.andln(3);
                        if (n(t % 2 == 1), 3 === t) {
                            var r = this.m.add(new s(1)).iushrn(2);
                            return this.pow(e, r);
                        }
                        for(var i = this.m.subn(1), o = 0; !i.isZero() && 0 === i.andln(1);)o++, i.iushrn(1);
                        n(!i.isZero());
                        var a = new s(1).toRed(this), c = a.redNeg(), h = this.m.subn(1).iushrn(1), u = this.m.bitLength();
                        for(u = new s(2 * u * u).toRed(this); 0 !== this.pow(u, h).cmp(c);)u.redIAdd(c);
                        for(var d = this.pow(u, i), f = this.pow(e, i.addn(1).iushrn(1)), l = this.pow(e, i), p = o; 0 !== l.cmp(a);){
                            for(var b = l, g = 0; 0 !== b.cmp(a); g++)b = b.redSqr();
                            n(g < p);
                            var m = this.pow(d, new s(1).iushln(p - g - 1));
                            f = f.redMul(m), d = m.redSqr(), l = l.redMul(d), p = g;
                        }
                        return f;
                    }, I.prototype.invm = function(e) {
                        var t = e._invmp(this.m);
                        return 0 !== t.negative ? (t.negative = 0, this.imod(t).redNeg()) : this.imod(t);
                    }, I.prototype.pow = function(e, t) {
                        if (t.isZero()) return new s(1).toRed(this);
                        if (0 === t.cmpn(1)) return e.clone();
                        var r = new Array(16);
                        r[0] = new s(1).toRed(this), r[1] = e;
                        for(var n = 2; n < r.length; n++)r[n] = this.mul(r[n - 1], e);
                        var i = r[0], o = 0, a = 0, c = t.bitLength() % 26;
                        for(0 === c && (c = 26), n = t.length - 1; n >= 0; n--){
                            for(var h = t.words[n], u = c - 1; u >= 0; u--){
                                var d = h >> u & 1;
                                i !== r[0] && (i = this.sqr(i)), 0 !== d || 0 !== o ? (o <<= 1, o |= d, (4 == ++a || 0 === n && 0 === u) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
                            }
                            c = 26;
                        }
                        return i;
                    }, I.prototype.convertTo = function(e) {
                        var t = e.umod(this.m);
                        return t === e ? t.clone() : t;
                    }, I.prototype.convertFrom = function(e) {
                        var t = e.clone();
                        return t.red = null, t;
                    }, s.mont = function(e) {
                        return new T(e);
                    }, i(T, I), T.prototype.convertTo = function(e) {
                        return this.imod(e.ushln(this.shift));
                    }, T.prototype.convertFrom = function(e) {
                        var t = this.imod(e.mul(this.rinv));
                        return t.red = null, t;
                    }, T.prototype.imul = function(e, t) {
                        if (e.isZero() || t.isZero()) return e.words[0] = 0, e.length = 1, e;
                        var r = e.imul(t), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), s = i;
                        return i.cmp(this.m) >= 0 ? s = i.isub(this.m) : i.cmpn(0) < 0 && (s = i.iadd(this.m)), s._forceRed(this);
                    }, T.prototype.mul = function(e, t) {
                        if (e.isZero() || t.isZero()) return new s(0)._forceRed(this);
                        var r = e.mul(t), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                    }, T.prototype.invm = function(e) {
                        return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this);
                    };
                }(e = r.nmd(e), this);
            },
            5442: (e, t, r)=>{
                var n;
                function i(e) {
                    this.rand = e;
                }
                if (e.exports = function(e) {
                    return n || (n = new i(null)), n.generate(e);
                }, e.exports.Rand = i, i.prototype.generate = function(e) {
                    return this._rand(e);
                }, i.prototype._rand = function(e) {
                    if (this.rand.getBytes) return this.rand.getBytes(e);
                    for(var t = new Uint8Array(e), r = 0; r < t.length; r++)t[r] = this.rand.getByte();
                    return t;
                }, "object" == typeof self) self.crypto && self.crypto.getRandomValues ? i.prototype._rand = function(e) {
                    var t = new Uint8Array(e);
                    return self.crypto.getRandomValues(t), t;
                } : self.msCrypto && self.msCrypto.getRandomValues ? i.prototype._rand = function(e) {
                    var t = new Uint8Array(e);
                    return self.msCrypto.getRandomValues(t), t;
                } : "object" == typeof window && (i.prototype._rand = function() {
                    throw new Error("Not implemented yet");
                });
                else try {
                    var s = r(4507);
                    if ("function" != typeof s.randomBytes) throw new Error("Not supported");
                    i.prototype._rand = function(e) {
                        return s.randomBytes(e);
                    };
                } catch (e) {}
            },
            2858: (e)=>{
                "use strict";
                var t = "%[a-f0-9]{2}", r = new RegExp("(" + t + ")|([^%]+?)", "gi"), n = new RegExp("(" + t + ")+", "gi");
                function i(e, t) {
                    try {
                        return [
                            decodeURIComponent(e.join(""))
                        ];
                    } catch (e) {}
                    if (1 === e.length) return e;
                    t = t || 1;
                    var r = e.slice(0, t), n = e.slice(t);
                    return Array.prototype.concat.call([], i(r), i(n));
                }
                function s(e) {
                    try {
                        return decodeURIComponent(e);
                    } catch (s) {
                        for(var t = e.match(r) || [], n = 1; n < t.length; n++)t = (e = i(t, n).join("")).match(r) || [];
                        return e;
                    }
                }
                e.exports = function(e) {
                    if ("string" != typeof e) throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof e + "`");
                    try {
                        return e = e.replace(/\+/g, " "), decodeURIComponent(e);
                    } catch (t) {
                        return function(e) {
                            for(var t = {
                                "%FE%FF": "��",
                                "%FF%FE": "��"
                            }, r = n.exec(e); r;){
                                try {
                                    t[r[0]] = decodeURIComponent(r[0]);
                                } catch (e) {
                                    var i = s(r[0]);
                                    i !== r[0] && (t[r[0]] = i);
                                }
                                r = n.exec(e);
                            }
                            t["%C2"] = "�";
                            for(var o = Object.keys(t), a = 0; a < o.length; a++){
                                var c = o[a];
                                e = e.replace(new RegExp(c, "g"), t[c]);
                            }
                            return e;
                        }(e);
                    }
                };
            },
            3071: (e, t, r)=>{
                "use strict";
                var n = t;
                n.version = r(3718).rE, n.utils = r(9185), n.rand = r(5442), n.curve = r(5228), n.curves = r(5366), n.ec = r(2961), n.eddsa = r(7808);
            },
            4499: (e, t, r)=>{
                "use strict";
                var n = r(4619), i = r(9185), s = i.getNAF, o = i.getJSF, a = i.assert;
                function c(e, t) {
                    this.type = e, this.p = new n(t.p, 16), this.red = t.prime ? n.red(t.prime) : n.mont(this.p), this.zero = new n(0).toRed(this.red), this.one = new n(1).toRed(this.red), this.two = new n(2).toRed(this.red), this.n = t.n && new n(t.n, 16), this.g = t.g && this.pointFromJSON(t.g, t.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
                    var r = this.n && this.p.div(this.n);
                    !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));
                }
                function h(e, t) {
                    this.curve = e, this.type = t, this.precomputed = null;
                }
                e.exports = c, c.prototype.point = function() {
                    throw new Error("Not implemented");
                }, c.prototype.validate = function() {
                    throw new Error("Not implemented");
                }, c.prototype._fixedNafMul = function(e, t) {
                    a(e.precomputed);
                    var r = e._getDoubles(), n = s(t, 1, this._bitLength), i = (1 << r.step + 1) - (r.step % 2 == 0 ? 2 : 1);
                    i /= 3;
                    var o, c, h = [];
                    for(o = 0; o < n.length; o += r.step){
                        c = 0;
                        for(var u = o + r.step - 1; u >= o; u--)c = (c << 1) + n[u];
                        h.push(c);
                    }
                    for(var d = this.jpoint(null, null, null), f = this.jpoint(null, null, null), l = i; l > 0; l--){
                        for(o = 0; o < h.length; o++)(c = h[o]) === l ? f = f.mixedAdd(r.points[o]) : c === -l && (f = f.mixedAdd(r.points[o].neg()));
                        d = d.add(f);
                    }
                    return d.toP();
                }, c.prototype._wnafMul = function(e, t) {
                    var r = 4, n = e._getNAFPoints(r);
                    r = n.wnd;
                    for(var i = n.points, o = s(t, r, this._bitLength), c = this.jpoint(null, null, null), h = o.length - 1; h >= 0; h--){
                        for(var u = 0; h >= 0 && 0 === o[h]; h--)u++;
                        if (h >= 0 && u++, c = c.dblp(u), h < 0) break;
                        var d = o[h];
                        a(0 !== d), c = "affine" === e.type ? d > 0 ? c.mixedAdd(i[d - 1 >> 1]) : c.mixedAdd(i[-d - 1 >> 1].neg()) : d > 0 ? c.add(i[d - 1 >> 1]) : c.add(i[-d - 1 >> 1].neg());
                    }
                    return "affine" === e.type ? c.toP() : c;
                }, c.prototype._wnafMulAdd = function(e, t, r, n, i) {
                    var a, c, h, u = this._wnafT1, d = this._wnafT2, f = this._wnafT3, l = 0;
                    for(a = 0; a < n; a++){
                        var p = (h = t[a])._getNAFPoints(e);
                        u[a] = p.wnd, d[a] = p.points;
                    }
                    for(a = n - 1; a >= 1; a -= 2){
                        var b = a - 1, g = a;
                        if (1 === u[b] && 1 === u[g]) {
                            var m = [
                                t[b],
                                null,
                                null,
                                t[g]
                            ];
                            0 === t[b].y.cmp(t[g].y) ? (m[1] = t[b].add(t[g]), m[2] = t[b].toJ().mixedAdd(t[g].neg())) : 0 === t[b].y.cmp(t[g].y.redNeg()) ? (m[1] = t[b].toJ().mixedAdd(t[g]), m[2] = t[b].add(t[g].neg())) : (m[1] = t[b].toJ().mixedAdd(t[g]), m[2] = t[b].toJ().mixedAdd(t[g].neg()));
                            var y = [
                                -3,
                                -1,
                                -5,
                                -7,
                                0,
                                7,
                                5,
                                1,
                                3
                            ], v = o(r[b], r[g]);
                            for(l = Math.max(v[0].length, l), f[b] = new Array(l), f[g] = new Array(l), c = 0; c < l; c++){
                                var w = 0 | v[0][c], _ = 0 | v[1][c];
                                f[b][c] = y[3 * (w + 1) + (_ + 1)], f[g][c] = 0, d[b] = m;
                            }
                        } else f[b] = s(r[b], u[b], this._bitLength), f[g] = s(r[g], u[g], this._bitLength), l = Math.max(f[b].length, l), l = Math.max(f[g].length, l);
                    }
                    var E = this.jpoint(null, null, null), S = this._wnafT4;
                    for(a = l; a >= 0; a--){
                        for(var A = 0; a >= 0;){
                            var M = !0;
                            for(c = 0; c < n; c++)S[c] = 0 | f[c][a], 0 !== S[c] && (M = !1);
                            if (!M) break;
                            A++, a--;
                        }
                        if (a >= 0 && A++, E = E.dblp(A), a < 0) break;
                        for(c = 0; c < n; c++){
                            var I = S[c];
                            0 !== I && (I > 0 ? h = d[c][I - 1 >> 1] : I < 0 && (h = d[c][-I - 1 >> 1].neg()), E = "affine" === h.type ? E.mixedAdd(h) : E.add(h));
                        }
                    }
                    for(a = 0; a < n; a++)d[a] = null;
                    return i ? E : E.toP();
                }, c.BasePoint = h, h.prototype.eq = function() {
                    throw new Error("Not implemented");
                }, h.prototype.validate = function() {
                    return this.curve.validate(this);
                }, c.prototype.decodePoint = function(e, t) {
                    e = i.toArray(e, t);
                    var r = this.p.byteLength();
                    if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 == 2 * r) return 6 === e[0] ? a(e[e.length - 1] % 2 == 0) : 7 === e[0] && a(e[e.length - 1] % 2 == 1), this.point(e.slice(1, 1 + r), e.slice(1 + r, 1 + 2 * r));
                    if ((2 === e[0] || 3 === e[0]) && e.length - 1 === r) return this.pointFromX(e.slice(1, 1 + r), 3 === e[0]);
                    throw new Error("Unknown point format");
                }, h.prototype.encodeCompressed = function(e) {
                    return this.encode(e, !0);
                }, h.prototype._encode = function(e) {
                    var t = this.curve.p.byteLength(), r = this.getX().toArray("be", t);
                    return e ? [
                        this.getY().isEven() ? 2 : 3
                    ].concat(r) : [
                        4
                    ].concat(r, this.getY().toArray("be", t));
                }, h.prototype.encode = function(e, t) {
                    return i.encode(this._encode(t), e);
                }, h.prototype.precompute = function(e) {
                    if (this.precomputed) return this;
                    var t = {
                        doubles: null,
                        naf: null,
                        beta: null
                    };
                    return t.naf = this._getNAFPoints(8), t.doubles = this._getDoubles(4, e), t.beta = this._getBeta(), this.precomputed = t, this;
                }, h.prototype._hasDoubles = function(e) {
                    if (!this.precomputed) return !1;
                    var t = this.precomputed.doubles;
                    return !!t && t.points.length >= Math.ceil((e.bitLength() + 1) / t.step);
                }, h.prototype._getDoubles = function(e, t) {
                    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                    for(var r = [
                        this
                    ], n = this, i = 0; i < t; i += e){
                        for(var s = 0; s < e; s++)n = n.dbl();
                        r.push(n);
                    }
                    return {
                        step: e,
                        points: r
                    };
                }, h.prototype._getNAFPoints = function(e) {
                    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                    for(var t = [
                        this
                    ], r = (1 << e) - 1, n = 1 === r ? null : this.dbl(), i = 1; i < r; i++)t[i] = t[i - 1].add(n);
                    return {
                        wnd: e,
                        points: t
                    };
                }, h.prototype._getBeta = function() {
                    return null;
                }, h.prototype.dblp = function(e) {
                    for(var t = this, r = 0; r < e; r++)t = t.dbl();
                    return t;
                };
            },
            3544: (e, t, r)=>{
                "use strict";
                var n = r(9185), i = r(4619), s = r(1193), o = r(4499), a = n.assert;
                function c(e) {
                    this.twisted = 1 != (0 | e.a), this.mOneA = this.twisted && -1 == (0 | e.a), this.extended = this.mOneA, o.call(this, "edwards", e), this.a = new i(e.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new i(e.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new i(e.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), a(!this.twisted || 0 === this.c.fromRed().cmpn(1)), this.oneC = 1 == (0 | e.c);
                }
                function h(e, t, r, n, s) {
                    o.BasePoint.call(this, e, "projective"), null === t && null === r && null === n ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = !0) : (this.x = new i(t, 16), this.y = new i(r, 16), this.z = n ? new i(n, 16) : this.curve.one, this.t = s && new i(s, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
                }
                s(c, o), e.exports = c, c.prototype._mulA = function(e) {
                    return this.mOneA ? e.redNeg() : this.a.redMul(e);
                }, c.prototype._mulC = function(e) {
                    return this.oneC ? e : this.c.redMul(e);
                }, c.prototype.jpoint = function(e, t, r, n) {
                    return this.point(e, t, r, n);
                }, c.prototype.pointFromX = function(e, t) {
                    (e = new i(e, 16)).red || (e = e.toRed(this.red));
                    var r = e.redSqr(), n = this.c2.redSub(this.a.redMul(r)), s = this.one.redSub(this.c2.redMul(this.d).redMul(r)), o = n.redMul(s.redInvm()), a = o.redSqrt();
                    if (0 !== a.redSqr().redSub(o).cmp(this.zero)) throw new Error("invalid point");
                    var c = a.fromRed().isOdd();
                    return (t && !c || !t && c) && (a = a.redNeg()), this.point(e, a);
                }, c.prototype.pointFromY = function(e, t) {
                    (e = new i(e, 16)).red || (e = e.toRed(this.red));
                    var r = e.redSqr(), n = r.redSub(this.c2), s = r.redMul(this.d).redMul(this.c2).redSub(this.a), o = n.redMul(s.redInvm());
                    if (0 === o.cmp(this.zero)) {
                        if (t) throw new Error("invalid point");
                        return this.point(this.zero, e);
                    }
                    var a = o.redSqrt();
                    if (0 !== a.redSqr().redSub(o).cmp(this.zero)) throw new Error("invalid point");
                    return a.fromRed().isOdd() !== t && (a = a.redNeg()), this.point(a, e);
                }, c.prototype.validate = function(e) {
                    if (e.isInfinity()) return !0;
                    e.normalize();
                    var t = e.x.redSqr(), r = e.y.redSqr(), n = t.redMul(this.a).redAdd(r), i = this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(r)));
                    return 0 === n.cmp(i);
                }, s(h, o.BasePoint), c.prototype.pointFromJSON = function(e) {
                    return h.fromJSON(this, e);
                }, c.prototype.point = function(e, t, r, n) {
                    return new h(this, e, t, r, n);
                }, h.fromJSON = function(e, t) {
                    return new h(e, t[0], t[1], t[2]);
                }, h.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
                }, h.prototype.isInfinity = function() {
                    return 0 === this.x.cmpn(0) && (0 === this.y.cmp(this.z) || this.zOne && 0 === this.y.cmp(this.curve.c));
                }, h.prototype._extDbl = function() {
                    var e = this.x.redSqr(), t = this.y.redSqr(), r = this.z.redSqr();
                    r = r.redIAdd(r);
                    var n = this.curve._mulA(e), i = this.x.redAdd(this.y).redSqr().redISub(e).redISub(t), s = n.redAdd(t), o = s.redSub(r), a = n.redSub(t), c = i.redMul(o), h = s.redMul(a), u = i.redMul(a), d = o.redMul(s);
                    return this.curve.point(c, h, d, u);
                }, h.prototype._projDbl = function() {
                    var e, t, r, n, i, s, o = this.x.redAdd(this.y).redSqr(), a = this.x.redSqr(), c = this.y.redSqr();
                    if (this.curve.twisted) {
                        var h = (n = this.curve._mulA(a)).redAdd(c);
                        this.zOne ? (e = o.redSub(a).redSub(c).redMul(h.redSub(this.curve.two)), t = h.redMul(n.redSub(c)), r = h.redSqr().redSub(h).redSub(h)) : (i = this.z.redSqr(), s = h.redSub(i).redISub(i), e = o.redSub(a).redISub(c).redMul(s), t = h.redMul(n.redSub(c)), r = h.redMul(s));
                    } else n = a.redAdd(c), i = this.curve._mulC(this.z).redSqr(), s = n.redSub(i).redSub(i), e = this.curve._mulC(o.redISub(n)).redMul(s), t = this.curve._mulC(n).redMul(a.redISub(c)), r = n.redMul(s);
                    return this.curve.point(e, t, r);
                }, h.prototype.dbl = function() {
                    return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
                }, h.prototype._extAdd = function(e) {
                    var t = this.y.redSub(this.x).redMul(e.y.redSub(e.x)), r = this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)), n = this.t.redMul(this.curve.dd).redMul(e.t), i = this.z.redMul(e.z.redAdd(e.z)), s = r.redSub(t), o = i.redSub(n), a = i.redAdd(n), c = r.redAdd(t), h = s.redMul(o), u = a.redMul(c), d = s.redMul(c), f = o.redMul(a);
                    return this.curve.point(h, u, f, d);
                }, h.prototype._projAdd = function(e) {
                    var t, r, n = this.z.redMul(e.z), i = n.redSqr(), s = this.x.redMul(e.x), o = this.y.redMul(e.y), a = this.curve.d.redMul(s).redMul(o), c = i.redSub(a), h = i.redAdd(a), u = this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(s).redISub(o), d = n.redMul(c).redMul(u);
                    return this.curve.twisted ? (t = n.redMul(h).redMul(o.redSub(this.curve._mulA(s))), r = c.redMul(h)) : (t = n.redMul(h).redMul(o.redSub(s)), r = this.curve._mulC(c).redMul(h)), this.curve.point(d, t, r);
                }, h.prototype.add = function(e) {
                    return this.isInfinity() ? e : e.isInfinity() ? this : this.curve.extended ? this._extAdd(e) : this._projAdd(e);
                }, h.prototype.mul = function(e) {
                    return this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve._wnafMul(this, e);
                }, h.prototype.mulAdd = function(e, t, r) {
                    return this.curve._wnafMulAdd(1, [
                        this,
                        t
                    ], [
                        e,
                        r
                    ], 2, !1);
                }, h.prototype.jmulAdd = function(e, t, r) {
                    return this.curve._wnafMulAdd(1, [
                        this,
                        t
                    ], [
                        e,
                        r
                    ], 2, !0);
                }, h.prototype.normalize = function() {
                    if (this.zOne) return this;
                    var e = this.z.redInvm();
                    return this.x = this.x.redMul(e), this.y = this.y.redMul(e), this.t && (this.t = this.t.redMul(e)), this.z = this.curve.one, this.zOne = !0, this;
                }, h.prototype.neg = function() {
                    return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
                }, h.prototype.getX = function() {
                    return this.normalize(), this.x.fromRed();
                }, h.prototype.getY = function() {
                    return this.normalize(), this.y.fromRed();
                }, h.prototype.eq = function(e) {
                    return this === e || 0 === this.getX().cmp(e.getX()) && 0 === this.getY().cmp(e.getY());
                }, h.prototype.eqXToP = function(e) {
                    var t = e.toRed(this.curve.red).redMul(this.z);
                    if (0 === this.x.cmp(t)) return !0;
                    for(var r = e.clone(), n = this.curve.redN.redMul(this.z);;){
                        if (r.iadd(this.curve.n), r.cmp(this.curve.p) >= 0) return !1;
                        if (t.redIAdd(n), 0 === this.x.cmp(t)) return !0;
                    }
                }, h.prototype.toP = h.prototype.normalize, h.prototype.mixedAdd = h.prototype.add;
            },
            5228: (e, t, r)=>{
                "use strict";
                var n = t;
                n.base = r(4499), n.short = r(3970), n.mont = r(536), n.edwards = r(3544);
            },
            536: (e, t, r)=>{
                "use strict";
                var n = r(4619), i = r(1193), s = r(4499), o = r(9185);
                function a(e) {
                    s.call(this, "mont", e), this.a = new n(e.a, 16).toRed(this.red), this.b = new n(e.b, 16).toRed(this.red), this.i4 = new n(4).toRed(this.red).redInvm(), this.two = new n(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
                }
                function c(e, t, r) {
                    s.BasePoint.call(this, e, "projective"), null === t && null === r ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new n(t, 16), this.z = new n(r, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
                }
                i(a, s), e.exports = a, a.prototype.validate = function(e) {
                    var t = e.normalize().x, r = t.redSqr(), n = r.redMul(t).redAdd(r.redMul(this.a)).redAdd(t);
                    return 0 === n.redSqrt().redSqr().cmp(n);
                }, i(c, s.BasePoint), a.prototype.decodePoint = function(e, t) {
                    return this.point(o.toArray(e, t), 1);
                }, a.prototype.point = function(e, t) {
                    return new c(this, e, t);
                }, a.prototype.pointFromJSON = function(e) {
                    return c.fromJSON(this, e);
                }, c.prototype.precompute = function() {}, c.prototype._encode = function() {
                    return this.getX().toArray("be", this.curve.p.byteLength());
                }, c.fromJSON = function(e, t) {
                    return new c(e, t[0], t[1] || e.one);
                }, c.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
                }, c.prototype.isInfinity = function() {
                    return 0 === this.z.cmpn(0);
                }, c.prototype.dbl = function() {
                    var e = this.x.redAdd(this.z).redSqr(), t = this.x.redSub(this.z).redSqr(), r = e.redSub(t), n = e.redMul(t), i = r.redMul(t.redAdd(this.curve.a24.redMul(r)));
                    return this.curve.point(n, i);
                }, c.prototype.add = function() {
                    throw new Error("Not supported on Montgomery curve");
                }, c.prototype.diffAdd = function(e, t) {
                    var r = this.x.redAdd(this.z), n = this.x.redSub(this.z), i = e.x.redAdd(e.z), s = e.x.redSub(e.z).redMul(r), o = i.redMul(n), a = t.z.redMul(s.redAdd(o).redSqr()), c = t.x.redMul(s.redISub(o).redSqr());
                    return this.curve.point(a, c);
                }, c.prototype.mul = function(e) {
                    for(var t = e.clone(), r = this, n = this.curve.point(null, null), i = []; 0 !== t.cmpn(0); t.iushrn(1))i.push(t.andln(1));
                    for(var s = i.length - 1; s >= 0; s--)0 === i[s] ? (r = r.diffAdd(n, this), n = n.dbl()) : (n = r.diffAdd(n, this), r = r.dbl());
                    return n;
                }, c.prototype.mulAdd = function() {
                    throw new Error("Not supported on Montgomery curve");
                }, c.prototype.jumlAdd = function() {
                    throw new Error("Not supported on Montgomery curve");
                }, c.prototype.eq = function(e) {
                    return 0 === this.getX().cmp(e.getX());
                }, c.prototype.normalize = function() {
                    return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
                }, c.prototype.getX = function() {
                    return this.normalize(), this.x.fromRed();
                };
            },
            3970: (e, t, r)=>{
                "use strict";
                var n = r(9185), i = r(4619), s = r(1193), o = r(4499), a = n.assert;
                function c(e) {
                    o.call(this, "short", e), this.a = new i(e.a, 16).toRed(this.red), this.b = new i(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(e), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
                }
                function h(e, t, r, n) {
                    o.BasePoint.call(this, e, "affine"), null === t && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new i(t, 16), this.y = new i(r, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);
                }
                function u(e, t, r, n) {
                    o.BasePoint.call(this, e, "jacobian"), null === t && null === r && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new i(0)) : (this.x = new i(t, 16), this.y = new i(r, 16), this.z = new i(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
                }
                s(c, o), e.exports = c, c.prototype._getEndomorphism = function(e) {
                    if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                        var t, r;
                        if (e.beta) t = new i(e.beta, 16).toRed(this.red);
                        else {
                            var n = this._getEndoRoots(this.p);
                            t = (t = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red);
                        }
                        if (e.lambda) r = new i(e.lambda, 16);
                        else {
                            var s = this._getEndoRoots(this.n);
                            0 === this.g.mul(s[0]).x.cmp(this.g.x.redMul(t)) ? r = s[0] : (r = s[1], a(0 === this.g.mul(r).x.cmp(this.g.x.redMul(t))));
                        }
                        return {
                            beta: t,
                            lambda: r,
                            basis: e.basis ? e.basis.map(function(e) {
                                return {
                                    a: new i(e.a, 16),
                                    b: new i(e.b, 16)
                                };
                            }) : this._getEndoBasis(r)
                        };
                    }
                }, c.prototype._getEndoRoots = function(e) {
                    var t = e === this.p ? this.red : i.mont(e), r = new i(2).toRed(t).redInvm(), n = r.redNeg(), s = new i(3).toRed(t).redNeg().redSqrt().redMul(r);
                    return [
                        n.redAdd(s).fromRed(),
                        n.redSub(s).fromRed()
                    ];
                }, c.prototype._getEndoBasis = function(e) {
                    for(var t, r, n, s, o, a, c, h, u, d = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), f = e, l = this.n.clone(), p = new i(1), b = new i(0), g = new i(0), m = new i(1), y = 0; 0 !== f.cmpn(0);){
                        var v = l.div(f);
                        h = l.sub(v.mul(f)), u = g.sub(v.mul(p));
                        var w = m.sub(v.mul(b));
                        if (!n && h.cmp(d) < 0) t = c.neg(), r = p, n = h.neg(), s = u;
                        else if (n && 2 == ++y) break;
                        c = h, l = f, f = h, g = p, p = u, m = b, b = w;
                    }
                    o = h.neg(), a = u;
                    var _ = n.sqr().add(s.sqr());
                    return o.sqr().add(a.sqr()).cmp(_) >= 0 && (o = t, a = r), n.negative && (n = n.neg(), s = s.neg()), o.negative && (o = o.neg(), a = a.neg()), [
                        {
                            a: n,
                            b: s
                        },
                        {
                            a: o,
                            b: a
                        }
                    ];
                }, c.prototype._endoSplit = function(e) {
                    var t = this.endo.basis, r = t[0], n = t[1], i = n.b.mul(e).divRound(this.n), s = r.b.neg().mul(e).divRound(this.n), o = i.mul(r.a), a = s.mul(n.a), c = i.mul(r.b), h = s.mul(n.b);
                    return {
                        k1: e.sub(o).sub(a),
                        k2: c.add(h).neg()
                    };
                }, c.prototype.pointFromX = function(e, t) {
                    (e = new i(e, 16)).red || (e = e.toRed(this.red));
                    var r = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b), n = r.redSqrt();
                    if (0 !== n.redSqr().redSub(r).cmp(this.zero)) throw new Error("invalid point");
                    var s = n.fromRed().isOdd();
                    return (t && !s || !t && s) && (n = n.redNeg()), this.point(e, n);
                }, c.prototype.validate = function(e) {
                    if (e.inf) return !0;
                    var t = e.x, r = e.y, n = this.a.redMul(t), i = t.redSqr().redMul(t).redIAdd(n).redIAdd(this.b);
                    return 0 === r.redSqr().redISub(i).cmpn(0);
                }, c.prototype._endoWnafMulAdd = function(e, t, r) {
                    for(var n = this._endoWnafT1, i = this._endoWnafT2, s = 0; s < e.length; s++){
                        var o = this._endoSplit(t[s]), a = e[s], c = a._getBeta();
                        o.k1.negative && (o.k1.ineg(), a = a.neg(!0)), o.k2.negative && (o.k2.ineg(), c = c.neg(!0)), n[2 * s] = a, n[2 * s + 1] = c, i[2 * s] = o.k1, i[2 * s + 1] = o.k2;
                    }
                    for(var h = this._wnafMulAdd(1, n, i, 2 * s, r), u = 0; u < 2 * s; u++)n[u] = null, i[u] = null;
                    return h;
                }, s(h, o.BasePoint), c.prototype.point = function(e, t, r) {
                    return new h(this, e, t, r);
                }, c.prototype.pointFromJSON = function(e, t) {
                    return h.fromJSON(this, e, t);
                }, h.prototype._getBeta = function() {
                    if (this.curve.endo) {
                        var e = this.precomputed;
                        if (e && e.beta) return e.beta;
                        var t = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                        if (e) {
                            var r = this.curve, n = function(e) {
                                return r.point(e.x.redMul(r.endo.beta), e.y);
                            };
                            e.beta = t, t.precomputed = {
                                beta: null,
                                naf: e.naf && {
                                    wnd: e.naf.wnd,
                                    points: e.naf.points.map(n)
                                },
                                doubles: e.doubles && {
                                    step: e.doubles.step,
                                    points: e.doubles.points.map(n)
                                }
                            };
                        }
                        return t;
                    }
                }, h.prototype.toJSON = function() {
                    return this.precomputed ? [
                        this.x,
                        this.y,
                        this.precomputed && {
                            doubles: this.precomputed.doubles && {
                                step: this.precomputed.doubles.step,
                                points: this.precomputed.doubles.points.slice(1)
                            },
                            naf: this.precomputed.naf && {
                                wnd: this.precomputed.naf.wnd,
                                points: this.precomputed.naf.points.slice(1)
                            }
                        }
                    ] : [
                        this.x,
                        this.y
                    ];
                }, h.fromJSON = function(e, t, r) {
                    "string" == typeof t && (t = JSON.parse(t));
                    var n = e.point(t[0], t[1], r);
                    if (!t[2]) return n;
                    function i(t) {
                        return e.point(t[0], t[1], r);
                    }
                    var s = t[2];
                    return n.precomputed = {
                        beta: null,
                        doubles: s.doubles && {
                            step: s.doubles.step,
                            points: [
                                n
                            ].concat(s.doubles.points.map(i))
                        },
                        naf: s.naf && {
                            wnd: s.naf.wnd,
                            points: [
                                n
                            ].concat(s.naf.points.map(i))
                        }
                    }, n;
                }, h.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
                }, h.prototype.isInfinity = function() {
                    return this.inf;
                }, h.prototype.add = function(e) {
                    if (this.inf) return e;
                    if (e.inf) return this;
                    if (this.eq(e)) return this.dbl();
                    if (this.neg().eq(e)) return this.curve.point(null, null);
                    if (0 === this.x.cmp(e.x)) return this.curve.point(null, null);
                    var t = this.y.redSub(e.y);
                    0 !== t.cmpn(0) && (t = t.redMul(this.x.redSub(e.x).redInvm()));
                    var r = t.redSqr().redISub(this.x).redISub(e.x), n = t.redMul(this.x.redSub(r)).redISub(this.y);
                    return this.curve.point(r, n);
                }, h.prototype.dbl = function() {
                    if (this.inf) return this;
                    var e = this.y.redAdd(this.y);
                    if (0 === e.cmpn(0)) return this.curve.point(null, null);
                    var t = this.curve.a, r = this.x.redSqr(), n = e.redInvm(), i = r.redAdd(r).redIAdd(r).redIAdd(t).redMul(n), s = i.redSqr().redISub(this.x.redAdd(this.x)), o = i.redMul(this.x.redSub(s)).redISub(this.y);
                    return this.curve.point(s, o);
                }, h.prototype.getX = function() {
                    return this.x.fromRed();
                }, h.prototype.getY = function() {
                    return this.y.fromRed();
                }, h.prototype.mul = function(e) {
                    return e = new i(e, 16), this.isInfinity() ? this : this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([
                        this
                    ], [
                        e
                    ]) : this.curve._wnafMul(this, e);
                }, h.prototype.mulAdd = function(e, t, r) {
                    var n = [
                        this,
                        t
                    ], i = [
                        e,
                        r
                    ];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2);
                }, h.prototype.jmulAdd = function(e, t, r) {
                    var n = [
                        this,
                        t
                    ], i = [
                        e,
                        r
                    ];
                    return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0);
                }, h.prototype.eq = function(e) {
                    return this === e || this.inf === e.inf && (this.inf || 0 === this.x.cmp(e.x) && 0 === this.y.cmp(e.y));
                }, h.prototype.neg = function(e) {
                    if (this.inf) return this;
                    var t = this.curve.point(this.x, this.y.redNeg());
                    if (e && this.precomputed) {
                        var r = this.precomputed, n = function(e) {
                            return e.neg();
                        };
                        t.precomputed = {
                            naf: r.naf && {
                                wnd: r.naf.wnd,
                                points: r.naf.points.map(n)
                            },
                            doubles: r.doubles && {
                                step: r.doubles.step,
                                points: r.doubles.points.map(n)
                            }
                        };
                    }
                    return t;
                }, h.prototype.toJ = function() {
                    return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
                }, s(u, o.BasePoint), c.prototype.jpoint = function(e, t, r) {
                    return new u(this, e, t, r);
                }, u.prototype.toP = function() {
                    if (this.isInfinity()) return this.curve.point(null, null);
                    var e = this.z.redInvm(), t = e.redSqr(), r = this.x.redMul(t), n = this.y.redMul(t).redMul(e);
                    return this.curve.point(r, n);
                }, u.prototype.neg = function() {
                    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
                }, u.prototype.add = function(e) {
                    if (this.isInfinity()) return e;
                    if (e.isInfinity()) return this;
                    var t = e.z.redSqr(), r = this.z.redSqr(), n = this.x.redMul(t), i = e.x.redMul(r), s = this.y.redMul(t.redMul(e.z)), o = e.y.redMul(r.redMul(this.z)), a = n.redSub(i), c = s.redSub(o);
                    if (0 === a.cmpn(0)) return 0 !== c.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var h = a.redSqr(), u = h.redMul(a), d = n.redMul(h), f = c.redSqr().redIAdd(u).redISub(d).redISub(d), l = c.redMul(d.redISub(f)).redISub(s.redMul(u)), p = this.z.redMul(e.z).redMul(a);
                    return this.curve.jpoint(f, l, p);
                }, u.prototype.mixedAdd = function(e) {
                    if (this.isInfinity()) return e.toJ();
                    if (e.isInfinity()) return this;
                    var t = this.z.redSqr(), r = this.x, n = e.x.redMul(t), i = this.y, s = e.y.redMul(t).redMul(this.z), o = r.redSub(n), a = i.redSub(s);
                    if (0 === o.cmpn(0)) return 0 !== a.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                    var c = o.redSqr(), h = c.redMul(o), u = r.redMul(c), d = a.redSqr().redIAdd(h).redISub(u).redISub(u), f = a.redMul(u.redISub(d)).redISub(i.redMul(h)), l = this.z.redMul(o);
                    return this.curve.jpoint(d, f, l);
                }, u.prototype.dblp = function(e) {
                    if (0 === e) return this;
                    if (this.isInfinity()) return this;
                    if (!e) return this.dbl();
                    var t;
                    if (this.curve.zeroA || this.curve.threeA) {
                        var r = this;
                        for(t = 0; t < e; t++)r = r.dbl();
                        return r;
                    }
                    var n = this.curve.a, i = this.curve.tinv, s = this.x, o = this.y, a = this.z, c = a.redSqr().redSqr(), h = o.redAdd(o);
                    for(t = 0; t < e; t++){
                        var u = s.redSqr(), d = h.redSqr(), f = d.redSqr(), l = u.redAdd(u).redIAdd(u).redIAdd(n.redMul(c)), p = s.redMul(d), b = l.redSqr().redISub(p.redAdd(p)), g = p.redISub(b), m = l.redMul(g);
                        m = m.redIAdd(m).redISub(f);
                        var y = h.redMul(a);
                        t + 1 < e && (c = c.redMul(f)), s = b, a = y, h = m;
                    }
                    return this.curve.jpoint(s, h.redMul(i), a);
                }, u.prototype.dbl = function() {
                    return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
                }, u.prototype._zeroDbl = function() {
                    var e, t, r;
                    if (this.zOne) {
                        var n = this.x.redSqr(), i = this.y.redSqr(), s = i.redSqr(), o = this.x.redAdd(i).redSqr().redISub(n).redISub(s);
                        o = o.redIAdd(o);
                        var a = n.redAdd(n).redIAdd(n), c = a.redSqr().redISub(o).redISub(o), h = s.redIAdd(s);
                        h = (h = h.redIAdd(h)).redIAdd(h), e = c, t = a.redMul(o.redISub(c)).redISub(h), r = this.y.redAdd(this.y);
                    } else {
                        var u = this.x.redSqr(), d = this.y.redSqr(), f = d.redSqr(), l = this.x.redAdd(d).redSqr().redISub(u).redISub(f);
                        l = l.redIAdd(l);
                        var p = u.redAdd(u).redIAdd(u), b = p.redSqr(), g = f.redIAdd(f);
                        g = (g = g.redIAdd(g)).redIAdd(g), e = b.redISub(l).redISub(l), t = p.redMul(l.redISub(e)).redISub(g), r = (r = this.y.redMul(this.z)).redIAdd(r);
                    }
                    return this.curve.jpoint(e, t, r);
                }, u.prototype._threeDbl = function() {
                    var e, t, r;
                    if (this.zOne) {
                        var n = this.x.redSqr(), i = this.y.redSqr(), s = i.redSqr(), o = this.x.redAdd(i).redSqr().redISub(n).redISub(s);
                        o = o.redIAdd(o);
                        var a = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a), c = a.redSqr().redISub(o).redISub(o);
                        e = c;
                        var h = s.redIAdd(s);
                        h = (h = h.redIAdd(h)).redIAdd(h), t = a.redMul(o.redISub(c)).redISub(h), r = this.y.redAdd(this.y);
                    } else {
                        var u = this.z.redSqr(), d = this.y.redSqr(), f = this.x.redMul(d), l = this.x.redSub(u).redMul(this.x.redAdd(u));
                        l = l.redAdd(l).redIAdd(l);
                        var p = f.redIAdd(f), b = (p = p.redIAdd(p)).redAdd(p);
                        e = l.redSqr().redISub(b), r = this.y.redAdd(this.z).redSqr().redISub(d).redISub(u);
                        var g = d.redSqr();
                        g = (g = (g = g.redIAdd(g)).redIAdd(g)).redIAdd(g), t = l.redMul(p.redISub(e)).redISub(g);
                    }
                    return this.curve.jpoint(e, t, r);
                }, u.prototype._dbl = function() {
                    var e = this.curve.a, t = this.x, r = this.y, n = this.z, i = n.redSqr().redSqr(), s = t.redSqr(), o = r.redSqr(), a = s.redAdd(s).redIAdd(s).redIAdd(e.redMul(i)), c = t.redAdd(t), h = (c = c.redIAdd(c)).redMul(o), u = a.redSqr().redISub(h.redAdd(h)), d = h.redISub(u), f = o.redSqr();
                    f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
                    var l = a.redMul(d).redISub(f), p = r.redAdd(r).redMul(n);
                    return this.curve.jpoint(u, l, p);
                }, u.prototype.trpl = function() {
                    if (!this.curve.zeroA) return this.dbl().add(this);
                    var e = this.x.redSqr(), t = this.y.redSqr(), r = this.z.redSqr(), n = t.redSqr(), i = e.redAdd(e).redIAdd(e), s = i.redSqr(), o = this.x.redAdd(t).redSqr().redISub(e).redISub(n), a = (o = (o = (o = o.redIAdd(o)).redAdd(o).redIAdd(o)).redISub(s)).redSqr(), c = n.redIAdd(n);
                    c = (c = (c = c.redIAdd(c)).redIAdd(c)).redIAdd(c);
                    var h = i.redIAdd(o).redSqr().redISub(s).redISub(a).redISub(c), u = t.redMul(h);
                    u = (u = u.redIAdd(u)).redIAdd(u);
                    var d = this.x.redMul(a).redISub(u);
                    d = (d = d.redIAdd(d)).redIAdd(d);
                    var f = this.y.redMul(h.redMul(c.redISub(h)).redISub(o.redMul(a)));
                    f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
                    var l = this.z.redAdd(o).redSqr().redISub(r).redISub(a);
                    return this.curve.jpoint(d, f, l);
                }, u.prototype.mul = function(e, t) {
                    return e = new i(e, t), this.curve._wnafMul(this, e);
                }, u.prototype.eq = function(e) {
                    if ("affine" === e.type) return this.eq(e.toJ());
                    if (this === e) return !0;
                    var t = this.z.redSqr(), r = e.z.redSqr();
                    if (0 !== this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0)) return !1;
                    var n = t.redMul(this.z), i = r.redMul(e.z);
                    return 0 === this.y.redMul(i).redISub(e.y.redMul(n)).cmpn(0);
                }, u.prototype.eqXToP = function(e) {
                    var t = this.z.redSqr(), r = e.toRed(this.curve.red).redMul(t);
                    if (0 === this.x.cmp(r)) return !0;
                    for(var n = e.clone(), i = this.curve.redN.redMul(t);;){
                        if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                        if (r.redIAdd(i), 0 === this.x.cmp(r)) return !0;
                    }
                }, u.prototype.inspect = function() {
                    return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
                }, u.prototype.isInfinity = function() {
                    return 0 === this.z.cmpn(0);
                };
            },
            5366: (e, t, r)=>{
                "use strict";
                var n, i = t, s = r(1631), o = r(5228), a = r(9185).assert;
                function c(e) {
                    "short" === e.type ? this.curve = new o.short(e) : "edwards" === e.type ? this.curve = new o.edwards(e) : this.curve = new o.mont(e), this.g = this.curve.g, this.n = this.curve.n, this.hash = e.hash, a(this.g.validate(), "Invalid curve"), a(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
                }
                function h(e, t) {
                    Object.defineProperty(i, e, {
                        configurable: !0,
                        enumerable: !0,
                        get: function() {
                            var r = new c(t);
                            return Object.defineProperty(i, e, {
                                configurable: !0,
                                enumerable: !0,
                                value: r
                            }), r;
                        }
                    });
                }
                i.PresetCurve = c, h("p192", {
                    type: "short",
                    prime: "p192",
                    p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                    a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                    b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                    n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                    hash: s.sha256,
                    gRed: !1,
                    g: [
                        "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
                        "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
                    ]
                }), h("p224", {
                    type: "short",
                    prime: "p224",
                    p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                    a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                    b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                    n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                    hash: s.sha256,
                    gRed: !1,
                    g: [
                        "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
                        "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
                    ]
                }), h("p256", {
                    type: "short",
                    prime: null,
                    p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                    a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                    b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                    n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                    hash: s.sha256,
                    gRed: !1,
                    g: [
                        "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
                        "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
                    ]
                }), h("p384", {
                    type: "short",
                    prime: null,
                    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                    a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                    b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                    n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                    hash: s.sha384,
                    gRed: !1,
                    g: [
                        "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
                        "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
                    ]
                }), h("p521", {
                    type: "short",
                    prime: null,
                    p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                    a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                    b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                    n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                    hash: s.sha512,
                    gRed: !1,
                    g: [
                        "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
                        "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
                    ]
                }), h("curve25519", {
                    type: "mont",
                    prime: "p25519",
                    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                    a: "76d06",
                    b: "1",
                    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                    hash: s.sha256,
                    gRed: !1,
                    g: [
                        "9"
                    ]
                }), h("ed25519", {
                    type: "edwards",
                    prime: "p25519",
                    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                    a: "-1",
                    c: "1",
                    d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                    hash: s.sha256,
                    gRed: !1,
                    g: [
                        "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
                        "6666666666666666666666666666666666666666666666666666666666666658"
                    ]
                });
                try {
                    n = r(7153);
                } catch (e) {
                    n = void 0;
                }
                h("secp256k1", {
                    type: "short",
                    prime: "k256",
                    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                    a: "0",
                    b: "7",
                    n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                    h: "1",
                    hash: s.sha256,
                    beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                    lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                    basis: [
                        {
                            a: "3086d221a7d46bcde86c90e49284eb15",
                            b: "-e4437ed6010e88286f547fa90abfe4c3"
                        },
                        {
                            a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                            b: "3086d221a7d46bcde86c90e49284eb15"
                        }
                    ],
                    gRed: !1,
                    g: [
                        "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
                        "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
                        n
                    ]
                });
            },
            2961: (e, t, r)=>{
                "use strict";
                var n = r(4619), i = r(2519), s = r(9185), o = r(5366), a = r(5442), c = s.assert, h = r(5666), u = r(4375);
                function d(e) {
                    if (!(this instanceof d)) return new d(e);
                    "string" == typeof e && (c(Object.prototype.hasOwnProperty.call(o, e), "Unknown curve " + e), e = o[e]), e instanceof o.PresetCurve && (e = {
                        curve: e
                    }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash;
                }
                e.exports = d, d.prototype.keyPair = function(e) {
                    return new h(this, e);
                }, d.prototype.keyFromPrivate = function(e, t) {
                    return h.fromPrivate(this, e, t);
                }, d.prototype.keyFromPublic = function(e, t) {
                    return h.fromPublic(this, e, t);
                }, d.prototype.genKeyPair = function(e) {
                    e || (e = {});
                    for(var t = new i({
                        hash: this.hash,
                        pers: e.pers,
                        persEnc: e.persEnc || "utf8",
                        entropy: e.entropy || a(this.hash.hmacStrength),
                        entropyEnc: e.entropy && e.entropyEnc || "utf8",
                        nonce: this.n.toArray()
                    }), r = this.n.byteLength(), s = this.n.sub(new n(2));;){
                        var o = new n(t.generate(r));
                        if (!(o.cmp(s) > 0)) return o.iaddn(1), this.keyFromPrivate(o);
                    }
                }, d.prototype._truncateToN = function(e, t, r) {
                    var i;
                    if (n.isBN(e) || "number" == typeof e) i = (e = new n(e, 16)).byteLength();
                    else if ("object" == typeof e) i = e.length, e = new n(e, 16);
                    else {
                        var s = e.toString();
                        i = s.length + 1 >>> 1, e = new n(s, 16);
                    }
                    "number" != typeof r && (r = 8 * i);
                    var o = r - this.n.bitLength();
                    return o > 0 && (e = e.ushrn(o)), !t && e.cmp(this.n) >= 0 ? e.sub(this.n) : e;
                }, d.prototype.sign = function(e, t, r, s) {
                    if ("object" == typeof r && (s = r, r = null), s || (s = {}), "string" != typeof e && "number" != typeof e && !n.isBN(e)) {
                        c("object" == typeof e && e && "number" == typeof e.length, "Expected message to be an array-like, a hex string, or a BN instance"), c(e.length >>> 0 === e.length);
                        for(var o = 0; o < e.length; o++)c((255 & e[o]) === e[o]);
                    }
                    t = this.keyFromPrivate(t, r), e = this._truncateToN(e, !1, s.msgBitLength), c(!e.isNeg(), "Can not sign a negative message");
                    var a = this.n.byteLength(), h = t.getPrivate().toArray("be", a), d = e.toArray("be", a);
                    c(new n(d).eq(e), "Can not sign message");
                    for(var f = new i({
                        hash: this.hash,
                        entropy: h,
                        nonce: d,
                        pers: s.pers,
                        persEnc: s.persEnc || "utf8"
                    }), l = this.n.sub(new n(1)), p = 0;; p++){
                        var b = s.k ? s.k(p) : new n(f.generate(this.n.byteLength()));
                        if (!((b = this._truncateToN(b, !0)).cmpn(1) <= 0 || b.cmp(l) >= 0)) {
                            var g = this.g.mul(b);
                            if (!g.isInfinity()) {
                                var m = g.getX(), y = m.umod(this.n);
                                if (0 !== y.cmpn(0)) {
                                    var v = b.invm(this.n).mul(y.mul(t.getPrivate()).iadd(e));
                                    if (0 !== (v = v.umod(this.n)).cmpn(0)) {
                                        var w = (g.getY().isOdd() ? 1 : 0) | (0 !== m.cmp(y) ? 2 : 0);
                                        return s.canonical && v.cmp(this.nh) > 0 && (v = this.n.sub(v), w ^= 1), new u({
                                            r: y,
                                            s: v,
                                            recoveryParam: w
                                        });
                                    }
                                }
                            }
                        }
                    }
                }, d.prototype.verify = function(e, t, r, n, i) {
                    i || (i = {}), e = this._truncateToN(e, !1, i.msgBitLength), r = this.keyFromPublic(r, n);
                    var s = (t = new u(t, "hex")).r, o = t.s;
                    if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return !1;
                    if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
                    var a, c = o.invm(this.n), h = c.mul(e).umod(this.n), d = c.mul(s).umod(this.n);
                    return this.curve._maxwellTrick ? !(a = this.g.jmulAdd(h, r.getPublic(), d)).isInfinity() && a.eqXToP(s) : !(a = this.g.mulAdd(h, r.getPublic(), d)).isInfinity() && 0 === a.getX().umod(this.n).cmp(s);
                }, d.prototype.recoverPubKey = function(e, t, r, i) {
                    c((3 & r) === r, "The recovery param is more than two bits"), t = new u(t, i);
                    var s = this.n, o = new n(e), a = t.r, h = t.s, d = 1 & r, f = r >> 1;
                    if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && f) throw new Error("Unable to find sencond key candinate");
                    a = f ? this.curve.pointFromX(a.add(this.curve.n), d) : this.curve.pointFromX(a, d);
                    var l = t.r.invm(s), p = s.sub(o).mul(l).umod(s), b = h.mul(l).umod(s);
                    return this.g.mulAdd(p, a, b);
                }, d.prototype.getKeyRecoveryParam = function(e, t, r, n) {
                    if (null !== (t = new u(t, n)).recoveryParam) return t.recoveryParam;
                    for(var i = 0; i < 4; i++){
                        var s;
                        try {
                            s = this.recoverPubKey(e, t, i);
                        } catch (e) {
                            continue;
                        }
                        if (s.eq(r)) return i;
                    }
                    throw new Error("Unable to find valid recovery factor");
                };
            },
            5666: (e, t, r)=>{
                "use strict";
                var n = r(4619), i = r(9185).assert;
                function s(e, t) {
                    this.ec = e, this.priv = null, this.pub = null, t.priv && this._importPrivate(t.priv, t.privEnc), t.pub && this._importPublic(t.pub, t.pubEnc);
                }
                e.exports = s, s.fromPublic = function(e, t, r) {
                    return t instanceof s ? t : new s(e, {
                        pub: t,
                        pubEnc: r
                    });
                }, s.fromPrivate = function(e, t, r) {
                    return t instanceof s ? t : new s(e, {
                        priv: t,
                        privEnc: r
                    });
                }, s.prototype.validate = function() {
                    var e = this.getPublic();
                    return e.isInfinity() ? {
                        result: !1,
                        reason: "Invalid public key"
                    } : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? {
                        result: !0,
                        reason: null
                    } : {
                        result: !1,
                        reason: "Public key * N != O"
                    } : {
                        result: !1,
                        reason: "Public key is not a point"
                    };
                }, s.prototype.getPublic = function(e, t) {
                    return "string" == typeof e && (t = e, e = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), t ? this.pub.encode(t, e) : this.pub;
                }, s.prototype.getPrivate = function(e) {
                    return "hex" === e ? this.priv.toString(16, 2) : this.priv;
                }, s.prototype._importPrivate = function(e, t) {
                    this.priv = new n(e, t || 16), this.priv = this.priv.umod(this.ec.curve.n);
                }, s.prototype._importPublic = function(e, t) {
                    if (e.x || e.y) return "mont" === this.ec.curve.type ? i(e.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || i(e.x && e.y, "Need both x and y coordinate"), void (this.pub = this.ec.curve.point(e.x, e.y));
                    this.pub = this.ec.curve.decodePoint(e, t);
                }, s.prototype.derive = function(e) {
                    return e.validate() || i(e.validate(), "public point not validated"), e.mul(this.priv).getX();
                }, s.prototype.sign = function(e, t, r) {
                    return this.ec.sign(e, this, t, r);
                }, s.prototype.verify = function(e, t, r) {
                    return this.ec.verify(e, t, this, void 0, r);
                }, s.prototype.inspect = function() {
                    return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
                };
            },
            4375: (e, t, r)=>{
                "use strict";
                var n = r(4619), i = r(9185), s = i.assert;
                function o(e, t) {
                    if (e instanceof o) return e;
                    this._importDER(e, t) || (s(e.r && e.s, "Signature without r or s"), this.r = new n(e.r, 16), this.s = new n(e.s, 16), void 0 === e.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam);
                }
                function a() {
                    this.place = 0;
                }
                function c(e, t) {
                    var r = e[t.place++];
                    if (!(128 & r)) return r;
                    var n = 15 & r;
                    if (0 === n || n > 4) return !1;
                    if (0 === e[t.place]) return !1;
                    for(var i = 0, s = 0, o = t.place; s < n; s++, o++)i <<= 8, i |= e[o], i >>>= 0;
                    return !(i <= 127) && (t.place = o, i);
                }
                function h(e) {
                    for(var t = 0, r = e.length - 1; !e[t] && !(128 & e[t + 1]) && t < r;)t++;
                    return 0 === t ? e : e.slice(t);
                }
                function u(e, t) {
                    if (t < 128) e.push(t);
                    else {
                        var r = 1 + (Math.log(t) / Math.LN2 >>> 3);
                        for(e.push(128 | r); --r;)e.push(t >>> (r << 3) & 255);
                        e.push(t);
                    }
                }
                e.exports = o, o.prototype._importDER = function(e, t) {
                    e = i.toArray(e, t);
                    var r = new a;
                    if (48 !== e[r.place++]) return !1;
                    var s = c(e, r);
                    if (!1 === s) return !1;
                    if (s + r.place !== e.length) return !1;
                    if (2 !== e[r.place++]) return !1;
                    var o = c(e, r);
                    if (!1 === o) return !1;
                    if (128 & e[r.place]) return !1;
                    var h = e.slice(r.place, o + r.place);
                    if (r.place += o, 2 !== e[r.place++]) return !1;
                    var u = c(e, r);
                    if (!1 === u) return !1;
                    if (e.length !== u + r.place) return !1;
                    if (128 & e[r.place]) return !1;
                    var d = e.slice(r.place, u + r.place);
                    if (0 === h[0]) {
                        if (!(128 & h[1])) return !1;
                        h = h.slice(1);
                    }
                    if (0 === d[0]) {
                        if (!(128 & d[1])) return !1;
                        d = d.slice(1);
                    }
                    return this.r = new n(h), this.s = new n(d), this.recoveryParam = null, !0;
                }, o.prototype.toDER = function(e) {
                    var t = this.r.toArray(), r = this.s.toArray();
                    for(128 & t[0] && (t = [
                        0
                    ].concat(t)), 128 & r[0] && (r = [
                        0
                    ].concat(r)), t = h(t), r = h(r); !(r[0] || 128 & r[1]);)r = r.slice(1);
                    var n = [
                        2
                    ];
                    u(n, t.length), (n = n.concat(t)).push(2), u(n, r.length);
                    var s = n.concat(r), o = [
                        48
                    ];
                    return u(o, s.length), o = o.concat(s), i.encode(o, e);
                };
            },
            7808: (e, t, r)=>{
                "use strict";
                var n = r(1631), i = r(5366), s = r(9185), o = s.assert, a = s.parseBytes, c = r(6419), h = r(5406);
                function u(e) {
                    if (o("ed25519" === e, "only tested with ed25519 so far"), !(this instanceof u)) return new u(e);
                    e = i[e].curve, this.curve = e, this.g = e.g, this.g.precompute(e.n.bitLength() + 1), this.pointClass = e.point().constructor, this.encodingLength = Math.ceil(e.n.bitLength() / 8), this.hash = n.sha512;
                }
                e.exports = u, u.prototype.sign = function(e, t) {
                    e = a(e);
                    var r = this.keyFromSecret(t), n = this.hashInt(r.messagePrefix(), e), i = this.g.mul(n), s = this.encodePoint(i), o = this.hashInt(s, r.pubBytes(), e).mul(r.priv()), c = n.add(o).umod(this.curve.n);
                    return this.makeSignature({
                        R: i,
                        S: c,
                        Rencoded: s
                    });
                }, u.prototype.verify = function(e, t, r) {
                    if (e = a(e), (t = this.makeSignature(t)).S().gte(t.eddsa.curve.n) || t.S().isNeg()) return !1;
                    var n = this.keyFromPublic(r), i = this.hashInt(t.Rencoded(), n.pubBytes(), e), s = this.g.mul(t.S());
                    return t.R().add(n.pub().mul(i)).eq(s);
                }, u.prototype.hashInt = function() {
                    for(var e = this.hash(), t = 0; t < arguments.length; t++)e.update(arguments[t]);
                    return s.intFromLE(e.digest()).umod(this.curve.n);
                }, u.prototype.keyFromPublic = function(e) {
                    return c.fromPublic(this, e);
                }, u.prototype.keyFromSecret = function(e) {
                    return c.fromSecret(this, e);
                }, u.prototype.makeSignature = function(e) {
                    return e instanceof h ? e : new h(this, e);
                }, u.prototype.encodePoint = function(e) {
                    var t = e.getY().toArray("le", this.encodingLength);
                    return t[this.encodingLength - 1] |= e.getX().isOdd() ? 128 : 0, t;
                }, u.prototype.decodePoint = function(e) {
                    var t = (e = s.parseBytes(e)).length - 1, r = e.slice(0, t).concat(-129 & e[t]), n = !!(128 & e[t]), i = s.intFromLE(r);
                    return this.curve.pointFromY(i, n);
                }, u.prototype.encodeInt = function(e) {
                    return e.toArray("le", this.encodingLength);
                }, u.prototype.decodeInt = function(e) {
                    return s.intFromLE(e);
                }, u.prototype.isPoint = function(e) {
                    return e instanceof this.pointClass;
                };
            },
            6419: (e, t, r)=>{
                "use strict";
                var n = r(9185), i = n.assert, s = n.parseBytes, o = n.cachedProperty;
                function a(e, t) {
                    this.eddsa = e, this._secret = s(t.secret), e.isPoint(t.pub) ? this._pub = t.pub : this._pubBytes = s(t.pub);
                }
                a.fromPublic = function(e, t) {
                    return t instanceof a ? t : new a(e, {
                        pub: t
                    });
                }, a.fromSecret = function(e, t) {
                    return t instanceof a ? t : new a(e, {
                        secret: t
                    });
                }, a.prototype.secret = function() {
                    return this._secret;
                }, o(a, "pubBytes", function() {
                    return this.eddsa.encodePoint(this.pub());
                }), o(a, "pub", function() {
                    return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
                }), o(a, "privBytes", function() {
                    var e = this.eddsa, t = this.hash(), r = e.encodingLength - 1, n = t.slice(0, e.encodingLength);
                    return n[0] &= 248, n[r] &= 127, n[r] |= 64, n;
                }), o(a, "priv", function() {
                    return this.eddsa.decodeInt(this.privBytes());
                }), o(a, "hash", function() {
                    return this.eddsa.hash().update(this.secret()).digest();
                }), o(a, "messagePrefix", function() {
                    return this.hash().slice(this.eddsa.encodingLength);
                }), a.prototype.sign = function(e) {
                    return i(this._secret, "KeyPair can only verify"), this.eddsa.sign(e, this);
                }, a.prototype.verify = function(e, t) {
                    return this.eddsa.verify(e, t, this);
                }, a.prototype.getSecret = function(e) {
                    return i(this._secret, "KeyPair is public only"), n.encode(this.secret(), e);
                }, a.prototype.getPublic = function(e) {
                    return n.encode(this.pubBytes(), e);
                }, e.exports = a;
            },
            5406: (e, t, r)=>{
                "use strict";
                var n = r(4619), i = r(9185), s = i.assert, o = i.cachedProperty, a = i.parseBytes;
                function c(e, t) {
                    this.eddsa = e, "object" != typeof t && (t = a(t)), Array.isArray(t) && (s(t.length === 2 * e.encodingLength, "Signature has invalid size"), t = {
                        R: t.slice(0, e.encodingLength),
                        S: t.slice(e.encodingLength)
                    }), s(t.R && t.S, "Signature without R or S"), e.isPoint(t.R) && (this._R = t.R), t.S instanceof n && (this._S = t.S), this._Rencoded = Array.isArray(t.R) ? t.R : t.Rencoded, this._Sencoded = Array.isArray(t.S) ? t.S : t.Sencoded;
                }
                o(c, "S", function() {
                    return this.eddsa.decodeInt(this.Sencoded());
                }), o(c, "R", function() {
                    return this.eddsa.decodePoint(this.Rencoded());
                }), o(c, "Rencoded", function() {
                    return this.eddsa.encodePoint(this.R());
                }), o(c, "Sencoded", function() {
                    return this.eddsa.encodeInt(this.S());
                }), c.prototype.toBytes = function() {
                    return this.Rencoded().concat(this.Sencoded());
                }, c.prototype.toHex = function() {
                    return i.encode(this.toBytes(), "hex").toUpperCase();
                }, e.exports = c;
            },
            7153: (e)=>{
                e.exports = {
                    doubles: {
                        step: 4,
                        points: [
                            [
                                "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a",
                                "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"
                            ],
                            [
                                "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508",
                                "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"
                            ],
                            [
                                "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739",
                                "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"
                            ],
                            [
                                "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640",
                                "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"
                            ],
                            [
                                "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c",
                                "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"
                            ],
                            [
                                "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda",
                                "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"
                            ],
                            [
                                "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa",
                                "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"
                            ],
                            [
                                "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0",
                                "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"
                            ],
                            [
                                "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d",
                                "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"
                            ],
                            [
                                "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d",
                                "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"
                            ],
                            [
                                "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1",
                                "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"
                            ],
                            [
                                "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0",
                                "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"
                            ],
                            [
                                "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047",
                                "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"
                            ],
                            [
                                "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862",
                                "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"
                            ],
                            [
                                "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7",
                                "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"
                            ],
                            [
                                "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd",
                                "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"
                            ],
                            [
                                "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83",
                                "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"
                            ],
                            [
                                "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a",
                                "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"
                            ],
                            [
                                "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8",
                                "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"
                            ],
                            [
                                "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d",
                                "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"
                            ],
                            [
                                "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725",
                                "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"
                            ],
                            [
                                "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754",
                                "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"
                            ],
                            [
                                "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c",
                                "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"
                            ],
                            [
                                "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6",
                                "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"
                            ],
                            [
                                "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39",
                                "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"
                            ],
                            [
                                "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891",
                                "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"
                            ],
                            [
                                "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b",
                                "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"
                            ],
                            [
                                "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03",
                                "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"
                            ],
                            [
                                "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d",
                                "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"
                            ],
                            [
                                "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070",
                                "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"
                            ],
                            [
                                "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4",
                                "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"
                            ],
                            [
                                "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da",
                                "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"
                            ],
                            [
                                "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11",
                                "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"
                            ],
                            [
                                "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e",
                                "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"
                            ],
                            [
                                "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41",
                                "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"
                            ],
                            [
                                "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef",
                                "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"
                            ],
                            [
                                "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8",
                                "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"
                            ],
                            [
                                "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d",
                                "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"
                            ],
                            [
                                "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96",
                                "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"
                            ],
                            [
                                "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd",
                                "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"
                            ],
                            [
                                "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5",
                                "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"
                            ],
                            [
                                "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266",
                                "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"
                            ],
                            [
                                "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71",
                                "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"
                            ],
                            [
                                "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac",
                                "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"
                            ],
                            [
                                "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751",
                                "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"
                            ],
                            [
                                "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e",
                                "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"
                            ],
                            [
                                "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241",
                                "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"
                            ],
                            [
                                "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3",
                                "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"
                            ],
                            [
                                "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f",
                                "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"
                            ],
                            [
                                "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19",
                                "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"
                            ],
                            [
                                "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be",
                                "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"
                            ],
                            [
                                "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9",
                                "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"
                            ],
                            [
                                "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2",
                                "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"
                            ],
                            [
                                "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13",
                                "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"
                            ],
                            [
                                "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c",
                                "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"
                            ],
                            [
                                "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba",
                                "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"
                            ],
                            [
                                "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151",
                                "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"
                            ],
                            [
                                "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073",
                                "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"
                            ],
                            [
                                "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458",
                                "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"
                            ],
                            [
                                "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b",
                                "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"
                            ],
                            [
                                "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366",
                                "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"
                            ],
                            [
                                "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa",
                                "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"
                            ],
                            [
                                "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0",
                                "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"
                            ],
                            [
                                "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787",
                                "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"
                            ],
                            [
                                "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e",
                                "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"
                            ]
                        ]
                    },
                    naf: {
                        wnd: 7,
                        points: [
                            [
                                "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9",
                                "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"
                            ],
                            [
                                "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4",
                                "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"
                            ],
                            [
                                "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc",
                                "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"
                            ],
                            [
                                "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe",
                                "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"
                            ],
                            [
                                "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb",
                                "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"
                            ],
                            [
                                "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8",
                                "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"
                            ],
                            [
                                "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e",
                                "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"
                            ],
                            [
                                "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34",
                                "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"
                            ],
                            [
                                "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c",
                                "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"
                            ],
                            [
                                "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5",
                                "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"
                            ],
                            [
                                "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f",
                                "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"
                            ],
                            [
                                "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714",
                                "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"
                            ],
                            [
                                "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729",
                                "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"
                            ],
                            [
                                "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db",
                                "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"
                            ],
                            [
                                "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4",
                                "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"
                            ],
                            [
                                "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5",
                                "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"
                            ],
                            [
                                "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479",
                                "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"
                            ],
                            [
                                "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d",
                                "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"
                            ],
                            [
                                "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f",
                                "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"
                            ],
                            [
                                "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb",
                                "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"
                            ],
                            [
                                "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9",
                                "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"
                            ],
                            [
                                "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963",
                                "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"
                            ],
                            [
                                "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74",
                                "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"
                            ],
                            [
                                "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530",
                                "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"
                            ],
                            [
                                "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b",
                                "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"
                            ],
                            [
                                "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247",
                                "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"
                            ],
                            [
                                "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1",
                                "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"
                            ],
                            [
                                "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120",
                                "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"
                            ],
                            [
                                "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435",
                                "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"
                            ],
                            [
                                "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18",
                                "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"
                            ],
                            [
                                "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8",
                                "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"
                            ],
                            [
                                "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb",
                                "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"
                            ],
                            [
                                "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f",
                                "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"
                            ],
                            [
                                "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143",
                                "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"
                            ],
                            [
                                "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba",
                                "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"
                            ],
                            [
                                "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45",
                                "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"
                            ],
                            [
                                "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a",
                                "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"
                            ],
                            [
                                "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e",
                                "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"
                            ],
                            [
                                "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8",
                                "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"
                            ],
                            [
                                "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c",
                                "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"
                            ],
                            [
                                "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519",
                                "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"
                            ],
                            [
                                "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab",
                                "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"
                            ],
                            [
                                "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca",
                                "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"
                            ],
                            [
                                "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf",
                                "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"
                            ],
                            [
                                "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610",
                                "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"
                            ],
                            [
                                "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4",
                                "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"
                            ],
                            [
                                "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c",
                                "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"
                            ],
                            [
                                "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940",
                                "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"
                            ],
                            [
                                "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980",
                                "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"
                            ],
                            [
                                "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3",
                                "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"
                            ],
                            [
                                "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf",
                                "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"
                            ],
                            [
                                "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63",
                                "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"
                            ],
                            [
                                "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448",
                                "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"
                            ],
                            [
                                "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf",
                                "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"
                            ],
                            [
                                "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5",
                                "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"
                            ],
                            [
                                "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6",
                                "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"
                            ],
                            [
                                "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5",
                                "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"
                            ],
                            [
                                "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99",
                                "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"
                            ],
                            [
                                "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51",
                                "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"
                            ],
                            [
                                "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5",
                                "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"
                            ],
                            [
                                "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5",
                                "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"
                            ],
                            [
                                "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997",
                                "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"
                            ],
                            [
                                "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881",
                                "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"
                            ],
                            [
                                "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5",
                                "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"
                            ],
                            [
                                "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66",
                                "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"
                            ],
                            [
                                "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726",
                                "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"
                            ],
                            [
                                "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede",
                                "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"
                            ],
                            [
                                "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94",
                                "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"
                            ],
                            [
                                "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31",
                                "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"
                            ],
                            [
                                "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51",
                                "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"
                            ],
                            [
                                "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252",
                                "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"
                            ],
                            [
                                "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5",
                                "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"
                            ],
                            [
                                "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b",
                                "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"
                            ],
                            [
                                "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4",
                                "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"
                            ],
                            [
                                "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f",
                                "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"
                            ],
                            [
                                "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889",
                                "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"
                            ],
                            [
                                "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246",
                                "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"
                            ],
                            [
                                "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984",
                                "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"
                            ],
                            [
                                "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a",
                                "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"
                            ],
                            [
                                "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030",
                                "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"
                            ],
                            [
                                "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197",
                                "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"
                            ],
                            [
                                "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593",
                                "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"
                            ],
                            [
                                "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef",
                                "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"
                            ],
                            [
                                "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38",
                                "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"
                            ],
                            [
                                "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a",
                                "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"
                            ],
                            [
                                "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111",
                                "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"
                            ],
                            [
                                "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502",
                                "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"
                            ],
                            [
                                "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea",
                                "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"
                            ],
                            [
                                "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26",
                                "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"
                            ],
                            [
                                "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986",
                                "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"
                            ],
                            [
                                "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e",
                                "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"
                            ],
                            [
                                "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4",
                                "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"
                            ],
                            [
                                "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda",
                                "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"
                            ],
                            [
                                "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859",
                                "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"
                            ],
                            [
                                "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f",
                                "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"
                            ],
                            [
                                "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c",
                                "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"
                            ],
                            [
                                "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942",
                                "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"
                            ],
                            [
                                "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a",
                                "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"
                            ],
                            [
                                "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80",
                                "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"
                            ],
                            [
                                "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d",
                                "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"
                            ],
                            [
                                "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1",
                                "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"
                            ],
                            [
                                "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63",
                                "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"
                            ],
                            [
                                "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352",
                                "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"
                            ],
                            [
                                "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193",
                                "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"
                            ],
                            [
                                "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00",
                                "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"
                            ],
                            [
                                "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58",
                                "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"
                            ],
                            [
                                "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7",
                                "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"
                            ],
                            [
                                "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8",
                                "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"
                            ],
                            [
                                "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e",
                                "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"
                            ],
                            [
                                "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d",
                                "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"
                            ],
                            [
                                "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b",
                                "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"
                            ],
                            [
                                "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f",
                                "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"
                            ],
                            [
                                "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6",
                                "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"
                            ],
                            [
                                "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297",
                                "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"
                            ],
                            [
                                "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a",
                                "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"
                            ],
                            [
                                "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c",
                                "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"
                            ],
                            [
                                "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52",
                                "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"
                            ],
                            [
                                "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb",
                                "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"
                            ],
                            [
                                "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065",
                                "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"
                            ],
                            [
                                "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917",
                                "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"
                            ],
                            [
                                "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9",
                                "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"
                            ],
                            [
                                "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3",
                                "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"
                            ],
                            [
                                "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57",
                                "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"
                            ],
                            [
                                "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66",
                                "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"
                            ],
                            [
                                "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8",
                                "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"
                            ],
                            [
                                "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721",
                                "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"
                            ],
                            [
                                "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180",
                                "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"
                            ]
                        ]
                    }
                };
            },
            9185: (e, t, r)=>{
                "use strict";
                var n = t, i = r(4619), s = r(5578), o = r(4209);
                n.assert = s, n.toArray = o.toArray, n.zero2 = o.zero2, n.toHex = o.toHex, n.encode = o.encode, n.getNAF = function(e, t, r) {
                    var n, i = new Array(Math.max(e.bitLength(), r) + 1);
                    for(n = 0; n < i.length; n += 1)i[n] = 0;
                    var s = 1 << t + 1, o = e.clone();
                    for(n = 0; n < i.length; n++){
                        var a, c = o.andln(s - 1);
                        o.isOdd() ? (a = c > (s >> 1) - 1 ? (s >> 1) - c : c, o.isubn(a)) : a = 0, i[n] = a, o.iushrn(1);
                    }
                    return i;
                }, n.getJSF = function(e, t) {
                    var r = [
                        [],
                        []
                    ];
                    e = e.clone(), t = t.clone();
                    for(var n, i = 0, s = 0; e.cmpn(-i) > 0 || t.cmpn(-s) > 0;){
                        var o, a, c = e.andln(3) + i & 3, h = t.andln(3) + s & 3;
                        3 === c && (c = -1), 3 === h && (h = -1), o = 1 & c ? 3 != (n = e.andln(7) + i & 7) && 5 !== n || 2 !== h ? c : -c : 0, r[0].push(o), a = 1 & h ? 3 != (n = t.andln(7) + s & 7) && 5 !== n || 2 !== c ? h : -h : 0, r[1].push(a), 2 * i === o + 1 && (i = 1 - i), 2 * s === a + 1 && (s = 1 - s), e.iushrn(1), t.iushrn(1);
                    }
                    return r;
                }, n.cachedProperty = function(e, t, r) {
                    var n = "_" + t;
                    e.prototype[t] = function() {
                        return void 0 !== this[n] ? this[n] : this[n] = r.call(this);
                    };
                }, n.parseBytes = function(e) {
                    return "string" == typeof e ? n.toArray(e, "hex") : e;
                }, n.intFromLE = function(e) {
                    return new i(e, "hex", "le");
                };
            },
            2579: (e)=>{
                "use strict";
                var t = Object.prototype.hasOwnProperty, r = "~";
                function n() {}
                function i(e, t, r) {
                    this.fn = e, this.context = t, this.once = r || !1;
                }
                function s(e, t, n, s, o) {
                    if ("function" != typeof n) throw new TypeError("The listener must be a function");
                    var a = new i(n, s || e, o), c = r ? r + t : t;
                    return e._events[c] ? e._events[c].fn ? e._events[c] = [
                        e._events[c],
                        a
                    ] : e._events[c].push(a) : (e._events[c] = a, e._eventsCount++), e;
                }
                function o(e, t) {
                    0 == --e._eventsCount ? e._events = new n : delete e._events[t];
                }
                function a() {
                    this._events = new n, this._eventsCount = 0;
                }
                Object.create && (n.prototype = Object.create(null), (new n).__proto__ || (r = !1)), a.prototype.eventNames = function() {
                    var e, n, i = [];
                    if (0 === this._eventsCount) return i;
                    for(n in e = this._events)t.call(e, n) && i.push(r ? n.slice(1) : n);
                    return Object.getOwnPropertySymbols ? i.concat(Object.getOwnPropertySymbols(e)) : i;
                }, a.prototype.listeners = function(e) {
                    var t = r ? r + e : e, n = this._events[t];
                    if (!n) return [];
                    if (n.fn) return [
                        n.fn
                    ];
                    for(var i = 0, s = n.length, o = new Array(s); i < s; i++)o[i] = n[i].fn;
                    return o;
                }, a.prototype.listenerCount = function(e) {
                    var t = r ? r + e : e, n = this._events[t];
                    return n ? n.fn ? 1 : n.length : 0;
                }, a.prototype.emit = function(e, t, n, i, s, o) {
                    var a = r ? r + e : e;
                    if (!this._events[a]) return !1;
                    var c, h, u = this._events[a], d = arguments.length;
                    if (u.fn) {
                        switch(u.once && this.removeListener(e, u.fn, void 0, !0), d){
                            case 1:
                                return u.fn.call(u.context), !0;
                            case 2:
                                return u.fn.call(u.context, t), !0;
                            case 3:
                                return u.fn.call(u.context, t, n), !0;
                            case 4:
                                return u.fn.call(u.context, t, n, i), !0;
                            case 5:
                                return u.fn.call(u.context, t, n, i, s), !0;
                            case 6:
                                return u.fn.call(u.context, t, n, i, s, o), !0;
                        }
                        for(h = 1, c = new Array(d - 1); h < d; h++)c[h - 1] = arguments[h];
                        u.fn.apply(u.context, c);
                    } else {
                        var f, l = u.length;
                        for(h = 0; h < l; h++)switch(u[h].once && this.removeListener(e, u[h].fn, void 0, !0), d){
                            case 1:
                                u[h].fn.call(u[h].context);
                                break;
                            case 2:
                                u[h].fn.call(u[h].context, t);
                                break;
                            case 3:
                                u[h].fn.call(u[h].context, t, n);
                                break;
                            case 4:
                                u[h].fn.call(u[h].context, t, n, i);
                                break;
                            default:
                                if (!c) for(f = 1, c = new Array(d - 1); f < d; f++)c[f - 1] = arguments[f];
                                u[h].fn.apply(u[h].context, c);
                        }
                    }
                    return !0;
                }, a.prototype.on = function(e, t, r) {
                    return s(this, e, t, r, !1);
                }, a.prototype.once = function(e, t, r) {
                    return s(this, e, t, r, !0);
                }, a.prototype.removeListener = function(e, t, n, i) {
                    var s = r ? r + e : e;
                    if (!this._events[s]) return this;
                    if (!t) return o(this, s), this;
                    var a = this._events[s];
                    if (a.fn) a.fn !== t || i && !a.once || n && a.context !== n || o(this, s);
                    else {
                        for(var c = 0, h = [], u = a.length; c < u; c++)(a[c].fn !== t || i && !a[c].once || n && a[c].context !== n) && h.push(a[c]);
                        h.length ? this._events[s] = 1 === h.length ? h[0] : h : o(this, s);
                    }
                    return this;
                }, a.prototype.removeAllListeners = function(e) {
                    var t;
                    return e ? (t = r ? r + e : e, this._events[t] && o(this, t)) : (this._events = new n, this._eventsCount = 0), this;
                }, a.prototype.off = a.prototype.removeListener, a.prototype.addListener = a.prototype.on, a.prefixed = r, a.EventEmitter = a, e.exports = a;
            },
            381: (e)=>{
                "use strict";
                var t, r = "object" == typeof Reflect ? Reflect : null, n = r && "function" == typeof r.apply ? r.apply : function(e, t, r) {
                    return Function.prototype.apply.call(e, t, r);
                };
                t = r && "function" == typeof r.ownKeys ? r.ownKeys : Object.getOwnPropertySymbols ? function(e) {
                    return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e));
                } : function(e) {
                    return Object.getOwnPropertyNames(e);
                };
                var i = Number.isNaN || function(e) {
                    return e != e;
                };
                function s() {
                    s.init.call(this);
                }
                e.exports = s, e.exports.once = function(e, t) {
                    return new Promise(function(r, n) {
                        function i(r) {
                            e.removeListener(t, s), n(r);
                        }
                        function s() {
                            "function" == typeof e.removeListener && e.removeListener("error", i), r([].slice.call(arguments));
                        }
                        b(e, t, s, {
                            once: !0
                        }), "error" !== t && function(e, t) {
                            "function" == typeof e.on && b(e, "error", t, {
                                once: !0
                            });
                        }(e, i);
                    });
                }, s.EventEmitter = s, s.prototype._events = void 0, s.prototype._eventsCount = 0, s.prototype._maxListeners = void 0;
                var o = 10;
                function a(e) {
                    if ("function" != typeof e) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e);
                }
                function c(e) {
                    return void 0 === e._maxListeners ? s.defaultMaxListeners : e._maxListeners;
                }
                function h(e, t, r, n) {
                    var i, s, o, h;
                    if (a(r), void 0 === (s = e._events) ? (s = e._events = Object.create(null), e._eventsCount = 0) : (void 0 !== s.newListener && (e.emit("newListener", t, r.listener ? r.listener : r), s = e._events), o = s[t]), void 0 === o) o = s[t] = r, ++e._eventsCount;
                    else if ("function" == typeof o ? o = s[t] = n ? [
                        r,
                        o
                    ] : [
                        o,
                        r
                    ] : n ? o.unshift(r) : o.push(r), (i = c(e)) > 0 && o.length > i && !o.warned) {
                        o.warned = !0;
                        var u = new Error("Possible EventEmitter memory leak detected. " + o.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                        u.name = "MaxListenersExceededWarning", u.emitter = e, u.type = t, u.count = o.length, h = u, console && console.warn && console.warn(h);
                    }
                    return e;
                }
                function u() {
                    if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
                }
                function d(e, t, r) {
                    var n = {
                        fired: !1,
                        wrapFn: void 0,
                        target: e,
                        type: t,
                        listener: r
                    }, i = u.bind(n);
                    return i.listener = r, n.wrapFn = i, i;
                }
                function f(e, t, r) {
                    var n = e._events;
                    if (void 0 === n) return [];
                    var i = n[t];
                    return void 0 === i ? [] : "function" == typeof i ? r ? [
                        i.listener || i
                    ] : [
                        i
                    ] : r ? function(e) {
                        for(var t = new Array(e.length), r = 0; r < t.length; ++r)t[r] = e[r].listener || e[r];
                        return t;
                    }(i) : p(i, i.length);
                }
                function l(e) {
                    var t = this._events;
                    if (void 0 !== t) {
                        var r = t[e];
                        if ("function" == typeof r) return 1;
                        if (void 0 !== r) return r.length;
                    }
                    return 0;
                }
                function p(e, t) {
                    for(var r = new Array(t), n = 0; n < t; ++n)r[n] = e[n];
                    return r;
                }
                function b(e, t, r, n) {
                    if ("function" == typeof e.on) n.once ? e.once(t, r) : e.on(t, r);
                    else {
                        if ("function" != typeof e.addEventListener) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e);
                        e.addEventListener(t, function i(s) {
                            n.once && e.removeEventListener(t, i), r(s);
                        });
                    }
                }
                Object.defineProperty(s, "defaultMaxListeners", {
                    enumerable: !0,
                    get: function() {
                        return o;
                    },
                    set: function(e) {
                        if ("number" != typeof e || e < 0 || i(e)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
                        o = e;
                    }
                }), s.init = function() {
                    void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
                }, s.prototype.setMaxListeners = function(e) {
                    if ("number" != typeof e || e < 0 || i(e)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
                    return this._maxListeners = e, this;
                }, s.prototype.getMaxListeners = function() {
                    return c(this);
                }, s.prototype.emit = function(e) {
                    for(var t = [], r = 1; r < arguments.length; r++)t.push(arguments[r]);
                    var i = "error" === e, s = this._events;
                    if (void 0 !== s) i = i && void 0 === s.error;
                    else if (!i) return !1;
                    if (i) {
                        var o;
                        if (t.length > 0 && (o = t[0]), o instanceof Error) throw o;
                        var a = new Error("Unhandled error." + (o ? " (" + o.message + ")" : ""));
                        throw a.context = o, a;
                    }
                    var c = s[e];
                    if (void 0 === c) return !1;
                    if ("function" == typeof c) n(c, this, t);
                    else {
                        var h = c.length, u = p(c, h);
                        for(r = 0; r < h; ++r)n(u[r], this, t);
                    }
                    return !0;
                }, s.prototype.addListener = function(e, t) {
                    return h(this, e, t, !1);
                }, s.prototype.on = s.prototype.addListener, s.prototype.prependListener = function(e, t) {
                    return h(this, e, t, !0);
                }, s.prototype.once = function(e, t) {
                    return a(t), this.on(e, d(this, e, t)), this;
                }, s.prototype.prependOnceListener = function(e, t) {
                    return a(t), this.prependListener(e, d(this, e, t)), this;
                }, s.prototype.removeListener = function(e, t) {
                    var r, n, i, s, o;
                    if (a(t), void 0 === (n = this._events)) return this;
                    if (void 0 === (r = n[e])) return this;
                    if (r === t || r.listener === t) 0 == --this._eventsCount ? this._events = Object.create(null) : (delete n[e], n.removeListener && this.emit("removeListener", e, r.listener || t));
                    else if ("function" != typeof r) {
                        for(i = -1, s = r.length - 1; s >= 0; s--)if (r[s] === t || r[s].listener === t) {
                            o = r[s].listener, i = s;
                            break;
                        }
                        if (i < 0) return this;
                        0 === i ? r.shift() : function(e, t) {
                            for(; t + 1 < e.length; t++)e[t] = e[t + 1];
                            e.pop();
                        }(r, i), 1 === r.length && (n[e] = r[0]), void 0 !== n.removeListener && this.emit("removeListener", e, o || t);
                    }
                    return this;
                }, s.prototype.off = s.prototype.removeListener, s.prototype.removeAllListeners = function(e) {
                    var t, r, n;
                    if (void 0 === (r = this._events)) return this;
                    if (void 0 === r.removeListener) return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== r[e] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete r[e]), this;
                    if (0 === arguments.length) {
                        var i, s = Object.keys(r);
                        for(n = 0; n < s.length; ++n)"removeListener" !== (i = s[n]) && this.removeAllListeners(i);
                        return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
                    }
                    if ("function" == typeof (t = r[e])) this.removeListener(e, t);
                    else if (void 0 !== t) for(n = t.length - 1; n >= 0; n--)this.removeListener(e, t[n]);
                    return this;
                }, s.prototype.listeners = function(e) {
                    return f(this, e, !0);
                }, s.prototype.rawListeners = function(e) {
                    return f(this, e, !1);
                }, s.listenerCount = function(e, t) {
                    return "function" == typeof e.listenerCount ? e.listenerCount(t) : l.call(e, t);
                }, s.prototype.listenerCount = l, s.prototype.eventNames = function() {
                    return this._eventsCount > 0 ? t(this._events) : [];
                };
            },
            1702: (e)=>{
                "use strict";
                e.exports = function(e, t) {
                    for(var r = {}, n = Object.keys(e), i = Array.isArray(t), s = 0; s < n.length; s++){
                        var o = n[s], a = e[o];
                        (i ? -1 !== t.indexOf(o) : t(o, a, e)) && (r[o] = a);
                    }
                    return r;
                };
            },
            1631: (e, t, r)=>{
                var n = t;
                n.utils = r(7905), n.common = r(4427), n.sha = r(1822), n.ripemd = r(7317), n.hmac = r(7309), n.sha1 = n.sha.sha1, n.sha256 = n.sha.sha256, n.sha224 = n.sha.sha224, n.sha384 = n.sha.sha384, n.sha512 = n.sha.sha512, n.ripemd160 = n.ripemd.ripemd160;
            },
            4427: (e, t, r)=>{
                "use strict";
                var n = r(7905), i = r(5578);
                function s() {
                    this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
                }
                t.BlockHash = s, s.prototype.update = function(e, t) {
                    if (e = n.toArray(e, t), this.pending ? this.pending = this.pending.concat(e) : this.pending = e, this.pendingTotal += e.length, this.pending.length >= this._delta8) {
                        var r = (e = this.pending).length % this._delta8;
                        this.pending = e.slice(e.length - r, e.length), 0 === this.pending.length && (this.pending = null), e = n.join32(e, 0, e.length - r, this.endian);
                        for(var i = 0; i < e.length; i += this._delta32)this._update(e, i, i + this._delta32);
                    }
                    return this;
                }, s.prototype.digest = function(e) {
                    return this.update(this._pad()), i(null === this.pending), this._digest(e);
                }, s.prototype._pad = function() {
                    var e = this.pendingTotal, t = this._delta8, r = t - (e + this.padLength) % t, n = new Array(r + this.padLength);
                    n[0] = 128;
                    for(var i = 1; i < r; i++)n[i] = 0;
                    if (e <<= 3, "big" === this.endian) {
                        for(var s = 8; s < this.padLength; s++)n[i++] = 0;
                        n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = e >>> 24 & 255, n[i++] = e >>> 16 & 255, n[i++] = e >>> 8 & 255, n[i++] = 255 & e;
                    } else for(n[i++] = 255 & e, n[i++] = e >>> 8 & 255, n[i++] = e >>> 16 & 255, n[i++] = e >>> 24 & 255, n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = 0, s = 8; s < this.padLength; s++)n[i++] = 0;
                    return n;
                };
            },
            7309: (e, t, r)=>{
                "use strict";
                var n = r(7905), i = r(5578);
                function s(e, t, r) {
                    if (!(this instanceof s)) return new s(e, t, r);
                    this.Hash = e, this.blockSize = e.blockSize / 8, this.outSize = e.outSize / 8, this.inner = null, this.outer = null, this._init(n.toArray(t, r));
                }
                e.exports = s, s.prototype._init = function(e) {
                    e.length > this.blockSize && (e = (new this.Hash).update(e).digest()), i(e.length <= this.blockSize);
                    for(var t = e.length; t < this.blockSize; t++)e.push(0);
                    for(t = 0; t < e.length; t++)e[t] ^= 54;
                    for(this.inner = (new this.Hash).update(e), t = 0; t < e.length; t++)e[t] ^= 106;
                    this.outer = (new this.Hash).update(e);
                }, s.prototype.update = function(e, t) {
                    return this.inner.update(e, t), this;
                }, s.prototype.digest = function(e) {
                    return this.outer.update(this.inner.digest()), this.outer.digest(e);
                };
            },
            7317: (e, t, r)=>{
                "use strict";
                var n = r(7905), i = r(4427), s = n.rotl32, o = n.sum32, a = n.sum32_3, c = n.sum32_4, h = i.BlockHash;
                function u() {
                    if (!(this instanceof u)) return new u;
                    h.call(this), this.h = [
                        1732584193,
                        4023233417,
                        2562383102,
                        271733878,
                        3285377520
                    ], this.endian = "little";
                }
                function d(e, t, r, n) {
                    return e <= 15 ? t ^ r ^ n : e <= 31 ? t & r | ~t & n : e <= 47 ? (t | ~r) ^ n : e <= 63 ? t & n | r & ~n : t ^ (r | ~n);
                }
                function f(e) {
                    return e <= 15 ? 0 : e <= 31 ? 1518500249 : e <= 47 ? 1859775393 : e <= 63 ? 2400959708 : 2840853838;
                }
                function l(e) {
                    return e <= 15 ? 1352829926 : e <= 31 ? 1548603684 : e <= 47 ? 1836072691 : e <= 63 ? 2053994217 : 0;
                }
                n.inherits(u, h), t.ripemd160 = u, u.blockSize = 512, u.outSize = 160, u.hmacStrength = 192, u.padLength = 64, u.prototype._update = function(e, t) {
                    for(var r = this.h[0], n = this.h[1], i = this.h[2], h = this.h[3], u = this.h[4], y = r, v = n, w = i, _ = h, E = u, S = 0; S < 80; S++){
                        var A = o(s(c(r, d(S, n, i, h), e[p[S] + t], f(S)), g[S]), u);
                        r = u, u = h, h = s(i, 10), i = n, n = A, A = o(s(c(y, d(79 - S, v, w, _), e[b[S] + t], l(S)), m[S]), E), y = E, E = _, _ = s(w, 10), w = v, v = A;
                    }
                    A = a(this.h[1], i, _), this.h[1] = a(this.h[2], h, E), this.h[2] = a(this.h[3], u, y), this.h[3] = a(this.h[4], r, v), this.h[4] = a(this.h[0], n, w), this.h[0] = A;
                }, u.prototype._digest = function(e) {
                    return "hex" === e ? n.toHex32(this.h, "little") : n.split32(this.h, "little");
                };
                var p = [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    7,
                    4,
                    13,
                    1,
                    10,
                    6,
                    15,
                    3,
                    12,
                    0,
                    9,
                    5,
                    2,
                    14,
                    11,
                    8,
                    3,
                    10,
                    14,
                    4,
                    9,
                    15,
                    8,
                    1,
                    2,
                    7,
                    0,
                    6,
                    13,
                    11,
                    5,
                    12,
                    1,
                    9,
                    11,
                    10,
                    0,
                    8,
                    12,
                    4,
                    13,
                    3,
                    7,
                    15,
                    14,
                    5,
                    6,
                    2,
                    4,
                    0,
                    5,
                    9,
                    7,
                    12,
                    2,
                    10,
                    14,
                    1,
                    3,
                    8,
                    11,
                    6,
                    15,
                    13
                ], b = [
                    5,
                    14,
                    7,
                    0,
                    9,
                    2,
                    11,
                    4,
                    13,
                    6,
                    15,
                    8,
                    1,
                    10,
                    3,
                    12,
                    6,
                    11,
                    3,
                    7,
                    0,
                    13,
                    5,
                    10,
                    14,
                    15,
                    8,
                    12,
                    4,
                    9,
                    1,
                    2,
                    15,
                    5,
                    1,
                    3,
                    7,
                    14,
                    6,
                    9,
                    11,
                    8,
                    12,
                    2,
                    10,
                    0,
                    4,
                    13,
                    8,
                    6,
                    4,
                    1,
                    3,
                    11,
                    15,
                    0,
                    5,
                    12,
                    2,
                    13,
                    9,
                    7,
                    10,
                    14,
                    12,
                    15,
                    10,
                    4,
                    1,
                    5,
                    8,
                    7,
                    6,
                    2,
                    13,
                    14,
                    0,
                    3,
                    9,
                    11
                ], g = [
                    11,
                    14,
                    15,
                    12,
                    5,
                    8,
                    7,
                    9,
                    11,
                    13,
                    14,
                    15,
                    6,
                    7,
                    9,
                    8,
                    7,
                    6,
                    8,
                    13,
                    11,
                    9,
                    7,
                    15,
                    7,
                    12,
                    15,
                    9,
                    11,
                    7,
                    13,
                    12,
                    11,
                    13,
                    6,
                    7,
                    14,
                    9,
                    13,
                    15,
                    14,
                    8,
                    13,
                    6,
                    5,
                    12,
                    7,
                    5,
                    11,
                    12,
                    14,
                    15,
                    14,
                    15,
                    9,
                    8,
                    9,
                    14,
                    5,
                    6,
                    8,
                    6,
                    5,
                    12,
                    9,
                    15,
                    5,
                    11,
                    6,
                    8,
                    13,
                    12,
                    5,
                    12,
                    13,
                    14,
                    11,
                    8,
                    5,
                    6
                ], m = [
                    8,
                    9,
                    9,
                    11,
                    13,
                    15,
                    15,
                    5,
                    7,
                    7,
                    8,
                    11,
                    14,
                    14,
                    12,
                    6,
                    9,
                    13,
                    15,
                    7,
                    12,
                    8,
                    9,
                    11,
                    7,
                    7,
                    12,
                    7,
                    6,
                    15,
                    13,
                    11,
                    9,
                    7,
                    15,
                    11,
                    8,
                    6,
                    6,
                    14,
                    12,
                    13,
                    5,
                    14,
                    13,
                    13,
                    7,
                    5,
                    15,
                    5,
                    8,
                    11,
                    14,
                    14,
                    6,
                    14,
                    6,
                    9,
                    12,
                    9,
                    12,
                    5,
                    15,
                    8,
                    8,
                    5,
                    12,
                    9,
                    12,
                    5,
                    14,
                    6,
                    8,
                    13,
                    6,
                    5,
                    15,
                    13,
                    11,
                    11
                ];
            },
            1822: (e, t, r)=>{
                "use strict";
                t.sha1 = r(2750), t.sha224 = r(7485), t.sha256 = r(7292), t.sha384 = r(696), t.sha512 = r(8889);
            },
            2750: (e, t, r)=>{
                "use strict";
                var n = r(7905), i = r(4427), s = r(5660), o = n.rotl32, a = n.sum32, c = n.sum32_5, h = s.ft_1, u = i.BlockHash, d = [
                    1518500249,
                    1859775393,
                    2400959708,
                    3395469782
                ];
                function f() {
                    if (!(this instanceof f)) return new f;
                    u.call(this), this.h = [
                        1732584193,
                        4023233417,
                        2562383102,
                        271733878,
                        3285377520
                    ], this.W = new Array(80);
                }
                n.inherits(f, u), e.exports = f, f.blockSize = 512, f.outSize = 160, f.hmacStrength = 80, f.padLength = 64, f.prototype._update = function(e, t) {
                    for(var r = this.W, n = 0; n < 16; n++)r[n] = e[t + n];
                    for(; n < r.length; n++)r[n] = o(r[n - 3] ^ r[n - 8] ^ r[n - 14] ^ r[n - 16], 1);
                    var i = this.h[0], s = this.h[1], u = this.h[2], f = this.h[3], l = this.h[4];
                    for(n = 0; n < r.length; n++){
                        var p = ~~(n / 20), b = c(o(i, 5), h(p, s, u, f), l, r[n], d[p]);
                        l = f, f = u, u = o(s, 30), s = i, i = b;
                    }
                    this.h[0] = a(this.h[0], i), this.h[1] = a(this.h[1], s), this.h[2] = a(this.h[2], u), this.h[3] = a(this.h[3], f), this.h[4] = a(this.h[4], l);
                }, f.prototype._digest = function(e) {
                    return "hex" === e ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
                };
            },
            7485: (e, t, r)=>{
                "use strict";
                var n = r(7905), i = r(7292);
                function s() {
                    if (!(this instanceof s)) return new s;
                    i.call(this), this.h = [
                        3238371032,
                        914150663,
                        812702999,
                        4144912697,
                        4290775857,
                        1750603025,
                        1694076839,
                        3204075428
                    ];
                }
                n.inherits(s, i), e.exports = s, s.blockSize = 512, s.outSize = 224, s.hmacStrength = 192, s.padLength = 64, s.prototype._digest = function(e) {
                    return "hex" === e ? n.toHex32(this.h.slice(0, 7), "big") : n.split32(this.h.slice(0, 7), "big");
                };
            },
            7292: (e, t, r)=>{
                "use strict";
                var n = r(7905), i = r(4427), s = r(5660), o = r(5578), a = n.sum32, c = n.sum32_4, h = n.sum32_5, u = s.ch32, d = s.maj32, f = s.s0_256, l = s.s1_256, p = s.g0_256, b = s.g1_256, g = i.BlockHash, m = [
                    1116352408,
                    1899447441,
                    3049323471,
                    3921009573,
                    961987163,
                    1508970993,
                    2453635748,
                    2870763221,
                    3624381080,
                    310598401,
                    607225278,
                    1426881987,
                    1925078388,
                    2162078206,
                    2614888103,
                    3248222580,
                    3835390401,
                    4022224774,
                    264347078,
                    604807628,
                    770255983,
                    1249150122,
                    1555081692,
                    1996064986,
                    2554220882,
                    2821834349,
                    2952996808,
                    3210313671,
                    3336571891,
                    3584528711,
                    113926993,
                    338241895,
                    666307205,
                    773529912,
                    1294757372,
                    1396182291,
                    1695183700,
                    1986661051,
                    2177026350,
                    2456956037,
                    2730485921,
                    2820302411,
                    3259730800,
                    3345764771,
                    3516065817,
                    3600352804,
                    4094571909,
                    275423344,
                    430227734,
                    506948616,
                    659060556,
                    883997877,
                    958139571,
                    1322822218,
                    1537002063,
                    1747873779,
                    1955562222,
                    2024104815,
                    2227730452,
                    2361852424,
                    2428436474,
                    2756734187,
                    3204031479,
                    3329325298
                ];
                function y() {
                    if (!(this instanceof y)) return new y;
                    g.call(this), this.h = [
                        1779033703,
                        3144134277,
                        1013904242,
                        2773480762,
                        1359893119,
                        2600822924,
                        528734635,
                        1541459225
                    ], this.k = m, this.W = new Array(64);
                }
                n.inherits(y, g), e.exports = y, y.blockSize = 512, y.outSize = 256, y.hmacStrength = 192, y.padLength = 64, y.prototype._update = function(e, t) {
                    for(var r = this.W, n = 0; n < 16; n++)r[n] = e[t + n];
                    for(; n < r.length; n++)r[n] = c(b(r[n - 2]), r[n - 7], p(r[n - 15]), r[n - 16]);
                    var i = this.h[0], s = this.h[1], g = this.h[2], m = this.h[3], y = this.h[4], v = this.h[5], w = this.h[6], _ = this.h[7];
                    for(o(this.k.length === r.length), n = 0; n < r.length; n++){
                        var E = h(_, l(y), u(y, v, w), this.k[n], r[n]), S = a(f(i), d(i, s, g));
                        _ = w, w = v, v = y, y = a(m, E), m = g, g = s, s = i, i = a(E, S);
                    }
                    this.h[0] = a(this.h[0], i), this.h[1] = a(this.h[1], s), this.h[2] = a(this.h[2], g), this.h[3] = a(this.h[3], m), this.h[4] = a(this.h[4], y), this.h[5] = a(this.h[5], v), this.h[6] = a(this.h[6], w), this.h[7] = a(this.h[7], _);
                }, y.prototype._digest = function(e) {
                    return "hex" === e ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
                };
            },
            696: (e, t, r)=>{
                "use strict";
                var n = r(7905), i = r(8889);
                function s() {
                    if (!(this instanceof s)) return new s;
                    i.call(this), this.h = [
                        3418070365,
                        3238371032,
                        1654270250,
                        914150663,
                        2438529370,
                        812702999,
                        355462360,
                        4144912697,
                        1731405415,
                        4290775857,
                        2394180231,
                        1750603025,
                        3675008525,
                        1694076839,
                        1203062813,
                        3204075428
                    ];
                }
                n.inherits(s, i), e.exports = s, s.blockSize = 1024, s.outSize = 384, s.hmacStrength = 192, s.padLength = 128, s.prototype._digest = function(e) {
                    return "hex" === e ? n.toHex32(this.h.slice(0, 12), "big") : n.split32(this.h.slice(0, 12), "big");
                };
            },
            8889: (e, t, r)=>{
                "use strict";
                var n = r(7905), i = r(4427), s = r(5578), o = n.rotr64_hi, a = n.rotr64_lo, c = n.shr64_hi, h = n.shr64_lo, u = n.sum64, d = n.sum64_hi, f = n.sum64_lo, l = n.sum64_4_hi, p = n.sum64_4_lo, b = n.sum64_5_hi, g = n.sum64_5_lo, m = i.BlockHash, y = [
                    1116352408,
                    3609767458,
                    1899447441,
                    602891725,
                    3049323471,
                    3964484399,
                    3921009573,
                    2173295548,
                    961987163,
                    4081628472,
                    1508970993,
                    3053834265,
                    2453635748,
                    2937671579,
                    2870763221,
                    3664609560,
                    3624381080,
                    2734883394,
                    310598401,
                    1164996542,
                    607225278,
                    1323610764,
                    1426881987,
                    3590304994,
                    1925078388,
                    4068182383,
                    2162078206,
                    991336113,
                    2614888103,
                    633803317,
                    3248222580,
                    3479774868,
                    3835390401,
                    2666613458,
                    4022224774,
                    944711139,
                    264347078,
                    2341262773,
                    604807628,
                    2007800933,
                    770255983,
                    1495990901,
                    1249150122,
                    1856431235,
                    1555081692,
                    3175218132,
                    1996064986,
                    2198950837,
                    2554220882,
                    3999719339,
                    2821834349,
                    766784016,
                    2952996808,
                    2566594879,
                    3210313671,
                    3203337956,
                    3336571891,
                    1034457026,
                    3584528711,
                    2466948901,
                    113926993,
                    3758326383,
                    338241895,
                    168717936,
                    666307205,
                    1188179964,
                    773529912,
                    1546045734,
                    1294757372,
                    1522805485,
                    1396182291,
                    2643833823,
                    1695183700,
                    2343527390,
                    1986661051,
                    1014477480,
                    2177026350,
                    1206759142,
                    2456956037,
                    344077627,
                    2730485921,
                    1290863460,
                    2820302411,
                    3158454273,
                    3259730800,
                    3505952657,
                    3345764771,
                    106217008,
                    3516065817,
                    3606008344,
                    3600352804,
                    1432725776,
                    4094571909,
                    1467031594,
                    275423344,
                    851169720,
                    430227734,
                    3100823752,
                    506948616,
                    1363258195,
                    659060556,
                    3750685593,
                    883997877,
                    3785050280,
                    958139571,
                    3318307427,
                    1322822218,
                    3812723403,
                    1537002063,
                    2003034995,
                    1747873779,
                    3602036899,
                    1955562222,
                    1575990012,
                    2024104815,
                    1125592928,
                    2227730452,
                    2716904306,
                    2361852424,
                    442776044,
                    2428436474,
                    593698344,
                    2756734187,
                    3733110249,
                    3204031479,
                    2999351573,
                    3329325298,
                    3815920427,
                    3391569614,
                    3928383900,
                    3515267271,
                    566280711,
                    3940187606,
                    3454069534,
                    4118630271,
                    4000239992,
                    116418474,
                    1914138554,
                    174292421,
                    2731055270,
                    289380356,
                    3203993006,
                    460393269,
                    320620315,
                    685471733,
                    587496836,
                    852142971,
                    1086792851,
                    1017036298,
                    365543100,
                    1126000580,
                    2618297676,
                    1288033470,
                    3409855158,
                    1501505948,
                    4234509866,
                    1607167915,
                    987167468,
                    1816402316,
                    1246189591
                ];
                function v() {
                    if (!(this instanceof v)) return new v;
                    m.call(this), this.h = [
                        1779033703,
                        4089235720,
                        3144134277,
                        2227873595,
                        1013904242,
                        4271175723,
                        2773480762,
                        1595750129,
                        1359893119,
                        2917565137,
                        2600822924,
                        725511199,
                        528734635,
                        4215389547,
                        1541459225,
                        327033209
                    ], this.k = y, this.W = new Array(160);
                }
                function w(e, t, r, n, i) {
                    var s = e & r ^ ~e & i;
                    return s < 0 && (s += 4294967296), s;
                }
                function _(e, t, r, n, i, s) {
                    var o = t & n ^ ~t & s;
                    return o < 0 && (o += 4294967296), o;
                }
                function E(e, t, r, n, i) {
                    var s = e & r ^ e & i ^ r & i;
                    return s < 0 && (s += 4294967296), s;
                }
                function S(e, t, r, n, i, s) {
                    var o = t & n ^ t & s ^ n & s;
                    return o < 0 && (o += 4294967296), o;
                }
                function A(e, t) {
                    var r = o(e, t, 28) ^ o(t, e, 2) ^ o(t, e, 7);
                    return r < 0 && (r += 4294967296), r;
                }
                function M(e, t) {
                    var r = a(e, t, 28) ^ a(t, e, 2) ^ a(t, e, 7);
                    return r < 0 && (r += 4294967296), r;
                }
                function I(e, t) {
                    var r = a(e, t, 14) ^ a(e, t, 18) ^ a(t, e, 9);
                    return r < 0 && (r += 4294967296), r;
                }
                function T(e, t) {
                    var r = o(e, t, 1) ^ o(e, t, 8) ^ c(e, t, 7);
                    return r < 0 && (r += 4294967296), r;
                }
                function x(e, t) {
                    var r = a(e, t, 1) ^ a(e, t, 8) ^ h(e, t, 7);
                    return r < 0 && (r += 4294967296), r;
                }
                function C(e, t) {
                    var r = a(e, t, 19) ^ a(t, e, 29) ^ h(e, t, 6);
                    return r < 0 && (r += 4294967296), r;
                }
                n.inherits(v, m), e.exports = v, v.blockSize = 1024, v.outSize = 512, v.hmacStrength = 192, v.padLength = 128, v.prototype._prepareBlock = function(e, t) {
                    for(var r = this.W, n = 0; n < 32; n++)r[n] = e[t + n];
                    for(; n < r.length; n += 2){
                        var i = (g = r[n - 4], m = r[n - 3], y = void 0, (y = o(g, m, 19) ^ o(m, g, 29) ^ c(g, m, 6)) < 0 && (y += 4294967296), y), s = C(r[n - 4], r[n - 3]), a = r[n - 14], h = r[n - 13], u = T(r[n - 30], r[n - 29]), d = x(r[n - 30], r[n - 29]), f = r[n - 32], b = r[n - 31];
                        r[n] = l(i, s, a, h, u, d, f, b), r[n + 1] = p(i, s, a, h, u, d, f, b);
                    }
                    var g, m, y;
                }, v.prototype._update = function(e, t) {
                    this._prepareBlock(e, t);
                    var r, n, i, a = this.W, c = this.h[0], h = this.h[1], l = this.h[2], p = this.h[3], m = this.h[4], y = this.h[5], v = this.h[6], T = this.h[7], x = this.h[8], C = this.h[9], R = this.h[10], k = this.h[11], P = this.h[12], O = this.h[13], N = this.h[14], U = this.h[15];
                    s(this.k.length === a.length);
                    for(var B = 0; B < a.length; B += 2){
                        var L = N, j = U, D = (i = void 0, (i = o(r = x, n = C, 14) ^ o(r, n, 18) ^ o(n, r, 9)) < 0 && (i += 4294967296), i), q = I(x, C), F = w(x, 0, R, 0, P), H = _(0, C, 0, k, 0, O), z = this.k[B], V = this.k[B + 1], $ = a[B], K = a[B + 1], G = b(L, j, D, q, F, H, z, V, $, K), W = g(L, j, D, q, F, H, z, V, $, K);
                        L = A(c, h), j = M(c, h), D = E(c, 0, l, 0, m), q = S(0, h, 0, p, 0, y);
                        var J = d(L, j, D, q), Y = f(L, j, D, q);
                        N = P, U = O, P = R, O = k, R = x, k = C, x = d(v, T, G, W), C = f(T, T, G, W), v = m, T = y, m = l, y = p, l = c, p = h, c = d(G, W, J, Y), h = f(G, W, J, Y);
                    }
                    u(this.h, 0, c, h), u(this.h, 2, l, p), u(this.h, 4, m, y), u(this.h, 6, v, T), u(this.h, 8, x, C), u(this.h, 10, R, k), u(this.h, 12, P, O), u(this.h, 14, N, U);
                }, v.prototype._digest = function(e) {
                    return "hex" === e ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
                };
            },
            5660: (e, t, r)=>{
                "use strict";
                var n = r(7905).rotr32;
                function i(e, t, r) {
                    return e & t ^ ~e & r;
                }
                function s(e, t, r) {
                    return e & t ^ e & r ^ t & r;
                }
                function o(e, t, r) {
                    return e ^ t ^ r;
                }
                t.ft_1 = function(e, t, r, n) {
                    return 0 === e ? i(t, r, n) : 1 === e || 3 === e ? o(t, r, n) : 2 === e ? s(t, r, n) : void 0;
                }, t.ch32 = i, t.maj32 = s, t.p32 = o, t.s0_256 = function(e) {
                    return n(e, 2) ^ n(e, 13) ^ n(e, 22);
                }, t.s1_256 = function(e) {
                    return n(e, 6) ^ n(e, 11) ^ n(e, 25);
                }, t.g0_256 = function(e) {
                    return n(e, 7) ^ n(e, 18) ^ e >>> 3;
                }, t.g1_256 = function(e) {
                    return n(e, 17) ^ n(e, 19) ^ e >>> 10;
                };
            },
            7905: (e, t, r)=>{
                "use strict";
                var n = r(5578), i = r(1193);
                function s(e, t) {
                    return 55296 == (64512 & e.charCodeAt(t)) && !(t < 0 || t + 1 >= e.length) && 56320 == (64512 & e.charCodeAt(t + 1));
                }
                function o(e) {
                    return (e >>> 24 | e >>> 8 & 65280 | e << 8 & 16711680 | (255 & e) << 24) >>> 0;
                }
                function a(e) {
                    return 1 === e.length ? "0" + e : e;
                }
                function c(e) {
                    return 7 === e.length ? "0" + e : 6 === e.length ? "00" + e : 5 === e.length ? "000" + e : 4 === e.length ? "0000" + e : 3 === e.length ? "00000" + e : 2 === e.length ? "000000" + e : 1 === e.length ? "0000000" + e : e;
                }
                t.inherits = i, t.toArray = function(e, t) {
                    if (Array.isArray(e)) return e.slice();
                    if (!e) return [];
                    var r = [];
                    if ("string" == typeof e) if (t) {
                        if ("hex" === t) for((e = e.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e = "0" + e), i = 0; i < e.length; i += 2)r.push(parseInt(e[i] + e[i + 1], 16));
                    } else for(var n = 0, i = 0; i < e.length; i++){
                        var o = e.charCodeAt(i);
                        o < 128 ? r[n++] = o : o < 2048 ? (r[n++] = o >> 6 | 192, r[n++] = 63 & o | 128) : s(e, i) ? (o = 65536 + ((1023 & o) << 10) + (1023 & e.charCodeAt(++i)), r[n++] = o >> 18 | 240, r[n++] = o >> 12 & 63 | 128, r[n++] = o >> 6 & 63 | 128, r[n++] = 63 & o | 128) : (r[n++] = o >> 12 | 224, r[n++] = o >> 6 & 63 | 128, r[n++] = 63 & o | 128);
                    }
                    else for(i = 0; i < e.length; i++)r[i] = 0 | e[i];
                    return r;
                }, t.toHex = function(e) {
                    for(var t = "", r = 0; r < e.length; r++)t += a(e[r].toString(16));
                    return t;
                }, t.htonl = o, t.toHex32 = function(e, t) {
                    for(var r = "", n = 0; n < e.length; n++){
                        var i = e[n];
                        "little" === t && (i = o(i)), r += c(i.toString(16));
                    }
                    return r;
                }, t.zero2 = a, t.zero8 = c, t.join32 = function(e, t, r, i) {
                    var s = r - t;
                    n(s % 4 == 0);
                    for(var o = new Array(s / 4), a = 0, c = t; a < o.length; a++, c += 4){
                        var h;
                        h = "big" === i ? e[c] << 24 | e[c + 1] << 16 | e[c + 2] << 8 | e[c + 3] : e[c + 3] << 24 | e[c + 2] << 16 | e[c + 1] << 8 | e[c], o[a] = h >>> 0;
                    }
                    return o;
                }, t.split32 = function(e, t) {
                    for(var r = new Array(4 * e.length), n = 0, i = 0; n < e.length; n++, i += 4){
                        var s = e[n];
                        "big" === t ? (r[i] = s >>> 24, r[i + 1] = s >>> 16 & 255, r[i + 2] = s >>> 8 & 255, r[i + 3] = 255 & s) : (r[i + 3] = s >>> 24, r[i + 2] = s >>> 16 & 255, r[i + 1] = s >>> 8 & 255, r[i] = 255 & s);
                    }
                    return r;
                }, t.rotr32 = function(e, t) {
                    return e >>> t | e << 32 - t;
                }, t.rotl32 = function(e, t) {
                    return e << t | e >>> 32 - t;
                }, t.sum32 = function(e, t) {
                    return e + t >>> 0;
                }, t.sum32_3 = function(e, t, r) {
                    return e + t + r >>> 0;
                }, t.sum32_4 = function(e, t, r, n) {
                    return e + t + r + n >>> 0;
                }, t.sum32_5 = function(e, t, r, n, i) {
                    return e + t + r + n + i >>> 0;
                }, t.sum64 = function(e, t, r, n) {
                    var i = e[t], s = n + e[t + 1] >>> 0, o = (s < n ? 1 : 0) + r + i;
                    e[t] = o >>> 0, e[t + 1] = s;
                }, t.sum64_hi = function(e, t, r, n) {
                    return (t + n >>> 0 < t ? 1 : 0) + e + r >>> 0;
                }, t.sum64_lo = function(e, t, r, n) {
                    return t + n >>> 0;
                }, t.sum64_4_hi = function(e, t, r, n, i, s, o, a) {
                    var c = 0, h = t;
                    return c += (h = h + n >>> 0) < t ? 1 : 0, c += (h = h + s >>> 0) < s ? 1 : 0, e + r + i + o + (c += (h = h + a >>> 0) < a ? 1 : 0) >>> 0;
                }, t.sum64_4_lo = function(e, t, r, n, i, s, o, a) {
                    return t + n + s + a >>> 0;
                }, t.sum64_5_hi = function(e, t, r, n, i, s, o, a, c, h) {
                    var u = 0, d = t;
                    return u += (d = d + n >>> 0) < t ? 1 : 0, u += (d = d + s >>> 0) < s ? 1 : 0, u += (d = d + a >>> 0) < a ? 1 : 0, e + r + i + o + c + (u += (d = d + h >>> 0) < h ? 1 : 0) >>> 0;
                }, t.sum64_5_lo = function(e, t, r, n, i, s, o, a, c, h) {
                    return t + n + s + a + h >>> 0;
                }, t.rotr64_hi = function(e, t, r) {
                    return (t << 32 - r | e >>> r) >>> 0;
                }, t.rotr64_lo = function(e, t, r) {
                    return (e << 32 - r | t >>> r) >>> 0;
                }, t.shr64_hi = function(e, t, r) {
                    return e >>> r;
                }, t.shr64_lo = function(e, t, r) {
                    return (e << 32 - r | t >>> r) >>> 0;
                };
            },
            2519: (e, t, r)=>{
                "use strict";
                var n = r(1631), i = r(4209), s = r(5578);
                function o(e) {
                    if (!(this instanceof o)) return new o(e);
                    this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                    var t = i.toArray(e.entropy, e.entropyEnc || "hex"), r = i.toArray(e.nonce, e.nonceEnc || "hex"), n = i.toArray(e.pers, e.persEnc || "hex");
                    s(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(t, r, n);
                }
                e.exports = o, o.prototype._init = function(e, t, r) {
                    var n = e.concat(t).concat(r);
                    this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
                    for(var i = 0; i < this.V.length; i++)this.K[i] = 0, this.V[i] = 1;
                    this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656;
                }, o.prototype._hmac = function() {
                    return new n.hmac(this.hash, this.K);
                }, o.prototype._update = function(e) {
                    var t = this._hmac().update(this.V).update([
                        0
                    ]);
                    e && (t = t.update(e)), this.K = t.digest(), this.V = this._hmac().update(this.V).digest(), e && (this.K = this._hmac().update(this.V).update([
                        1
                    ]).update(e).digest(), this.V = this._hmac().update(this.V).digest());
                }, o.prototype.reseed = function(e, t, r, n) {
                    "string" != typeof t && (n = r, r = t, t = null), e = i.toArray(e, t), r = i.toArray(r, n), s(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e.concat(r || [])), this._reseed = 1;
                }, o.prototype.generate = function(e, t, r, n) {
                    if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
                    "string" != typeof t && (n = r, r = t, t = null), r && (r = i.toArray(r, n || "hex"), this._update(r));
                    for(var s = []; s.length < e;)this.V = this._hmac().update(this.V).digest(), s = s.concat(this.V);
                    var o = s.slice(0, e);
                    return this._update(r), this._reseed++, i.encode(o, t);
                };
            },
            1193: (e)=>{
                "function" == typeof Object.create ? e.exports = function(e, t) {
                    t && (e.super_ = t, e.prototype = Object.create(t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }));
                } : e.exports = function(e, t) {
                    if (t) {
                        e.super_ = t;
                        var r = function() {};
                        r.prototype = t.prototype, e.prototype = new r, e.prototype.constructor = e;
                    }
                };
            },
            9162: (e, t, r)=>{
                var n;
                !function() {
                    "use strict";
                    var i = "input is invalid type", s = "object" == typeof window, o = s ? window : {};
                    o.JS_SHA3_NO_WINDOW && (s = !1);
                    var a = !s && "object" == typeof self;
                    !o.JS_SHA3_NO_NODE_JS && "object" == typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].versions && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].versions.node ? o = r.g : a && (o = self);
                    var c = !o.JS_SHA3_NO_COMMON_JS && e.exports, h = r.amdO, u = !o.JS_SHA3_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer, d = "0123456789abcdef".split(""), f = [
                        4,
                        1024,
                        262144,
                        67108864
                    ], l = [
                        0,
                        8,
                        16,
                        24
                    ], p = [
                        1,
                        0,
                        32898,
                        0,
                        32906,
                        2147483648,
                        2147516416,
                        2147483648,
                        32907,
                        0,
                        2147483649,
                        0,
                        2147516545,
                        2147483648,
                        32777,
                        2147483648,
                        138,
                        0,
                        136,
                        0,
                        2147516425,
                        0,
                        2147483658,
                        0,
                        2147516555,
                        0,
                        139,
                        2147483648,
                        32905,
                        2147483648,
                        32771,
                        2147483648,
                        32770,
                        2147483648,
                        128,
                        2147483648,
                        32778,
                        0,
                        2147483658,
                        2147483648,
                        2147516545,
                        2147483648,
                        32896,
                        2147483648,
                        2147483649,
                        0,
                        2147516424,
                        2147483648
                    ], b = [
                        224,
                        256,
                        384,
                        512
                    ], g = [
                        128,
                        256
                    ], m = [
                        "hex",
                        "buffer",
                        "arrayBuffer",
                        "array",
                        "digest"
                    ], y = {
                        128: 168,
                        256: 136
                    };
                    !o.JS_SHA3_NO_NODE_JS && Array.isArray || (Array.isArray = function(e) {
                        return "[object Array]" === Object.prototype.toString.call(e);
                    }), !u || !o.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function(e) {
                        return "object" == typeof e && e.buffer && e.buffer.constructor === ArrayBuffer;
                    });
                    for(var v = function(e, t, r) {
                        return function(n) {
                            return new N(e, t, e).update(n)[r]();
                        };
                    }, w = function(e, t, r) {
                        return function(n, i) {
                            return new N(e, t, i).update(n)[r]();
                        };
                    }, _ = function(e, t, r) {
                        return function(t, n, i, s) {
                            return I["cshake" + e].update(t, n, i, s)[r]();
                        };
                    }, E = function(e, t, r) {
                        return function(t, n, i, s) {
                            return I["kmac" + e].update(t, n, i, s)[r]();
                        };
                    }, S = function(e, t, r, n) {
                        for(var i = 0; i < m.length; ++i){
                            var s = m[i];
                            e[s] = t(r, n, s);
                        }
                        return e;
                    }, A = function(e, t) {
                        var r = v(e, t, "hex");
                        return r.create = function() {
                            return new N(e, t, e);
                        }, r.update = function(e) {
                            return r.create().update(e);
                        }, S(r, v, e, t);
                    }, M = [
                        {
                            name: "keccak",
                            padding: [
                                1,
                                256,
                                65536,
                                16777216
                            ],
                            bits: b,
                            createMethod: A
                        },
                        {
                            name: "sha3",
                            padding: [
                                6,
                                1536,
                                393216,
                                100663296
                            ],
                            bits: b,
                            createMethod: A
                        },
                        {
                            name: "shake",
                            padding: [
                                31,
                                7936,
                                2031616,
                                520093696
                            ],
                            bits: g,
                            createMethod: function(e, t) {
                                var r = w(e, t, "hex");
                                return r.create = function(r) {
                                    return new N(e, t, r);
                                }, r.update = function(e, t) {
                                    return r.create(t).update(e);
                                }, S(r, w, e, t);
                            }
                        },
                        {
                            name: "cshake",
                            padding: f,
                            bits: g,
                            createMethod: function(e, t) {
                                var r = y[e], n = _(e, 0, "hex");
                                return n.create = function(n, i, s) {
                                    return i || s ? new N(e, t, n).bytepad([
                                        i,
                                        s
                                    ], r) : I["shake" + e].create(n);
                                }, n.update = function(e, t, r, i) {
                                    return n.create(t, r, i).update(e);
                                }, S(n, _, e, t);
                            }
                        },
                        {
                            name: "kmac",
                            padding: f,
                            bits: g,
                            createMethod: function(e, t) {
                                var r = y[e], n = E(e, 0, "hex");
                                return n.create = function(n, i, s) {
                                    return new U(e, t, i).bytepad([
                                        "KMAC",
                                        s
                                    ], r).bytepad([
                                        n
                                    ], r);
                                }, n.update = function(e, t, r, i) {
                                    return n.create(e, r, i).update(t);
                                }, S(n, E, e, t);
                            }
                        }
                    ], I = {}, T = [], x = 0; x < M.length; ++x)for(var C = M[x], R = C.bits, k = 0; k < R.length; ++k){
                        var P = C.name + "_" + R[k];
                        if (T.push(P), I[P] = C.createMethod(R[k], C.padding), "sha3" !== C.name) {
                            var O = C.name + R[k];
                            T.push(O), I[O] = I[P];
                        }
                    }
                    function N(e, t, r) {
                        this.blocks = [], this.s = [], this.padding = t, this.outputBits = r, this.reset = !0, this.finalized = !1, this.block = 0, this.start = 0, this.blockCount = 1600 - (e << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = r >> 5, this.extraBytes = (31 & r) >> 3;
                        for(var n = 0; n < 50; ++n)this.s[n] = 0;
                    }
                    function U(e, t, r) {
                        N.call(this, e, t, r);
                    }
                    N.prototype.update = function(e) {
                        if (this.finalized) throw new Error("finalize already called");
                        var t, r = typeof e;
                        if ("string" !== r) {
                            if ("object" !== r) throw new Error(i);
                            if (null === e) throw new Error(i);
                            if (u && e.constructor === ArrayBuffer) e = new Uint8Array(e);
                            else if (!(Array.isArray(e) || u && ArrayBuffer.isView(e))) throw new Error(i);
                            t = !0;
                        }
                        for(var n, s, o = this.blocks, a = this.byteCount, c = e.length, h = this.blockCount, d = 0, f = this.s; d < c;){
                            if (this.reset) for(this.reset = !1, o[0] = this.block, n = 1; n < h + 1; ++n)o[n] = 0;
                            if (t) for(n = this.start; d < c && n < a; ++d)o[n >> 2] |= e[d] << l[3 & n++];
                            else for(n = this.start; d < c && n < a; ++d)(s = e.charCodeAt(d)) < 128 ? o[n >> 2] |= s << l[3 & n++] : s < 2048 ? (o[n >> 2] |= (192 | s >> 6) << l[3 & n++], o[n >> 2] |= (128 | 63 & s) << l[3 & n++]) : s < 55296 || s >= 57344 ? (o[n >> 2] |= (224 | s >> 12) << l[3 & n++], o[n >> 2] |= (128 | s >> 6 & 63) << l[3 & n++], o[n >> 2] |= (128 | 63 & s) << l[3 & n++]) : (s = 65536 + ((1023 & s) << 10 | 1023 & e.charCodeAt(++d)), o[n >> 2] |= (240 | s >> 18) << l[3 & n++], o[n >> 2] |= (128 | s >> 12 & 63) << l[3 & n++], o[n >> 2] |= (128 | s >> 6 & 63) << l[3 & n++], o[n >> 2] |= (128 | 63 & s) << l[3 & n++]);
                            if (this.lastByteIndex = n, n >= a) {
                                for(this.start = n - a, this.block = o[h], n = 0; n < h; ++n)f[n] ^= o[n];
                                B(f), this.reset = !0;
                            } else this.start = n;
                        }
                        return this;
                    }, N.prototype.encode = function(e, t) {
                        var r = 255 & e, n = 1, i = [
                            r
                        ];
                        for(r = 255 & (e >>= 8); r > 0;)i.unshift(r), r = 255 & (e >>= 8), ++n;
                        return t ? i.push(n) : i.unshift(n), this.update(i), i.length;
                    }, N.prototype.encodeString = function(e) {
                        var t, r = typeof e;
                        if ("string" !== r) {
                            if ("object" !== r) throw new Error(i);
                            if (null === e) throw new Error(i);
                            if (u && e.constructor === ArrayBuffer) e = new Uint8Array(e);
                            else if (!(Array.isArray(e) || u && ArrayBuffer.isView(e))) throw new Error(i);
                            t = !0;
                        }
                        var n = 0, s = e.length;
                        if (t) n = s;
                        else for(var o = 0; o < e.length; ++o){
                            var a = e.charCodeAt(o);
                            a < 128 ? n += 1 : a < 2048 ? n += 2 : a < 55296 || a >= 57344 ? n += 3 : (a = 65536 + ((1023 & a) << 10 | 1023 & e.charCodeAt(++o)), n += 4);
                        }
                        return n += this.encode(8 * n), this.update(e), n;
                    }, N.prototype.bytepad = function(e, t) {
                        for(var r = this.encode(t), n = 0; n < e.length; ++n)r += this.encodeString(e[n]);
                        var i = t - r % t, s = [];
                        return s.length = i, this.update(s), this;
                    }, N.prototype.finalize = function() {
                        if (!this.finalized) {
                            this.finalized = !0;
                            var e = this.blocks, t = this.lastByteIndex, r = this.blockCount, n = this.s;
                            if (e[t >> 2] |= this.padding[3 & t], this.lastByteIndex === this.byteCount) for(e[0] = e[r], t = 1; t < r + 1; ++t)e[t] = 0;
                            for(e[r - 1] |= 2147483648, t = 0; t < r; ++t)n[t] ^= e[t];
                            B(n);
                        }
                    }, N.prototype.toString = N.prototype.hex = function() {
                        this.finalize();
                        for(var e, t = this.blockCount, r = this.s, n = this.outputBlocks, i = this.extraBytes, s = 0, o = 0, a = ""; o < n;){
                            for(s = 0; s < t && o < n; ++s, ++o)e = r[s], a += d[e >> 4 & 15] + d[15 & e] + d[e >> 12 & 15] + d[e >> 8 & 15] + d[e >> 20 & 15] + d[e >> 16 & 15] + d[e >> 28 & 15] + d[e >> 24 & 15];
                            o % t == 0 && (B(r), s = 0);
                        }
                        return i && (e = r[s], a += d[e >> 4 & 15] + d[15 & e], i > 1 && (a += d[e >> 12 & 15] + d[e >> 8 & 15]), i > 2 && (a += d[e >> 20 & 15] + d[e >> 16 & 15])), a;
                    }, N.prototype.arrayBuffer = function() {
                        this.finalize();
                        var e, t = this.blockCount, r = this.s, n = this.outputBlocks, i = this.extraBytes, s = 0, o = 0, a = this.outputBits >> 3;
                        e = i ? new ArrayBuffer(n + 1 << 2) : new ArrayBuffer(a);
                        for(var c = new Uint32Array(e); o < n;){
                            for(s = 0; s < t && o < n; ++s, ++o)c[o] = r[s];
                            o % t == 0 && B(r);
                        }
                        return i && (c[s] = r[s], e = e.slice(0, a)), e;
                    }, N.prototype.buffer = N.prototype.arrayBuffer, N.prototype.digest = N.prototype.array = function() {
                        this.finalize();
                        for(var e, t, r = this.blockCount, n = this.s, i = this.outputBlocks, s = this.extraBytes, o = 0, a = 0, c = []; a < i;){
                            for(o = 0; o < r && a < i; ++o, ++a)e = a << 2, t = n[o], c[e] = 255 & t, c[e + 1] = t >> 8 & 255, c[e + 2] = t >> 16 & 255, c[e + 3] = t >> 24 & 255;
                            a % r == 0 && B(n);
                        }
                        return s && (e = a << 2, t = n[o], c[e] = 255 & t, s > 1 && (c[e + 1] = t >> 8 & 255), s > 2 && (c[e + 2] = t >> 16 & 255)), c;
                    }, U.prototype = new N, U.prototype.finalize = function() {
                        return this.encode(this.outputBits, !0), N.prototype.finalize.call(this);
                    };
                    var B = function(e) {
                        var t, r, n, i, s, o, a, c, h, u, d, f, l, b, g, m, y, v, w, _, E, S, A, M, I, T, x, C, R, k, P, O, N, U, B, L, j, D, q, F, H, z, V, $, K, G, W, J, Y, X, Z, Q, ee, te, re, ne, ie, se, oe, ae, ce, he, ue;
                        for(n = 0; n < 48; n += 2)i = e[0] ^ e[10] ^ e[20] ^ e[30] ^ e[40], s = e[1] ^ e[11] ^ e[21] ^ e[31] ^ e[41], o = e[2] ^ e[12] ^ e[22] ^ e[32] ^ e[42], a = e[3] ^ e[13] ^ e[23] ^ e[33] ^ e[43], c = e[4] ^ e[14] ^ e[24] ^ e[34] ^ e[44], h = e[5] ^ e[15] ^ e[25] ^ e[35] ^ e[45], u = e[6] ^ e[16] ^ e[26] ^ e[36] ^ e[46], d = e[7] ^ e[17] ^ e[27] ^ e[37] ^ e[47], t = (f = e[8] ^ e[18] ^ e[28] ^ e[38] ^ e[48]) ^ (o << 1 | a >>> 31), r = (l = e[9] ^ e[19] ^ e[29] ^ e[39] ^ e[49]) ^ (a << 1 | o >>> 31), e[0] ^= t, e[1] ^= r, e[10] ^= t, e[11] ^= r, e[20] ^= t, e[21] ^= r, e[30] ^= t, e[31] ^= r, e[40] ^= t, e[41] ^= r, t = i ^ (c << 1 | h >>> 31), r = s ^ (h << 1 | c >>> 31), e[2] ^= t, e[3] ^= r, e[12] ^= t, e[13] ^= r, e[22] ^= t, e[23] ^= r, e[32] ^= t, e[33] ^= r, e[42] ^= t, e[43] ^= r, t = o ^ (u << 1 | d >>> 31), r = a ^ (d << 1 | u >>> 31), e[4] ^= t, e[5] ^= r, e[14] ^= t, e[15] ^= r, e[24] ^= t, e[25] ^= r, e[34] ^= t, e[35] ^= r, e[44] ^= t, e[45] ^= r, t = c ^ (f << 1 | l >>> 31), r = h ^ (l << 1 | f >>> 31), e[6] ^= t, e[7] ^= r, e[16] ^= t, e[17] ^= r, e[26] ^= t, e[27] ^= r, e[36] ^= t, e[37] ^= r, e[46] ^= t, e[47] ^= r, t = u ^ (i << 1 | s >>> 31), r = d ^ (s << 1 | i >>> 31), e[8] ^= t, e[9] ^= r, e[18] ^= t, e[19] ^= r, e[28] ^= t, e[29] ^= r, e[38] ^= t, e[39] ^= r, e[48] ^= t, e[49] ^= r, b = e[0], g = e[1], G = e[11] << 4 | e[10] >>> 28, W = e[10] << 4 | e[11] >>> 28, C = e[20] << 3 | e[21] >>> 29, R = e[21] << 3 | e[20] >>> 29, ae = e[31] << 9 | e[30] >>> 23, ce = e[30] << 9 | e[31] >>> 23, z = e[40] << 18 | e[41] >>> 14, V = e[41] << 18 | e[40] >>> 14, U = e[2] << 1 | e[3] >>> 31, B = e[3] << 1 | e[2] >>> 31, m = e[13] << 12 | e[12] >>> 20, y = e[12] << 12 | e[13] >>> 20, J = e[22] << 10 | e[23] >>> 22, Y = e[23] << 10 | e[22] >>> 22, k = e[33] << 13 | e[32] >>> 19, P = e[32] << 13 | e[33] >>> 19, he = e[42] << 2 | e[43] >>> 30, ue = e[43] << 2 | e[42] >>> 30, te = e[5] << 30 | e[4] >>> 2, re = e[4] << 30 | e[5] >>> 2, L = e[14] << 6 | e[15] >>> 26, j = e[15] << 6 | e[14] >>> 26, v = e[25] << 11 | e[24] >>> 21, w = e[24] << 11 | e[25] >>> 21, X = e[34] << 15 | e[35] >>> 17, Z = e[35] << 15 | e[34] >>> 17, O = e[45] << 29 | e[44] >>> 3, N = e[44] << 29 | e[45] >>> 3, M = e[6] << 28 | e[7] >>> 4, I = e[7] << 28 | e[6] >>> 4, ne = e[17] << 23 | e[16] >>> 9, ie = e[16] << 23 | e[17] >>> 9, D = e[26] << 25 | e[27] >>> 7, q = e[27] << 25 | e[26] >>> 7, _ = e[36] << 21 | e[37] >>> 11, E = e[37] << 21 | e[36] >>> 11, Q = e[47] << 24 | e[46] >>> 8, ee = e[46] << 24 | e[47] >>> 8, $ = e[8] << 27 | e[9] >>> 5, K = e[9] << 27 | e[8] >>> 5, T = e[18] << 20 | e[19] >>> 12, x = e[19] << 20 | e[18] >>> 12, se = e[29] << 7 | e[28] >>> 25, oe = e[28] << 7 | e[29] >>> 25, F = e[38] << 8 | e[39] >>> 24, H = e[39] << 8 | e[38] >>> 24, S = e[48] << 14 | e[49] >>> 18, A = e[49] << 14 | e[48] >>> 18, e[0] = b ^ ~m & v, e[1] = g ^ ~y & w, e[10] = M ^ ~T & C, e[11] = I ^ ~x & R, e[20] = U ^ ~L & D, e[21] = B ^ ~j & q, e[30] = $ ^ ~G & J, e[31] = K ^ ~W & Y, e[40] = te ^ ~ne & se, e[41] = re ^ ~ie & oe, e[2] = m ^ ~v & _, e[3] = y ^ ~w & E, e[12] = T ^ ~C & k, e[13] = x ^ ~R & P, e[22] = L ^ ~D & F, e[23] = j ^ ~q & H, e[32] = G ^ ~J & X, e[33] = W ^ ~Y & Z, e[42] = ne ^ ~se & ae, e[43] = ie ^ ~oe & ce, e[4] = v ^ ~_ & S, e[5] = w ^ ~E & A, e[14] = C ^ ~k & O, e[15] = R ^ ~P & N, e[24] = D ^ ~F & z, e[25] = q ^ ~H & V, e[34] = J ^ ~X & Q, e[35] = Y ^ ~Z & ee, e[44] = se ^ ~ae & he, e[45] = oe ^ ~ce & ue, e[6] = _ ^ ~S & b, e[7] = E ^ ~A & g, e[16] = k ^ ~O & M, e[17] = P ^ ~N & I, e[26] = F ^ ~z & U, e[27] = H ^ ~V & B, e[36] = X ^ ~Q & $, e[37] = Z ^ ~ee & K, e[46] = ae ^ ~he & te, e[47] = ce ^ ~ue & re, e[8] = S ^ ~b & m, e[9] = A ^ ~g & y, e[18] = O ^ ~M & T, e[19] = N ^ ~I & x, e[28] = z ^ ~U & L, e[29] = V ^ ~B & j, e[38] = Q ^ ~$ & G, e[39] = ee ^ ~K & W, e[48] = he ^ ~te & ne, e[49] = ue ^ ~re & ie, e[0] ^= p[n], e[1] ^= p[n + 1];
                    };
                    if (c) e.exports = I;
                    else {
                        for(x = 0; x < T.length; ++x)o[T[x]] = I[T[x]];
                        h && (void 0 === (n = (function() {
                            return I;
                        }).call(t, r, t, e)) || (e.exports = n));
                    }
                }();
            },
            3497: (e, t, r)=>{
                e = r.nmd(e);
                var n = "__lodash_hash_undefined__", i = 1, s = 2, o = 9007199254740991, a = "[object Arguments]", c = "[object Array]", h = "[object AsyncFunction]", u = "[object Boolean]", d = "[object Date]", f = "[object Error]", l = "[object Function]", p = "[object GeneratorFunction]", b = "[object Map]", g = "[object Number]", m = "[object Null]", y = "[object Object]", v = "[object Promise]", w = "[object Proxy]", _ = "[object RegExp]", E = "[object Set]", S = "[object String]", A = "[object Undefined]", M = "[object WeakMap]", I = "[object ArrayBuffer]", T = "[object DataView]", x = /^\[object .+?Constructor\]$/, C = /^(?:0|[1-9]\d*)$/, R = {};
                R["[object Float32Array]"] = R["[object Float64Array]"] = R["[object Int8Array]"] = R["[object Int16Array]"] = R["[object Int32Array]"] = R["[object Uint8Array]"] = R["[object Uint8ClampedArray]"] = R["[object Uint16Array]"] = R["[object Uint32Array]"] = !0, R[a] = R[c] = R[I] = R[u] = R[T] = R[d] = R[f] = R[l] = R[b] = R[g] = R[y] = R[_] = R[E] = R[S] = R[M] = !1;
                var k = "object" == typeof r.g && r.g && r.g.Object === Object && r.g, P = "object" == typeof self && self && self.Object === Object && self, O = k || P || Function("return this")(), N = t && !t.nodeType && t, U = N && e && !e.nodeType && e, B = U && U.exports === N, L = B && k.process, j = function() {
                    try {
                        return L && L.binding && L.binding("util");
                    } catch (e) {}
                }(), D = j && j.isTypedArray;
                function q(e, t) {
                    for(var r = -1, n = null == e ? 0 : e.length; ++r < n;)if (t(e[r], r, e)) return !0;
                    return !1;
                }
                function F(e) {
                    var t = -1, r = Array(e.size);
                    return e.forEach(function(e, n) {
                        r[++t] = [
                            n,
                            e
                        ];
                    }), r;
                }
                function H(e) {
                    var t = -1, r = Array(e.size);
                    return e.forEach(function(e) {
                        r[++t] = e;
                    }), r;
                }
                var z, V, $, K = Array.prototype, G = Function.prototype, W = Object.prototype, J = O["__core-js_shared__"], Y = G.toString, X = W.hasOwnProperty, Z = (z = /[^.]+$/.exec(J && J.keys && J.keys.IE_PROTO || "")) ? "Symbol(src)_1." + z : "", Q = W.toString, ee = RegExp("^" + Y.call(X).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), te = B ? O.Buffer : void 0, re = O.Symbol, ne = O.Uint8Array, ie = W.propertyIsEnumerable, se = K.splice, oe = re ? re.toStringTag : void 0, ae = Object.getOwnPropertySymbols, ce = te ? te.isBuffer : void 0, he = (V = Object.keys, $ = Object, function(e) {
                    return V($(e));
                }), ue = Ue(O, "DataView"), de = Ue(O, "Map"), fe = Ue(O, "Promise"), le = Ue(O, "Set"), pe = Ue(O, "WeakMap"), be = Ue(Object, "create"), ge = De(ue), me = De(de), ye = De(fe), ve = De(le), we = De(pe), _e = re ? re.prototype : void 0, Ee = _e ? _e.valueOf : void 0;
                function Se(e) {
                    var t = -1, r = null == e ? 0 : e.length;
                    for(this.clear(); ++t < r;){
                        var n = e[t];
                        this.set(n[0], n[1]);
                    }
                }
                function Ae(e) {
                    var t = -1, r = null == e ? 0 : e.length;
                    for(this.clear(); ++t < r;){
                        var n = e[t];
                        this.set(n[0], n[1]);
                    }
                }
                function Me(e) {
                    var t = -1, r = null == e ? 0 : e.length;
                    for(this.clear(); ++t < r;){
                        var n = e[t];
                        this.set(n[0], n[1]);
                    }
                }
                function Ie(e) {
                    var t = -1, r = null == e ? 0 : e.length;
                    for(this.__data__ = new Me; ++t < r;)this.add(e[t]);
                }
                function Te(e) {
                    var t = this.__data__ = new Ae(e);
                    this.size = t.size;
                }
                function xe(e, t) {
                    for(var r = e.length; r--;)if (qe(e[r][0], t)) return r;
                    return -1;
                }
                function Ce(e) {
                    return null == e ? void 0 === e ? A : m : oe && oe in Object(e) ? function(e) {
                        var t = X.call(e, oe), r = e[oe];
                        try {
                            e[oe] = void 0;
                            var n = !0;
                        } catch (e) {}
                        var i = Q.call(e);
                        return n && (t ? e[oe] = r : delete e[oe]), i;
                    }(e) : function(e) {
                        return Q.call(e);
                    }(e);
                }
                function Re(e) {
                    return Ge(e) && Ce(e) == a;
                }
                function ke(e, t, r, n, o) {
                    return e === t || (null == e || null == t || !Ge(e) && !Ge(t) ? e != e && t != t : function(e, t, r, n, o, h) {
                        var l = He(e), p = He(t), m = l ? c : Le(e), v = p ? c : Le(t), w = (m = m == a ? y : m) == y, A = (v = v == a ? y : v) == y, M = m == v;
                        if (M && ze(e)) {
                            if (!ze(t)) return !1;
                            l = !0, w = !1;
                        }
                        if (M && !w) return h || (h = new Te), l || We(e) ? Pe(e, t, r, n, o, h) : function(e, t, r, n, o, a, c) {
                            switch(r){
                                case T:
                                    if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset) return !1;
                                    e = e.buffer, t = t.buffer;
                                case I:
                                    return !(e.byteLength != t.byteLength || !a(new ne(e), new ne(t)));
                                case u:
                                case d:
                                case g:
                                    return qe(+e, +t);
                                case f:
                                    return e.name == t.name && e.message == t.message;
                                case _:
                                case S:
                                    return e == t + "";
                                case b:
                                    var h = F;
                                case E:
                                    var l = n & i;
                                    if (h || (h = H), e.size != t.size && !l) return !1;
                                    var p = c.get(e);
                                    if (p) return p == t;
                                    n |= s, c.set(e, t);
                                    var m = Pe(h(e), h(t), n, o, a, c);
                                    return c.delete(e), m;
                                case "[object Symbol]":
                                    if (Ee) return Ee.call(e) == Ee.call(t);
                            }
                            return !1;
                        }(e, t, m, r, n, o, h);
                        if (!(r & i)) {
                            var x = w && X.call(e, "__wrapped__"), C = A && X.call(t, "__wrapped__");
                            if (x || C) {
                                var R = x ? e.value() : e, k = C ? t.value() : t;
                                return h || (h = new Te), o(R, k, r, n, h);
                            }
                        }
                        return !!M && (h || (h = new Te), function(e, t, r, n, s, o) {
                            var a = r & i, c = Oe(e), h = c.length;
                            if (h != Oe(t).length && !a) return !1;
                            for(var u = h; u--;){
                                var d = c[u];
                                if (!(a ? d in t : X.call(t, d))) return !1;
                            }
                            var f = o.get(e);
                            if (f && o.get(t)) return f == t;
                            var l = !0;
                            o.set(e, t), o.set(t, e);
                            for(var p = a; ++u < h;){
                                var b = e[d = c[u]], g = t[d];
                                if (n) var m = a ? n(g, b, d, t, e, o) : n(b, g, d, e, t, o);
                                if (!(void 0 === m ? b === g || s(b, g, r, n, o) : m)) {
                                    l = !1;
                                    break;
                                }
                                p || (p = "constructor" == d);
                            }
                            if (l && !p) {
                                var y = e.constructor, v = t.constructor;
                                y == v || !("constructor" in e) || !("constructor" in t) || "function" == typeof y && y instanceof y && "function" == typeof v && v instanceof v || (l = !1);
                            }
                            return o.delete(e), o.delete(t), l;
                        }(e, t, r, n, o, h));
                    }(e, t, r, n, ke, o));
                }
                function Pe(e, t, r, n, o, a) {
                    var c = r & i, h = e.length, u = t.length;
                    if (h != u && !(c && u > h)) return !1;
                    var d = a.get(e);
                    if (d && a.get(t)) return d == t;
                    var f = -1, l = !0, p = r & s ? new Ie : void 0;
                    for(a.set(e, t), a.set(t, e); ++f < h;){
                        var b = e[f], g = t[f];
                        if (n) var m = c ? n(g, b, f, t, e, a) : n(b, g, f, e, t, a);
                        if (void 0 !== m) {
                            if (m) continue;
                            l = !1;
                            break;
                        }
                        if (p) {
                            if (!q(t, function(e, t) {
                                if (i = t, !p.has(i) && (b === e || o(b, e, r, n, a))) return p.push(t);
                                var i;
                            })) {
                                l = !1;
                                break;
                            }
                        } else if (b !== g && !o(b, g, r, n, a)) {
                            l = !1;
                            break;
                        }
                    }
                    return a.delete(e), a.delete(t), l;
                }
                function Oe(e) {
                    return function(e, t, r) {
                        var n = t(e);
                        return He(e) ? n : function(e, t) {
                            for(var r = -1, n = t.length, i = e.length; ++r < n;)e[i + r] = t[r];
                            return e;
                        }(n, r(e));
                    }(e, Je, Be);
                }
                function Ne(e, t) {
                    var r, n, i = e.__data__;
                    return ("string" == (n = typeof (r = t)) || "number" == n || "symbol" == n || "boolean" == n ? "__proto__" !== r : null === r) ? i["string" == typeof t ? "string" : "hash"] : i.map;
                }
                function Ue(e, t) {
                    var r = function(e, t) {
                        return null == e ? void 0 : e[t];
                    }(e, t);
                    return function(e) {
                        return !(!Ke(e) || function(e) {
                            return !!Z && Z in e;
                        }(e)) && (Ve(e) ? ee : x).test(De(e));
                    }(r) ? r : void 0;
                }
                Se.prototype.clear = function() {
                    this.__data__ = be ? be(null) : {}, this.size = 0;
                }, Se.prototype.delete = function(e) {
                    var t = this.has(e) && delete this.__data__[e];
                    return this.size -= t ? 1 : 0, t;
                }, Se.prototype.get = function(e) {
                    var t = this.__data__;
                    if (be) {
                        var r = t[e];
                        return r === n ? void 0 : r;
                    }
                    return X.call(t, e) ? t[e] : void 0;
                }, Se.prototype.has = function(e) {
                    var t = this.__data__;
                    return be ? void 0 !== t[e] : X.call(t, e);
                }, Se.prototype.set = function(e, t) {
                    var r = this.__data__;
                    return this.size += this.has(e) ? 0 : 1, r[e] = be && void 0 === t ? n : t, this;
                }, Ae.prototype.clear = function() {
                    this.__data__ = [], this.size = 0;
                }, Ae.prototype.delete = function(e) {
                    var t = this.__data__, r = xe(t, e);
                    return !(r < 0 || (r == t.length - 1 ? t.pop() : se.call(t, r, 1), --this.size, 0));
                }, Ae.prototype.get = function(e) {
                    var t = this.__data__, r = xe(t, e);
                    return r < 0 ? void 0 : t[r][1];
                }, Ae.prototype.has = function(e) {
                    return xe(this.__data__, e) > -1;
                }, Ae.prototype.set = function(e, t) {
                    var r = this.__data__, n = xe(r, e);
                    return n < 0 ? (++this.size, r.push([
                        e,
                        t
                    ])) : r[n][1] = t, this;
                }, Me.prototype.clear = function() {
                    this.size = 0, this.__data__ = {
                        hash: new Se,
                        map: new (de || Ae),
                        string: new Se
                    };
                }, Me.prototype.delete = function(e) {
                    var t = Ne(this, e).delete(e);
                    return this.size -= t ? 1 : 0, t;
                }, Me.prototype.get = function(e) {
                    return Ne(this, e).get(e);
                }, Me.prototype.has = function(e) {
                    return Ne(this, e).has(e);
                }, Me.prototype.set = function(e, t) {
                    var r = Ne(this, e), n = r.size;
                    return r.set(e, t), this.size += r.size == n ? 0 : 1, this;
                }, Ie.prototype.add = Ie.prototype.push = function(e) {
                    return this.__data__.set(e, n), this;
                }, Ie.prototype.has = function(e) {
                    return this.__data__.has(e);
                }, Te.prototype.clear = function() {
                    this.__data__ = new Ae, this.size = 0;
                }, Te.prototype.delete = function(e) {
                    var t = this.__data__, r = t.delete(e);
                    return this.size = t.size, r;
                }, Te.prototype.get = function(e) {
                    return this.__data__.get(e);
                }, Te.prototype.has = function(e) {
                    return this.__data__.has(e);
                }, Te.prototype.set = function(e, t) {
                    var r = this.__data__;
                    if (r instanceof Ae) {
                        var n = r.__data__;
                        if (!de || n.length < 199) return n.push([
                            e,
                            t
                        ]), this.size = ++r.size, this;
                        r = this.__data__ = new Me(n);
                    }
                    return r.set(e, t), this.size = r.size, this;
                };
                var Be = ae ? function(e) {
                    return null == e ? [] : (e = Object(e), function(t) {
                        for(var r = -1, n = null == t ? 0 : t.length, i = 0, s = []; ++r < n;){
                            var o = t[r];
                            a = o, ie.call(e, a) && (s[i++] = o);
                        }
                        var a;
                        return s;
                    }(ae(e)));
                } : function() {
                    return [];
                }, Le = Ce;
                function je(e, t) {
                    return !!(t = null == t ? o : t) && ("number" == typeof e || C.test(e)) && e > -1 && e % 1 == 0 && e < t;
                }
                function De(e) {
                    if (null != e) {
                        try {
                            return Y.call(e);
                        } catch (e) {}
                        try {
                            return e + "";
                        } catch (e) {}
                    }
                    return "";
                }
                function qe(e, t) {
                    return e === t || e != e && t != t;
                }
                (ue && Le(new ue(new ArrayBuffer(1))) != T || de && Le(new de) != b || fe && Le(fe.resolve()) != v || le && Le(new le) != E || pe && Le(new pe) != M) && (Le = function(e) {
                    var t = Ce(e), r = t == y ? e.constructor : void 0, n = r ? De(r) : "";
                    if (n) switch(n){
                        case ge:
                            return T;
                        case me:
                            return b;
                        case ye:
                            return v;
                        case ve:
                            return E;
                        case we:
                            return M;
                    }
                    return t;
                });
                var Fe = Re(function() {
                    return arguments;
                }()) ? Re : function(e) {
                    return Ge(e) && X.call(e, "callee") && !ie.call(e, "callee");
                }, He = Array.isArray, ze = ce || function() {
                    return !1;
                };
                function Ve(e) {
                    if (!Ke(e)) return !1;
                    var t = Ce(e);
                    return t == l || t == p || t == h || t == w;
                }
                function $e(e) {
                    return "number" == typeof e && e > -1 && e % 1 == 0 && e <= o;
                }
                function Ke(e) {
                    var t = typeof e;
                    return null != e && ("object" == t || "function" == t);
                }
                function Ge(e) {
                    return null != e && "object" == typeof e;
                }
                var We = D ? function(e) {
                    return function(t) {
                        return e(t);
                    };
                }(D) : function(e) {
                    return Ge(e) && $e(e.length) && !!R[Ce(e)];
                };
                function Je(e) {
                    return null != (t = e) && $e(t.length) && !Ve(t) ? function(e, t) {
                        var r = He(e), n = !r && Fe(e), i = !r && !n && ze(e), s = !r && !n && !i && We(e), o = r || n || i || s, a = o ? function(e, t) {
                            for(var r = -1, n = Array(e); ++r < e;)n[r] = t(r);
                            return n;
                        }(e.length, String) : [], c = a.length;
                        for(var h in e)!t && !X.call(e, h) || o && ("length" == h || i && ("offset" == h || "parent" == h) || s && ("buffer" == h || "byteLength" == h || "byteOffset" == h) || je(h, c)) || a.push(h);
                        return a;
                    }(e) : function(e) {
                        if (r = (t = e) && t.constructor, t !== ("function" == typeof r && r.prototype || W)) return he(e);
                        var t, r, n = [];
                        for(var i in Object(e))X.call(e, i) && "constructor" != i && n.push(i);
                        return n;
                    }(e);
                    "TURBOPACK unreachable";
                    var t;
                }
                e.exports = function(e, t) {
                    return ke(e, t);
                };
            },
            5578: (e)=>{
                function t(e, t) {
                    if (!e) throw new Error(t || "Assertion failed");
                }
                e.exports = t, t.equal = function(e, t, r) {
                    if (e != t) throw new Error(r || "Assertion failed: " + e + " != " + t);
                };
            },
            4209: (e, t)=>{
                "use strict";
                var r = t;
                function n(e) {
                    return 1 === e.length ? "0" + e : e;
                }
                function i(e) {
                    for(var t = "", r = 0; r < e.length; r++)t += n(e[r].toString(16));
                    return t;
                }
                r.toArray = function(e, t) {
                    if (Array.isArray(e)) return e.slice();
                    if (!e) return [];
                    var r = [];
                    if ("string" != typeof e) {
                        for(var n = 0; n < e.length; n++)r[n] = 0 | e[n];
                        return r;
                    }
                    if ("hex" === t) for((e = e.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e = "0" + e), n = 0; n < e.length; n += 2)r.push(parseInt(e[n] + e[n + 1], 16));
                    else for(n = 0; n < e.length; n++){
                        var i = e.charCodeAt(n), s = i >> 8, o = 255 & i;
                        s ? r.push(s, o) : r.push(o);
                    }
                    return r;
                }, r.zero2 = n, r.toHex = i, r.encode = function(e, t) {
                    return "hex" === t ? i(e) : e;
                };
            },
            8605: (e, t, r)=>{
                "use strict";
                const n = r(5006), i = r(2858), s = r(9178), o = r(1702), a = Symbol("encodeFragmentIdentifier");
                function c(e) {
                    if ("string" != typeof e || 1 !== e.length) throw new TypeError("arrayFormatSeparator must be single character string");
                }
                function h(e, t) {
                    return t.encode ? t.strict ? n(e) : encodeURIComponent(e) : e;
                }
                function u(e, t) {
                    return t.decode ? i(e) : e;
                }
                function d(e) {
                    return Array.isArray(e) ? e.sort() : "object" == typeof e ? d(Object.keys(e)).sort((e, t)=>Number(e) - Number(t)).map((t)=>e[t]) : e;
                }
                function f(e) {
                    const t = e.indexOf("#");
                    return -1 !== t && (e = e.slice(0, t)), e;
                }
                function l(e) {
                    const t = (e = f(e)).indexOf("?");
                    return -1 === t ? "" : e.slice(t + 1);
                }
                function p(e, t) {
                    return t.parseNumbers && !Number.isNaN(Number(e)) && "string" == typeof e && "" !== e.trim() ? e = Number(e) : !t.parseBooleans || null === e || "true" !== e.toLowerCase() && "false" !== e.toLowerCase() || (e = "true" === e.toLowerCase()), e;
                }
                function b(e, t) {
                    c((t = Object.assign({
                        decode: !0,
                        sort: !0,
                        arrayFormat: "none",
                        arrayFormatSeparator: ",",
                        parseNumbers: !1,
                        parseBooleans: !1
                    }, t)).arrayFormatSeparator);
                    const r = function(e) {
                        let t;
                        switch(e.arrayFormat){
                            case "index":
                                return (e, r, n)=>{
                                    t = /\[(\d*)\]$/.exec(e), e = e.replace(/\[\d*\]$/, ""), t ? (void 0 === n[e] && (n[e] = {}), n[e][t[1]] = r) : n[e] = r;
                                };
                            case "bracket":
                                return (e, r, n)=>{
                                    t = /(\[\])$/.exec(e), e = e.replace(/\[\]$/, ""), t ? void 0 !== n[e] ? n[e] = [].concat(n[e], r) : n[e] = [
                                        r
                                    ] : n[e] = r;
                                };
                            case "colon-list-separator":
                                return (e, r, n)=>{
                                    t = /(:list)$/.exec(e), e = e.replace(/:list$/, ""), t ? void 0 !== n[e] ? n[e] = [].concat(n[e], r) : n[e] = [
                                        r
                                    ] : n[e] = r;
                                };
                            case "comma":
                            case "separator":
                                return (t, r, n)=>{
                                    const i = "string" == typeof r && r.includes(e.arrayFormatSeparator), s = "string" == typeof r && !i && u(r, e).includes(e.arrayFormatSeparator);
                                    r = s ? u(r, e) : r;
                                    const o = i || s ? r.split(e.arrayFormatSeparator).map((t)=>u(t, e)) : null === r ? r : u(r, e);
                                    n[t] = o;
                                };
                            case "bracket-separator":
                                return (t, r, n)=>{
                                    const i = /(\[\])$/.test(t);
                                    if (t = t.replace(/\[\]$/, ""), !i) return void (n[t] = r ? u(r, e) : r);
                                    const s = null === r ? [] : r.split(e.arrayFormatSeparator).map((t)=>u(t, e));
                                    void 0 !== n[t] ? n[t] = [].concat(n[t], s) : n[t] = s;
                                };
                            default:
                                return (e, t, r)=>{
                                    void 0 !== r[e] ? r[e] = [].concat(r[e], t) : r[e] = t;
                                };
                        }
                    }(t), n = Object.create(null);
                    if ("string" != typeof e) return n;
                    if (!(e = e.trim().replace(/^[?#&]/, ""))) return n;
                    for (const i of e.split("&")){
                        if ("" === i) continue;
                        let [e, o] = s(t.decode ? i.replace(/\+/g, " ") : i, "=");
                        o = void 0 === o ? null : [
                            "comma",
                            "separator",
                            "bracket-separator"
                        ].includes(t.arrayFormat) ? o : u(o, t), r(u(e, t), o, n);
                    }
                    for (const e of Object.keys(n)){
                        const r = n[e];
                        if ("object" == typeof r && null !== r) for (const e of Object.keys(r))r[e] = p(r[e], t);
                        else n[e] = p(r, t);
                    }
                    return !1 === t.sort ? n : (!0 === t.sort ? Object.keys(n).sort() : Object.keys(n).sort(t.sort)).reduce((e, t)=>{
                        const r = n[t];
                        return Boolean(r) && "object" == typeof r && !Array.isArray(r) ? e[t] = d(r) : e[t] = r, e;
                    }, Object.create(null));
                }
                t.extract = l, t.parse = b, t.stringify = (e, t)=>{
                    if (!e) return "";
                    c((t = Object.assign({
                        encode: !0,
                        strict: !0,
                        arrayFormat: "none",
                        arrayFormatSeparator: ","
                    }, t)).arrayFormatSeparator);
                    const r = (r)=>t.skipNull && null == e[r] || t.skipEmptyString && "" === e[r], n = function(e) {
                        switch(e.arrayFormat){
                            case "index":
                                return (t)=>(r, n)=>{
                                        const i = r.length;
                                        return void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [
                                            ...r,
                                            [
                                                h(t, e),
                                                "[",
                                                i,
                                                "]"
                                            ].join("")
                                        ] : [
                                            ...r,
                                            [
                                                h(t, e),
                                                "[",
                                                h(i, e),
                                                "]=",
                                                h(n, e)
                                            ].join("")
                                        ];
                                    };
                            case "bracket":
                                return (t)=>(r, n)=>void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [
                                            ...r,
                                            [
                                                h(t, e),
                                                "[]"
                                            ].join("")
                                        ] : [
                                            ...r,
                                            [
                                                h(t, e),
                                                "[]=",
                                                h(n, e)
                                            ].join("")
                                        ];
                            case "colon-list-separator":
                                return (t)=>(r, n)=>void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [
                                            ...r,
                                            [
                                                h(t, e),
                                                ":list="
                                            ].join("")
                                        ] : [
                                            ...r,
                                            [
                                                h(t, e),
                                                ":list=",
                                                h(n, e)
                                            ].join("")
                                        ];
                            case "comma":
                            case "separator":
                            case "bracket-separator":
                                {
                                    const t = "bracket-separator" === e.arrayFormat ? "[]=" : "=";
                                    return (r)=>(n, i)=>void 0 === i || e.skipNull && null === i || e.skipEmptyString && "" === i ? n : (i = null === i ? "" : i, 0 === n.length ? [
                                                [
                                                    h(r, e),
                                                    t,
                                                    h(i, e)
                                                ].join("")
                                            ] : [
                                                [
                                                    n,
                                                    h(i, e)
                                                ].join(e.arrayFormatSeparator)
                                            ]);
                                }
                            default:
                                return (t)=>(r, n)=>void 0 === n || e.skipNull && null === n || e.skipEmptyString && "" === n ? r : null === n ? [
                                            ...r,
                                            h(t, e)
                                        ] : [
                                            ...r,
                                            [
                                                h(t, e),
                                                "=",
                                                h(n, e)
                                            ].join("")
                                        ];
                        }
                    }(t), i = {};
                    for (const t of Object.keys(e))r(t) || (i[t] = e[t]);
                    const s = Object.keys(i);
                    return !1 !== t.sort && s.sort(t.sort), s.map((r)=>{
                        const i = e[r];
                        return void 0 === i ? "" : null === i ? h(r, t) : Array.isArray(i) ? 0 === i.length && "bracket-separator" === t.arrayFormat ? h(r, t) + "[]" : i.reduce(n(r), []).join("&") : h(r, t) + "=" + h(i, t);
                    }).filter((e)=>e.length > 0).join("&");
                }, t.parseUrl = (e, t)=>{
                    t = Object.assign({
                        decode: !0
                    }, t);
                    const [r, n] = s(e, "#");
                    return Object.assign({
                        url: r.split("?")[0] || "",
                        query: b(l(e), t)
                    }, t && t.parseFragmentIdentifier && n ? {
                        fragmentIdentifier: u(n, t)
                    } : {});
                }, t.stringifyUrl = (e, r)=>{
                    r = Object.assign({
                        encode: !0,
                        strict: !0,
                        [a]: !0
                    }, r);
                    const n = f(e.url).split("?")[0] || "", i = t.extract(e.url), s = t.parse(i, {
                        sort: !1
                    }), o = Object.assign(s, e.query);
                    let c = t.stringify(o, r);
                    c && (c = `?${c}`);
                    let u = function(e) {
                        let t = "";
                        const r = e.indexOf("#");
                        return -1 !== r && (t = e.slice(r)), t;
                    }(e.url);
                    return e.fragmentIdentifier && (u = `#${r[a] ? h(e.fragmentIdentifier, r) : e.fragmentIdentifier}`), `${n}${c}${u}`;
                }, t.pick = (e, r, n)=>{
                    n = Object.assign({
                        parseFragmentIdentifier: !0,
                        [a]: !1
                    }, n);
                    const { url: i, query: s, fragmentIdentifier: c } = t.parseUrl(e, n);
                    return t.stringifyUrl({
                        url: i,
                        query: o(s, r),
                        fragmentIdentifier: c
                    }, n);
                }, t.exclude = (e, r, n)=>{
                    const i = Array.isArray(r) ? (e)=>!r.includes(e) : (e, t)=>!r(e, t);
                    return t.pick(e, i, n);
                };
            },
            782: (e)=>{
                "use strict";
                function t(e) {
                    try {
                        return JSON.stringify(e);
                    } catch (e) {
                        return '"[Circular]"';
                    }
                }
                e.exports = function(e, r, n) {
                    var i = n && n.stringify || t;
                    if ("object" == typeof e && null !== e) {
                        var s = r.length + 1;
                        if (1 === s) return e;
                        var o = new Array(s);
                        o[0] = i(e);
                        for(var a = 1; a < s; a++)o[a] = i(r[a]);
                        return o.join(" ");
                    }
                    if ("string" != typeof e) return e;
                    var c = r.length;
                    if (0 === c) return e;
                    for(var h = "", u = 0, d = -1, f = e && e.length || 0, l = 0; l < f;){
                        if (37 === e.charCodeAt(l) && l + 1 < f) {
                            switch(d = d > -1 ? d : 0, e.charCodeAt(l + 1)){
                                case 100:
                                case 102:
                                    if (u >= c) break;
                                    if (null == r[u]) break;
                                    d < l && (h += e.slice(d, l)), h += Number(r[u]), d = l + 2, l++;
                                    break;
                                case 105:
                                    if (u >= c) break;
                                    if (null == r[u]) break;
                                    d < l && (h += e.slice(d, l)), h += Math.floor(Number(r[u])), d = l + 2, l++;
                                    break;
                                case 79:
                                case 111:
                                case 106:
                                    if (u >= c) break;
                                    if (void 0 === r[u]) break;
                                    d < l && (h += e.slice(d, l));
                                    var p = typeof r[u];
                                    if ("string" === p) {
                                        h += "'" + r[u] + "'", d = l + 2, l++;
                                        break;
                                    }
                                    if ("function" === p) {
                                        h += r[u].name || "<anonymous>", d = l + 2, l++;
                                        break;
                                    }
                                    h += i(r[u]), d = l + 2, l++;
                                    break;
                                case 115:
                                    if (u >= c) break;
                                    d < l && (h += e.slice(d, l)), h += String(r[u]), d = l + 2, l++;
                                    break;
                                case 37:
                                    d < l && (h += e.slice(d, l)), h += "%", d = l + 2, l++, u--;
                            }
                            ++u;
                        }
                        ++l;
                    }
                    return -1 === d ? e : (d < f && (h += e.slice(d)), h);
                };
            },
            9178: (e)=>{
                "use strict";
                e.exports = (e, t)=>{
                    if ("string" != typeof e || "string" != typeof t) throw new TypeError("Expected the arguments to be of type `string`");
                    if ("" === t) return [
                        e
                    ];
                    const r = e.indexOf(t);
                    return -1 === r ? [
                        e
                    ] : [
                        e.slice(0, r),
                        e.slice(r + t.length)
                    ];
                };
            },
            5006: (e)=>{
                "use strict";
                e.exports = (e)=>encodeURIComponent(e).replace(/[!'()*]/g, (e)=>`%${e.charCodeAt(0).toString(16).toUpperCase()}`);
            },
            5927: (e, t, r)=>{
                "use strict";
                r.r(t), r.d(t, {
                    __assign: ()=>s,
                    __asyncDelegator: ()=>w,
                    __asyncGenerator: ()=>v,
                    __asyncValues: ()=>_,
                    __await: ()=>y,
                    __awaiter: ()=>u,
                    __classPrivateFieldGet: ()=>M,
                    __classPrivateFieldSet: ()=>I,
                    __createBinding: ()=>f,
                    __decorate: ()=>a,
                    __exportStar: ()=>l,
                    __extends: ()=>i,
                    __generator: ()=>d,
                    __importDefault: ()=>A,
                    __importStar: ()=>S,
                    __makeTemplateObject: ()=>E,
                    __metadata: ()=>h,
                    __param: ()=>c,
                    __read: ()=>b,
                    __rest: ()=>o,
                    __spread: ()=>g,
                    __spreadArrays: ()=>m,
                    __values: ()=>p
                });
                var n = function(e, t) {
                    return n = Object.setPrototypeOf || ({
                        __proto__: []
                    }) instanceof Array && function(e, t) {
                        e.__proto__ = t;
                    } || function(e, t) {
                        for(var r in t)t.hasOwnProperty(r) && (e[r] = t[r]);
                    }, n(e, t);
                };
                function i(e, t) {
                    function r() {
                        this.constructor = e;
                    }
                    n(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r);
                }
                var s = function() {
                    return s = Object.assign || function(e) {
                        for(var t, r = 1, n = arguments.length; r < n; r++)for(var i in t = arguments[r])Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                        return e;
                    }, s.apply(this, arguments);
                };
                function o(e, t) {
                    var r = {};
                    for(var n in e)Object.prototype.hasOwnProperty.call(e, n) && t.indexOf(n) < 0 && (r[n] = e[n]);
                    if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                        var i = 0;
                        for(n = Object.getOwnPropertySymbols(e); i < n.length; i++)t.indexOf(n[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                    }
                    return r;
                }
                function a(e, t, r, n) {
                    var i, s = arguments.length, o = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
                    if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, n);
                    else for(var a = e.length - 1; a >= 0; a--)(i = e[a]) && (o = (s < 3 ? i(o) : s > 3 ? i(t, r, o) : i(t, r)) || o);
                    return s > 3 && o && Object.defineProperty(t, r, o), o;
                }
                function c(e, t) {
                    return function(r, n) {
                        t(r, n, e);
                    };
                }
                function h(e, t) {
                    if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
                }
                function u(e, t, r, n) {
                    return new (r || (r = Promise))(function(i, s) {
                        function o(e) {
                            try {
                                c(n.next(e));
                            } catch (e) {
                                s(e);
                            }
                        }
                        function a(e) {
                            try {
                                c(n.throw(e));
                            } catch (e) {
                                s(e);
                            }
                        }
                        function c(e) {
                            var t;
                            e.done ? i(e.value) : (t = e.value, t instanceof r ? t : new r(function(e) {
                                e(t);
                            })).then(o, a);
                        }
                        c((n = n.apply(e, t || [])).next());
                    });
                }
                function d(e, t) {
                    var r, n, i, s, o = {
                        label: 0,
                        sent: function() {
                            if (1 & i[0]) throw i[1];
                            return i[1];
                        },
                        trys: [],
                        ops: []
                    };
                    return s = {
                        next: a(0),
                        throw: a(1),
                        return: a(2)
                    }, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
                        return this;
                    }), s;
                    "TURBOPACK unreachable";
                    function a(s) {
                        return function(a) {
                            return function(s) {
                                if (r) throw new TypeError("Generator is already executing.");
                                for(; o;)try {
                                    if (r = 1, n && (i = 2 & s[0] ? n.return : s[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, s[1])).done) return i;
                                    switch(n = 0, i && (s = [
                                        2 & s[0],
                                        i.value
                                    ]), s[0]){
                                        case 0:
                                        case 1:
                                            i = s;
                                            break;
                                        case 4:
                                            return o.label++, {
                                                value: s[1],
                                                done: !1
                                            };
                                        case 5:
                                            o.label++, n = s[1], s = [
                                                0
                                            ];
                                            continue;
                                        case 7:
                                            s = o.ops.pop(), o.trys.pop();
                                            continue;
                                        default:
                                            if (!((i = (i = o.trys).length > 0 && i[i.length - 1]) || 6 !== s[0] && 2 !== s[0])) {
                                                o = 0;
                                                continue;
                                            }
                                            if (3 === s[0] && (!i || s[1] > i[0] && s[1] < i[3])) {
                                                o.label = s[1];
                                                break;
                                            }
                                            if (6 === s[0] && o.label < i[1]) {
                                                o.label = i[1], i = s;
                                                break;
                                            }
                                            if (i && o.label < i[2]) {
                                                o.label = i[2], o.ops.push(s);
                                                break;
                                            }
                                            i[2] && o.ops.pop(), o.trys.pop();
                                            continue;
                                    }
                                    s = t.call(e, o);
                                } catch (e) {
                                    s = [
                                        6,
                                        e
                                    ], n = 0;
                                } finally{
                                    r = i = 0;
                                }
                                if (5 & s[0]) throw s[1];
                                return {
                                    value: s[0] ? s[1] : void 0,
                                    done: !0
                                };
                            }([
                                s,
                                a
                            ]);
                        };
                    }
                }
                function f(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r];
                }
                function l(e, t) {
                    for(var r in e)"default" === r || t.hasOwnProperty(r) || (t[r] = e[r]);
                }
                function p(e) {
                    var t = "function" == typeof Symbol && Symbol.iterator, r = t && e[t], n = 0;
                    if (r) return r.call(e);
                    if (e && "number" == typeof e.length) return {
                        next: function() {
                            return e && n >= e.length && (e = void 0), {
                                value: e && e[n++],
                                done: !e
                            };
                        }
                    };
                    throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
                }
                function b(e, t) {
                    var r = "function" == typeof Symbol && e[Symbol.iterator];
                    if (!r) return e;
                    var n, i, s = r.call(e), o = [];
                    try {
                        for(; (void 0 === t || t-- > 0) && !(n = s.next()).done;)o.push(n.value);
                    } catch (e) {
                        i = {
                            error: e
                        };
                    } finally{
                        try {
                            n && !n.done && (r = s.return) && r.call(s);
                        } finally{
                            if (i) throw i.error;
                        }
                    }
                    return o;
                }
                function g() {
                    for(var e = [], t = 0; t < arguments.length; t++)e = e.concat(b(arguments[t]));
                    return e;
                }
                function m() {
                    for(var e = 0, t = 0, r = arguments.length; t < r; t++)e += arguments[t].length;
                    var n = Array(e), i = 0;
                    for(t = 0; t < r; t++)for(var s = arguments[t], o = 0, a = s.length; o < a; o++, i++)n[i] = s[o];
                    return n;
                }
                function y(e) {
                    return this instanceof y ? (this.v = e, this) : new y(e);
                }
                function v(e, t, r) {
                    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                    var n, i = r.apply(e, t || []), s = [];
                    return n = {}, o("next"), o("throw"), o("return"), n[Symbol.asyncIterator] = function() {
                        return this;
                    }, n;
                    "TURBOPACK unreachable";
                    function o(e) {
                        i[e] && (n[e] = function(t) {
                            return new Promise(function(r, n) {
                                s.push([
                                    e,
                                    t,
                                    r,
                                    n
                                ]) > 1 || a(e, t);
                            });
                        });
                    }
                    function a(e, t) {
                        try {
                            (r = i[e](t)).value instanceof y ? Promise.resolve(r.value.v).then(c, h) : u(s[0][2], r);
                        } catch (e) {
                            u(s[0][3], e);
                        }
                        var r;
                    }
                    function c(e) {
                        a("next", e);
                    }
                    function h(e) {
                        a("throw", e);
                    }
                    function u(e, t) {
                        e(t), s.shift(), s.length && a(s[0][0], s[0][1]);
                    }
                }
                function w(e) {
                    var t, r;
                    return t = {}, n("next"), n("throw", function(e) {
                        throw e;
                    }), n("return"), t[Symbol.iterator] = function() {
                        return this;
                    }, t;
                    "TURBOPACK unreachable";
                    function n(n, i) {
                        t[n] = e[n] ? function(t) {
                            return (r = !r) ? {
                                value: y(e[n](t)),
                                done: "return" === n
                            } : i ? i(t) : t;
                        } : i;
                    }
                }
                function _(e) {
                    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                    var t, r = e[Symbol.asyncIterator];
                    return r ? r.call(e) : (e = p(e), t = {}, n("next"), n("throw"), n("return"), t[Symbol.asyncIterator] = function() {
                        return this;
                    }, t);
                    "TURBOPACK unreachable";
                    function n(r) {
                        t[r] = e[r] && function(t) {
                            return new Promise(function(n, i) {
                                !function(e, t, r, n) {
                                    Promise.resolve(n).then(function(t) {
                                        e({
                                            value: t,
                                            done: r
                                        });
                                    }, t);
                                }(n, i, (t = e[r](t)).done, t.value);
                            });
                        };
                    }
                }
                function E(e, t) {
                    return Object.defineProperty ? Object.defineProperty(e, "raw", {
                        value: t
                    }) : e.raw = t, e;
                }
                function S(e) {
                    if (e && e.__esModule) return e;
                    var t = {};
                    if (null != e) for(var r in e)Object.hasOwnProperty.call(e, r) && (t[r] = e[r]);
                    return t.default = e, t;
                }
                function A(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    };
                }
                function M(e, t) {
                    if (!t.has(e)) throw new TypeError("attempted to get private field on non-instance");
                    return t.get(e);
                }
                function I(e, t, r) {
                    if (!t.has(e)) throw new TypeError("attempted to set private field on non-instance");
                    return t.set(e, r), r;
                }
            },
            9661: (e, t, r)=>{
                "use strict";
                r.r(t), r.d(t, {
                    __assign: ()=>s,
                    __asyncDelegator: ()=>M,
                    __asyncGenerator: ()=>A,
                    __asyncValues: ()=>I,
                    __await: ()=>S,
                    __awaiter: ()=>p,
                    __classPrivateFieldGet: ()=>k,
                    __classPrivateFieldIn: ()=>O,
                    __classPrivateFieldSet: ()=>P,
                    __createBinding: ()=>g,
                    __decorate: ()=>a,
                    __esDecorate: ()=>h,
                    __exportStar: ()=>m,
                    __extends: ()=>i,
                    __generator: ()=>b,
                    __importDefault: ()=>R,
                    __importStar: ()=>C,
                    __makeTemplateObject: ()=>T,
                    __metadata: ()=>l,
                    __param: ()=>c,
                    __propKey: ()=>d,
                    __read: ()=>v,
                    __rest: ()=>o,
                    __runInitializers: ()=>u,
                    __setFunctionName: ()=>f,
                    __spread: ()=>w,
                    __spreadArray: ()=>E,
                    __spreadArrays: ()=>_,
                    __values: ()=>y
                });
                var n = function(e, t) {
                    return n = Object.setPrototypeOf || ({
                        __proto__: []
                    }) instanceof Array && function(e, t) {
                        e.__proto__ = t;
                    } || function(e, t) {
                        for(var r in t)Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                    }, n(e, t);
                };
                function i(e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
                    function r() {
                        this.constructor = e;
                    }
                    n(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r);
                }
                var s = function() {
                    return s = Object.assign || function(e) {
                        for(var t, r = 1, n = arguments.length; r < n; r++)for(var i in t = arguments[r])Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                        return e;
                    }, s.apply(this, arguments);
                };
                function o(e, t) {
                    var r = {};
                    for(var n in e)Object.prototype.hasOwnProperty.call(e, n) && t.indexOf(n) < 0 && (r[n] = e[n]);
                    if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                        var i = 0;
                        for(n = Object.getOwnPropertySymbols(e); i < n.length; i++)t.indexOf(n[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                    }
                    return r;
                }
                function a(e, t, r, n) {
                    var i, s = arguments.length, o = s < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
                    if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, r, n);
                    else for(var a = e.length - 1; a >= 0; a--)(i = e[a]) && (o = (s < 3 ? i(o) : s > 3 ? i(t, r, o) : i(t, r)) || o);
                    return s > 3 && o && Object.defineProperty(t, r, o), o;
                }
                function c(e, t) {
                    return function(r, n) {
                        t(r, n, e);
                    };
                }
                function h(e, t, r, n, i, s) {
                    function o(e) {
                        if (void 0 !== e && "function" != typeof e) throw new TypeError("Function expected");
                        return e;
                    }
                    for(var a, c = n.kind, h = "getter" === c ? "get" : "setter" === c ? "set" : "value", u = !t && e ? n.static ? e : e.prototype : null, d = t || (u ? Object.getOwnPropertyDescriptor(u, n.name) : {}), f = !1, l = r.length - 1; l >= 0; l--){
                        var p = {};
                        for(var b in n)p[b] = "access" === b ? {} : n[b];
                        for(var b in n.access)p.access[b] = n.access[b];
                        p.addInitializer = function(e) {
                            if (f) throw new TypeError("Cannot add initializers after decoration has completed");
                            s.push(o(e || null));
                        };
                        var g = (0, r[l])("accessor" === c ? {
                            get: d.get,
                            set: d.set
                        } : d[h], p);
                        if ("accessor" === c) {
                            if (void 0 === g) continue;
                            if (null === g || "object" != typeof g) throw new TypeError("Object expected");
                            (a = o(g.get)) && (d.get = a), (a = o(g.set)) && (d.set = a), (a = o(g.init)) && i.push(a);
                        } else (a = o(g)) && ("field" === c ? i.push(a) : d[h] = a);
                    }
                    u && Object.defineProperty(u, n.name, d), f = !0;
                }
                function u(e, t, r) {
                    for(var n = arguments.length > 2, i = 0; i < t.length; i++)r = n ? t[i].call(e, r) : t[i].call(e);
                    return n ? r : void 0;
                }
                function d(e) {
                    return "symbol" == typeof e ? e : "".concat(e);
                }
                function f(e, t, r) {
                    return "symbol" == typeof t && (t = t.description ? "[".concat(t.description, "]") : ""), Object.defineProperty(e, "name", {
                        configurable: !0,
                        value: r ? "".concat(r, " ", t) : t
                    });
                }
                function l(e, t) {
                    if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t);
                }
                function p(e, t, r, n) {
                    return new (r || (r = Promise))(function(i, s) {
                        function o(e) {
                            try {
                                c(n.next(e));
                            } catch (e) {
                                s(e);
                            }
                        }
                        function a(e) {
                            try {
                                c(n.throw(e));
                            } catch (e) {
                                s(e);
                            }
                        }
                        function c(e) {
                            var t;
                            e.done ? i(e.value) : (t = e.value, t instanceof r ? t : new r(function(e) {
                                e(t);
                            })).then(o, a);
                        }
                        c((n = n.apply(e, t || [])).next());
                    });
                }
                function b(e, t) {
                    var r, n, i, s, o = {
                        label: 0,
                        sent: function() {
                            if (1 & i[0]) throw i[1];
                            return i[1];
                        },
                        trys: [],
                        ops: []
                    };
                    return s = {
                        next: a(0),
                        throw: a(1),
                        return: a(2)
                    }, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
                        return this;
                    }), s;
                    "TURBOPACK unreachable";
                    function a(a) {
                        return function(c) {
                            return function(a) {
                                if (r) throw new TypeError("Generator is already executing.");
                                for(; s && (s = 0, a[0] && (o = 0)), o;)try {
                                    if (r = 1, n && (i = 2 & a[0] ? n.return : a[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, a[1])).done) return i;
                                    switch(n = 0, i && (a = [
                                        2 & a[0],
                                        i.value
                                    ]), a[0]){
                                        case 0:
                                        case 1:
                                            i = a;
                                            break;
                                        case 4:
                                            return o.label++, {
                                                value: a[1],
                                                done: !1
                                            };
                                        case 5:
                                            o.label++, n = a[1], a = [
                                                0
                                            ];
                                            continue;
                                        case 7:
                                            a = o.ops.pop(), o.trys.pop();
                                            continue;
                                        default:
                                            if (!((i = (i = o.trys).length > 0 && i[i.length - 1]) || 6 !== a[0] && 2 !== a[0])) {
                                                o = 0;
                                                continue;
                                            }
                                            if (3 === a[0] && (!i || a[1] > i[0] && a[1] < i[3])) {
                                                o.label = a[1];
                                                break;
                                            }
                                            if (6 === a[0] && o.label < i[1]) {
                                                o.label = i[1], i = a;
                                                break;
                                            }
                                            if (i && o.label < i[2]) {
                                                o.label = i[2], o.ops.push(a);
                                                break;
                                            }
                                            i[2] && o.ops.pop(), o.trys.pop();
                                            continue;
                                    }
                                    a = t.call(e, o);
                                } catch (e) {
                                    a = [
                                        6,
                                        e
                                    ], n = 0;
                                } finally{
                                    r = i = 0;
                                }
                                if (5 & a[0]) throw a[1];
                                return {
                                    value: a[0] ? a[1] : void 0,
                                    done: !0
                                };
                            }([
                                a,
                                c
                            ]);
                        };
                    }
                }
                var g = Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r];
                        }
                    }), Object.defineProperty(e, n, i);
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r];
                };
                function m(e, t) {
                    for(var r in e)"default" === r || Object.prototype.hasOwnProperty.call(t, r) || g(t, e, r);
                }
                function y(e) {
                    var t = "function" == typeof Symbol && Symbol.iterator, r = t && e[t], n = 0;
                    if (r) return r.call(e);
                    if (e && "number" == typeof e.length) return {
                        next: function() {
                            return e && n >= e.length && (e = void 0), {
                                value: e && e[n++],
                                done: !e
                            };
                        }
                    };
                    throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
                }
                function v(e, t) {
                    var r = "function" == typeof Symbol && e[Symbol.iterator];
                    if (!r) return e;
                    var n, i, s = r.call(e), o = [];
                    try {
                        for(; (void 0 === t || t-- > 0) && !(n = s.next()).done;)o.push(n.value);
                    } catch (e) {
                        i = {
                            error: e
                        };
                    } finally{
                        try {
                            n && !n.done && (r = s.return) && r.call(s);
                        } finally{
                            if (i) throw i.error;
                        }
                    }
                    return o;
                }
                function w() {
                    for(var e = [], t = 0; t < arguments.length; t++)e = e.concat(v(arguments[t]));
                    return e;
                }
                function _() {
                    for(var e = 0, t = 0, r = arguments.length; t < r; t++)e += arguments[t].length;
                    var n = Array(e), i = 0;
                    for(t = 0; t < r; t++)for(var s = arguments[t], o = 0, a = s.length; o < a; o++, i++)n[i] = s[o];
                    return n;
                }
                function E(e, t, r) {
                    if (r || 2 === arguments.length) for(var n, i = 0, s = t.length; i < s; i++)!n && i in t || (n || (n = Array.prototype.slice.call(t, 0, i)), n[i] = t[i]);
                    return e.concat(n || Array.prototype.slice.call(t));
                }
                function S(e) {
                    return this instanceof S ? (this.v = e, this) : new S(e);
                }
                function A(e, t, r) {
                    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                    var n, i = r.apply(e, t || []), s = [];
                    return n = {}, o("next"), o("throw"), o("return"), n[Symbol.asyncIterator] = function() {
                        return this;
                    }, n;
                    "TURBOPACK unreachable";
                    function o(e) {
                        i[e] && (n[e] = function(t) {
                            return new Promise(function(r, n) {
                                s.push([
                                    e,
                                    t,
                                    r,
                                    n
                                ]) > 1 || a(e, t);
                            });
                        });
                    }
                    function a(e, t) {
                        try {
                            (r = i[e](t)).value instanceof S ? Promise.resolve(r.value.v).then(c, h) : u(s[0][2], r);
                        } catch (e) {
                            u(s[0][3], e);
                        }
                        var r;
                    }
                    function c(e) {
                        a("next", e);
                    }
                    function h(e) {
                        a("throw", e);
                    }
                    function u(e, t) {
                        e(t), s.shift(), s.length && a(s[0][0], s[0][1]);
                    }
                }
                function M(e) {
                    var t, r;
                    return t = {}, n("next"), n("throw", function(e) {
                        throw e;
                    }), n("return"), t[Symbol.iterator] = function() {
                        return this;
                    }, t;
                    "TURBOPACK unreachable";
                    function n(n, i) {
                        t[n] = e[n] ? function(t) {
                            return (r = !r) ? {
                                value: S(e[n](t)),
                                done: !1
                            } : i ? i(t) : t;
                        } : i;
                    }
                }
                function I(e) {
                    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                    var t, r = e[Symbol.asyncIterator];
                    return r ? r.call(e) : (e = y(e), t = {}, n("next"), n("throw"), n("return"), t[Symbol.asyncIterator] = function() {
                        return this;
                    }, t);
                    "TURBOPACK unreachable";
                    function n(r) {
                        t[r] = e[r] && function(t) {
                            return new Promise(function(n, i) {
                                !function(e, t, r, n) {
                                    Promise.resolve(n).then(function(t) {
                                        e({
                                            value: t,
                                            done: r
                                        });
                                    }, t);
                                }(n, i, (t = e[r](t)).done, t.value);
                            });
                        };
                    }
                }
                function T(e, t) {
                    return Object.defineProperty ? Object.defineProperty(e, "raw", {
                        value: t
                    }) : e.raw = t, e;
                }
                var x = Object.create ? function(e, t) {
                    Object.defineProperty(e, "default", {
                        enumerable: !0,
                        value: t
                    });
                } : function(e, t) {
                    e.default = t;
                };
                function C(e) {
                    if (e && e.__esModule) return e;
                    var t = {};
                    if (null != e) for(var r in e)"default" !== r && Object.prototype.hasOwnProperty.call(e, r) && g(t, e, r);
                    return x(t, e), t;
                }
                function R(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    };
                }
                function k(e, t, r, n) {
                    if ("a" === r && !n) throw new TypeError("Private accessor was defined without a getter");
                    if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
                    return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e);
                }
                function P(e, t, r, n, i) {
                    if ("m" === n) throw new TypeError("Private method is not writable");
                    if ("a" === n && !i) throw new TypeError("Private accessor was defined without a setter");
                    if ("function" == typeof t ? e !== t || !i : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
                    return "a" === n ? i.call(e, r) : i ? i.value = r : t.set(e, r), r;
                }
                function O(e, t) {
                    if (null === t || "object" != typeof t && "function" != typeof t) throw new TypeError("Cannot use 'in' operator on non-object");
                    return "function" == typeof e ? t === e : e.has(t);
                }
            },
            5985: (e)=>{
                "use strict";
                e.exports = function() {
                    throw new Error("ws does not work in the browser. Browser clients must use the native WebSocket object");
                };
            },
            4154: (e, t)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.ALEPHIUM_DEEP_LINK = t.RELAY_URL = t.LOGGER = t.RELAY_METHODS = t.PROVIDER_NAMESPACE = void 0, t.PROVIDER_NAMESPACE = "alephium", t.RELAY_METHODS = [
                    "alph_signAndSubmitTransferTx",
                    "alph_signAndSubmitDeployContractTx",
                    "alph_signAndSubmitExecuteScriptTx",
                    "alph_signAndSubmitUnsignedTx",
                    "alph_signAndSubmitChainedTx",
                    "alph_signUnsignedTx",
                    "alph_signMessage",
                    "alph_requestNodeApi",
                    "alph_requestExplorerApi"
                ], t.LOGGER = "error", t.RELAY_URL = "wss://relay.walletconnect.org", t.ALEPHIUM_DEEP_LINK = "alephium://";
            },
            2071: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                const n = r(9661);
                n.__exportStar(r(6098), t), n.__exportStar(r(4154), t), n.__exportStar(r(8590), t);
            },
            6098: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.parseAccount = t.formatAccount = t.parseChain = t.formatChain = t.isCompatibleAddressGroup = t.isCompatibleChain = t.WalletConnectProvider = void 0;
                const n = r(9661), i = n.__importDefault(r(2579)), s = n.__importDefault(r(7228)), o = r(7228), a = r(3317), c = r(3317), h = r(4610), u = r(4154), d = r(5842), f = r(3245), l = r(6446), p = r(9423);
                class b extends h.SignerProvider {
                    static async init(e) {
                        const t = new b(e);
                        return await t.initialize(), t;
                    }
                    constructor(e){
                        super(), this.events = new i.default, this.account = void 0, this.rateLimit = function() {
                            const e = new p.Sema(5);
                            return async ()=>{
                                const t = e.nrWaiting();
                                t > 0 && console.warn(`There are currently ${t} requests in the waiting queue. Please reduce the number of WalletConnect requests.`), await e.acquire(), setTimeout(()=>e.release(), 1e3);
                            };
                        }(), this.requestNodeAPI = (e)=>this.typedRequest("alph_requestNodeApi", e), this.requestExplorerAPI = (e)=>this.typedRequest("alph_requestExplorerApi", e), this.providerOpts = e, this.networkId = e.networkId, this.addressGroup = e.addressGroup, this.permittedChain = m(this.networkId, this.addressGroup), this.methods = e.methods ?? [
                            ...u.RELAY_METHODS
                        ], this.methods.includes("alph_requestNodeApi") ? this.nodeProvider = h.NodeProvider.Remote(this.requestNodeAPI) : this.nodeProvider = void 0, this.methods.includes("alph_requestExplorerApi") ? this.explorerProvider = h.ExplorerProvider.Remote(this.requestExplorerAPI) : this.explorerProvider = void 0;
                    }
                    async connect() {
                        if (this.session) this.updateNamespace(this.session.namespaces);
                        else {
                            const { uri: e, approval: t } = await this.client.connect({
                                requiredNamespaces: {
                                    alephium: {
                                        chains: [
                                            this.permittedChain
                                        ],
                                        methods: this.methods,
                                        events: [
                                            "accountChanged"
                                        ]
                                    }
                                }
                            });
                            e && this.emitEvents("displayUri", e), this.session = await t(), this.updateNamespace(this.session.namespaces);
                        }
                        await this.cleanMessages();
                    }
                    async disconnect() {
                        if (!this.client || !this.session) throw new Error("Sign Client not initialized");
                        await this.providerOpts.onDisconnected();
                        const e = (0, c.getSdkError)("USER_DISCONNECTED");
                        try {
                            await this.client.disconnect({
                                topic: this.session.topic,
                                reason: e
                            });
                        } catch (t) {
                            await this.client.session.delete(this.session.topic, e), await this.client.core.crypto.deleteSymKey(this.session.topic);
                        }
                        this.session = void 0, this.account = void 0;
                    }
                    on(e, t) {
                        this.events.on(e, t);
                    }
                    once(e, t) {
                        this.events.once(e, t);
                    }
                    removeListener(e, t) {
                        this.events.removeListener(e, t);
                    }
                    off(e, t) {
                        this.events.off(e, t);
                    }
                    unsafeGetSelectedAccount() {
                        if (void 0 === this.account) throw Error("Account is not available");
                        return Promise.resolve(this.account);
                    }
                    async signAndSubmitTransferTx(e) {
                        return this.typedRequest("alph_signAndSubmitTransferTx", e);
                    }
                    async signAndSubmitDeployContractTx(e) {
                        return this.typedRequest("alph_signAndSubmitDeployContractTx", e);
                    }
                    async signAndSubmitExecuteScriptTx(e) {
                        return this.typedRequest("alph_signAndSubmitExecuteScriptTx", e);
                    }
                    async signAndSubmitUnsignedTx(e) {
                        return this.typedRequest("alph_signAndSubmitUnsignedTx", e);
                    }
                    async signAndSubmitChainedTx(e) {
                        return this.typedRequest("alph_signAndSubmitChainedTx", e);
                    }
                    async signUnsignedTx(e) {
                        return this.typedRequest("alph_signUnsignedTx", e);
                    }
                    async signMessage(e) {
                        return this.typedRequest("alph_signMessage", e);
                    }
                    getCustomStoragePrefix() {
                        return this.providerOpts.customStoragePrefix ?? "alephium";
                    }
                    getWCStorageKey(e, t, r) {
                        return e + t + `:${this.getCustomStoragePrefix()}//` + r;
                    }
                    async getSessionTopics(e) {
                        const t = this.getWCStorageKey(o.SIGN_CLIENT_STORAGE_PREFIX, f.STORE_STORAGE_VERSION, o.SESSION_CONTEXT), r = await e.getItem(t);
                        return void 0 === r ? [] : r.filter((e)=>{
                            const t = (0, c.getChainsFromNamespaces)(e.namespaces, [
                                u.PROVIDER_NAMESPACE
                            ]);
                            return t.length > 0 && t.every((e)=>e.startsWith(u.PROVIDER_NAMESPACE));
                        }).map((e)=>e.topic);
                    }
                    async cleanBeforeInit() {
                        console.log("Clean storage before SignClient init");
                        const e = new l.KeyValueStorage({
                            ...f.CORE_STORAGE_OPTIONS
                        }), t = this.getWCStorageKey(f.CORE_STORAGE_PREFIX, f.HISTORY_STORAGE_VERSION, f.HISTORY_CONTEXT), r = await e.getItem(t);
                        if (void 0 !== r) {
                            const n = r.filter((e)=>!this.needToDeleteHistory(e));
                            await e.setItem(t, n);
                        }
                        const n = await this.getSessionTopics(e);
                        if (n.length > 0) {
                            const t = this.getWCStorageKey(f.CORE_STORAGE_PREFIX, f.MESSAGES_STORAGE_VERSION, f.MESSAGES_CONTEXT), r = await e.getItem(t);
                            if (void 0 === r) return;
                            const i = (0, c.objToMap)(r);
                            n.forEach((e)=>i.delete(e)), await e.setItem(t, (0, c.mapToObj)(i)), console.log(`Clean topics from messages storage: ${n.join(",")}`);
                        }
                    }
                    needToDeleteHistory(e) {
                        const t = e.request;
                        if ("wc_sessionRequest" !== t.method) return !1;
                        const r = t.params?.request?.method;
                        return "alph_requestNodeApi" === r || "alph_requestExplorerApi" === r;
                    }
                    cleanHistory(e) {
                        try {
                            const t = this.client.core.history.records;
                            for (const [r, n] of t)e && void 0 === n.response || this.needToDeleteHistory(n) && this.client.core.history.delete(n.topic, r);
                        } catch (e) {
                            console.error(`Failed to clean history, error: ${e}`);
                        }
                    }
                    async cleanMessages() {
                        if (void 0 !== this.session) try {
                            await this.client.core.relayer.messages.del(this.session.topic);
                        } catch (e) {
                            console.error(`Failed to clean messages, error: ${e}, topic: ${this.session.topic}`);
                        }
                    }
                    async initialize() {
                        try {
                            await this.cleanBeforeInit();
                        } catch (e) {
                            console.error(`Failed to clean storage, error: ${e}`);
                        }
                        await this.createClient(), this.cleanHistory(!1), this.checkStorage(), this.registerEventListeners();
                    }
                    async createClient() {
                        this.client = this.providerOpts.client || await s.default.init({
                            ...this.providerOpts,
                            logger: this.providerOpts.logger || u.LOGGER,
                            relayUrl: this.providerOpts.relayUrl || u.RELAY_URL,
                            customStoragePrefix: this.getCustomStoragePrefix()
                        });
                    }
                    checkStorage() {
                        const e = this.client.session.keys;
                        for(let t = e.length - 1; t >= 0; t--){
                            const r = this.client.session.get(e[`${t}`]), n = this.client.core.crypto.keychain.has(r.topic), i = (0, c.getChainsFromNamespaces)(r.namespaces, [
                                u.PROVIDER_NAMESPACE
                            ]);
                            if (this.sameChains(i, [
                                this.permittedChain
                            ]) && n) return void (this.session = r);
                        }
                    }
                    registerEventListeners() {
                        if (void 0 === this.client) throw new Error("Sign Client is not initialized");
                        this.client.on("session_ping", (e)=>{
                            e.topic === this.session?.topic && this.emitEvents("session_ping", e);
                        }), this.client.on("session_event", (e)=>{
                            e.topic === this.session?.topic && this.emitEvents("session_event", e);
                        }), this.client.on("session_update", ({ topic: e, params: t })=>{
                            if (e === this.session?.topic) {
                                const { namespaces: r } = t, n = this.client?.session.get(e);
                                this.session = {
                                    ...n,
                                    namespaces: r
                                }, this.updateNamespace(this.session.namespaces), this.emitEvents("session_update", {
                                    topic: e,
                                    params: t
                                });
                            }
                        }), this.client.on("session_delete", (e)=>{
                            e.topic === this.session?.topic && this.emitEvents("session_delete");
                        });
                    }
                    emitEvents(e, t) {
                        this.events.emit(e, t);
                    }
                    typedRequest(e, t) {
                        return this.request({
                            method: e,
                            params: t
                        });
                    }
                    async request(e) {
                        if (await this.rateLimit(), !this.session) throw new Error("Sign Client not initialized");
                        if (!this.methods.includes(e.method)) return Promise.reject(new Error(`Invalid method was passed: ${e.method}`));
                        if (!e.method.startsWith("alph_request")) {
                            const t = e.params?.signerAddress;
                            if (void 0 === t) throw new Error("Cannot request without signerAddress");
                            if (t !== (await this.getSelectedAccount()).address) throw new Error(`Invalid signer address: ${e.params.signerAddress}`);
                        }
                        try {
                            const t = e.method.startsWith("alph_sign");
                            t && (0, d.isMobile)() && (0, a.isBrowser)() && window.open(u.ALEPHIUM_DEEP_LINK, "_self", "noreferrer noopener");
                            const r = await this.client.request({
                                request: {
                                    method: e.method,
                                    params: e.params
                                },
                                chainId: this.permittedChain,
                                topic: this.session?.topic
                            });
                            return t || this.cleanHistory(!0), await this.cleanMessages(), r;
                        } catch (t) {
                            throw new h.TraceableError(`Failed to request ${e.method}`, t);
                        }
                    }
                    updateNamespace(e) {
                        const t = (0, c.getChainsFromNamespaces)(e, [
                            u.PROVIDER_NAMESPACE
                        ]);
                        this.setChain(t);
                        const r = (0, c.getAccountsFromNamespaces)(e, [
                            u.PROVIDER_NAMESPACE
                        ]);
                        this.setAccounts(r);
                    }
                    sameChains(e, t) {
                        return void 0 !== t && e.join() === t.join();
                    }
                    setChain(e) {
                        if (!this.sameChains(e, [
                            this.permittedChain
                        ])) throw Error("Network or address group has changed");
                    }
                    sameAccounts(e, t) {
                        return void 0 !== t && e.map((e)=>e.address).join() === t.map((e)=>e.address).join();
                    }
                    isPreauthorized() {
                        if (!this.session) return !1;
                        const e = (0, c.getAccountsFromNamespaces)(this.session.namespaces, [
                            u.PROVIDER_NAMESPACE
                        ]).map(y), { networkId: t, addressGroup: r, keyType: n } = this.providerOpts;
                        return !!e.find((e)=>!(t !== e.networkId || void 0 !== r && e.group !== r || void 0 !== n && e.keyType !== n));
                    }
                    setAccounts(e) {
                        const t = e.map(y);
                        if (this.sameAccounts(t, this.lastSetAccounts)) return;
                        if (this.lastSetAccounts = t, 1 !== t.length) throw Error("The WC provider does not supports multiple accounts");
                        const r = t[0];
                        if (!g(r.group, this.addressGroup)) throw Error("The new account belongs to an unexpected address group");
                        this.account = r, this.emitEvents("accountChanged", r);
                    }
                }
                function g(e, t) {
                    return void 0 === t || t === e;
                }
                function m(e, t) {
                    if (void 0 !== t && t < 0) throw Error("Address group in provider needs to be either undefined or non-negative");
                    const r = void 0 !== t ? t : -1;
                    return `${u.PROVIDER_NAMESPACE}:${e}/${r}`;
                }
                function y(e) {
                    const [t, r, n, i, s] = e.replace(/\//g, ":").split(":"), o = (0, h.addressFromPublicKey)(i), a = (0, h.groupOfAddress)(o);
                    if ("default" !== s && "bip340-schnorr" !== s) throw Error(`Invalid key type: ${s}`);
                    return {
                        address: o,
                        group: a,
                        publicKey: i,
                        keyType: s,
                        networkId: r
                    };
                }
                t.WalletConnectProvider = b, t.isCompatibleChain = function(e) {
                    return e.startsWith(`${u.PROVIDER_NAMESPACE}:`);
                }, t.isCompatibleAddressGroup = g, t.formatChain = m, t.parseChain = function(e) {
                    const [t, r, n] = e.replace(/\//g, ":").split(":"), i = parseInt(n, 10);
                    if (i < -1) throw Error("Address group in protocol needs to be either -1 or non-negative");
                    const s = h.networkIds;
                    if (!s.includes(r)) throw Error(`Invalid network id, expect one of ${s}`);
                    return {
                        networkId: r,
                        addressGroup: -1 === i ? void 0 : i
                    };
                }, t.formatAccount = function(e, t) {
                    return `${e}:${t.publicKey}/${t.keyType}`;
                }, t.parseAccount = y;
            },
            8590: (e, t, r)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                const n = r(4610);
                (0, n.assertType)(), (0, n.assertType)();
            },
            5842: (e, t)=>{
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.isMobile = void 0, t.isMobile = function() {
                    return "undefined" != typeof navigator && /android/i.test(navigator.userAgent) || "undefined" != typeof navigator && /iPhone|iPod/.test(navigator.userAgent) || "undefined" != typeof navigator && (/iPad/.test(navigator.userAgent) || "MacIntel" === navigator.platform && navigator.maxTouchPoints > 1);
                };
            },
            170: ()=>{},
            7175: ()=>{},
            9322: ()=>{},
            4507: ()=>{},
            9798: (e, t, r)=>{
                "use strict";
                const n = r(782);
                e.exports = o;
                const i = function() {
                    function e(e) {
                        return void 0 !== e && e;
                    }
                    try {
                        return "undefined" != typeof globalThis || Object.defineProperty(Object.prototype, "globalThis", {
                            get: function() {
                                return delete Object.prototype.globalThis, this.globalThis = this;
                            },
                            configurable: !0
                        }), globalThis;
                    } catch (t) {
                        return e(self) || e(window) || e(this) || {};
                    }
                }().console || {}, s = {
                    mapHttpRequest: f,
                    mapHttpResponse: f,
                    wrapRequestSerializer: l,
                    wrapResponseSerializer: l,
                    wrapErrorSerializer: l,
                    req: f,
                    res: f,
                    err: function(e) {
                        const t = {
                            type: e.constructor.name,
                            msg: e.message,
                            stack: e.stack
                        };
                        for(const r in e)void 0 === t[r] && (t[r] = e[r]);
                        return t;
                    }
                };
                function o(e) {
                    (e = e || {}).browser = e.browser || {};
                    const t = e.browser.transmit;
                    if (t && "function" != typeof t.send) throw Error("pino: transmit option must have a send function");
                    const r = e.browser.write || i;
                    e.browser.write && (e.browser.asObject = !0);
                    const n = e.serializers || {}, s = function(e, t) {
                        return Array.isArray(e) ? e.filter(function(e) {
                            return "!stdSerializers.err" !== e;
                        }) : !0 === e && Object.keys(t);
                    }(e.browser.serialize, n);
                    let f = e.browser.serialize;
                    Array.isArray(e.browser.serialize) && e.browser.serialize.indexOf("!stdSerializers.err") > -1 && (f = !1), "function" == typeof r && (r.error = r.fatal = r.warn = r.info = r.debug = r.trace = r), !1 === e.enabled && (e.level = "silent");
                    const l = e.level || "info", b = Object.create(r);
                    b.log || (b.log = p), Object.defineProperty(b, "levelVal", {
                        get: function() {
                            return "silent" === this.level ? 1 / 0 : this.levels.values[this.level];
                        }
                    }), Object.defineProperty(b, "level", {
                        get: function() {
                            return this._level;
                        },
                        set: function(e) {
                            if ("silent" !== e && !this.levels.values[e]) throw Error("unknown level " + e);
                            this._level = e, a(g, b, "error", "log"), a(g, b, "fatal", "error"), a(g, b, "warn", "error"), a(g, b, "info", "log"), a(g, b, "debug", "log"), a(g, b, "trace", "log");
                        }
                    });
                    const g = {
                        transmit: t,
                        serialize: s,
                        asObject: e.browser.asObject,
                        levels: [
                            "error",
                            "fatal",
                            "warn",
                            "info",
                            "debug",
                            "trace"
                        ],
                        timestamp: d(e)
                    };
                    return b.levels = o.levels, b.level = l, b.setMaxListeners = b.getMaxListeners = b.emit = b.addListener = b.on = b.prependListener = b.once = b.prependOnceListener = b.removeListener = b.removeAllListeners = b.listeners = b.listenerCount = b.eventNames = b.write = b.flush = p, b.serializers = n, b._serialize = s, b._stdErrSerialize = f, b.child = function(r, i) {
                        if (!r) throw new Error("missing bindings for child Pino");
                        i = i || {}, s && r.serializers && (i.serializers = r.serializers);
                        const o = i.serializers;
                        if (s && o) {
                            var a = Object.assign({}, n, o), d = !0 === e.browser.serialize ? Object.keys(a) : s;
                            delete r.serializers, c([
                                r
                            ], d, a, this._stdErrSerialize);
                        }
                        function f(e) {
                            this._childLevel = 1 + (0 | e._childLevel), this.error = h(e, r, "error"), this.fatal = h(e, r, "fatal"), this.warn = h(e, r, "warn"), this.info = h(e, r, "info"), this.debug = h(e, r, "debug"), this.trace = h(e, r, "trace"), a && (this.serializers = a, this._serialize = d), t && (this._logEvent = u([].concat(e._logEvent.bindings, r)));
                        }
                        return f.prototype = this, new f(this);
                    }, t && (b._logEvent = u()), b;
                }
                function a(e, t, r, s) {
                    const a = Object.getPrototypeOf(t);
                    t[r] = t.levelVal > t.levels.values[r] ? p : a[r] ? a[r] : i[r] || i[s] || p, function(e, t, r) {
                        var s;
                        (e.transmit || t[r] !== p) && (t[r] = (s = t[r], function() {
                            const a = e.timestamp(), h = new Array(arguments.length), d = Object.getPrototypeOf && Object.getPrototypeOf(this) === i ? i : this;
                            for(var f = 0; f < h.length; f++)h[f] = arguments[f];
                            if (e.serialize && !e.asObject && c(h, this._serialize, this.serializers, this._stdErrSerialize), e.asObject ? s.call(d, function(e, t, r, i) {
                                e._serialize && c(r, e._serialize, e.serializers, e._stdErrSerialize);
                                const s = r.slice();
                                let a = s[0];
                                const h = {};
                                i && (h.time = i), h.level = o.levels.values[t];
                                let u = 1 + (0 | e._childLevel);
                                if (u < 1 && (u = 1), null !== a && "object" == typeof a) {
                                    for(; u-- && "object" == typeof s[0];)Object.assign(h, s.shift());
                                    a = s.length ? n(s.shift(), s) : void 0;
                                } else "string" == typeof a && (a = n(s.shift(), s));
                                return void 0 !== a && (h.msg = a), h;
                            }(this, r, h, a)) : s.apply(d, h), e.transmit) {
                                const n = e.transmit.level || t.level, i = o.levels.values[n], s = o.levels.values[r];
                                if (s < i) return;
                                !function(e, t, r) {
                                    const n = t.send, i = t.ts, s = t.methodLevel, o = t.methodValue, a = t.val, h = e._logEvent.bindings;
                                    c(r, e._serialize || Object.keys(e.serializers), e.serializers, void 0 === e._stdErrSerialize || e._stdErrSerialize), e._logEvent.ts = i, e._logEvent.messages = r.filter(function(e) {
                                        return -1 === h.indexOf(e);
                                    }), e._logEvent.level.label = s, e._logEvent.level.value = o, n(s, e._logEvent, a), e._logEvent = u(h);
                                }(this, {
                                    ts: a,
                                    methodLevel: r,
                                    methodValue: s,
                                    transmitLevel: n,
                                    transmitValue: o.levels.values[e.transmit.level || t.level],
                                    send: e.transmit.send,
                                    val: t.levelVal
                                }, h);
                            }
                        }));
                    }(e, t, r);
                }
                function c(e, t, r, n) {
                    for(const i in e)if (n && e[i] instanceof Error) e[i] = o.stdSerializers.err(e[i]);
                    else if ("object" == typeof e[i] && !Array.isArray(e[i])) for(const n in e[i])t && t.indexOf(n) > -1 && n in r && (e[i][n] = r[n](e[i][n]));
                }
                function h(e, t, r) {
                    return function() {
                        const n = new Array(1 + arguments.length);
                        n[0] = t;
                        for(var i = 1; i < n.length; i++)n[i] = arguments[i - 1];
                        return e[r].apply(this, n);
                    };
                }
                function u(e) {
                    return {
                        ts: 0,
                        messages: [],
                        bindings: e || [],
                        level: {
                            label: "",
                            value: 0
                        }
                    };
                }
                function d(e) {
                    return "function" == typeof e.timestamp ? e.timestamp : !1 === e.timestamp ? b : g;
                }
                function f() {
                    return {};
                }
                function l(e) {
                    return e;
                }
                function p() {}
                function b() {
                    return !1;
                }
                function g() {
                    return Date.now();
                }
                o.levels = {
                    values: {
                        fatal: 60,
                        error: 50,
                        warn: 40,
                        info: 30,
                        debug: 20,
                        trace: 10
                    },
                    labels: {
                        10: "trace",
                        20: "debug",
                        30: "info",
                        40: "warn",
                        50: "error",
                        60: "fatal"
                    }
                }, o.stdSerializers = s, o.stdTimeFunctions = Object.assign({}, {
                    nullTime: b,
                    epochTime: g,
                    unixTime: function() {
                        return Math.round(Date.now() / 1e3);
                    },
                    isoTime: function() {
                        return new Date(Date.now()).toISOString();
                    }
                });
            },
            4610: (e)=>{
                var t;
                self, t = ()=>(()=>{
                        var e = {
                            9695: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.utils = t.schnorr = t.verify = t.signSync = t.sign = t.getSharedSecret = t.recoverPublicKey = t.getPublicKey = t.Signature = t.Point = t.CURVE = void 0;
                                const n = r(7998), i = BigInt(0), s = BigInt(1), o = BigInt(2), a = BigInt(3), c = BigInt(8), h = Object.freeze({
                                    a: i,
                                    b: BigInt(7),
                                    P: BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),
                                    n: BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),
                                    h: s,
                                    Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),
                                    Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),
                                    beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")
                                });
                                t.CURVE = h;
                                const u = (e, t)=>(e + t / o) / t, d = {
                                    beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),
                                    splitScalar (e) {
                                        const { n: t } = h, r = BigInt("0x3086d221a7d46bcde86c90e49284eb15"), n = -s * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"), i = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"), o = r, a = BigInt("0x100000000000000000000000000000000"), c = u(o * e, t), d = u(-n * e, t);
                                        let f = D(e - c * r - d * i, t), l = D(-c * n - d * o, t);
                                        const p = f > a, b = l > a;
                                        if (p && (f = t - f), b && (l = t - l), f > a || l > a) throw new Error("splitScalarEndo: Endomorphism failed, k=" + e);
                                        return {
                                            k1neg: p,
                                            k1: f,
                                            k2neg: b,
                                            k2: l
                                        };
                                    }
                                }, f = 32, l = 32, p = f + 1, b = 2 * f + 1;
                                function g(e) {
                                    const { a: t, b: r } = h, n = D(e * e), i = D(n * e);
                                    return D(i + t * e + r);
                                }
                                const m = h.a === i;
                                class y extends Error {
                                    constructor(e){
                                        super(e);
                                    }
                                }
                                function v(e) {
                                    if (!(e instanceof w)) throw new TypeError("JacobianPoint expected");
                                }
                                class w {
                                    constructor(e, t, r){
                                        this.x = e, this.y = t, this.z = r;
                                    }
                                    static fromAffine(e) {
                                        if (!(e instanceof S)) throw new TypeError("JacobianPoint#fromAffine: expected Point");
                                        return e.equals(S.ZERO) ? w.ZERO : new w(e.x, e.y, s);
                                    }
                                    static toAffineBatch(e) {
                                        const t = function(e, t = h.P) {
                                            const r = new Array(e.length), n = F(e.reduce((e, n, s)=>n === i ? e : (r[s] = e, D(e * n, t)), s), t);
                                            return e.reduceRight((e, n, s)=>n === i ? e : (r[s] = D(e * r[s], t), D(e * n, t)), n), r;
                                        }(e.map((e)=>e.z));
                                        return e.map((e, r)=>e.toAffine(t[r]));
                                    }
                                    static normalizeZ(e) {
                                        return w.toAffineBatch(e).map(w.fromAffine);
                                    }
                                    equals(e) {
                                        v(e);
                                        const { x: t, y: r, z: n } = this, { x: i, y: s, z: o } = e, a = D(n * n), c = D(o * o), h = D(t * c), u = D(i * a), d = D(D(r * o) * c), f = D(D(s * n) * a);
                                        return h === u && d === f;
                                    }
                                    negate() {
                                        return new w(this.x, D(-this.y), this.z);
                                    }
                                    double() {
                                        const { x: e, y: t, z: r } = this, n = D(e * e), i = D(t * t), s = D(i * i), h = e + i, u = D(o * (D(h * h) - n - s)), d = D(a * n), f = D(d * d), l = D(f - o * u), p = D(d * (u - l) - c * s), b = D(o * t * r);
                                        return new w(l, p, b);
                                    }
                                    add(e) {
                                        v(e);
                                        const { x: t, y: r, z: n } = this, { x: s, y: a, z: c } = e;
                                        if (s === i || a === i) return this;
                                        if (t === i || r === i) return e;
                                        const h = D(n * n), u = D(c * c), d = D(t * u), f = D(s * h), l = D(D(r * c) * u), p = D(D(a * n) * h), b = D(f - d), g = D(p - l);
                                        if (b === i) return g === i ? this.double() : w.ZERO;
                                        const m = D(b * b), y = D(b * m), _ = D(d * m), E = D(g * g - y - o * _), S = D(g * (_ - E) - l * y), A = D(n * c * b);
                                        return new w(E, S, A);
                                    }
                                    subtract(e) {
                                        return this.add(e.negate());
                                    }
                                    multiplyUnsafe(e) {
                                        const t = w.ZERO;
                                        if ("bigint" == typeof e && e === i) return t;
                                        let r = j(e);
                                        if (r === s) return this;
                                        if (!m) {
                                            let e = t, n = this;
                                            for(; r > i;)r & s && (e = e.add(n)), n = n.double(), r >>= s;
                                            return e;
                                        }
                                        let { k1neg: n, k1: o, k2neg: a, k2: c } = d.splitScalar(r), h = t, u = t, f = this;
                                        for(; o > i || c > i;)o & s && (h = h.add(f)), c & s && (u = u.add(f)), f = f.double(), o >>= s, c >>= s;
                                        return n && (h = h.negate()), a && (u = u.negate()), u = new w(D(u.x * d.beta), u.y, u.z), h.add(u);
                                    }
                                    precomputeWindow(e) {
                                        const t = m ? 128 / e + 1 : 256 / e + 1, r = [];
                                        let n = this, i = n;
                                        for(let s = 0; s < t; s++){
                                            i = n, r.push(i);
                                            for(let t = 1; t < 2 ** (e - 1); t++)i = i.add(n), r.push(i);
                                            n = i.double();
                                        }
                                        return r;
                                    }
                                    wNAF(e, t) {
                                        !t && this.equals(w.BASE) && (t = S.BASE);
                                        const r = t && t._WINDOW_SIZE || 1;
                                        if (256 % r) throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");
                                        let n = t && E.get(t);
                                        n || (n = this.precomputeWindow(r), t && 1 !== r && (n = w.normalizeZ(n), E.set(t, n)));
                                        let i = w.ZERO, o = w.BASE;
                                        const a = 1 + (m ? 128 / r : 256 / r), c = 2 ** (r - 1), h = BigInt(2 ** r - 1), u = 2 ** r, d = BigInt(r);
                                        for(let t = 0; t < a; t++){
                                            const r = t * c;
                                            let a = Number(e & h);
                                            e >>= d, a > c && (a -= u, e += s);
                                            const f = r, l = r + Math.abs(a) - 1, p = t % 2 != 0, b = a < 0;
                                            0 === a ? o = o.add(_(p, n[f])) : i = i.add(_(b, n[l]));
                                        }
                                        return {
                                            p: i,
                                            f: o
                                        };
                                    }
                                    multiply(e, t) {
                                        let r, n, i = j(e);
                                        if (m) {
                                            const { k1neg: e, k1: s, k2neg: o, k2: a } = d.splitScalar(i);
                                            let { p: c, f: h } = this.wNAF(s, t), { p: u, f } = this.wNAF(a, t);
                                            c = _(e, c), u = _(o, u), u = new w(D(u.x * d.beta), u.y, u.z), r = c.add(u), n = h.add(f);
                                        } else {
                                            const { p: e, f: s } = this.wNAF(i, t);
                                            r = e, n = s;
                                        }
                                        return w.normalizeZ([
                                            r,
                                            n
                                        ])[0];
                                    }
                                    toAffine(e) {
                                        const { x: t, y: r, z: n } = this, i = this.equals(w.ZERO);
                                        null == e && (e = i ? c : F(n));
                                        const o = e, a = D(o * o), h = D(a * o), u = D(t * a), d = D(r * h), f = D(n * o);
                                        if (i) return S.ZERO;
                                        if (f !== s) throw new Error("invZ was invalid");
                                        return new S(u, d);
                                    }
                                }
                                function _(e, t) {
                                    const r = t.negate();
                                    return e ? r : t;
                                }
                                w.BASE = new w(h.Gx, h.Gy, s), w.ZERO = new w(i, s, i);
                                const E = new WeakMap;
                                class S {
                                    constructor(e, t){
                                        this.x = e, this.y = t;
                                    }
                                    _setWindowSize(e) {
                                        this._WINDOW_SIZE = e, E.delete(this);
                                    }
                                    hasEvenY() {
                                        return this.y % o === i;
                                    }
                                    static fromCompressedHex(e) {
                                        const t = 32 === e.length, r = B(t ? e : e.subarray(1));
                                        if (!G(r)) throw new Error("Point is not on curve");
                                        let n = function(e) {
                                            const { P: t } = h, r = BigInt(6), n = BigInt(11), i = BigInt(22), s = BigInt(23), c = BigInt(44), u = BigInt(88), d = e * e * e % t, f = d * d * e % t, l = q(f, a) * f % t, p = q(l, a) * f % t, b = q(p, o) * d % t, g = q(b, n) * b % t, m = q(g, i) * g % t, y = q(m, c) * m % t, v = q(y, u) * y % t, w = q(v, c) * m % t, _ = q(w, a) * f % t, E = q(_, s) * g % t, S = q(E, r) * d % t, A = q(S, o);
                                            if (A * A % t !== e) throw new Error("Cannot find square root");
                                            return A;
                                        }(g(r));
                                        const i = (n & s) === s;
                                        t ? i && (n = D(-n)) : !(1 & ~e[0]) !== i && (n = D(-n));
                                        const c = new S(r, n);
                                        return c.assertValidity(), c;
                                    }
                                    static fromUncompressedHex(e) {
                                        const t = B(e.subarray(1, f + 1)), r = B(e.subarray(f + 1, 2 * f + 1)), n = new S(t, r);
                                        return n.assertValidity(), n;
                                    }
                                    static fromHex(e) {
                                        const t = L(e), r = t.length, n = t[0];
                                        if (r === f) return this.fromCompressedHex(t);
                                        if (r === p && (2 === n || 3 === n)) return this.fromCompressedHex(t);
                                        if (r === b && 4 === n) return this.fromUncompressedHex(t);
                                        throw new Error(`Point.fromHex: received invalid point. Expected 32-${p} compressed bytes or ${b} uncompressed bytes, not ${r}`);
                                    }
                                    static fromPrivateKey(e) {
                                        return S.BASE.multiply(J(e));
                                    }
                                    static fromSignature(e, t, r) {
                                        const { r: n, s: i } = X(t);
                                        if (![
                                            0,
                                            1,
                                            2,
                                            3
                                        ].includes(r)) throw new Error("Cannot recover: invalid recovery bit");
                                        const s = H(L(e)), { n: o } = h, a = 2 === r || 3 === r ? n + o : n, c = F(a, o), u = D(-s * c, o), d = D(i * c, o), f = 1 & r ? "03" : "02", l = S.fromHex(f + k(a)), p = S.BASE.multiplyAndAddUnsafe(l, u, d);
                                        if (!p) throw new Error("Cannot recover signature: point at infinify");
                                        return p.assertValidity(), p;
                                    }
                                    toRawBytes(e = !1) {
                                        return U(this.toHex(e));
                                    }
                                    toHex(e = !1) {
                                        const t = k(this.x);
                                        return e ? `${this.hasEvenY() ? "02" : "03"}${t}` : `04${t}${k(this.y)}`;
                                    }
                                    toHexX() {
                                        return this.toHex(!0).slice(2);
                                    }
                                    toRawX() {
                                        return this.toRawBytes(!0).slice(1);
                                    }
                                    assertValidity() {
                                        const e = "Point is not on elliptic curve", { x: t, y: r } = this;
                                        if (!G(t) || !G(r)) throw new Error(e);
                                        const n = D(r * r);
                                        if (D(n - g(t)) !== i) throw new Error(e);
                                    }
                                    equals(e) {
                                        return this.x === e.x && this.y === e.y;
                                    }
                                    negate() {
                                        return new S(this.x, D(-this.y));
                                    }
                                    double() {
                                        return w.fromAffine(this).double().toAffine();
                                    }
                                    add(e) {
                                        return w.fromAffine(this).add(w.fromAffine(e)).toAffine();
                                    }
                                    subtract(e) {
                                        return this.add(e.negate());
                                    }
                                    multiply(e) {
                                        return w.fromAffine(this).multiply(e, this).toAffine();
                                    }
                                    multiplyAndAddUnsafe(e, t, r) {
                                        const n = w.fromAffine(this), o = t === i || t === s || this !== S.BASE ? n.multiplyUnsafe(t) : n.multiply(t), a = w.fromAffine(e).multiplyUnsafe(r), c = o.add(a);
                                        return c.equals(w.ZERO) ? void 0 : c.toAffine();
                                    }
                                }
                                function A(e) {
                                    return Number.parseInt(e[0], 16) >= 8 ? "00" + e : e;
                                }
                                function M(e) {
                                    if (e.length < 2 || 2 !== e[0]) throw new Error(`Invalid signature integer tag: ${C(e)}`);
                                    const t = e[1], r = e.subarray(2, t + 2);
                                    if (!t || r.length !== t) throw new Error("Invalid signature integer: wrong length");
                                    if (0 === r[0] && r[1] <= 127) throw new Error("Invalid signature integer: trailing length");
                                    return {
                                        data: B(r),
                                        left: e.subarray(t + 2)
                                    };
                                }
                                t.Point = S, S.BASE = new S(h.Gx, h.Gy), S.ZERO = new S(i, i);
                                class I {
                                    constructor(e, t){
                                        this.r = e, this.s = t, this.assertValidity();
                                    }
                                    static fromCompact(e) {
                                        const t = e instanceof Uint8Array, r = "Signature.fromCompact";
                                        if ("string" != typeof e && !t) throw new TypeError(`${r}: Expected string or Uint8Array`);
                                        const n = t ? C(e) : e;
                                        if (128 !== n.length) throw new Error(`${r}: Expected 64-byte hex`);
                                        return new I(N(n.slice(0, 64)), N(n.slice(64, 128)));
                                    }
                                    static fromDER(e) {
                                        const t = e instanceof Uint8Array;
                                        if ("string" != typeof e && !t) throw new TypeError("Signature.fromDER: Expected string or Uint8Array");
                                        const { r, s: n } = function(e) {
                                            if (e.length < 2 || 48 != e[0]) throw new Error(`Invalid signature tag: ${C(e)}`);
                                            if (e[1] !== e.length - 2) throw new Error("Invalid signature: incorrect length");
                                            const { data: t, left: r } = M(e.subarray(2)), { data: n, left: i } = M(r);
                                            if (i.length) throw new Error(`Invalid signature: left bytes after parsing: ${C(i)}`);
                                            return {
                                                r: t,
                                                s: n
                                            };
                                        }(t ? e : U(e));
                                        return new I(r, n);
                                    }
                                    static fromHex(e) {
                                        return this.fromDER(e);
                                    }
                                    assertValidity() {
                                        const { r: e, s: t } = this;
                                        if (!K(e)) throw new Error("Invalid Signature: r must be 0 < r < n");
                                        if (!K(t)) throw new Error("Invalid Signature: s must be 0 < s < n");
                                    }
                                    hasHighS() {
                                        const e = h.n >> s;
                                        return this.s > e;
                                    }
                                    normalizeS() {
                                        return this.hasHighS() ? new I(this.r, D(-this.s, h.n)) : this;
                                    }
                                    toDERRawBytes() {
                                        return U(this.toDERHex());
                                    }
                                    toDERHex() {
                                        const e = A(O(this.s)), t = A(O(this.r)), r = e.length / 2, n = t.length / 2, i = O(r), s = O(n);
                                        return `30${O(n + r + 4)}02${s}${t}02${i}${e}`;
                                    }
                                    toRawBytes() {
                                        return this.toDERRawBytes();
                                    }
                                    toHex() {
                                        return this.toDERHex();
                                    }
                                    toCompactRawBytes() {
                                        return U(this.toCompactHex());
                                    }
                                    toCompactHex() {
                                        return k(this.r) + k(this.s);
                                    }
                                }
                                function T(...e) {
                                    if (!e.every((e)=>e instanceof Uint8Array)) throw new Error("Uint8Array list expected");
                                    if (1 === e.length) return e[0];
                                    const t = e.reduce((e, t)=>e + t.length, 0), r = new Uint8Array(t);
                                    for(let t = 0, n = 0; t < e.length; t++){
                                        const i = e[t];
                                        r.set(i, n), n += i.length;
                                    }
                                    return r;
                                }
                                t.Signature = I;
                                const x = Array.from({
                                    length: 256
                                }, (e, t)=>t.toString(16).padStart(2, "0"));
                                function C(e) {
                                    if (!(e instanceof Uint8Array)) throw new Error("Expected Uint8Array");
                                    let t = "";
                                    for(let r = 0; r < e.length; r++)t += x[e[r]];
                                    return t;
                                }
                                const R = BigInt("0x10000000000000000000000000000000000000000000000000000000000000000");
                                function k(e) {
                                    if ("bigint" != typeof e) throw new Error("Expected bigint");
                                    if (!(i <= e && e < R)) throw new Error("Expected number 0 <= n < 2^256");
                                    return e.toString(16).padStart(64, "0");
                                }
                                function P(e) {
                                    const t = U(k(e));
                                    if (32 !== t.length) throw new Error("Error: expected 32 bytes");
                                    return t;
                                }
                                function O(e) {
                                    const t = e.toString(16);
                                    return 1 & t.length ? `0${t}` : t;
                                }
                                function N(e) {
                                    if ("string" != typeof e) throw new TypeError("hexToNumber: expected string, got " + typeof e);
                                    return BigInt(`0x${e}`);
                                }
                                function U(e) {
                                    if ("string" != typeof e) throw new TypeError("hexToBytes: expected string, got " + typeof e);
                                    if (e.length % 2) throw new Error("hexToBytes: received invalid unpadded hex" + e.length);
                                    const t = new Uint8Array(e.length / 2);
                                    for(let r = 0; r < t.length; r++){
                                        const n = 2 * r, i = e.slice(n, n + 2), s = Number.parseInt(i, 16);
                                        if (Number.isNaN(s) || s < 0) throw new Error("Invalid byte sequence");
                                        t[r] = s;
                                    }
                                    return t;
                                }
                                function B(e) {
                                    return N(C(e));
                                }
                                function L(e) {
                                    return e instanceof Uint8Array ? Uint8Array.from(e) : U(e);
                                }
                                function j(e) {
                                    if ("number" == typeof e && Number.isSafeInteger(e) && e > 0) return BigInt(e);
                                    if ("bigint" == typeof e && K(e)) return e;
                                    throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n");
                                }
                                function D(e, t = h.P) {
                                    const r = e % t;
                                    return r >= i ? r : t + r;
                                }
                                function q(e, t) {
                                    const { P: r } = h;
                                    let n = e;
                                    for(; t-- > i;)n *= n, n %= r;
                                    return n;
                                }
                                function F(e, t = h.P) {
                                    if (e === i || t <= i) throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);
                                    let r = D(e, t), n = t, o = i, a = s, c = s, u = i;
                                    for(; r !== i;){
                                        const e = n / r, t = n % r, i = o - c * e, s = a - u * e;
                                        n = r, r = t, o = c, a = u, c = i, u = s;
                                    }
                                    if (n !== s) throw new Error("invert: does not exist");
                                    return D(o, t);
                                }
                                function H(e, t = !1) {
                                    const r = function(e) {
                                        const t = 8 * e.length - 8 * l, r = B(e);
                                        return t > 0 ? r >> BigInt(t) : r;
                                    }(e);
                                    if (t) return r;
                                    const { n } = h;
                                    return r >= n ? r - n : r;
                                }
                                let z, V;
                                class $ {
                                    constructor(e, t){
                                        if (this.hashLen = e, this.qByteLen = t, "number" != typeof e || e < 2) throw new Error("hashLen must be a number");
                                        if ("number" != typeof t || t < 2) throw new Error("qByteLen must be a number");
                                        this.v = new Uint8Array(e).fill(1), this.k = new Uint8Array(e).fill(0), this.counter = 0;
                                    }
                                    hmac(...e) {
                                        return t.utils.hmacSha256(this.k, ...e);
                                    }
                                    hmacSync(...e) {
                                        return V(this.k, ...e);
                                    }
                                    checkSync() {
                                        if ("function" != typeof V) throw new y("hmacSha256Sync needs to be set");
                                    }
                                    incr() {
                                        if (this.counter >= 1e3) throw new Error("Tried 1,000 k values for sign(), all were invalid");
                                        this.counter += 1;
                                    }
                                    async reseed(e = new Uint8Array) {
                                        this.k = await this.hmac(this.v, Uint8Array.from([
                                            0
                                        ]), e), this.v = await this.hmac(this.v), 0 !== e.length && (this.k = await this.hmac(this.v, Uint8Array.from([
                                            1
                                        ]), e), this.v = await this.hmac(this.v));
                                    }
                                    reseedSync(e = new Uint8Array) {
                                        this.checkSync(), this.k = this.hmacSync(this.v, Uint8Array.from([
                                            0
                                        ]), e), this.v = this.hmacSync(this.v), 0 !== e.length && (this.k = this.hmacSync(this.v, Uint8Array.from([
                                            1
                                        ]), e), this.v = this.hmacSync(this.v));
                                    }
                                    async generate() {
                                        this.incr();
                                        let e = 0;
                                        const t = [];
                                        for(; e < this.qByteLen;){
                                            this.v = await this.hmac(this.v);
                                            const r = this.v.slice();
                                            t.push(r), e += this.v.length;
                                        }
                                        return T(...t);
                                    }
                                    generateSync() {
                                        this.checkSync(), this.incr();
                                        let e = 0;
                                        const t = [];
                                        for(; e < this.qByteLen;){
                                            this.v = this.hmacSync(this.v);
                                            const r = this.v.slice();
                                            t.push(r), e += this.v.length;
                                        }
                                        return T(...t);
                                    }
                                }
                                function K(e) {
                                    return i < e && e < h.n;
                                }
                                function G(e) {
                                    return i < e && e < h.P;
                                }
                                function W(e, t, r, n = !0) {
                                    const { n: o } = h, a = H(e, !0);
                                    if (!K(a)) return;
                                    const c = F(a, o), u = S.BASE.multiply(a), d = D(u.x, o);
                                    if (d === i) return;
                                    const f = D(c * D(t + r * d, o), o);
                                    if (f === i) return;
                                    let l = new I(d, f), p = (u.x === l.r ? 0 : 2) | Number(u.y & s);
                                    return n && l.hasHighS() && (l = l.normalizeS(), p ^= 1), {
                                        sig: l,
                                        recovery: p
                                    };
                                }
                                function J(e) {
                                    let t;
                                    if ("bigint" == typeof e) t = e;
                                    else if ("number" == typeof e && Number.isSafeInteger(e) && e > 0) t = BigInt(e);
                                    else if ("string" == typeof e) {
                                        if (e.length !== 2 * l) throw new Error("Expected 32 bytes of private key");
                                        t = N(e);
                                    } else {
                                        if (!(e instanceof Uint8Array)) throw new TypeError("Expected valid private key");
                                        if (e.length !== l) throw new Error("Expected 32 bytes of private key");
                                        t = B(e);
                                    }
                                    if (!K(t)) throw new Error("Expected private key: 0 < key < n");
                                    return t;
                                }
                                function Y(e) {
                                    return e instanceof S ? (e.assertValidity(), e) : S.fromHex(e);
                                }
                                function X(e) {
                                    if (e instanceof I) return e.assertValidity(), e;
                                    try {
                                        return I.fromDER(e);
                                    } catch (t) {
                                        return I.fromCompact(e);
                                    }
                                }
                                function Z(e) {
                                    const t = e instanceof Uint8Array, r = "string" == typeof e, n = (t || r) && e.length;
                                    return t ? n === p || n === b : r ? n === 2 * p || n === 2 * b : e instanceof S;
                                }
                                function Q(e) {
                                    return B(e.length > f ? e.slice(0, f) : e);
                                }
                                function ee(e) {
                                    const t = Q(e), r = D(t, h.n);
                                    return te(r < i ? t : r);
                                }
                                function te(e) {
                                    return P(e);
                                }
                                function re(e, r, n) {
                                    if (null == e) throw new Error(`sign: expected valid message hash, not "${e}"`);
                                    const i = L(e), s = J(r), o = [
                                        te(s),
                                        ee(i)
                                    ];
                                    if (null != n) {
                                        !0 === n && (n = t.utils.randomBytes(f));
                                        const e = L(n);
                                        if (e.length !== f) throw new Error(`sign: Expected ${f} bytes of extra data`);
                                        o.push(e);
                                    }
                                    return {
                                        seed: T(...o),
                                        m: Q(i),
                                        d: s
                                    };
                                }
                                function ne(e, t) {
                                    const { sig: r, recovery: n } = e, { der: i, recovered: s } = Object.assign({
                                        canonical: !0,
                                        der: !0
                                    }, t), o = i ? r.toDERRawBytes() : r.toCompactRawBytes();
                                    return s ? [
                                        o,
                                        n
                                    ] : o;
                                }
                                t.getPublicKey = function(e, t = !1) {
                                    return S.fromPrivateKey(e).toRawBytes(t);
                                }, t.recoverPublicKey = function(e, t, r, n = !1) {
                                    return S.fromSignature(e, t, r).toRawBytes(n);
                                }, t.getSharedSecret = function(e, t, r = !1) {
                                    if (Z(e)) throw new TypeError("getSharedSecret: first arg must be private key");
                                    if (!Z(t)) throw new TypeError("getSharedSecret: second arg must be public key");
                                    const n = Y(t);
                                    return n.assertValidity(), n.multiply(J(e)).toRawBytes(r);
                                }, t.sign = async function(e, t, r = {}) {
                                    const { seed: n, m: i, d: s } = re(e, t, r.extraEntropy), o = new $(32, l);
                                    let a;
                                    for(await o.reseed(n); !(a = W(await o.generate(), i, s, r.canonical));)await o.reseed();
                                    return ne(a, r);
                                }, t.signSync = function(e, t, r = {}) {
                                    const { seed: n, m: i, d: s } = re(e, t, r.extraEntropy), o = new $(32, l);
                                    let a;
                                    for(o.reseedSync(n); !(a = W(o.generateSync(), i, s, r.canonical));)o.reseedSync();
                                    return ne(a, r);
                                };
                                const ie = {
                                    strict: !0
                                };
                                function se(e) {
                                    return D(B(e), h.n);
                                }
                                t.verify = function(e, t, r, n = ie) {
                                    let i;
                                    try {
                                        i = X(e), t = L(t);
                                    } catch (e) {
                                        return !1;
                                    }
                                    const { r: s, s: o } = i;
                                    if (n.strict && i.hasHighS()) return !1;
                                    const a = H(t);
                                    let c;
                                    try {
                                        c = Y(r);
                                    } catch (e) {
                                        return !1;
                                    }
                                    const { n: u } = h, d = F(o, u), f = D(a * d, u), l = D(s * d, u), p = S.BASE.multiplyAndAddUnsafe(c, f, l);
                                    return !!p && D(p.x, u) === s;
                                };
                                class oe {
                                    constructor(e, t){
                                        this.r = e, this.s = t, this.assertValidity();
                                    }
                                    static fromHex(e) {
                                        const t = L(e);
                                        if (64 !== t.length) throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${t.length}`);
                                        const r = B(t.subarray(0, 32)), n = B(t.subarray(32, 64));
                                        return new oe(r, n);
                                    }
                                    assertValidity() {
                                        const { r: e, s: t } = this;
                                        if (!G(e) || !K(t)) throw new Error("Invalid signature");
                                    }
                                    toHex() {
                                        return k(this.r) + k(this.s);
                                    }
                                    toRawBytes() {
                                        return U(this.toHex());
                                    }
                                }
                                class ae {
                                    constructor(e, r, n = t.utils.randomBytes()){
                                        if (null == e) throw new TypeError(`sign: Expected valid message, not "${e}"`);
                                        this.m = L(e);
                                        const { x: i, scalar: s } = this.getScalar(J(r));
                                        if (this.px = i, this.d = s, this.rand = L(n), 32 !== this.rand.length) throw new TypeError("sign: Expected 32 bytes of aux randomness");
                                    }
                                    getScalar(e) {
                                        const t = S.fromPrivateKey(e), r = t.hasEvenY() ? e : h.n - e;
                                        return {
                                            point: t,
                                            scalar: r,
                                            x: t.toRawX()
                                        };
                                    }
                                    initNonce(e, t) {
                                        return P(e ^ B(t));
                                    }
                                    finalizeNonce(e) {
                                        const t = D(B(e), h.n);
                                        if (t === i) throw new Error("sign: Creation of signature failed. k is zero");
                                        const { point: r, x: n, scalar: s } = this.getScalar(t);
                                        return {
                                            R: r,
                                            rx: n,
                                            k: s
                                        };
                                    }
                                    finalizeSig(e, t, r, n) {
                                        return new oe(e.x, D(t + r * n, h.n)).toRawBytes();
                                    }
                                    error() {
                                        throw new Error("sign: Invalid signature produced");
                                    }
                                    async calc() {
                                        const { m: e, d: r, px: n, rand: i } = this, s = t.utils.taggedHash, o = this.initNonce(r, await s(le.aux, i)), { R: a, rx: c, k: h } = this.finalizeNonce(await s(le.nonce, o, n, e)), u = se(await s(le.challenge, c, n, e)), d = this.finalizeSig(a, h, u, r);
                                        return await ue(d, e, n) || this.error(), d;
                                    }
                                    calcSync() {
                                        const { m: e, d: r, px: n, rand: i } = this, s = t.utils.taggedHashSync, o = this.initNonce(r, s(le.aux, i)), { R: a, rx: c, k: h } = this.finalizeNonce(s(le.nonce, o, n, e)), u = se(s(le.challenge, c, n, e)), d = this.finalizeSig(a, h, u, r);
                                        return de(d, e, n) || this.error(), d;
                                    }
                                }
                                function ce(e, t, r) {
                                    const n = e instanceof oe, i = n ? e : oe.fromHex(e);
                                    return n && i.assertValidity(), {
                                        ...i,
                                        m: L(t),
                                        P: Y(r)
                                    };
                                }
                                function he(e, t, r, n) {
                                    const i = S.BASE.multiplyAndAddUnsafe(t, J(r), D(-n, h.n));
                                    return !(!i || !i.hasEvenY() || i.x !== e);
                                }
                                async function ue(e, r, n) {
                                    try {
                                        const { r: i, s, m: o, P: a } = ce(e, r, n), c = se(await t.utils.taggedHash(le.challenge, P(i), a.toRawX(), o));
                                        return he(i, a, s, c);
                                    } catch (e) {
                                        return !1;
                                    }
                                }
                                function de(e, r, n) {
                                    try {
                                        const { r: i, s, m: o, P: a } = ce(e, r, n), c = se(t.utils.taggedHashSync(le.challenge, P(i), a.toRawX(), o));
                                        return he(i, a, s, c);
                                    } catch (e) {
                                        if (e instanceof y) throw e;
                                        return !1;
                                    }
                                }
                                t.schnorr = {
                                    Signature: oe,
                                    getPublicKey: function(e) {
                                        return S.fromPrivateKey(e).toRawX();
                                    },
                                    sign: async function(e, t, r) {
                                        return new ae(e, t, r).calc();
                                    },
                                    verify: ue,
                                    signSync: function(e, t, r) {
                                        return new ae(e, t, r).calcSync();
                                    },
                                    verifySync: de
                                }, S.BASE._setWindowSize(8);
                                const fe = {
                                    node: n,
                                    web: "object" == typeof self && "crypto" in self ? self.crypto : void 0
                                }, le = {
                                    challenge: "BIP0340/challenge",
                                    aux: "BIP0340/aux",
                                    nonce: "BIP0340/nonce"
                                }, pe = {};
                                t.utils = {
                                    bytesToHex: C,
                                    hexToBytes: U,
                                    concatBytes: T,
                                    mod: D,
                                    invert: F,
                                    isValidPrivateKey (e) {
                                        try {
                                            return J(e), !0;
                                        } catch (e) {
                                            return !1;
                                        }
                                    },
                                    _bigintTo32Bytes: P,
                                    _normalizePrivateKey: J,
                                    hashToPrivateKey: (e)=>{
                                        e = L(e);
                                        const t = l + 8;
                                        if (e.length < t || e.length > 1024) throw new Error("Expected valid bytes of private key as per FIPS 186");
                                        return P(D(B(e), h.n - s) + s);
                                    },
                                    randomBytes: (e = 32)=>{
                                        if (fe.web) return fe.web.getRandomValues(new Uint8Array(e));
                                        if (fe.node) {
                                            const { randomBytes: t } = fe.node;
                                            return Uint8Array.from(t(e));
                                        }
                                        throw new Error("The environment doesn't have randomBytes function");
                                    },
                                    randomPrivateKey: ()=>t.utils.hashToPrivateKey(t.utils.randomBytes(l + 8)),
                                    precompute (e = 8, t = S.BASE) {
                                        const r = t === S.BASE ? t : new S(t.x, t.y);
                                        return r._setWindowSize(e), r.multiply(a), r;
                                    },
                                    sha256: async (...e)=>{
                                        if (fe.web) {
                                            const t = await fe.web.subtle.digest("SHA-256", T(...e));
                                            return new Uint8Array(t);
                                        }
                                        if (fe.node) {
                                            const { createHash: t } = fe.node, r = t("sha256");
                                            return e.forEach((e)=>r.update(e)), Uint8Array.from(r.digest());
                                        }
                                        throw new Error("The environment doesn't have sha256 function");
                                    },
                                    hmacSha256: async (e, ...t)=>{
                                        if (fe.web) {
                                            const r = await fe.web.subtle.importKey("raw", e, {
                                                name: "HMAC",
                                                hash: {
                                                    name: "SHA-256"
                                                }
                                            }, !1, [
                                                "sign"
                                            ]), n = T(...t), i = await fe.web.subtle.sign("HMAC", r, n);
                                            return new Uint8Array(i);
                                        }
                                        if (fe.node) {
                                            const { createHmac: r } = fe.node, n = r("sha256", e);
                                            return t.forEach((e)=>n.update(e)), Uint8Array.from(n.digest());
                                        }
                                        throw new Error("The environment doesn't have hmac-sha256 function");
                                    },
                                    sha256Sync: void 0,
                                    hmacSha256Sync: void 0,
                                    taggedHash: async (e, ...r)=>{
                                        let n = pe[e];
                                        if (void 0 === n) {
                                            const r = await t.utils.sha256(Uint8Array.from(e, (e)=>e.charCodeAt(0)));
                                            n = T(r, r), pe[e] = n;
                                        }
                                        return t.utils.sha256(n, ...r);
                                    },
                                    taggedHashSync: (e, ...t)=>{
                                        if ("function" != typeof z) throw new y("sha256Sync is undefined, you need to set it");
                                        let r = pe[e];
                                        if (void 0 === r) {
                                            const t = z(Uint8Array.from(e, (e)=>e.charCodeAt(0)));
                                            r = T(t, t), pe[e] = r;
                                        }
                                        return z(r, ...t);
                                    },
                                    _JacobianPoint: w
                                }, Object.defineProperties(t.utils, {
                                    sha256Sync: {
                                        configurable: !1,
                                        get: ()=>z,
                                        set (e) {
                                            z || (z = e);
                                        }
                                    },
                                    hmacSha256Sync: {
                                        configurable: !1,
                                        get: ()=>V,
                                        set (e) {
                                            V || (V = e);
                                        }
                                    }
                                });
                            },
                            5737: (e, t, r)=>{
                                "use strict";
                                const n = t;
                                n.bignum = r(4619), n.define = r(4082).define, n.base = r(7594), n.constants = r(6876), n.decoders = r(5126), n.encoders = r(122);
                            },
                            4082: (e, t, r)=>{
                                "use strict";
                                const n = r(122), i = r(5126), s = r(1193);
                                function o(e, t) {
                                    this.name = e, this.body = t, this.decoders = {}, this.encoders = {};
                                }
                                t.define = function(e, t) {
                                    return new o(e, t);
                                }, o.prototype._createNamed = function(e) {
                                    const t = this.name;
                                    function r(e) {
                                        this._initNamed(e, t);
                                    }
                                    return s(r, e), r.prototype._initNamed = function(t, r) {
                                        e.call(this, t, r);
                                    }, new r(this);
                                }, o.prototype._getDecoder = function(e) {
                                    return e = e || "der", this.decoders.hasOwnProperty(e) || (this.decoders[e] = this._createNamed(i[e])), this.decoders[e];
                                }, o.prototype.decode = function(e, t, r) {
                                    return this._getDecoder(t).decode(e, r);
                                }, o.prototype._getEncoder = function(e) {
                                    return e = e || "der", this.encoders.hasOwnProperty(e) || (this.encoders[e] = this._createNamed(n[e])), this.encoders[e];
                                }, o.prototype.encode = function(e, t, r) {
                                    return this._getEncoder(t).encode(e, r);
                                };
                            },
                            3802: (e, t, r)=>{
                                "use strict";
                                const n = r(1193), i = r(8657).a, s = r(1628).Buffer;
                                function o(e, t) {
                                    i.call(this, t), s.isBuffer(e) ? (this.base = e, this.offset = 0, this.length = e.length) : this.error("Input not Buffer");
                                }
                                function a(e, t) {
                                    if (Array.isArray(e)) this.length = 0, this.value = e.map(function(e) {
                                        return a.isEncoderBuffer(e) || (e = new a(e, t)), this.length += e.length, e;
                                    }, this);
                                    else if ("number" == typeof e) {
                                        if (!(0 <= e && e <= 255)) return t.error("non-byte EncoderBuffer value");
                                        this.value = e, this.length = 1;
                                    } else if ("string" == typeof e) this.value = e, this.length = s.byteLength(e);
                                    else {
                                        if (!s.isBuffer(e)) return t.error("Unsupported type: " + typeof e);
                                        this.value = e, this.length = e.length;
                                    }
                                }
                                n(o, i), t.t = o, o.isDecoderBuffer = function(e) {
                                    return e instanceof o || "object" == typeof e && s.isBuffer(e.base) && "DecoderBuffer" === e.constructor.name && "number" == typeof e.offset && "number" == typeof e.length && "function" == typeof e.save && "function" == typeof e.restore && "function" == typeof e.isEmpty && "function" == typeof e.readUInt8 && "function" == typeof e.skip && "function" == typeof e.raw;
                                }, o.prototype.save = function() {
                                    return {
                                        offset: this.offset,
                                        reporter: i.prototype.save.call(this)
                                    };
                                }, o.prototype.restore = function(e) {
                                    const t = new o(this.base);
                                    return t.offset = e.offset, t.length = this.offset, this.offset = e.offset, i.prototype.restore.call(this, e.reporter), t;
                                }, o.prototype.isEmpty = function() {
                                    return this.offset === this.length;
                                }, o.prototype.readUInt8 = function(e) {
                                    return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, !0) : this.error(e || "DecoderBuffer overrun");
                                }, o.prototype.skip = function(e, t) {
                                    if (!(this.offset + e <= this.length)) return this.error(t || "DecoderBuffer overrun");
                                    const r = new o(this.base);
                                    return r._reporterState = this._reporterState, r.offset = this.offset, r.length = this.offset + e, this.offset += e, r;
                                }, o.prototype.raw = function(e) {
                                    return this.base.slice(e ? e.offset : this.offset, this.length);
                                }, t.d = a, a.isEncoderBuffer = function(e) {
                                    return e instanceof a || "object" == typeof e && "EncoderBuffer" === e.constructor.name && "number" == typeof e.length && "function" == typeof e.join;
                                }, a.prototype.join = function(e, t) {
                                    return e || (e = s.alloc(this.length)), t || (t = 0), 0 === this.length || (Array.isArray(this.value) ? this.value.forEach(function(r) {
                                        r.join(e, t), t += r.length;
                                    }) : ("number" == typeof this.value ? e[t] = this.value : "string" == typeof this.value ? e.write(this.value, t) : s.isBuffer(this.value) && this.value.copy(e, t), t += this.length)), e;
                                };
                            },
                            7594: (e, t, r)=>{
                                "use strict";
                                const n = t;
                                n.Reporter = r(8657).a, n.DecoderBuffer = r(3802).t, n.EncoderBuffer = r(3802).d, n.Node = r(2144);
                            },
                            2144: (e, t, r)=>{
                                "use strict";
                                const n = r(8657).a, i = r(3802).d, s = r(3802).t, o = r(5578), a = [
                                    "seq",
                                    "seqof",
                                    "set",
                                    "setof",
                                    "objid",
                                    "bool",
                                    "gentime",
                                    "utctime",
                                    "null_",
                                    "enum",
                                    "int",
                                    "objDesc",
                                    "bitstr",
                                    "bmpstr",
                                    "charstr",
                                    "genstr",
                                    "graphstr",
                                    "ia5str",
                                    "iso646str",
                                    "numstr",
                                    "octstr",
                                    "printstr",
                                    "t61str",
                                    "unistr",
                                    "utf8str",
                                    "videostr"
                                ], c = [
                                    "key",
                                    "obj",
                                    "use",
                                    "optional",
                                    "explicit",
                                    "implicit",
                                    "def",
                                    "choice",
                                    "any",
                                    "contains"
                                ].concat(a);
                                function h(e, t, r) {
                                    const n = {};
                                    this._baseState = n, n.name = r, n.enc = e, n.parent = t || null, n.children = null, n.tag = null, n.args = null, n.reverseArgs = null, n.choice = null, n.optional = !1, n.any = !1, n.obj = !1, n.use = null, n.useDecoder = null, n.key = null, n.default = null, n.explicit = null, n.implicit = null, n.contains = null, n.parent || (n.children = [], this._wrap());
                                }
                                e.exports = h;
                                const u = [
                                    "enc",
                                    "parent",
                                    "children",
                                    "tag",
                                    "args",
                                    "reverseArgs",
                                    "choice",
                                    "optional",
                                    "any",
                                    "obj",
                                    "use",
                                    "alteredUse",
                                    "key",
                                    "default",
                                    "explicit",
                                    "implicit",
                                    "contains"
                                ];
                                h.prototype.clone = function() {
                                    const e = this._baseState, t = {};
                                    u.forEach(function(r) {
                                        t[r] = e[r];
                                    });
                                    const r = new this.constructor(t.parent);
                                    return r._baseState = t, r;
                                }, h.prototype._wrap = function() {
                                    const e = this._baseState;
                                    c.forEach(function(t) {
                                        this[t] = function() {
                                            const r = new this.constructor(this);
                                            return e.children.push(r), r[t].apply(r, arguments);
                                        };
                                    }, this);
                                }, h.prototype._init = function(e) {
                                    const t = this._baseState;
                                    o(null === t.parent), e.call(this), t.children = t.children.filter(function(e) {
                                        return e._baseState.parent === this;
                                    }, this), o.equal(t.children.length, 1, "Root node can have only one child");
                                }, h.prototype._useArgs = function(e) {
                                    const t = this._baseState, r = e.filter(function(e) {
                                        return e instanceof this.constructor;
                                    }, this);
                                    e = e.filter(function(e) {
                                        return !(e instanceof this.constructor);
                                    }, this), 0 !== r.length && (o(null === t.children), t.children = r, r.forEach(function(e) {
                                        e._baseState.parent = this;
                                    }, this)), 0 !== e.length && (o(null === t.args), t.args = e, t.reverseArgs = e.map(function(e) {
                                        if ("object" != typeof e || e.constructor !== Object) return e;
                                        const t = {};
                                        return Object.keys(e).forEach(function(r) {
                                            r == (0 | r) && (r |= 0);
                                            const n = e[r];
                                            t[n] = r;
                                        }), t;
                                    }));
                                }, [
                                    "_peekTag",
                                    "_decodeTag",
                                    "_use",
                                    "_decodeStr",
                                    "_decodeObjid",
                                    "_decodeTime",
                                    "_decodeNull",
                                    "_decodeInt",
                                    "_decodeBool",
                                    "_decodeList",
                                    "_encodeComposite",
                                    "_encodeStr",
                                    "_encodeObjid",
                                    "_encodeTime",
                                    "_encodeNull",
                                    "_encodeInt",
                                    "_encodeBool"
                                ].forEach(function(e) {
                                    h.prototype[e] = function() {
                                        const t = this._baseState;
                                        throw new Error(e + " not implemented for encoding: " + t.enc);
                                    };
                                }), a.forEach(function(e) {
                                    h.prototype[e] = function() {
                                        const t = this._baseState, r = Array.prototype.slice.call(arguments);
                                        return o(null === t.tag), t.tag = e, this._useArgs(r), this;
                                    };
                                }), h.prototype.use = function(e) {
                                    o(e);
                                    const t = this._baseState;
                                    return o(null === t.use), t.use = e, this;
                                }, h.prototype.optional = function() {
                                    return this._baseState.optional = !0, this;
                                }, h.prototype.def = function(e) {
                                    const t = this._baseState;
                                    return o(null === t.default), t.default = e, t.optional = !0, this;
                                }, h.prototype.explicit = function(e) {
                                    const t = this._baseState;
                                    return o(null === t.explicit && null === t.implicit), t.explicit = e, this;
                                }, h.prototype.implicit = function(e) {
                                    const t = this._baseState;
                                    return o(null === t.explicit && null === t.implicit), t.implicit = e, this;
                                }, h.prototype.obj = function() {
                                    const e = this._baseState, t = Array.prototype.slice.call(arguments);
                                    return e.obj = !0, 0 !== t.length && this._useArgs(t), this;
                                }, h.prototype.key = function(e) {
                                    const t = this._baseState;
                                    return o(null === t.key), t.key = e, this;
                                }, h.prototype.any = function() {
                                    return this._baseState.any = !0, this;
                                }, h.prototype.choice = function(e) {
                                    const t = this._baseState;
                                    return o(null === t.choice), t.choice = e, this._useArgs(Object.keys(e).map(function(t) {
                                        return e[t];
                                    })), this;
                                }, h.prototype.contains = function(e) {
                                    const t = this._baseState;
                                    return o(null === t.use), t.contains = e, this;
                                }, h.prototype._decode = function(e, t) {
                                    const r = this._baseState;
                                    if (null === r.parent) return e.wrapResult(r.children[0]._decode(e, t));
                                    let n, i = r.default, o = !0, a = null;
                                    if (null !== r.key && (a = e.enterKey(r.key)), r.optional) {
                                        let n = null;
                                        if (null !== r.explicit ? n = r.explicit : null !== r.implicit ? n = r.implicit : null !== r.tag && (n = r.tag), null !== n || r.any) {
                                            if (o = this._peekTag(e, n, r.any), e.isError(o)) return o;
                                        } else {
                                            const n = e.save();
                                            try {
                                                null === r.choice ? this._decodeGeneric(r.tag, e, t) : this._decodeChoice(e, t), o = !0;
                                            } catch (e) {
                                                o = !1;
                                            }
                                            e.restore(n);
                                        }
                                    }
                                    if (r.obj && o && (n = e.enterObject()), o) {
                                        if (null !== r.explicit) {
                                            const t = this._decodeTag(e, r.explicit);
                                            if (e.isError(t)) return t;
                                            e = t;
                                        }
                                        const n = e.offset;
                                        if (null === r.use && null === r.choice) {
                                            let t;
                                            r.any && (t = e.save());
                                            const n = this._decodeTag(e, null !== r.implicit ? r.implicit : r.tag, r.any);
                                            if (e.isError(n)) return n;
                                            r.any ? i = e.raw(t) : e = n;
                                        }
                                        if (t && t.track && null !== r.tag && t.track(e.path(), n, e.length, "tagged"), t && t.track && null !== r.tag && t.track(e.path(), e.offset, e.length, "content"), r.any || (i = null === r.choice ? this._decodeGeneric(r.tag, e, t) : this._decodeChoice(e, t)), e.isError(i)) return i;
                                        if (r.any || null !== r.choice || null === r.children || r.children.forEach(function(r) {
                                            r._decode(e, t);
                                        }), r.contains && ("octstr" === r.tag || "bitstr" === r.tag)) {
                                            const n = new s(i);
                                            i = this._getUse(r.contains, e._reporterState.obj)._decode(n, t);
                                        }
                                    }
                                    return r.obj && o && (i = e.leaveObject(n)), null === r.key || null === i && !0 !== o ? null !== a && e.exitKey(a) : e.leaveKey(a, r.key, i), i;
                                }, h.prototype._decodeGeneric = function(e, t, r) {
                                    const n = this._baseState;
                                    return "seq" === e || "set" === e ? null : "seqof" === e || "setof" === e ? this._decodeList(t, e, n.args[0], r) : /str$/.test(e) ? this._decodeStr(t, e, r) : "objid" === e && n.args ? this._decodeObjid(t, n.args[0], n.args[1], r) : "objid" === e ? this._decodeObjid(t, null, null, r) : "gentime" === e || "utctime" === e ? this._decodeTime(t, e, r) : "null_" === e ? this._decodeNull(t, r) : "bool" === e ? this._decodeBool(t, r) : "objDesc" === e ? this._decodeStr(t, e, r) : "int" === e || "enum" === e ? this._decodeInt(t, n.args && n.args[0], r) : null !== n.use ? this._getUse(n.use, t._reporterState.obj)._decode(t, r) : t.error("unknown tag: " + e);
                                }, h.prototype._getUse = function(e, t) {
                                    const r = this._baseState;
                                    return r.useDecoder = this._use(e, t), o(null === r.useDecoder._baseState.parent), r.useDecoder = r.useDecoder._baseState.children[0], r.implicit !== r.useDecoder._baseState.implicit && (r.useDecoder = r.useDecoder.clone(), r.useDecoder._baseState.implicit = r.implicit), r.useDecoder;
                                }, h.prototype._decodeChoice = function(e, t) {
                                    const r = this._baseState;
                                    let n = null, i = !1;
                                    return Object.keys(r.choice).some(function(s) {
                                        const o = e.save(), a = r.choice[s];
                                        try {
                                            const r = a._decode(e, t);
                                            if (e.isError(r)) return !1;
                                            n = {
                                                type: s,
                                                value: r
                                            }, i = !0;
                                        } catch (t) {
                                            return e.restore(o), !1;
                                        }
                                        return !0;
                                    }, this), i ? n : e.error("Choice not matched");
                                }, h.prototype._createEncoderBuffer = function(e) {
                                    return new i(e, this.reporter);
                                }, h.prototype._encode = function(e, t, r) {
                                    const n = this._baseState;
                                    if (null !== n.default && n.default === e) return;
                                    const i = this._encodeValue(e, t, r);
                                    return void 0 === i || this._skipDefault(i, t, r) ? void 0 : i;
                                }, h.prototype._encodeValue = function(e, t, r) {
                                    const i = this._baseState;
                                    if (null === i.parent) return i.children[0]._encode(e, t || new n);
                                    let s = null;
                                    if (this.reporter = t, i.optional && void 0 === e) {
                                        if (null === i.default) return;
                                        e = i.default;
                                    }
                                    let o = null, a = !1;
                                    if (i.any) s = this._createEncoderBuffer(e);
                                    else if (i.choice) s = this._encodeChoice(e, t);
                                    else if (i.contains) o = this._getUse(i.contains, r)._encode(e, t), a = !0;
                                    else if (i.children) o = i.children.map(function(r) {
                                        if ("null_" === r._baseState.tag) return r._encode(null, t, e);
                                        if (null === r._baseState.key) return t.error("Child should have a key");
                                        const n = t.enterKey(r._baseState.key);
                                        if ("object" != typeof e) return t.error("Child expected, but input is not object");
                                        const i = r._encode(e[r._baseState.key], t, e);
                                        return t.leaveKey(n), i;
                                    }, this).filter(function(e) {
                                        return e;
                                    }), o = this._createEncoderBuffer(o);
                                    else if ("seqof" === i.tag || "setof" === i.tag) {
                                        if (!i.args || 1 !== i.args.length) return t.error("Too many args for : " + i.tag);
                                        if (!Array.isArray(e)) return t.error("seqof/setof, but data is not Array");
                                        const r = this.clone();
                                        r._baseState.implicit = null, o = this._createEncoderBuffer(e.map(function(r) {
                                            const n = this._baseState;
                                            return this._getUse(n.args[0], e)._encode(r, t);
                                        }, r));
                                    } else null !== i.use ? s = this._getUse(i.use, r)._encode(e, t) : (o = this._encodePrimitive(i.tag, e), a = !0);
                                    if (!i.any && null === i.choice) {
                                        const e = null !== i.implicit ? i.implicit : i.tag, r = null === i.implicit ? "universal" : "context";
                                        null === e ? null === i.use && t.error("Tag could be omitted only for .use()") : null === i.use && (s = this._encodeComposite(e, a, r, o));
                                    }
                                    return null !== i.explicit && (s = this._encodeComposite(i.explicit, !1, "context", s)), s;
                                }, h.prototype._encodeChoice = function(e, t) {
                                    const r = this._baseState, n = r.choice[e.type];
                                    return n || o(!1, e.type + " not found in " + JSON.stringify(Object.keys(r.choice))), n._encode(e.value, t);
                                }, h.prototype._encodePrimitive = function(e, t) {
                                    const r = this._baseState;
                                    if (/str$/.test(e)) return this._encodeStr(t, e);
                                    if ("objid" === e && r.args) return this._encodeObjid(t, r.reverseArgs[0], r.args[1]);
                                    if ("objid" === e) return this._encodeObjid(t, null, null);
                                    if ("gentime" === e || "utctime" === e) return this._encodeTime(t, e);
                                    if ("null_" === e) return this._encodeNull();
                                    if ("int" === e || "enum" === e) return this._encodeInt(t, r.args && r.reverseArgs[0]);
                                    if ("bool" === e) return this._encodeBool(t);
                                    if ("objDesc" === e) return this._encodeStr(t, e);
                                    throw new Error("Unsupported tag: " + e);
                                }, h.prototype._isNumstr = function(e) {
                                    return /^[0-9 ]*$/.test(e);
                                }, h.prototype._isPrintstr = function(e) {
                                    return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(e);
                                };
                            },
                            8657: (e, t, r)=>{
                                "use strict";
                                const n = r(1193);
                                function i(e) {
                                    this._reporterState = {
                                        obj: null,
                                        path: [],
                                        options: e || {},
                                        errors: []
                                    };
                                }
                                function s(e, t) {
                                    this.path = e, this.rethrow(t);
                                }
                                t.a = i, i.prototype.isError = function(e) {
                                    return e instanceof s;
                                }, i.prototype.save = function() {
                                    const e = this._reporterState;
                                    return {
                                        obj: e.obj,
                                        pathLen: e.path.length
                                    };
                                }, i.prototype.restore = function(e) {
                                    const t = this._reporterState;
                                    t.obj = e.obj, t.path = t.path.slice(0, e.pathLen);
                                }, i.prototype.enterKey = function(e) {
                                    return this._reporterState.path.push(e);
                                }, i.prototype.exitKey = function(e) {
                                    const t = this._reporterState;
                                    t.path = t.path.slice(0, e - 1);
                                }, i.prototype.leaveKey = function(e, t, r) {
                                    const n = this._reporterState;
                                    this.exitKey(e), null !== n.obj && (n.obj[t] = r);
                                }, i.prototype.path = function() {
                                    return this._reporterState.path.join("/");
                                }, i.prototype.enterObject = function() {
                                    const e = this._reporterState, t = e.obj;
                                    return e.obj = {}, t;
                                }, i.prototype.leaveObject = function(e) {
                                    const t = this._reporterState, r = t.obj;
                                    return t.obj = e, r;
                                }, i.prototype.error = function(e) {
                                    let t;
                                    const r = this._reporterState, n = e instanceof s;
                                    if (t = n ? e : new s(r.path.map(function(e) {
                                        return "[" + JSON.stringify(e) + "]";
                                    }).join(""), e.message || e, e.stack), !r.options.partial) throw t;
                                    return n || r.errors.push(t), t;
                                }, i.prototype.wrapResult = function(e) {
                                    const t = this._reporterState;
                                    return t.options.partial ? {
                                        result: this.isError(e) ? null : e,
                                        errors: t.errors
                                    } : e;
                                }, n(s, Error), s.prototype.rethrow = function(e) {
                                    if (this.message = e + " at: " + (this.path || "(shallow)"), Error.captureStackTrace && Error.captureStackTrace(this, s), !this.stack) try {
                                        throw new Error(this.message);
                                    } catch (e) {
                                        this.stack = e.stack;
                                    }
                                    return this;
                                };
                            },
                            1371: (e, t)=>{
                                "use strict";
                                function r(e) {
                                    const t = {};
                                    return Object.keys(e).forEach(function(r) {
                                        (0 | r) == r && (r |= 0);
                                        const n = e[r];
                                        t[n] = r;
                                    }), t;
                                }
                                t.tagClass = {
                                    0: "universal",
                                    1: "application",
                                    2: "context",
                                    3: "private"
                                }, t.tagClassByName = r(t.tagClass), t.tag = {
                                    0: "end",
                                    1: "bool",
                                    2: "int",
                                    3: "bitstr",
                                    4: "octstr",
                                    5: "null_",
                                    6: "objid",
                                    7: "objDesc",
                                    8: "external",
                                    9: "real",
                                    10: "enum",
                                    11: "embed",
                                    12: "utf8str",
                                    13: "relativeOid",
                                    16: "seq",
                                    17: "set",
                                    18: "numstr",
                                    19: "printstr",
                                    20: "t61str",
                                    21: "videostr",
                                    22: "ia5str",
                                    23: "utctime",
                                    24: "gentime",
                                    25: "graphstr",
                                    26: "iso646str",
                                    27: "genstr",
                                    28: "unistr",
                                    29: "charstr",
                                    30: "bmpstr"
                                }, t.tagByName = r(t.tag);
                            },
                            6876: (e, t, r)=>{
                                "use strict";
                                const n = t;
                                n._reverse = function(e) {
                                    const t = {};
                                    return Object.keys(e).forEach(function(r) {
                                        (0 | r) == r && (r |= 0);
                                        const n = e[r];
                                        t[n] = r;
                                    }), t;
                                }, n.der = r(1371);
                            },
                            629: (e, t, r)=>{
                                "use strict";
                                const n = r(1193), i = r(4619), s = r(3802).t, o = r(2144), a = r(1371);
                                function c(e) {
                                    this.enc = "der", this.name = e.name, this.entity = e, this.tree = new h, this.tree._init(e.body);
                                }
                                function h(e) {
                                    o.call(this, "der", e);
                                }
                                function u(e, t) {
                                    let r = e.readUInt8(t);
                                    if (e.isError(r)) return r;
                                    const n = a.tagClass[r >> 6], i = !(32 & r);
                                    if (31 & ~r) r &= 31;
                                    else {
                                        let n = r;
                                        for(r = 0; !(128 & ~n);){
                                            if (n = e.readUInt8(t), e.isError(n)) return n;
                                            r <<= 7, r |= 127 & n;
                                        }
                                    }
                                    return {
                                        cls: n,
                                        primitive: i,
                                        tag: r,
                                        tagStr: a.tag[r]
                                    };
                                }
                                function d(e, t, r) {
                                    let n = e.readUInt8(r);
                                    if (e.isError(n)) return n;
                                    if (!t && 128 === n) return null;
                                    if (!(128 & n)) return n;
                                    const i = 127 & n;
                                    if (i > 4) return e.error("length octect is too long");
                                    n = 0;
                                    for(let t = 0; t < i; t++){
                                        n <<= 8;
                                        const t = e.readUInt8(r);
                                        if (e.isError(t)) return t;
                                        n |= t;
                                    }
                                    return n;
                                }
                                e.exports = c, c.prototype.decode = function(e, t) {
                                    return s.isDecoderBuffer(e) || (e = new s(e, t)), this.tree._decode(e, t);
                                }, n(h, o), h.prototype._peekTag = function(e, t, r) {
                                    if (e.isEmpty()) return !1;
                                    const n = e.save(), i = u(e, 'Failed to peek tag: "' + t + '"');
                                    return e.isError(i) ? i : (e.restore(n), i.tag === t || i.tagStr === t || i.tagStr + "of" === t || r);
                                }, h.prototype._decodeTag = function(e, t, r) {
                                    const n = u(e, 'Failed to decode tag of "' + t + '"');
                                    if (e.isError(n)) return n;
                                    let i = d(e, n.primitive, 'Failed to get length of "' + t + '"');
                                    if (e.isError(i)) return i;
                                    if (!r && n.tag !== t && n.tagStr !== t && n.tagStr + "of" !== t) return e.error('Failed to match tag: "' + t + '"');
                                    if (n.primitive || null !== i) return e.skip(i, 'Failed to match body of: "' + t + '"');
                                    const s = e.save(), o = this._skipUntilEnd(e, 'Failed to skip indefinite length body: "' + this.tag + '"');
                                    return e.isError(o) ? o : (i = e.offset - s.offset, e.restore(s), e.skip(i, 'Failed to match body of: "' + t + '"'));
                                }, h.prototype._skipUntilEnd = function(e, t) {
                                    for(;;){
                                        const r = u(e, t);
                                        if (e.isError(r)) return r;
                                        const n = d(e, r.primitive, t);
                                        if (e.isError(n)) return n;
                                        let i;
                                        if (i = r.primitive || null !== n ? e.skip(n) : this._skipUntilEnd(e, t), e.isError(i)) return i;
                                        if ("end" === r.tagStr) break;
                                    }
                                }, h.prototype._decodeList = function(e, t, r, n) {
                                    const i = [];
                                    for(; !e.isEmpty();){
                                        const t = this._peekTag(e, "end");
                                        if (e.isError(t)) return t;
                                        const s = r.decode(e, "der", n);
                                        if (e.isError(s) && t) break;
                                        i.push(s);
                                    }
                                    return i;
                                }, h.prototype._decodeStr = function(e, t) {
                                    if ("bitstr" === t) {
                                        const t = e.readUInt8();
                                        return e.isError(t) ? t : {
                                            unused: t,
                                            data: e.raw()
                                        };
                                    }
                                    if ("bmpstr" === t) {
                                        const t = e.raw();
                                        if (t.length % 2 == 1) return e.error("Decoding of string type: bmpstr length mismatch");
                                        let r = "";
                                        for(let e = 0; e < t.length / 2; e++)r += String.fromCharCode(t.readUInt16BE(2 * e));
                                        return r;
                                    }
                                    if ("numstr" === t) {
                                        const t = e.raw().toString("ascii");
                                        return this._isNumstr(t) ? t : e.error("Decoding of string type: numstr unsupported characters");
                                    }
                                    if ("octstr" === t) return e.raw();
                                    if ("objDesc" === t) return e.raw();
                                    if ("printstr" === t) {
                                        const t = e.raw().toString("ascii");
                                        return this._isPrintstr(t) ? t : e.error("Decoding of string type: printstr unsupported characters");
                                    }
                                    return /str$/.test(t) ? e.raw().toString() : e.error("Decoding of string type: " + t + " unsupported");
                                }, h.prototype._decodeObjid = function(e, t, r) {
                                    let n;
                                    const i = [];
                                    let s = 0, o = 0;
                                    for(; !e.isEmpty();)o = e.readUInt8(), s <<= 7, s |= 127 & o, 128 & o || (i.push(s), s = 0);
                                    128 & o && i.push(s);
                                    const a = i[0] / 40 | 0, c = i[0] % 40;
                                    if (n = r ? i : [
                                        a,
                                        c
                                    ].concat(i.slice(1)), t) {
                                        let e = t[n.join(" ")];
                                        void 0 === e && (e = t[n.join(".")]), void 0 !== e && (n = e);
                                    }
                                    return n;
                                }, h.prototype._decodeTime = function(e, t) {
                                    const r = e.raw().toString();
                                    let n, i, s, o, a, c;
                                    if ("gentime" === t) n = 0 | r.slice(0, 4), i = 0 | r.slice(4, 6), s = 0 | r.slice(6, 8), o = 0 | r.slice(8, 10), a = 0 | r.slice(10, 12), c = 0 | r.slice(12, 14);
                                    else {
                                        if ("utctime" !== t) return e.error("Decoding " + t + " time is not supported yet");
                                        n = 0 | r.slice(0, 2), i = 0 | r.slice(2, 4), s = 0 | r.slice(4, 6), o = 0 | r.slice(6, 8), a = 0 | r.slice(8, 10), c = 0 | r.slice(10, 12), n = n < 70 ? 2e3 + n : 1900 + n;
                                    }
                                    return Date.UTC(n, i - 1, s, o, a, c, 0);
                                }, h.prototype._decodeNull = function() {
                                    return null;
                                }, h.prototype._decodeBool = function(e) {
                                    const t = e.readUInt8();
                                    return e.isError(t) ? t : 0 !== t;
                                }, h.prototype._decodeInt = function(e, t) {
                                    const r = e.raw();
                                    let n = new i(r);
                                    return t && (n = t[n.toString(10)] || n), n;
                                }, h.prototype._use = function(e, t) {
                                    return "function" == typeof e && (e = e(t)), e._getDecoder("der").tree;
                                };
                            },
                            5126: (e, t, r)=>{
                                "use strict";
                                const n = t;
                                n.der = r(629), n.pem = r(2932);
                            },
                            2932: (e, t, r)=>{
                                "use strict";
                                const n = r(1193), i = r(1628).Buffer, s = r(629);
                                function o(e) {
                                    s.call(this, e), this.enc = "pem";
                                }
                                n(o, s), e.exports = o, o.prototype.decode = function(e, t) {
                                    const r = e.toString().split(/[\r\n]+/g), n = t.label.toUpperCase(), o = /^-----(BEGIN|END) ([^-]+)-----$/;
                                    let a = -1, c = -1;
                                    for(let e = 0; e < r.length; e++){
                                        const t = r[e].match(o);
                                        if (null !== t && t[2] === n) {
                                            if (-1 !== a) {
                                                if ("END" !== t[1]) break;
                                                c = e;
                                                break;
                                            }
                                            if ("BEGIN" !== t[1]) break;
                                            a = e;
                                        }
                                    }
                                    if (-1 === a || -1 === c) throw new Error("PEM section not found for: " + n);
                                    const h = r.slice(a + 1, c).join("");
                                    h.replace(/[^a-z0-9+/=]+/gi, "");
                                    const u = i.from(h, "base64");
                                    return s.prototype.decode.call(this, u, t);
                                };
                            },
                            5841: (e, t, r)=>{
                                "use strict";
                                const n = r(1193), i = r(1628).Buffer, s = r(2144), o = r(1371);
                                function a(e) {
                                    this.enc = "der", this.name = e.name, this.entity = e, this.tree = new c, this.tree._init(e.body);
                                }
                                function c(e) {
                                    s.call(this, "der", e);
                                }
                                function h(e) {
                                    return e < 10 ? "0" + e : e;
                                }
                                e.exports = a, a.prototype.encode = function(e, t) {
                                    return this.tree._encode(e, t).join();
                                }, n(c, s), c.prototype._encodeComposite = function(e, t, r, n) {
                                    const s = function(e, t, r, n) {
                                        let i;
                                        if ("seqof" === e ? e = "seq" : "setof" === e && (e = "set"), o.tagByName.hasOwnProperty(e)) i = o.tagByName[e];
                                        else {
                                            if ("number" != typeof e || (0 | e) !== e) return n.error("Unknown tag: " + e);
                                            i = e;
                                        }
                                        return i >= 31 ? n.error("Multi-octet tag encoding unsupported") : (t || (i |= 32), i |= o.tagClassByName[r || "universal"] << 6, i);
                                    }(e, t, r, this.reporter);
                                    if (n.length < 128) {
                                        const e = i.alloc(2);
                                        return e[0] = s, e[1] = n.length, this._createEncoderBuffer([
                                            e,
                                            n
                                        ]);
                                    }
                                    let a = 1;
                                    for(let e = n.length; e >= 256; e >>= 8)a++;
                                    const c = i.alloc(2 + a);
                                    c[0] = s, c[1] = 128 | a;
                                    for(let e = 1 + a, t = n.length; t > 0; e--, t >>= 8)c[e] = 255 & t;
                                    return this._createEncoderBuffer([
                                        c,
                                        n
                                    ]);
                                }, c.prototype._encodeStr = function(e, t) {
                                    if ("bitstr" === t) return this._createEncoderBuffer([
                                        0 | e.unused,
                                        e.data
                                    ]);
                                    if ("bmpstr" === t) {
                                        const t = i.alloc(2 * e.length);
                                        for(let r = 0; r < e.length; r++)t.writeUInt16BE(e.charCodeAt(r), 2 * r);
                                        return this._createEncoderBuffer(t);
                                    }
                                    return "numstr" === t ? this._isNumstr(e) ? this._createEncoderBuffer(e) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : "printstr" === t ? this._isPrintstr(e) ? this._createEncoderBuffer(e) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(t) || "objDesc" === t ? this._createEncoderBuffer(e) : this.reporter.error("Encoding of string type: " + t + " unsupported");
                                }, c.prototype._encodeObjid = function(e, t, r) {
                                    if ("string" == typeof e) {
                                        if (!t) return this.reporter.error("string objid given, but no values map found");
                                        if (!t.hasOwnProperty(e)) return this.reporter.error("objid not found in values map");
                                        e = t[e].split(/[\s.]+/g);
                                        for(let t = 0; t < e.length; t++)e[t] |= 0;
                                    } else if (Array.isArray(e)) {
                                        e = e.slice();
                                        for(let t = 0; t < e.length; t++)e[t] |= 0;
                                    }
                                    if (!Array.isArray(e)) return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(e));
                                    if (!r) {
                                        if (e[1] >= 40) return this.reporter.error("Second objid identifier OOB");
                                        e.splice(0, 2, 40 * e[0] + e[1]);
                                    }
                                    let n = 0;
                                    for(let t = 0; t < e.length; t++){
                                        let r = e[t];
                                        for(n++; r >= 128; r >>= 7)n++;
                                    }
                                    const s = i.alloc(n);
                                    let o = s.length - 1;
                                    for(let t = e.length - 1; t >= 0; t--){
                                        let r = e[t];
                                        for(s[o--] = 127 & r; (r >>= 7) > 0;)s[o--] = 128 | 127 & r;
                                    }
                                    return this._createEncoderBuffer(s);
                                }, c.prototype._encodeTime = function(e, t) {
                                    let r;
                                    const n = new Date(e);
                                    return "gentime" === t ? r = [
                                        h(n.getUTCFullYear()),
                                        h(n.getUTCMonth() + 1),
                                        h(n.getUTCDate()),
                                        h(n.getUTCHours()),
                                        h(n.getUTCMinutes()),
                                        h(n.getUTCSeconds()),
                                        "Z"
                                    ].join("") : "utctime" === t ? r = [
                                        h(n.getUTCFullYear() % 100),
                                        h(n.getUTCMonth() + 1),
                                        h(n.getUTCDate()),
                                        h(n.getUTCHours()),
                                        h(n.getUTCMinutes()),
                                        h(n.getUTCSeconds()),
                                        "Z"
                                    ].join("") : this.reporter.error("Encoding " + t + " time is not supported yet"), this._encodeStr(r, "octstr");
                                }, c.prototype._encodeNull = function() {
                                    return this._createEncoderBuffer("");
                                }, c.prototype._encodeInt = function(e, t) {
                                    if ("string" == typeof e) {
                                        if (!t) return this.reporter.error("String int or enum given, but no values map");
                                        if (!t.hasOwnProperty(e)) return this.reporter.error("Values map doesn't contain: " + JSON.stringify(e));
                                        e = t[e];
                                    }
                                    if ("number" != typeof e && !i.isBuffer(e)) {
                                        const t = e.toArray();
                                        !e.sign && 128 & t[0] && t.unshift(0), e = i.from(t);
                                    }
                                    if (i.isBuffer(e)) {
                                        let t = e.length;
                                        0 === e.length && t++;
                                        const r = i.alloc(t);
                                        return e.copy(r), 0 === e.length && (r[0] = 0), this._createEncoderBuffer(r);
                                    }
                                    if (e < 128) return this._createEncoderBuffer(e);
                                    if (e < 256) return this._createEncoderBuffer([
                                        0,
                                        e
                                    ]);
                                    let r = 1;
                                    for(let t = e; t >= 256; t >>= 8)r++;
                                    const n = new Array(r);
                                    for(let t = n.length - 1; t >= 0; t--)n[t] = 255 & e, e >>= 8;
                                    return 128 & n[0] && n.unshift(0), this._createEncoderBuffer(i.from(n));
                                }, c.prototype._encodeBool = function(e) {
                                    return this._createEncoderBuffer(e ? 255 : 0);
                                }, c.prototype._use = function(e, t) {
                                    return "function" == typeof e && (e = e(t)), e._getEncoder("der").tree;
                                }, c.prototype._skipDefault = function(e, t, r) {
                                    const n = this._baseState;
                                    let i;
                                    if (null === n.default) return !1;
                                    const s = e.join();
                                    if (void 0 === n.defaultBuffer && (n.defaultBuffer = this._encodeValue(n.default, t, r).join()), s.length !== n.defaultBuffer.length) return !1;
                                    for(i = 0; i < s.length; i++)if (s[i] !== n.defaultBuffer[i]) return !1;
                                    return !0;
                                };
                            },
                            122: (e, t, r)=>{
                                "use strict";
                                const n = t;
                                n.der = r(5841), n.pem = r(8080);
                            },
                            8080: (e, t, r)=>{
                                "use strict";
                                const n = r(1193), i = r(5841);
                                function s(e) {
                                    i.call(this, e), this.enc = "pem";
                                }
                                n(s, i), e.exports = s, s.prototype.encode = function(e, t) {
                                    const r = i.prototype.encode.call(this, e).toString("base64"), n = [
                                        "-----BEGIN " + t.label + "-----"
                                    ];
                                    for(let e = 0; e < r.length; e += 64)n.push(r.slice(e, e + 64));
                                    return n.push("-----END " + t.label + "-----"), n.join("\n");
                                };
                            },
                            1219: (e)=>{
                                "use strict";
                                e.exports = function(e) {
                                    if (e.length >= 255) throw new TypeError("Alphabet too long");
                                    for(var t = new Uint8Array(256), r = 0; r < t.length; r++)t[r] = 255;
                                    for(var n = 0; n < e.length; n++){
                                        var i = e.charAt(n), s = i.charCodeAt(0);
                                        if (255 !== t[s]) throw new TypeError(i + " is ambiguous");
                                        t[s] = n;
                                    }
                                    var o = e.length, a = e.charAt(0), c = Math.log(o) / Math.log(256), h = Math.log(256) / Math.log(o);
                                    function u(e) {
                                        if ("string" != typeof e) throw new TypeError("Expected String");
                                        if (0 === e.length) return new Uint8Array;
                                        for(var r = 0, n = 0, i = 0; e[r] === a;)n++, r++;
                                        for(var s = (e.length - r) * c + 1 >>> 0, h = new Uint8Array(s); e[r];){
                                            var u = t[e.charCodeAt(r)];
                                            if (255 === u) return;
                                            for(var d = 0, f = s - 1; (0 !== u || d < i) && -1 !== f; f--, d++)u += o * h[f] >>> 0, h[f] = u % 256 >>> 0, u = u / 256 >>> 0;
                                            if (0 !== u) throw new Error("Non-zero carry");
                                            i = d, r++;
                                        }
                                        for(var l = s - i; l !== s && 0 === h[l];)l++;
                                        for(var p = new Uint8Array(n + (s - l)), b = n; l !== s;)p[b++] = h[l++];
                                        return p;
                                    }
                                    return {
                                        encode: function(t) {
                                            if (t instanceof Uint8Array || (ArrayBuffer.isView(t) ? t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : Array.isArray(t) && (t = Uint8Array.from(t))), !(t instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
                                            if (0 === t.length) return "";
                                            for(var r = 0, n = 0, i = 0, s = t.length; i !== s && 0 === t[i];)i++, r++;
                                            for(var c = (s - i) * h + 1 >>> 0, u = new Uint8Array(c); i !== s;){
                                                for(var d = t[i], f = 0, l = c - 1; (0 !== d || f < n) && -1 !== l; l--, f++)d += 256 * u[l] >>> 0, u[l] = d % o >>> 0, d = d / o >>> 0;
                                                if (0 !== d) throw new Error("Non-zero carry");
                                                n = f, i++;
                                            }
                                            for(var p = c - n; p !== c && 0 === u[p];)p++;
                                            for(var b = a.repeat(r); p < c; ++p)b += e.charAt(u[p]);
                                            return b;
                                        },
                                        decodeUnsafe: u,
                                        decode: function(e) {
                                            var t = u(e);
                                            if (t) return t;
                                            throw new Error("Non-base" + o + " character");
                                        }
                                    };
                                };
                            },
                            4933: (e, t)=>{
                                "use strict";
                                t.byteLength = function(e) {
                                    var t = a(e), r = t[0], n = t[1];
                                    return 3 * (r + n) / 4 - n;
                                }, t.toByteArray = function(e) {
                                    var t, r, s = a(e), o = s[0], c = s[1], h = new i(function(e, t, r) {
                                        return 3 * (t + r) / 4 - r;
                                    }(0, o, c)), u = 0, d = c > 0 ? o - 4 : o;
                                    for(r = 0; r < d; r += 4)t = n[e.charCodeAt(r)] << 18 | n[e.charCodeAt(r + 1)] << 12 | n[e.charCodeAt(r + 2)] << 6 | n[e.charCodeAt(r + 3)], h[u++] = t >> 16 & 255, h[u++] = t >> 8 & 255, h[u++] = 255 & t;
                                    return 2 === c && (t = n[e.charCodeAt(r)] << 2 | n[e.charCodeAt(r + 1)] >> 4, h[u++] = 255 & t), 1 === c && (t = n[e.charCodeAt(r)] << 10 | n[e.charCodeAt(r + 1)] << 4 | n[e.charCodeAt(r + 2)] >> 2, h[u++] = t >> 8 & 255, h[u++] = 255 & t), h;
                                }, t.fromByteArray = function(e) {
                                    for(var t, n = e.length, i = n % 3, s = [], o = 16383, a = 0, h = n - i; a < h; a += o)s.push(c(e, a, a + o > h ? h : a + o));
                                    return 1 === i ? (t = e[n - 1], s.push(r[t >> 2] + r[t << 4 & 63] + "==")) : 2 === i && (t = (e[n - 2] << 8) + e[n - 1], s.push(r[t >> 10] + r[t >> 4 & 63] + r[t << 2 & 63] + "=")), s.join("");
                                };
                                for(var r = [], n = [], i = "undefined" != typeof Uint8Array ? Uint8Array : Array, s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", o = 0; o < 64; ++o)r[o] = s[o], n[s.charCodeAt(o)] = o;
                                function a(e) {
                                    var t = e.length;
                                    if (t % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
                                    var r = e.indexOf("=");
                                    return -1 === r && (r = t), [
                                        r,
                                        r === t ? 0 : 4 - r % 4
                                    ];
                                }
                                function c(e, t, n) {
                                    for(var i, s, o = [], a = t; a < n; a += 3)i = (e[a] << 16 & 16711680) + (e[a + 1] << 8 & 65280) + (255 & e[a + 2]), o.push(r[(s = i) >> 18 & 63] + r[s >> 12 & 63] + r[s >> 6 & 63] + r[63 & s]);
                                    return o.join("");
                                }
                                n["-".charCodeAt(0)] = 62, n["_".charCodeAt(0)] = 63;
                            },
                            1594: function(e, t, r) {
                                var n;
                                !function() {
                                    "use strict";
                                    var i, s = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, o = Math.ceil, a = Math.floor, c = "[BigNumber Error] ", h = c + "Number primitive has more than 15 significant digits: ", u = 1e14, d = 14, f = 9007199254740991, l = [
                                        1,
                                        10,
                                        100,
                                        1e3,
                                        1e4,
                                        1e5,
                                        1e6,
                                        1e7,
                                        1e8,
                                        1e9,
                                        1e10,
                                        1e11,
                                        1e12,
                                        1e13
                                    ], p = 1e7, b = 1e9;
                                    function g(e) {
                                        var t = 0 | e;
                                        return e > 0 || e === t ? t : t - 1;
                                    }
                                    function m(e) {
                                        for(var t, r, n = 1, i = e.length, s = e[0] + ""; n < i;){
                                            for(t = e[n++] + "", r = d - t.length; r--; t = "0" + t);
                                            s += t;
                                        }
                                        for(i = s.length; 48 === s.charCodeAt(--i););
                                        return s.slice(0, i + 1 || 1);
                                    }
                                    function y(e, t) {
                                        var r, n, i = e.c, s = t.c, o = e.s, a = t.s, c = e.e, h = t.e;
                                        if (!o || !a) return null;
                                        if (r = i && !i[0], n = s && !s[0], r || n) return r ? n ? 0 : -a : o;
                                        if (o != a) return o;
                                        if (r = o < 0, n = c == h, !i || !s) return n ? 0 : !i ^ r ? 1 : -1;
                                        if (!n) return c > h ^ r ? 1 : -1;
                                        for(a = (c = i.length) < (h = s.length) ? c : h, o = 0; o < a; o++)if (i[o] != s[o]) return i[o] > s[o] ^ r ? 1 : -1;
                                        return c == h ? 0 : c > h ^ r ? 1 : -1;
                                    }
                                    function v(e, t, r, n) {
                                        if (e < t || e > r || e !== a(e)) throw Error(c + (n || "Argument") + ("number" == typeof e ? e < t || e > r ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(e));
                                    }
                                    function w(e) {
                                        var t = e.c.length - 1;
                                        return g(e.e / d) == t && e.c[t] % 2 != 0;
                                    }
                                    function _(e, t) {
                                        return (e.length > 1 ? e.charAt(0) + "." + e.slice(1) : e) + (t < 0 ? "e" : "e+") + t;
                                    }
                                    function E(e, t, r) {
                                        var n, i;
                                        if (t < 0) {
                                            for(i = r + "."; ++t; i += r);
                                            e = i + e;
                                        } else if (++t > (n = e.length)) {
                                            for(i = r, t -= n; --t; i += r);
                                            e += i;
                                        } else t < n && (e = e.slice(0, t) + "." + e.slice(t));
                                        return e;
                                    }
                                    i = function e(t) {
                                        var r, n, i, S, A, M, I, T, x, C, R = V.prototype = {
                                            constructor: V,
                                            toString: null,
                                            valueOf: null
                                        }, k = new V(1), P = 20, O = 4, N = -7, U = 21, B = -1e7, L = 1e7, j = !1, D = 1, q = 0, F = {
                                            prefix: "",
                                            groupSize: 3,
                                            secondaryGroupSize: 0,
                                            groupSeparator: ",",
                                            decimalSeparator: ".",
                                            fractionGroupSize: 0,
                                            fractionGroupSeparator: " ",
                                            suffix: ""
                                        }, H = "0123456789abcdefghijklmnopqrstuvwxyz", z = !0;
                                        function V(e, t) {
                                            var r, o, c, u, l, p, b, g, m = this;
                                            if (!(m instanceof V)) return new V(e, t);
                                            if (null == t) {
                                                if (e && !0 === e._isBigNumber) return m.s = e.s, void (!e.c || e.e > L ? m.c = m.e = null : e.e < B ? m.c = [
                                                    m.e = 0
                                                ] : (m.e = e.e, m.c = e.c.slice()));
                                                if ((p = "number" == typeof e) && 0 * e == 0) {
                                                    if (m.s = 1 / e < 0 ? (e = -e, -1) : 1, e === ~~e) {
                                                        for(u = 0, l = e; l >= 10; l /= 10, u++);
                                                        return void (u > L ? m.c = m.e = null : (m.e = u, m.c = [
                                                            e
                                                        ]));
                                                    }
                                                    g = String(e);
                                                } else {
                                                    if (!s.test(g = String(e))) return i(m, g, p);
                                                    m.s = 45 == g.charCodeAt(0) ? (g = g.slice(1), -1) : 1;
                                                }
                                                (u = g.indexOf(".")) > -1 && (g = g.replace(".", "")), (l = g.search(/e/i)) > 0 ? (u < 0 && (u = l), u += +g.slice(l + 1), g = g.substring(0, l)) : u < 0 && (u = g.length);
                                            } else {
                                                if (v(t, 2, H.length, "Base"), 10 == t && z) return W(m = new V(e), P + m.e + 1, O);
                                                if (g = String(e), p = "number" == typeof e) {
                                                    if (0 * e != 0) return i(m, g, p, t);
                                                    if (m.s = 1 / e < 0 ? (g = g.slice(1), -1) : 1, V.DEBUG && g.replace(/^0\.0*|\./, "").length > 15) throw Error(h + e);
                                                } else m.s = 45 === g.charCodeAt(0) ? (g = g.slice(1), -1) : 1;
                                                for(r = H.slice(0, t), u = l = 0, b = g.length; l < b; l++)if (r.indexOf(o = g.charAt(l)) < 0) {
                                                    if ("." == o) {
                                                        if (l > u) {
                                                            u = b;
                                                            continue;
                                                        }
                                                    } else if (!c && (g == g.toUpperCase() && (g = g.toLowerCase()) || g == g.toLowerCase() && (g = g.toUpperCase()))) {
                                                        c = !0, l = -1, u = 0;
                                                        continue;
                                                    }
                                                    return i(m, String(e), p, t);
                                                }
                                                p = !1, (u = (g = n(g, t, 10, m.s)).indexOf(".")) > -1 ? g = g.replace(".", "") : u = g.length;
                                            }
                                            for(l = 0; 48 === g.charCodeAt(l); l++);
                                            for(b = g.length; 48 === g.charCodeAt(--b););
                                            if (g = g.slice(l, ++b)) {
                                                if (b -= l, p && V.DEBUG && b > 15 && (e > f || e !== a(e))) throw Error(h + m.s * e);
                                                if ((u = u - l - 1) > L) m.c = m.e = null;
                                                else if (u < B) m.c = [
                                                    m.e = 0
                                                ];
                                                else {
                                                    if (m.e = u, m.c = [], l = (u + 1) % d, u < 0 && (l += d), l < b) {
                                                        for(l && m.c.push(+g.slice(0, l)), b -= d; l < b;)m.c.push(+g.slice(l, l += d));
                                                        l = d - (g = g.slice(l)).length;
                                                    } else l -= b;
                                                    for(; l--; g += "0");
                                                    m.c.push(+g);
                                                }
                                            } else m.c = [
                                                m.e = 0
                                            ];
                                        }
                                        function $(e, t, r, n) {
                                            var i, s, o, a, c;
                                            if (null == r ? r = O : v(r, 0, 8), !e.c) return e.toString();
                                            if (i = e.c[0], o = e.e, null == t) c = m(e.c), c = 1 == n || 2 == n && (o <= N || o >= U) ? _(c, o) : E(c, o, "0");
                                            else if (s = (e = W(new V(e), t, r)).e, a = (c = m(e.c)).length, 1 == n || 2 == n && (t <= s || s <= N)) {
                                                for(; a < t; c += "0", a++);
                                                c = _(c, s);
                                            } else if (t -= o, c = E(c, s, "0"), s + 1 > a) {
                                                if (--t > 0) for(c += "."; t--; c += "0");
                                            } else if ((t += s - a) > 0) for(s + 1 == a && (c += "."); t--; c += "0");
                                            return e.s < 0 && i ? "-" + c : c;
                                        }
                                        function K(e, t) {
                                            for(var r, n = 1, i = new V(e[0]); n < e.length; n++){
                                                if (!(r = new V(e[n])).s) {
                                                    i = r;
                                                    break;
                                                }
                                                t.call(i, r) && (i = r);
                                            }
                                            return i;
                                        }
                                        function G(e, t, r) {
                                            for(var n = 1, i = t.length; !t[--i]; t.pop());
                                            for(i = t[0]; i >= 10; i /= 10, n++);
                                            return (r = n + r * d - 1) > L ? e.c = e.e = null : r < B ? e.c = [
                                                e.e = 0
                                            ] : (e.e = r, e.c = t), e;
                                        }
                                        function W(e, t, r, n) {
                                            var i, s, c, h, f, p, b, g = e.c, m = l;
                                            if (g) {
                                                e: {
                                                    for(i = 1, h = g[0]; h >= 10; h /= 10, i++);
                                                    if ((s = t - i) < 0) s += d, c = t, b = (f = g[p = 0]) / m[i - c - 1] % 10 | 0;
                                                    else if ((p = o((s + 1) / d)) >= g.length) {
                                                        if (!n) break e;
                                                        for(; g.length <= p; g.push(0));
                                                        f = b = 0, i = 1, c = (s %= d) - d + 1;
                                                    } else {
                                                        for(f = h = g[p], i = 1; h >= 10; h /= 10, i++);
                                                        b = (c = (s %= d) - d + i) < 0 ? 0 : f / m[i - c - 1] % 10 | 0;
                                                    }
                                                    if (n = n || t < 0 || null != g[p + 1] || (c < 0 ? f : f % m[i - c - 1]), n = r < 4 ? (b || n) && (0 == r || r == (e.s < 0 ? 3 : 2)) : b > 5 || 5 == b && (4 == r || n || 6 == r && (s > 0 ? c > 0 ? f / m[i - c] : 0 : g[p - 1]) % 10 & 1 || r == (e.s < 0 ? 8 : 7)), t < 1 || !g[0]) return g.length = 0, n ? (t -= e.e + 1, g[0] = m[(d - t % d) % d], e.e = -t || 0) : g[0] = e.e = 0, e;
                                                    if (0 == s ? (g.length = p, h = 1, p--) : (g.length = p + 1, h = m[d - s], g[p] = c > 0 ? a(f / m[i - c] % m[c]) * h : 0), n) for(;;){
                                                        if (0 == p) {
                                                            for(s = 1, c = g[0]; c >= 10; c /= 10, s++);
                                                            for(c = g[0] += h, h = 1; c >= 10; c /= 10, h++);
                                                            s != h && (e.e++, g[0] == u && (g[0] = 1));
                                                            break;
                                                        }
                                                        if (g[p] += h, g[p] != u) break;
                                                        g[p--] = 0, h = 1;
                                                    }
                                                    for(s = g.length; 0 === g[--s]; g.pop());
                                                }
                                                e.e > L ? e.c = e.e = null : e.e < B && (e.c = [
                                                    e.e = 0
                                                ]);
                                            }
                                            return e;
                                        }
                                        function J(e) {
                                            var t, r = e.e;
                                            return null === r ? e.toString() : (t = m(e.c), t = r <= N || r >= U ? _(t, r) : E(t, r, "0"), e.s < 0 ? "-" + t : t);
                                        }
                                        return V.clone = e, V.ROUND_UP = 0, V.ROUND_DOWN = 1, V.ROUND_CEIL = 2, V.ROUND_FLOOR = 3, V.ROUND_HALF_UP = 4, V.ROUND_HALF_DOWN = 5, V.ROUND_HALF_EVEN = 6, V.ROUND_HALF_CEIL = 7, V.ROUND_HALF_FLOOR = 8, V.EUCLID = 9, V.config = V.set = function(e) {
                                            var t, r;
                                            if (null != e) {
                                                if ("object" != typeof e) throw Error(c + "Object expected: " + e);
                                                if (e.hasOwnProperty(t = "DECIMAL_PLACES") && (v(r = e[t], 0, b, t), P = r), e.hasOwnProperty(t = "ROUNDING_MODE") && (v(r = e[t], 0, 8, t), O = r), e.hasOwnProperty(t = "EXPONENTIAL_AT") && ((r = e[t]) && r.pop ? (v(r[0], -b, 0, t), v(r[1], 0, b, t), N = r[0], U = r[1]) : (v(r, -b, b, t), N = -(U = r < 0 ? -r : r))), e.hasOwnProperty(t = "RANGE")) if ((r = e[t]) && r.pop) v(r[0], -b, -1, t), v(r[1], 1, b, t), B = r[0], L = r[1];
                                                else {
                                                    if (v(r, -b, b, t), !r) throw Error(c + t + " cannot be zero: " + r);
                                                    B = -(L = r < 0 ? -r : r);
                                                }
                                                if (e.hasOwnProperty(t = "CRYPTO")) {
                                                    if ((r = e[t]) !== !!r) throw Error(c + t + " not true or false: " + r);
                                                    if (r) {
                                                        if ("undefined" == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw j = !r, Error(c + "crypto unavailable");
                                                        j = r;
                                                    } else j = r;
                                                }
                                                if (e.hasOwnProperty(t = "MODULO_MODE") && (v(r = e[t], 0, 9, t), D = r), e.hasOwnProperty(t = "POW_PRECISION") && (v(r = e[t], 0, b, t), q = r), e.hasOwnProperty(t = "FORMAT")) {
                                                    if ("object" != typeof (r = e[t])) throw Error(c + t + " not an object: " + r);
                                                    F = r;
                                                }
                                                if (e.hasOwnProperty(t = "ALPHABET")) {
                                                    if ("string" != typeof (r = e[t]) || /^.?$|[+\-.\s]|(.).*\1/.test(r)) throw Error(c + t + " invalid: " + r);
                                                    z = "0123456789" == r.slice(0, 10), H = r;
                                                }
                                            }
                                            return {
                                                DECIMAL_PLACES: P,
                                                ROUNDING_MODE: O,
                                                EXPONENTIAL_AT: [
                                                    N,
                                                    U
                                                ],
                                                RANGE: [
                                                    B,
                                                    L
                                                ],
                                                CRYPTO: j,
                                                MODULO_MODE: D,
                                                POW_PRECISION: q,
                                                FORMAT: F,
                                                ALPHABET: H
                                            };
                                        }, V.isBigNumber = function(e) {
                                            if (!e || !0 !== e._isBigNumber) return !1;
                                            if (!V.DEBUG) return !0;
                                            var t, r, n = e.c, i = e.e, s = e.s;
                                            e: if ("[object Array]" == ({}).toString.call(n)) {
                                                if ((1 === s || -1 === s) && i >= -b && i <= b && i === a(i)) {
                                                    if (0 === n[0]) {
                                                        if (0 === i && 1 === n.length) return !0;
                                                        break e;
                                                    }
                                                    if ((t = (i + 1) % d) < 1 && (t += d), String(n[0]).length == t) {
                                                        for(t = 0; t < n.length; t++)if ((r = n[t]) < 0 || r >= u || r !== a(r)) break e;
                                                        if (0 !== r) return !0;
                                                    }
                                                }
                                            } else if (null === n && null === i && (null === s || 1 === s || -1 === s)) return !0;
                                            throw Error(c + "Invalid BigNumber: " + e);
                                        }, V.maximum = V.max = function() {
                                            return K(arguments, R.lt);
                                        }, V.minimum = V.min = function() {
                                            return K(arguments, R.gt);
                                        }, V.random = (S = 9007199254740992, A = Math.random() * S & 2097151 ? function() {
                                            return a(Math.random() * S);
                                        } : function() {
                                            return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0);
                                        }, function(e) {
                                            var t, r, n, i, s, h = 0, u = [], f = new V(k);
                                            if (null == e ? e = P : v(e, 0, b), i = o(e / d), j) if (crypto.getRandomValues) {
                                                for(t = crypto.getRandomValues(new Uint32Array(i *= 2)); h < i;)(s = 131072 * t[h] + (t[h + 1] >>> 11)) >= 9e15 ? (r = crypto.getRandomValues(new Uint32Array(2)), t[h] = r[0], t[h + 1] = r[1]) : (u.push(s % 1e14), h += 2);
                                                h = i / 2;
                                            } else {
                                                if (!crypto.randomBytes) throw j = !1, Error(c + "crypto unavailable");
                                                for(t = crypto.randomBytes(i *= 7); h < i;)(s = 281474976710656 * (31 & t[h]) + 1099511627776 * t[h + 1] + 4294967296 * t[h + 2] + 16777216 * t[h + 3] + (t[h + 4] << 16) + (t[h + 5] << 8) + t[h + 6]) >= 9e15 ? crypto.randomBytes(7).copy(t, h) : (u.push(s % 1e14), h += 7);
                                                h = i / 7;
                                            }
                                            if (!j) for(; h < i;)(s = A()) < 9e15 && (u[h++] = s % 1e14);
                                            for(i = u[--h], e %= d, i && e && (s = l[d - e], u[h] = a(i / s) * s); 0 === u[h]; u.pop(), h--);
                                            if (h < 0) u = [
                                                n = 0
                                            ];
                                            else {
                                                for(n = -1; 0 === u[0]; u.splice(0, 1), n -= d);
                                                for(h = 1, s = u[0]; s >= 10; s /= 10, h++);
                                                h < d && (n -= d - h);
                                            }
                                            return f.e = n, f.c = u, f;
                                        }), V.sum = function() {
                                            for(var e = 1, t = arguments, r = new V(t[0]); e < t.length;)r = r.plus(t[e++]);
                                            return r;
                                        }, n = function() {
                                            var e = "0123456789";
                                            function t(e, t, r, n) {
                                                for(var i, s, o = [
                                                    0
                                                ], a = 0, c = e.length; a < c;){
                                                    for(s = o.length; s--; o[s] *= t);
                                                    for(o[0] += n.indexOf(e.charAt(a++)), i = 0; i < o.length; i++)o[i] > r - 1 && (null == o[i + 1] && (o[i + 1] = 0), o[i + 1] += o[i] / r | 0, o[i] %= r);
                                                }
                                                return o.reverse();
                                            }
                                            return function(n, i, s, o, a) {
                                                var c, h, u, d, f, l, p, b, g = n.indexOf("."), y = P, v = O;
                                                for(g >= 0 && (d = q, q = 0, n = n.replace(".", ""), l = (b = new V(i)).pow(n.length - g), q = d, b.c = t(E(m(l.c), l.e, "0"), 10, s, e), b.e = b.c.length), u = d = (p = t(n, i, s, a ? (c = H, e) : (c = e, H))).length; 0 == p[--d]; p.pop());
                                                if (!p[0]) return c.charAt(0);
                                                if (g < 0 ? --u : (l.c = p, l.e = u, l.s = o, p = (l = r(l, b, y, v, s)).c, f = l.r, u = l.e), g = p[h = u + y + 1], d = s / 2, f = f || h < 0 || null != p[h + 1], f = v < 4 ? (null != g || f) && (0 == v || v == (l.s < 0 ? 3 : 2)) : g > d || g == d && (4 == v || f || 6 == v && 1 & p[h - 1] || v == (l.s < 0 ? 8 : 7)), h < 1 || !p[0]) n = f ? E(c.charAt(1), -y, c.charAt(0)) : c.charAt(0);
                                                else {
                                                    if (p.length = h, f) for(--s; ++p[--h] > s;)p[h] = 0, h || (++u, p = [
                                                        1
                                                    ].concat(p));
                                                    for(d = p.length; !p[--d];);
                                                    for(g = 0, n = ""; g <= d; n += c.charAt(p[g++]));
                                                    n = E(n, u, c.charAt(0));
                                                }
                                                return n;
                                            };
                                        }(), r = function() {
                                            function e(e, t, r) {
                                                var n, i, s, o, a = 0, c = e.length, h = t % p, u = t / p | 0;
                                                for(e = e.slice(); c--;)a = ((i = h * (s = e[c] % p) + (n = u * s + (o = e[c] / p | 0) * h) % p * p + a) / r | 0) + (n / p | 0) + u * o, e[c] = i % r;
                                                return a && (e = [
                                                    a
                                                ].concat(e)), e;
                                            }
                                            function t(e, t, r, n) {
                                                var i, s;
                                                if (r != n) s = r > n ? 1 : -1;
                                                else for(i = s = 0; i < r; i++)if (e[i] != t[i]) {
                                                    s = e[i] > t[i] ? 1 : -1;
                                                    break;
                                                }
                                                return s;
                                            }
                                            function r(e, t, r, n) {
                                                for(var i = 0; r--;)e[r] -= i, i = e[r] < t[r] ? 1 : 0, e[r] = i * n + e[r] - t[r];
                                                for(; !e[0] && e.length > 1; e.splice(0, 1));
                                            }
                                            return function(n, i, s, o, c) {
                                                var h, f, l, p, b, m, y, v, w, _, E, S, A, M, I, T, x, C = n.s == i.s ? 1 : -1, R = n.c, k = i.c;
                                                if (!(R && R[0] && k && k[0])) return new V(n.s && i.s && (R ? !k || R[0] != k[0] : k) ? R && 0 == R[0] || !k ? 0 * C : C / 0 : NaN);
                                                for(w = (v = new V(C)).c = [], C = s + (f = n.e - i.e) + 1, c || (c = u, f = g(n.e / d) - g(i.e / d), C = C / d | 0), l = 0; k[l] == (R[l] || 0); l++);
                                                if (k[l] > (R[l] || 0) && f--, C < 0) w.push(1), p = !0;
                                                else {
                                                    for(M = R.length, T = k.length, l = 0, C += 2, (b = a(c / (k[0] + 1))) > 1 && (k = e(k, b, c), R = e(R, b, c), T = k.length, M = R.length), A = T, E = (_ = R.slice(0, T)).length; E < T; _[E++] = 0);
                                                    x = k.slice(), x = [
                                                        0
                                                    ].concat(x), I = k[0], k[1] >= c / 2 && I++;
                                                    do {
                                                        if (b = 0, (h = t(k, _, T, E)) < 0) {
                                                            if (S = _[0], T != E && (S = S * c + (_[1] || 0)), (b = a(S / I)) > 1) for(b >= c && (b = c - 1), y = (m = e(k, b, c)).length, E = _.length; 1 == t(m, _, y, E);)b--, r(m, T < y ? x : k, y, c), y = m.length, h = 1;
                                                            else 0 == b && (h = b = 1), y = (m = k.slice()).length;
                                                            if (y < E && (m = [
                                                                0
                                                            ].concat(m)), r(_, m, E, c), E = _.length, -1 == h) for(; t(k, _, T, E) < 1;)b++, r(_, T < E ? x : k, E, c), E = _.length;
                                                        } else 0 === h && (b++, _ = [
                                                            0
                                                        ]);
                                                        w[l++] = b, _[0] ? _[E++] = R[A] || 0 : (_ = [
                                                            R[A]
                                                        ], E = 1);
                                                    }while ((A++ < M || null != _[0]) && C--)
                                                    p = null != _[0], w[0] || w.splice(0, 1);
                                                }
                                                if (c == u) {
                                                    for(l = 1, C = w[0]; C >= 10; C /= 10, l++);
                                                    W(v, s + (v.e = l + f * d - 1) + 1, o, p);
                                                } else v.e = f, v.r = +p;
                                                return v;
                                            };
                                        }(), M = /^(-?)0([xbo])(?=\w[\w.]*$)/i, I = /^([^.]+)\.$/, T = /^\.([^.]+)$/, x = /^-?(Infinity|NaN)$/, C = /^\s*\+(?=[\w.])|^\s+|\s+$/g, i = function(e, t, r, n) {
                                            var i, s = r ? t : t.replace(C, "");
                                            if (x.test(s)) e.s = isNaN(s) ? null : s < 0 ? -1 : 1;
                                            else {
                                                if (!r && (s = s.replace(M, function(e, t, r) {
                                                    return i = "x" == (r = r.toLowerCase()) ? 16 : "b" == r ? 2 : 8, n && n != i ? e : t;
                                                }), n && (i = n, s = s.replace(I, "$1").replace(T, "0.$1")), t != s)) return new V(s, i);
                                                if (V.DEBUG) throw Error(c + "Not a" + (n ? " base " + n : "") + " number: " + t);
                                                e.s = null;
                                            }
                                            e.c = e.e = null;
                                        }, R.absoluteValue = R.abs = function() {
                                            var e = new V(this);
                                            return e.s < 0 && (e.s = 1), e;
                                        }, R.comparedTo = function(e, t) {
                                            return y(this, new V(e, t));
                                        }, R.decimalPlaces = R.dp = function(e, t) {
                                            var r, n, i, s = this;
                                            if (null != e) return v(e, 0, b), null == t ? t = O : v(t, 0, 8), W(new V(s), e + s.e + 1, t);
                                            if (!(r = s.c)) return null;
                                            if (n = ((i = r.length - 1) - g(this.e / d)) * d, i = r[i]) for(; i % 10 == 0; i /= 10, n--);
                                            return n < 0 && (n = 0), n;
                                        }, R.dividedBy = R.div = function(e, t) {
                                            return r(this, new V(e, t), P, O);
                                        }, R.dividedToIntegerBy = R.idiv = function(e, t) {
                                            return r(this, new V(e, t), 0, 1);
                                        }, R.exponentiatedBy = R.pow = function(e, t) {
                                            var r, n, i, s, h, u, f, l, p = this;
                                            if ((e = new V(e)).c && !e.isInteger()) throw Error(c + "Exponent not an integer: " + J(e));
                                            if (null != t && (t = new V(t)), h = e.e > 14, !p.c || !p.c[0] || 1 == p.c[0] && !p.e && 1 == p.c.length || !e.c || !e.c[0]) return l = new V(Math.pow(+J(p), h ? e.s * (2 - w(e)) : +J(e))), t ? l.mod(t) : l;
                                            if (u = e.s < 0, t) {
                                                if (t.c ? !t.c[0] : !t.s) return new V(NaN);
                                                (n = !u && p.isInteger() && t.isInteger()) && (p = p.mod(t));
                                            } else {
                                                if (e.e > 9 && (p.e > 0 || p.e < -1 || (0 == p.e ? p.c[0] > 1 || h && p.c[1] >= 24e7 : p.c[0] < 8e13 || h && p.c[0] <= 9999975e7))) return s = p.s < 0 && w(e) ? -0 : 0, p.e > -1 && (s = 1 / s), new V(u ? 1 / s : s);
                                                q && (s = o(q / d + 2));
                                            }
                                            for(h ? (r = new V(.5), u && (e.s = 1), f = w(e)) : f = (i = Math.abs(+J(e))) % 2, l = new V(k);;){
                                                if (f) {
                                                    if (!(l = l.times(p)).c) break;
                                                    s ? l.c.length > s && (l.c.length = s) : n && (l = l.mod(t));
                                                }
                                                if (i) {
                                                    if (0 === (i = a(i / 2))) break;
                                                    f = i % 2;
                                                } else if (W(e = e.times(r), e.e + 1, 1), e.e > 14) f = w(e);
                                                else {
                                                    if (0 == (i = +J(e))) break;
                                                    f = i % 2;
                                                }
                                                p = p.times(p), s ? p.c && p.c.length > s && (p.c.length = s) : n && (p = p.mod(t));
                                            }
                                            return n ? l : (u && (l = k.div(l)), t ? l.mod(t) : s ? W(l, q, O, void 0) : l);
                                        }, R.integerValue = function(e) {
                                            var t = new V(this);
                                            return null == e ? e = O : v(e, 0, 8), W(t, t.e + 1, e);
                                        }, R.isEqualTo = R.eq = function(e, t) {
                                            return 0 === y(this, new V(e, t));
                                        }, R.isFinite = function() {
                                            return !!this.c;
                                        }, R.isGreaterThan = R.gt = function(e, t) {
                                            return y(this, new V(e, t)) > 0;
                                        }, R.isGreaterThanOrEqualTo = R.gte = function(e, t) {
                                            return 1 === (t = y(this, new V(e, t))) || 0 === t;
                                        }, R.isInteger = function() {
                                            return !!this.c && g(this.e / d) > this.c.length - 2;
                                        }, R.isLessThan = R.lt = function(e, t) {
                                            return y(this, new V(e, t)) < 0;
                                        }, R.isLessThanOrEqualTo = R.lte = function(e, t) {
                                            return -1 === (t = y(this, new V(e, t))) || 0 === t;
                                        }, R.isNaN = function() {
                                            return !this.s;
                                        }, R.isNegative = function() {
                                            return this.s < 0;
                                        }, R.isPositive = function() {
                                            return this.s > 0;
                                        }, R.isZero = function() {
                                            return !!this.c && 0 == this.c[0];
                                        }, R.minus = function(e, t) {
                                            var r, n, i, s, o = this, a = o.s;
                                            if (t = (e = new V(e, t)).s, !a || !t) return new V(NaN);
                                            if (a != t) return e.s = -t, o.plus(e);
                                            var c = o.e / d, h = e.e / d, f = o.c, l = e.c;
                                            if (!c || !h) {
                                                if (!f || !l) return f ? (e.s = -t, e) : new V(l ? o : NaN);
                                                if (!f[0] || !l[0]) return l[0] ? (e.s = -t, e) : new V(f[0] ? o : 3 == O ? -0 : 0);
                                            }
                                            if (c = g(c), h = g(h), f = f.slice(), a = c - h) {
                                                for((s = a < 0) ? (a = -a, i = f) : (h = c, i = l), i.reverse(), t = a; t--; i.push(0));
                                                i.reverse();
                                            } else for(n = (s = (a = f.length) < (t = l.length)) ? a : t, a = t = 0; t < n; t++)if (f[t] != l[t]) {
                                                s = f[t] < l[t];
                                                break;
                                            }
                                            if (s && (i = f, f = l, l = i, e.s = -e.s), (t = (n = l.length) - (r = f.length)) > 0) for(; t--; f[r++] = 0);
                                            for(t = u - 1; n > a;){
                                                if (f[--n] < l[n]) {
                                                    for(r = n; r && !f[--r]; f[r] = t);
                                                    --f[r], f[n] += u;
                                                }
                                                f[n] -= l[n];
                                            }
                                            for(; 0 == f[0]; f.splice(0, 1), --h);
                                            return f[0] ? G(e, f, h) : (e.s = 3 == O ? -1 : 1, e.c = [
                                                e.e = 0
                                            ], e);
                                        }, R.modulo = R.mod = function(e, t) {
                                            var n, i, s = this;
                                            return e = new V(e, t), !s.c || !e.s || e.c && !e.c[0] ? new V(NaN) : !e.c || s.c && !s.c[0] ? new V(s) : (9 == D ? (i = e.s, e.s = 1, n = r(s, e, 0, 3), e.s = i, n.s *= i) : n = r(s, e, 0, D), (e = s.minus(n.times(e))).c[0] || 1 != D || (e.s = s.s), e);
                                        }, R.multipliedBy = R.times = function(e, t) {
                                            var r, n, i, s, o, a, c, h, f, l, b, m, y, v, w, _ = this, E = _.c, S = (e = new V(e, t)).c;
                                            if (!(E && S && E[0] && S[0])) return !_.s || !e.s || E && !E[0] && !S || S && !S[0] && !E ? e.c = e.e = e.s = null : (e.s *= _.s, E && S ? (e.c = [
                                                0
                                            ], e.e = 0) : e.c = e.e = null), e;
                                            for(n = g(_.e / d) + g(e.e / d), e.s *= _.s, (c = E.length) < (l = S.length) && (y = E, E = S, S = y, i = c, c = l, l = i), i = c + l, y = []; i--; y.push(0));
                                            for(v = u, w = p, i = l; --i >= 0;){
                                                for(r = 0, b = S[i] % w, m = S[i] / w | 0, s = i + (o = c); s > i;)r = ((h = b * (h = E[--o] % w) + (a = m * h + (f = E[o] / w | 0) * b) % w * w + y[s] + r) / v | 0) + (a / w | 0) + m * f, y[s--] = h % v;
                                                y[s] = r;
                                            }
                                            return r ? ++n : y.splice(0, 1), G(e, y, n);
                                        }, R.negated = function() {
                                            var e = new V(this);
                                            return e.s = -e.s || null, e;
                                        }, R.plus = function(e, t) {
                                            var r, n = this, i = n.s;
                                            if (t = (e = new V(e, t)).s, !i || !t) return new V(NaN);
                                            if (i != t) return e.s = -t, n.minus(e);
                                            var s = n.e / d, o = e.e / d, a = n.c, c = e.c;
                                            if (!s || !o) {
                                                if (!a || !c) return new V(i / 0);
                                                if (!a[0] || !c[0]) return c[0] ? e : new V(a[0] ? n : 0 * i);
                                            }
                                            if (s = g(s), o = g(o), a = a.slice(), i = s - o) {
                                                for(i > 0 ? (o = s, r = c) : (i = -i, r = a), r.reverse(); i--; r.push(0));
                                                r.reverse();
                                            }
                                            for((i = a.length) - (t = c.length) < 0 && (r = c, c = a, a = r, t = i), i = 0; t;)i = (a[--t] = a[t] + c[t] + i) / u | 0, a[t] = u === a[t] ? 0 : a[t] % u;
                                            return i && (a = [
                                                i
                                            ].concat(a), ++o), G(e, a, o);
                                        }, R.precision = R.sd = function(e, t) {
                                            var r, n, i, s = this;
                                            if (null != e && e !== !!e) return v(e, 1, b), null == t ? t = O : v(t, 0, 8), W(new V(s), e, t);
                                            if (!(r = s.c)) return null;
                                            if (n = (i = r.length - 1) * d + 1, i = r[i]) {
                                                for(; i % 10 == 0; i /= 10, n--);
                                                for(i = r[0]; i >= 10; i /= 10, n++);
                                            }
                                            return e && s.e + 1 > n && (n = s.e + 1), n;
                                        }, R.shiftedBy = function(e) {
                                            return v(e, -9007199254740991, f), this.times("1e" + e);
                                        }, R.squareRoot = R.sqrt = function() {
                                            var e, t, n, i, s, o = this, a = o.c, c = o.s, h = o.e, u = P + 4, d = new V("0.5");
                                            if (1 !== c || !a || !a[0]) return new V(!c || c < 0 && (!a || a[0]) ? NaN : a ? o : 1 / 0);
                                            if (0 == (c = Math.sqrt(+J(o))) || c == 1 / 0 ? (((t = m(a)).length + h) % 2 == 0 && (t += "0"), c = Math.sqrt(+t), h = g((h + 1) / 2) - (h < 0 || h % 2), n = new V(t = c == 1 / 0 ? "5e" + h : (t = c.toExponential()).slice(0, t.indexOf("e") + 1) + h)) : n = new V(c + ""), n.c[0]) {
                                                for((c = (h = n.e) + u) < 3 && (c = 0);;)if (s = n, n = d.times(s.plus(r(o, s, u, 1))), m(s.c).slice(0, c) === (t = m(n.c)).slice(0, c)) {
                                                    if (n.e < h && --c, "9999" != (t = t.slice(c - 3, c + 1)) && (i || "4999" != t)) {
                                                        +t && (+t.slice(1) || "5" != t.charAt(0)) || (W(n, n.e + P + 2, 1), e = !n.times(n).eq(o));
                                                        break;
                                                    }
                                                    if (!i && (W(s, s.e + P + 2, 0), s.times(s).eq(o))) {
                                                        n = s;
                                                        break;
                                                    }
                                                    u += 4, c += 4, i = 1;
                                                }
                                            }
                                            return W(n, n.e + P + 1, O, e);
                                        }, R.toExponential = function(e, t) {
                                            return null != e && (v(e, 0, b), e++), $(this, e, t, 1);
                                        }, R.toFixed = function(e, t) {
                                            return null != e && (v(e, 0, b), e = e + this.e + 1), $(this, e, t);
                                        }, R.toFormat = function(e, t, r) {
                                            var n, i = this;
                                            if (null == r) null != e && t && "object" == typeof t ? (r = t, t = null) : e && "object" == typeof e ? (r = e, e = t = null) : r = F;
                                            else if ("object" != typeof r) throw Error(c + "Argument not an object: " + r);
                                            if (n = i.toFixed(e, t), i.c) {
                                                var s, o = n.split("."), a = +r.groupSize, h = +r.secondaryGroupSize, u = r.groupSeparator || "", d = o[0], f = o[1], l = i.s < 0, p = l ? d.slice(1) : d, b = p.length;
                                                if (h && (s = a, a = h, h = s, b -= s), a > 0 && b > 0) {
                                                    for(s = b % a || a, d = p.substr(0, s); s < b; s += a)d += u + p.substr(s, a);
                                                    h > 0 && (d += u + p.slice(s)), l && (d = "-" + d);
                                                }
                                                n = f ? d + (r.decimalSeparator || "") + ((h = +r.fractionGroupSize) ? f.replace(new RegExp("\\d{" + h + "}\\B", "g"), "$&" + (r.fractionGroupSeparator || "")) : f) : d;
                                            }
                                            return (r.prefix || "") + n + (r.suffix || "");
                                        }, R.toFraction = function(e) {
                                            var t, n, i, s, o, a, h, u, f, p, b, g, y = this, v = y.c;
                                            if (null != e && (!(h = new V(e)).isInteger() && (h.c || 1 !== h.s) || h.lt(k))) throw Error(c + "Argument " + (h.isInteger() ? "out of range: " : "not an integer: ") + J(h));
                                            if (!v) return new V(y);
                                            for(t = new V(k), f = n = new V(k), i = u = new V(k), g = m(v), o = t.e = g.length - y.e - 1, t.c[0] = l[(a = o % d) < 0 ? d + a : a], e = !e || h.comparedTo(t) > 0 ? o > 0 ? t : f : h, a = L, L = 1 / 0, h = new V(g), u.c[0] = 0; p = r(h, t, 0, 1), 1 != (s = n.plus(p.times(i))).comparedTo(e);)n = i, i = s, f = u.plus(p.times(s = f)), u = s, t = h.minus(p.times(s = t)), h = s;
                                            return s = r(e.minus(n), i, 0, 1), u = u.plus(s.times(f)), n = n.plus(s.times(i)), u.s = f.s = y.s, b = r(f, i, o *= 2, O).minus(y).abs().comparedTo(r(u, n, o, O).minus(y).abs()) < 1 ? [
                                                f,
                                                i
                                            ] : [
                                                u,
                                                n
                                            ], L = a, b;
                                        }, R.toNumber = function() {
                                            return +J(this);
                                        }, R.toPrecision = function(e, t) {
                                            return null != e && v(e, 1, b), $(this, e, t, 2);
                                        }, R.toString = function(e) {
                                            var t, r = this, i = r.s, s = r.e;
                                            return null === s ? i ? (t = "Infinity", i < 0 && (t = "-" + t)) : t = "NaN" : (null == e ? t = s <= N || s >= U ? _(m(r.c), s) : E(m(r.c), s, "0") : 10 === e && z ? t = E(m((r = W(new V(r), P + s + 1, O)).c), r.e, "0") : (v(e, 2, H.length, "Base"), t = n(E(m(r.c), s, "0"), 10, e, i, !0)), i < 0 && r.c[0] && (t = "-" + t)), t;
                                        }, R.valueOf = R.toJSON = function() {
                                            return J(this);
                                        }, R._isBigNumber = !0, null != t && V.set(t), V;
                                    }(), i.default = i.BigNumber = i, void 0 === (n = (function() {
                                        return i;
                                    }).call(t, r, t, e)) || (e.exports = n);
                                }();
                            },
                            8681: (e, t, r)=>{
                                const n = r(1878);
                                function i(e, t, r) {
                                    const n = e[t] + e[r];
                                    let i = e[t + 1] + e[r + 1];
                                    n >= 4294967296 && i++, e[t] = n, e[t + 1] = i;
                                }
                                function s(e, t, r, n) {
                                    let i = e[t] + r;
                                    r < 0 && (i += 4294967296);
                                    let s = e[t + 1] + n;
                                    i >= 4294967296 && s++, e[t] = i, e[t + 1] = s;
                                }
                                function o(e, t) {
                                    return e[t] ^ e[t + 1] << 8 ^ e[t + 2] << 16 ^ e[t + 3] << 24;
                                }
                                function a(e, t, r, n, o, a) {
                                    const c = d[o], h = d[o + 1], f = d[a], l = d[a + 1];
                                    i(u, e, t), s(u, e, c, h);
                                    let p = u[n] ^ u[e], b = u[n + 1] ^ u[e + 1];
                                    u[n] = b, u[n + 1] = p, i(u, r, n), p = u[t] ^ u[r], b = u[t + 1] ^ u[r + 1], u[t] = p >>> 24 ^ b << 8, u[t + 1] = b >>> 24 ^ p << 8, i(u, e, t), s(u, e, f, l), p = u[n] ^ u[e], b = u[n + 1] ^ u[e + 1], u[n] = p >>> 16 ^ b << 16, u[n + 1] = b >>> 16 ^ p << 16, i(u, r, n), p = u[t] ^ u[r], b = u[t + 1] ^ u[r + 1], u[t] = b >>> 31 ^ p << 1, u[t + 1] = p >>> 31 ^ b << 1;
                                }
                                const c = new Uint32Array([
                                    4089235720,
                                    1779033703,
                                    2227873595,
                                    3144134277,
                                    4271175723,
                                    1013904242,
                                    1595750129,
                                    2773480762,
                                    2917565137,
                                    1359893119,
                                    725511199,
                                    2600822924,
                                    4215389547,
                                    528734635,
                                    327033209,
                                    1541459225
                                ]), h = new Uint8Array([
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9,
                                    10,
                                    11,
                                    12,
                                    13,
                                    14,
                                    15,
                                    14,
                                    10,
                                    4,
                                    8,
                                    9,
                                    15,
                                    13,
                                    6,
                                    1,
                                    12,
                                    0,
                                    2,
                                    11,
                                    7,
                                    5,
                                    3,
                                    11,
                                    8,
                                    12,
                                    0,
                                    5,
                                    2,
                                    15,
                                    13,
                                    10,
                                    14,
                                    3,
                                    6,
                                    7,
                                    1,
                                    9,
                                    4,
                                    7,
                                    9,
                                    3,
                                    1,
                                    13,
                                    12,
                                    11,
                                    14,
                                    2,
                                    6,
                                    5,
                                    10,
                                    4,
                                    0,
                                    15,
                                    8,
                                    9,
                                    0,
                                    5,
                                    7,
                                    2,
                                    4,
                                    10,
                                    15,
                                    14,
                                    1,
                                    11,
                                    12,
                                    6,
                                    8,
                                    3,
                                    13,
                                    2,
                                    12,
                                    6,
                                    10,
                                    0,
                                    11,
                                    8,
                                    3,
                                    4,
                                    13,
                                    7,
                                    5,
                                    15,
                                    14,
                                    1,
                                    9,
                                    12,
                                    5,
                                    1,
                                    15,
                                    14,
                                    13,
                                    4,
                                    10,
                                    0,
                                    7,
                                    6,
                                    3,
                                    9,
                                    2,
                                    8,
                                    11,
                                    13,
                                    11,
                                    7,
                                    14,
                                    12,
                                    1,
                                    3,
                                    9,
                                    5,
                                    0,
                                    15,
                                    4,
                                    8,
                                    6,
                                    2,
                                    10,
                                    6,
                                    15,
                                    14,
                                    9,
                                    11,
                                    3,
                                    0,
                                    8,
                                    12,
                                    2,
                                    13,
                                    7,
                                    1,
                                    4,
                                    10,
                                    5,
                                    10,
                                    2,
                                    8,
                                    4,
                                    7,
                                    6,
                                    1,
                                    5,
                                    15,
                                    11,
                                    9,
                                    14,
                                    3,
                                    12,
                                    13,
                                    0,
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9,
                                    10,
                                    11,
                                    12,
                                    13,
                                    14,
                                    15,
                                    14,
                                    10,
                                    4,
                                    8,
                                    9,
                                    15,
                                    13,
                                    6,
                                    1,
                                    12,
                                    0,
                                    2,
                                    11,
                                    7,
                                    5,
                                    3
                                ].map(function(e) {
                                    return 2 * e;
                                })), u = new Uint32Array(32), d = new Uint32Array(32);
                                function f(e, t) {
                                    let r = 0;
                                    for(r = 0; r < 16; r++)u[r] = e.h[r], u[r + 16] = c[r];
                                    for(u[24] = u[24] ^ e.t, u[25] = u[25] ^ e.t / 4294967296, t && (u[28] = ~u[28], u[29] = ~u[29]), r = 0; r < 32; r++)d[r] = o(e.b, 4 * r);
                                    for(r = 0; r < 12; r++)a(0, 8, 16, 24, h[16 * r + 0], h[16 * r + 1]), a(2, 10, 18, 26, h[16 * r + 2], h[16 * r + 3]), a(4, 12, 20, 28, h[16 * r + 4], h[16 * r + 5]), a(6, 14, 22, 30, h[16 * r + 6], h[16 * r + 7]), a(0, 10, 20, 30, h[16 * r + 8], h[16 * r + 9]), a(2, 12, 22, 24, h[16 * r + 10], h[16 * r + 11]), a(4, 14, 16, 26, h[16 * r + 12], h[16 * r + 13]), a(6, 8, 18, 28, h[16 * r + 14], h[16 * r + 15]);
                                    for(r = 0; r < 16; r++)e.h[r] = e.h[r] ^ u[r] ^ u[r + 16];
                                }
                                const l = new Uint8Array([
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0
                                ]);
                                function p(e, t, r, n) {
                                    if (0 === e || e > 64) throw new Error("Illegal output length, expected 0 < length <= 64");
                                    if (t && t.length > 64) throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");
                                    if (r && 16 !== r.length) throw new Error("Illegal salt, expected Uint8Array with length is 16");
                                    if (n && 16 !== n.length) throw new Error("Illegal personal, expected Uint8Array with length is 16");
                                    const i = {
                                        b: new Uint8Array(128),
                                        h: new Uint32Array(16),
                                        t: 0,
                                        c: 0,
                                        outlen: e
                                    };
                                    l.fill(0), l[0] = e, t && (l[1] = t.length), l[2] = 1, l[3] = 1, r && l.set(r, 32), n && l.set(n, 48);
                                    for(let e = 0; e < 16; e++)i.h[e] = c[e] ^ o(l, 4 * e);
                                    return t && (b(i, t), i.c = 128), i;
                                }
                                function b(e, t) {
                                    for(let r = 0; r < t.length; r++)128 === e.c && (e.t += e.c, f(e, !1), e.c = 0), e.b[e.c++] = t[r];
                                }
                                function g(e) {
                                    for(e.t += e.c; e.c < 128;)e.b[e.c++] = 0;
                                    f(e, !0);
                                    const t = new Uint8Array(e.outlen);
                                    for(let r = 0; r < e.outlen; r++)t[r] = e.h[r >> 2] >> 8 * (3 & r);
                                    return t;
                                }
                                function m(e, t, r, i, s) {
                                    r = r || 64, e = n.normalizeInput(e), i && (i = n.normalizeInput(i)), s && (s = n.normalizeInput(s));
                                    const o = p(r, t, i, s);
                                    return b(o, e), g(o);
                                }
                                e.exports = {
                                    blake2b: m,
                                    blake2bHex: function(e, t, r, i, s) {
                                        const o = m(e, t, r, i, s);
                                        return n.toHex(o);
                                    },
                                    blake2bInit: p,
                                    blake2bUpdate: b,
                                    blake2bFinal: g
                                };
                            },
                            7690: (e, t, r)=>{
                                const n = r(1878);
                                function i(e, t) {
                                    return e[t] ^ e[t + 1] << 8 ^ e[t + 2] << 16 ^ e[t + 3] << 24;
                                }
                                function s(e, t, r, n, i, s) {
                                    h[e] = h[e] + h[t] + i, h[n] = o(h[n] ^ h[e], 16), h[r] = h[r] + h[n], h[t] = o(h[t] ^ h[r], 12), h[e] = h[e] + h[t] + s, h[n] = o(h[n] ^ h[e], 8), h[r] = h[r] + h[n], h[t] = o(h[t] ^ h[r], 7);
                                }
                                function o(e, t) {
                                    return e >>> t ^ e << 32 - t;
                                }
                                const a = new Uint32Array([
                                    1779033703,
                                    3144134277,
                                    1013904242,
                                    2773480762,
                                    1359893119,
                                    2600822924,
                                    528734635,
                                    1541459225
                                ]), c = new Uint8Array([
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9,
                                    10,
                                    11,
                                    12,
                                    13,
                                    14,
                                    15,
                                    14,
                                    10,
                                    4,
                                    8,
                                    9,
                                    15,
                                    13,
                                    6,
                                    1,
                                    12,
                                    0,
                                    2,
                                    11,
                                    7,
                                    5,
                                    3,
                                    11,
                                    8,
                                    12,
                                    0,
                                    5,
                                    2,
                                    15,
                                    13,
                                    10,
                                    14,
                                    3,
                                    6,
                                    7,
                                    1,
                                    9,
                                    4,
                                    7,
                                    9,
                                    3,
                                    1,
                                    13,
                                    12,
                                    11,
                                    14,
                                    2,
                                    6,
                                    5,
                                    10,
                                    4,
                                    0,
                                    15,
                                    8,
                                    9,
                                    0,
                                    5,
                                    7,
                                    2,
                                    4,
                                    10,
                                    15,
                                    14,
                                    1,
                                    11,
                                    12,
                                    6,
                                    8,
                                    3,
                                    13,
                                    2,
                                    12,
                                    6,
                                    10,
                                    0,
                                    11,
                                    8,
                                    3,
                                    4,
                                    13,
                                    7,
                                    5,
                                    15,
                                    14,
                                    1,
                                    9,
                                    12,
                                    5,
                                    1,
                                    15,
                                    14,
                                    13,
                                    4,
                                    10,
                                    0,
                                    7,
                                    6,
                                    3,
                                    9,
                                    2,
                                    8,
                                    11,
                                    13,
                                    11,
                                    7,
                                    14,
                                    12,
                                    1,
                                    3,
                                    9,
                                    5,
                                    0,
                                    15,
                                    4,
                                    8,
                                    6,
                                    2,
                                    10,
                                    6,
                                    15,
                                    14,
                                    9,
                                    11,
                                    3,
                                    0,
                                    8,
                                    12,
                                    2,
                                    13,
                                    7,
                                    1,
                                    4,
                                    10,
                                    5,
                                    10,
                                    2,
                                    8,
                                    4,
                                    7,
                                    6,
                                    1,
                                    5,
                                    15,
                                    11,
                                    9,
                                    14,
                                    3,
                                    12,
                                    13,
                                    0
                                ]), h = new Uint32Array(16), u = new Uint32Array(16);
                                function d(e, t) {
                                    let r = 0;
                                    for(r = 0; r < 8; r++)h[r] = e.h[r], h[r + 8] = a[r];
                                    for(h[12] ^= e.t, h[13] ^= e.t / 4294967296, t && (h[14] = ~h[14]), r = 0; r < 16; r++)u[r] = i(e.b, 4 * r);
                                    for(r = 0; r < 10; r++)s(0, 4, 8, 12, u[c[16 * r + 0]], u[c[16 * r + 1]]), s(1, 5, 9, 13, u[c[16 * r + 2]], u[c[16 * r + 3]]), s(2, 6, 10, 14, u[c[16 * r + 4]], u[c[16 * r + 5]]), s(3, 7, 11, 15, u[c[16 * r + 6]], u[c[16 * r + 7]]), s(0, 5, 10, 15, u[c[16 * r + 8]], u[c[16 * r + 9]]), s(1, 6, 11, 12, u[c[16 * r + 10]], u[c[16 * r + 11]]), s(2, 7, 8, 13, u[c[16 * r + 12]], u[c[16 * r + 13]]), s(3, 4, 9, 14, u[c[16 * r + 14]], u[c[16 * r + 15]]);
                                    for(r = 0; r < 8; r++)e.h[r] ^= h[r] ^ h[r + 8];
                                }
                                function f(e, t) {
                                    if (!(e > 0 && e <= 32)) throw new Error("Incorrect output length, should be in [1, 32]");
                                    const r = t ? t.length : 0;
                                    if (t && !(r > 0 && r <= 32)) throw new Error("Incorrect key length, should be in [1, 32]");
                                    const n = {
                                        h: new Uint32Array(a),
                                        b: new Uint8Array(64),
                                        c: 0,
                                        t: 0,
                                        outlen: e
                                    };
                                    return n.h[0] ^= 16842752 ^ r << 8 ^ e, r > 0 && (l(n, t), n.c = 64), n;
                                }
                                function l(e, t) {
                                    for(let r = 0; r < t.length; r++)64 === e.c && (e.t += e.c, d(e, !1), e.c = 0), e.b[e.c++] = t[r];
                                }
                                function p(e) {
                                    for(e.t += e.c; e.c < 64;)e.b[e.c++] = 0;
                                    d(e, !0);
                                    const t = new Uint8Array(e.outlen);
                                    for(let r = 0; r < e.outlen; r++)t[r] = e.h[r >> 2] >> 8 * (3 & r) & 255;
                                    return t;
                                }
                                function b(e, t, r) {
                                    r = r || 32, e = n.normalizeInput(e);
                                    const i = f(r, t);
                                    return l(i, e), p(i);
                                }
                                e.exports = {
                                    blake2s: b,
                                    blake2sHex: function(e, t, r) {
                                        const i = b(e, t, r);
                                        return n.toHex(i);
                                    },
                                    blake2sInit: f,
                                    blake2sUpdate: l,
                                    blake2sFinal: p
                                };
                            },
                            1540: (e, t, r)=>{
                                const n = r(8681), i = r(7690);
                                e.exports = {
                                    blake2b: n.blake2b,
                                    blake2bHex: n.blake2bHex,
                                    blake2bInit: n.blake2bInit,
                                    blake2bUpdate: n.blake2bUpdate,
                                    blake2bFinal: n.blake2bFinal,
                                    blake2s: i.blake2s,
                                    blake2sHex: i.blake2sHex,
                                    blake2sInit: i.blake2sInit,
                                    blake2sUpdate: i.blake2sUpdate,
                                    blake2sFinal: i.blake2sFinal
                                };
                            },
                            1878: (e)=>{
                                function t(e) {
                                    return (4294967296 + e).toString(16).substring(1);
                                }
                                e.exports = {
                                    normalizeInput: function(e) {
                                        let t;
                                        if (e instanceof Uint8Array) t = e;
                                        else {
                                            if ("string" != typeof e) throw new Error("Input must be an string, Buffer or Uint8Array");
                                            t = (new TextEncoder).encode(e);
                                        }
                                        return t;
                                    },
                                    toHex: function(e) {
                                        return Array.prototype.map.call(e, function(e) {
                                            return (e < 16 ? "0" : "") + e.toString(16);
                                        }).join("");
                                    },
                                    debugPrint: function(e, r, n) {
                                        let i = "\n" + e + " = ";
                                        for(let s = 0; s < r.length; s += 2){
                                            if (32 === n) i += t(r[s]).toUpperCase(), i += " ", i += t(r[s + 1]).toUpperCase();
                                            else {
                                                if (64 !== n) throw new Error("Invalid size " + n);
                                                i += t(r[s + 1]).toUpperCase(), i += t(r[s]).toUpperCase();
                                            }
                                            s % 6 == 4 ? i += "\n" + new Array(e.length + 4).join(" ") : s < r.length - 2 && (i += " ");
                                        }
                                        console.log(i);
                                    },
                                    testSpeed: function(e, t, r) {
                                        let n = (new Date).getTime();
                                        const i = new Uint8Array(t);
                                        for(let e = 0; e < t; e++)i[e] = e % 256;
                                        const s = (new Date).getTime();
                                        console.log("Generated random input in " + (s - n) + "ms"), n = s;
                                        for(let s = 0; s < r; s++){
                                            const r = e(i), s = (new Date).getTime(), o = s - n;
                                            n = s, console.log("Hashed in " + o + "ms: " + r.substring(0, 20) + "..."), console.log(Math.round(t / (1 << 20) / (o / 1e3) * 100) / 100 + " MB PER SECOND");
                                        }
                                    }
                                };
                            },
                            4619: function(e, t, r) {
                                !function(e, t) {
                                    "use strict";
                                    function n(e, t) {
                                        if (!e) throw new Error(t || "Assertion failed");
                                    }
                                    function i(e, t) {
                                        e.super_ = t;
                                        var r = function() {};
                                        r.prototype = t.prototype, e.prototype = new r, e.prototype.constructor = e;
                                    }
                                    function s(e, t, r) {
                                        if (s.isBN(e)) return e;
                                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== e && ("le" !== t && "be" !== t || (r = t, t = 10), this._init(e || 0, t || 10, r || "be"));
                                    }
                                    var o;
                                    "object" == typeof e ? e.exports = s : t.BN = s, s.BN = s, s.wordSize = 26;
                                    try {
                                        o = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(7175).Buffer;
                                    } catch (e) {}
                                    function a(e, t) {
                                        var r = e.charCodeAt(t);
                                        return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15;
                                    }
                                    function c(e, t, r) {
                                        var n = a(e, r);
                                        return r - 1 >= t && (n |= a(e, r - 1) << 4), n;
                                    }
                                    function h(e, t, r, n) {
                                        for(var i = 0, s = Math.min(e.length, r), o = t; o < s; o++){
                                            var a = e.charCodeAt(o) - 48;
                                            i *= n, i += a >= 49 ? a - 49 + 10 : a >= 17 ? a - 17 + 10 : a;
                                        }
                                        return i;
                                    }
                                    s.isBN = function(e) {
                                        return e instanceof s || null !== e && "object" == typeof e && e.constructor.wordSize === s.wordSize && Array.isArray(e.words);
                                    }, s.max = function(e, t) {
                                        return e.cmp(t) > 0 ? e : t;
                                    }, s.min = function(e, t) {
                                        return e.cmp(t) < 0 ? e : t;
                                    }, s.prototype._init = function(e, t, r) {
                                        if ("number" == typeof e) return this._initNumber(e, t, r);
                                        if ("object" == typeof e) return this._initArray(e, t, r);
                                        "hex" === t && (t = 16), n(t === (0 | t) && t >= 2 && t <= 36);
                                        var i = 0;
                                        "-" === (e = e.toString().replace(/\s+/g, ""))[0] && (i++, this.negative = 1), i < e.length && (16 === t ? this._parseHex(e, i, r) : (this._parseBase(e, t, i), "le" === r && this._initArray(this.toArray(), t, r)));
                                    }, s.prototype._initNumber = function(e, t, r) {
                                        e < 0 && (this.negative = 1, e = -e), e < 67108864 ? (this.words = [
                                            67108863 & e
                                        ], this.length = 1) : e < 4503599627370496 ? (this.words = [
                                            67108863 & e,
                                            e / 67108864 & 67108863
                                        ], this.length = 2) : (n(e < 9007199254740992), this.words = [
                                            67108863 & e,
                                            e / 67108864 & 67108863,
                                            1
                                        ], this.length = 3), "le" === r && this._initArray(this.toArray(), t, r);
                                    }, s.prototype._initArray = function(e, t, r) {
                                        if (n("number" == typeof e.length), e.length <= 0) return this.words = [
                                            0
                                        ], this.length = 1, this;
                                        this.length = Math.ceil(e.length / 3), this.words = new Array(this.length);
                                        for(var i = 0; i < this.length; i++)this.words[i] = 0;
                                        var s, o, a = 0;
                                        if ("be" === r) for(i = e.length - 1, s = 0; i >= 0; i -= 3)o = e[i] | e[i - 1] << 8 | e[i - 2] << 16, this.words[s] |= o << a & 67108863, this.words[s + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, s++);
                                        else if ("le" === r) for(i = 0, s = 0; i < e.length; i += 3)o = e[i] | e[i + 1] << 8 | e[i + 2] << 16, this.words[s] |= o << a & 67108863, this.words[s + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, s++);
                                        return this.strip();
                                    }, s.prototype._parseHex = function(e, t, r) {
                                        this.length = Math.ceil((e.length - t) / 6), this.words = new Array(this.length);
                                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                                        var i, s = 0, o = 0;
                                        if ("be" === r) for(n = e.length - 1; n >= t; n -= 2)i = c(e, t, n) << s, this.words[o] |= 67108863 & i, s >= 18 ? (s -= 18, o += 1, this.words[o] |= i >>> 26) : s += 8;
                                        else for(n = (e.length - t) % 2 == 0 ? t + 1 : t; n < e.length; n += 2)i = c(e, t, n) << s, this.words[o] |= 67108863 & i, s >= 18 ? (s -= 18, o += 1, this.words[o] |= i >>> 26) : s += 8;
                                        this.strip();
                                    }, s.prototype._parseBase = function(e, t, r) {
                                        this.words = [
                                            0
                                        ], this.length = 1;
                                        for(var n = 0, i = 1; i <= 67108863; i *= t)n++;
                                        n--, i = i / t | 0;
                                        for(var s = e.length - r, o = s % n, a = Math.min(s, s - o) + r, c = 0, u = r; u < a; u += n)c = h(e, u, u + n, t), this.imuln(i), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                                        if (0 !== o) {
                                            var d = 1;
                                            for(c = h(e, u, e.length, t), u = 0; u < o; u++)d *= t;
                                            this.imuln(d), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                                        }
                                        this.strip();
                                    }, s.prototype.copy = function(e) {
                                        e.words = new Array(this.length);
                                        for(var t = 0; t < this.length; t++)e.words[t] = this.words[t];
                                        e.length = this.length, e.negative = this.negative, e.red = this.red;
                                    }, s.prototype.clone = function() {
                                        var e = new s(null);
                                        return this.copy(e), e;
                                    }, s.prototype._expand = function(e) {
                                        for(; this.length < e;)this.words[this.length++] = 0;
                                        return this;
                                    }, s.prototype.strip = function() {
                                        for(; this.length > 1 && 0 === this.words[this.length - 1];)this.length--;
                                        return this._normSign();
                                    }, s.prototype._normSign = function() {
                                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                                    }, s.prototype.inspect = function() {
                                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                                    };
                                    var u = [
                                        "",
                                        "0",
                                        "00",
                                        "000",
                                        "0000",
                                        "00000",
                                        "000000",
                                        "0000000",
                                        "00000000",
                                        "000000000",
                                        "0000000000",
                                        "00000000000",
                                        "000000000000",
                                        "0000000000000",
                                        "00000000000000",
                                        "000000000000000",
                                        "0000000000000000",
                                        "00000000000000000",
                                        "000000000000000000",
                                        "0000000000000000000",
                                        "00000000000000000000",
                                        "000000000000000000000",
                                        "0000000000000000000000",
                                        "00000000000000000000000",
                                        "000000000000000000000000",
                                        "0000000000000000000000000"
                                    ], d = [
                                        0,
                                        0,
                                        25,
                                        16,
                                        12,
                                        11,
                                        10,
                                        9,
                                        8,
                                        8,
                                        7,
                                        7,
                                        7,
                                        7,
                                        6,
                                        6,
                                        6,
                                        6,
                                        6,
                                        6,
                                        6,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5
                                    ], f = [
                                        0,
                                        0,
                                        33554432,
                                        43046721,
                                        16777216,
                                        48828125,
                                        60466176,
                                        40353607,
                                        16777216,
                                        43046721,
                                        1e7,
                                        19487171,
                                        35831808,
                                        62748517,
                                        7529536,
                                        11390625,
                                        16777216,
                                        24137569,
                                        34012224,
                                        47045881,
                                        64e6,
                                        4084101,
                                        5153632,
                                        6436343,
                                        7962624,
                                        9765625,
                                        11881376,
                                        14348907,
                                        17210368,
                                        20511149,
                                        243e5,
                                        28629151,
                                        33554432,
                                        39135393,
                                        45435424,
                                        52521875,
                                        60466176
                                    ];
                                    function l(e, t, r) {
                                        r.negative = t.negative ^ e.negative;
                                        var n = e.length + t.length | 0;
                                        r.length = n, n = n - 1 | 0;
                                        var i = 0 | e.words[0], s = 0 | t.words[0], o = i * s, a = 67108863 & o, c = o / 67108864 | 0;
                                        r.words[0] = a;
                                        for(var h = 1; h < n; h++){
                                            for(var u = c >>> 26, d = 67108863 & c, f = Math.min(h, t.length - 1), l = Math.max(0, h - e.length + 1); l <= f; l++){
                                                var p = h - l | 0;
                                                u += (o = (i = 0 | e.words[p]) * (s = 0 | t.words[l]) + d) / 67108864 | 0, d = 67108863 & o;
                                            }
                                            r.words[h] = 0 | d, c = 0 | u;
                                        }
                                        return 0 !== c ? r.words[h] = 0 | c : r.length--, r.strip();
                                    }
                                    s.prototype.toString = function(e, t) {
                                        var r;
                                        if (t = 0 | t || 1, 16 === (e = e || 10) || "hex" === e) {
                                            r = "";
                                            for(var i = 0, s = 0, o = 0; o < this.length; o++){
                                                var a = this.words[o], c = (16777215 & (a << i | s)).toString(16);
                                                r = 0 != (s = a >>> 24 - i & 16777215) || o !== this.length - 1 ? u[6 - c.length] + c + r : c + r, (i += 2) >= 26 && (i -= 26, o--);
                                            }
                                            for(0 !== s && (r = s.toString(16) + r); r.length % t != 0;)r = "0" + r;
                                            return 0 !== this.negative && (r = "-" + r), r;
                                        }
                                        if (e === (0 | e) && e >= 2 && e <= 36) {
                                            var h = d[e], l = f[e];
                                            r = "";
                                            var p = this.clone();
                                            for(p.negative = 0; !p.isZero();){
                                                var b = p.modn(l).toString(e);
                                                r = (p = p.idivn(l)).isZero() ? b + r : u[h - b.length] + b + r;
                                            }
                                            for(this.isZero() && (r = "0" + r); r.length % t != 0;)r = "0" + r;
                                            return 0 !== this.negative && (r = "-" + r), r;
                                        }
                                        n(!1, "Base should be between 2 and 36");
                                    }, s.prototype.toNumber = function() {
                                        var e = this.words[0];
                                        return 2 === this.length ? e += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? e += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -e : e;
                                    }, s.prototype.toJSON = function() {
                                        return this.toString(16);
                                    }, s.prototype.toBuffer = function(e, t) {
                                        return n(void 0 !== o), this.toArrayLike(o, e, t);
                                    }, s.prototype.toArray = function(e, t) {
                                        return this.toArrayLike(Array, e, t);
                                    }, s.prototype.toArrayLike = function(e, t, r) {
                                        var i = this.byteLength(), s = r || Math.max(1, i);
                                        n(i <= s, "byte array longer than desired length"), n(s > 0, "Requested array length <= 0"), this.strip();
                                        var o, a, c = "le" === t, h = new e(s), u = this.clone();
                                        if (c) {
                                            for(a = 0; !u.isZero(); a++)o = u.andln(255), u.iushrn(8), h[a] = o;
                                            for(; a < s; a++)h[a] = 0;
                                        } else {
                                            for(a = 0; a < s - i; a++)h[a] = 0;
                                            for(a = 0; !u.isZero(); a++)o = u.andln(255), u.iushrn(8), h[s - a - 1] = o;
                                        }
                                        return h;
                                    }, Math.clz32 ? s.prototype._countBits = function(e) {
                                        return 32 - Math.clz32(e);
                                    } : s.prototype._countBits = function(e) {
                                        var t = e, r = 0;
                                        return t >= 4096 && (r += 13, t >>>= 13), t >= 64 && (r += 7, t >>>= 7), t >= 8 && (r += 4, t >>>= 4), t >= 2 && (r += 2, t >>>= 2), r + t;
                                    }, s.prototype._zeroBits = function(e) {
                                        if (0 === e) return 26;
                                        var t = e, r = 0;
                                        return 8191 & t || (r += 13, t >>>= 13), 127 & t || (r += 7, t >>>= 7), 15 & t || (r += 4, t >>>= 4), 3 & t || (r += 2, t >>>= 2), 1 & t || r++, r;
                                    }, s.prototype.bitLength = function() {
                                        var e = this.words[this.length - 1], t = this._countBits(e);
                                        return 26 * (this.length - 1) + t;
                                    }, s.prototype.zeroBits = function() {
                                        if (this.isZero()) return 0;
                                        for(var e = 0, t = 0; t < this.length; t++){
                                            var r = this._zeroBits(this.words[t]);
                                            if (e += r, 26 !== r) break;
                                        }
                                        return e;
                                    }, s.prototype.byteLength = function() {
                                        return Math.ceil(this.bitLength() / 8);
                                    }, s.prototype.toTwos = function(e) {
                                        return 0 !== this.negative ? this.abs().inotn(e).iaddn(1) : this.clone();
                                    }, s.prototype.fromTwos = function(e) {
                                        return this.testn(e - 1) ? this.notn(e).iaddn(1).ineg() : this.clone();
                                    }, s.prototype.isNeg = function() {
                                        return 0 !== this.negative;
                                    }, s.prototype.neg = function() {
                                        return this.clone().ineg();
                                    }, s.prototype.ineg = function() {
                                        return this.isZero() || (this.negative ^= 1), this;
                                    }, s.prototype.iuor = function(e) {
                                        for(; this.length < e.length;)this.words[this.length++] = 0;
                                        for(var t = 0; t < e.length; t++)this.words[t] = this.words[t] | e.words[t];
                                        return this.strip();
                                    }, s.prototype.ior = function(e) {
                                        return n(!(this.negative | e.negative)), this.iuor(e);
                                    }, s.prototype.or = function(e) {
                                        return this.length > e.length ? this.clone().ior(e) : e.clone().ior(this);
                                    }, s.prototype.uor = function(e) {
                                        return this.length > e.length ? this.clone().iuor(e) : e.clone().iuor(this);
                                    }, s.prototype.iuand = function(e) {
                                        var t;
                                        t = this.length > e.length ? e : this;
                                        for(var r = 0; r < t.length; r++)this.words[r] = this.words[r] & e.words[r];
                                        return this.length = t.length, this.strip();
                                    }, s.prototype.iand = function(e) {
                                        return n(!(this.negative | e.negative)), this.iuand(e);
                                    }, s.prototype.and = function(e) {
                                        return this.length > e.length ? this.clone().iand(e) : e.clone().iand(this);
                                    }, s.prototype.uand = function(e) {
                                        return this.length > e.length ? this.clone().iuand(e) : e.clone().iuand(this);
                                    }, s.prototype.iuxor = function(e) {
                                        var t, r;
                                        this.length > e.length ? (t = this, r = e) : (t = e, r = this);
                                        for(var n = 0; n < r.length; n++)this.words[n] = t.words[n] ^ r.words[n];
                                        if (this !== t) for(; n < t.length; n++)this.words[n] = t.words[n];
                                        return this.length = t.length, this.strip();
                                    }, s.prototype.ixor = function(e) {
                                        return n(!(this.negative | e.negative)), this.iuxor(e);
                                    }, s.prototype.xor = function(e) {
                                        return this.length > e.length ? this.clone().ixor(e) : e.clone().ixor(this);
                                    }, s.prototype.uxor = function(e) {
                                        return this.length > e.length ? this.clone().iuxor(e) : e.clone().iuxor(this);
                                    }, s.prototype.inotn = function(e) {
                                        n("number" == typeof e && e >= 0);
                                        var t = 0 | Math.ceil(e / 26), r = e % 26;
                                        this._expand(t), r > 0 && t--;
                                        for(var i = 0; i < t; i++)this.words[i] = 67108863 & ~this.words[i];
                                        return r > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - r), this.strip();
                                    }, s.prototype.notn = function(e) {
                                        return this.clone().inotn(e);
                                    }, s.prototype.setn = function(e, t) {
                                        n("number" == typeof e && e >= 0);
                                        var r = e / 26 | 0, i = e % 26;
                                        return this._expand(r + 1), this.words[r] = t ? this.words[r] | 1 << i : this.words[r] & ~(1 << i), this.strip();
                                    }, s.prototype.iadd = function(e) {
                                        var t, r, n;
                                        if (0 !== this.negative && 0 === e.negative) return this.negative = 0, t = this.isub(e), this.negative ^= 1, this._normSign();
                                        if (0 === this.negative && 0 !== e.negative) return e.negative = 0, t = this.isub(e), e.negative = 1, t._normSign();
                                        this.length > e.length ? (r = this, n = e) : (r = e, n = this);
                                        for(var i = 0, s = 0; s < n.length; s++)t = (0 | r.words[s]) + (0 | n.words[s]) + i, this.words[s] = 67108863 & t, i = t >>> 26;
                                        for(; 0 !== i && s < r.length; s++)t = (0 | r.words[s]) + i, this.words[s] = 67108863 & t, i = t >>> 26;
                                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                                        else if (r !== this) for(; s < r.length; s++)this.words[s] = r.words[s];
                                        return this;
                                    }, s.prototype.add = function(e) {
                                        var t;
                                        return 0 !== e.negative && 0 === this.negative ? (e.negative = 0, t = this.sub(e), e.negative ^= 1, t) : 0 === e.negative && 0 !== this.negative ? (this.negative = 0, t = e.sub(this), this.negative = 1, t) : this.length > e.length ? this.clone().iadd(e) : e.clone().iadd(this);
                                    }, s.prototype.isub = function(e) {
                                        if (0 !== e.negative) {
                                            e.negative = 0;
                                            var t = this.iadd(e);
                                            return e.negative = 1, t._normSign();
                                        }
                                        if (0 !== this.negative) return this.negative = 0, this.iadd(e), this.negative = 1, this._normSign();
                                        var r, n, i = this.cmp(e);
                                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                                        i > 0 ? (r = this, n = e) : (r = e, n = this);
                                        for(var s = 0, o = 0; o < n.length; o++)s = (t = (0 | r.words[o]) - (0 | n.words[o]) + s) >> 26, this.words[o] = 67108863 & t;
                                        for(; 0 !== s && o < r.length; o++)s = (t = (0 | r.words[o]) + s) >> 26, this.words[o] = 67108863 & t;
                                        if (0 === s && o < r.length && r !== this) for(; o < r.length; o++)this.words[o] = r.words[o];
                                        return this.length = Math.max(this.length, o), r !== this && (this.negative = 1), this.strip();
                                    }, s.prototype.sub = function(e) {
                                        return this.clone().isub(e);
                                    };
                                    var p = function(e, t, r) {
                                        var n, i, s, o = e.words, a = t.words, c = r.words, h = 0, u = 0 | o[0], d = 8191 & u, f = u >>> 13, l = 0 | o[1], p = 8191 & l, b = l >>> 13, g = 0 | o[2], m = 8191 & g, y = g >>> 13, v = 0 | o[3], w = 8191 & v, _ = v >>> 13, E = 0 | o[4], S = 8191 & E, A = E >>> 13, M = 0 | o[5], I = 8191 & M, T = M >>> 13, x = 0 | o[6], C = 8191 & x, R = x >>> 13, k = 0 | o[7], P = 8191 & k, O = k >>> 13, N = 0 | o[8], U = 8191 & N, B = N >>> 13, L = 0 | o[9], j = 8191 & L, D = L >>> 13, q = 0 | a[0], F = 8191 & q, H = q >>> 13, z = 0 | a[1], V = 8191 & z, $ = z >>> 13, K = 0 | a[2], G = 8191 & K, W = K >>> 13, J = 0 | a[3], Y = 8191 & J, X = J >>> 13, Z = 0 | a[4], Q = 8191 & Z, ee = Z >>> 13, te = 0 | a[5], re = 8191 & te, ne = te >>> 13, ie = 0 | a[6], se = 8191 & ie, oe = ie >>> 13, ae = 0 | a[7], ce = 8191 & ae, he = ae >>> 13, ue = 0 | a[8], de = 8191 & ue, fe = ue >>> 13, le = 0 | a[9], pe = 8191 & le, be = le >>> 13;
                                        r.negative = e.negative ^ t.negative, r.length = 19;
                                        var ge = (h + (n = Math.imul(d, F)) | 0) + ((8191 & (i = (i = Math.imul(d, H)) + Math.imul(f, F) | 0)) << 13) | 0;
                                        h = ((s = Math.imul(f, H)) + (i >>> 13) | 0) + (ge >>> 26) | 0, ge &= 67108863, n = Math.imul(p, F), i = (i = Math.imul(p, H)) + Math.imul(b, F) | 0, s = Math.imul(b, H);
                                        var me = (h + (n = n + Math.imul(d, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, $) | 0) + Math.imul(f, V) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, $) | 0) + (i >>> 13) | 0) + (me >>> 26) | 0, me &= 67108863, n = Math.imul(m, F), i = (i = Math.imul(m, H)) + Math.imul(y, F) | 0, s = Math.imul(y, H), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, $) | 0) + Math.imul(b, V) | 0, s = s + Math.imul(b, $) | 0;
                                        var ye = (h + (n = n + Math.imul(d, G) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, W) | 0) + Math.imul(f, G) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, W) | 0) + (i >>> 13) | 0) + (ye >>> 26) | 0, ye &= 67108863, n = Math.imul(w, F), i = (i = Math.imul(w, H)) + Math.imul(_, F) | 0, s = Math.imul(_, H), n = n + Math.imul(m, V) | 0, i = (i = i + Math.imul(m, $) | 0) + Math.imul(y, V) | 0, s = s + Math.imul(y, $) | 0, n = n + Math.imul(p, G) | 0, i = (i = i + Math.imul(p, W) | 0) + Math.imul(b, G) | 0, s = s + Math.imul(b, W) | 0;
                                        var ve = (h + (n = n + Math.imul(d, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, X) | 0) + Math.imul(f, Y) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, X) | 0) + (i >>> 13) | 0) + (ve >>> 26) | 0, ve &= 67108863, n = Math.imul(S, F), i = (i = Math.imul(S, H)) + Math.imul(A, F) | 0, s = Math.imul(A, H), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, $) | 0) + Math.imul(_, V) | 0, s = s + Math.imul(_, $) | 0, n = n + Math.imul(m, G) | 0, i = (i = i + Math.imul(m, W) | 0) + Math.imul(y, G) | 0, s = s + Math.imul(y, W) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, X) | 0) + Math.imul(b, Y) | 0, s = s + Math.imul(b, X) | 0;
                                        var we = (h + (n = n + Math.imul(d, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, ee) | 0) + Math.imul(f, Q) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, ee) | 0) + (i >>> 13) | 0) + (we >>> 26) | 0, we &= 67108863, n = Math.imul(I, F), i = (i = Math.imul(I, H)) + Math.imul(T, F) | 0, s = Math.imul(T, H), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, $) | 0) + Math.imul(A, V) | 0, s = s + Math.imul(A, $) | 0, n = n + Math.imul(w, G) | 0, i = (i = i + Math.imul(w, W) | 0) + Math.imul(_, G) | 0, s = s + Math.imul(_, W) | 0, n = n + Math.imul(m, Y) | 0, i = (i = i + Math.imul(m, X) | 0) + Math.imul(y, Y) | 0, s = s + Math.imul(y, X) | 0, n = n + Math.imul(p, Q) | 0, i = (i = i + Math.imul(p, ee) | 0) + Math.imul(b, Q) | 0, s = s + Math.imul(b, ee) | 0;
                                        var _e = (h + (n = n + Math.imul(d, re) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, ne) | 0) + Math.imul(f, re) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, ne) | 0) + (i >>> 13) | 0) + (_e >>> 26) | 0, _e &= 67108863, n = Math.imul(C, F), i = (i = Math.imul(C, H)) + Math.imul(R, F) | 0, s = Math.imul(R, H), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, $) | 0) + Math.imul(T, V) | 0, s = s + Math.imul(T, $) | 0, n = n + Math.imul(S, G) | 0, i = (i = i + Math.imul(S, W) | 0) + Math.imul(A, G) | 0, s = s + Math.imul(A, W) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, X) | 0) + Math.imul(_, Y) | 0, s = s + Math.imul(_, X) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, ee) | 0) + Math.imul(y, Q) | 0, s = s + Math.imul(y, ee) | 0, n = n + Math.imul(p, re) | 0, i = (i = i + Math.imul(p, ne) | 0) + Math.imul(b, re) | 0, s = s + Math.imul(b, ne) | 0;
                                        var Ee = (h + (n = n + Math.imul(d, se) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, oe) | 0) + Math.imul(f, se) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, oe) | 0) + (i >>> 13) | 0) + (Ee >>> 26) | 0, Ee &= 67108863, n = Math.imul(P, F), i = (i = Math.imul(P, H)) + Math.imul(O, F) | 0, s = Math.imul(O, H), n = n + Math.imul(C, V) | 0, i = (i = i + Math.imul(C, $) | 0) + Math.imul(R, V) | 0, s = s + Math.imul(R, $) | 0, n = n + Math.imul(I, G) | 0, i = (i = i + Math.imul(I, W) | 0) + Math.imul(T, G) | 0, s = s + Math.imul(T, W) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, X) | 0) + Math.imul(A, Y) | 0, s = s + Math.imul(A, X) | 0, n = n + Math.imul(w, Q) | 0, i = (i = i + Math.imul(w, ee) | 0) + Math.imul(_, Q) | 0, s = s + Math.imul(_, ee) | 0, n = n + Math.imul(m, re) | 0, i = (i = i + Math.imul(m, ne) | 0) + Math.imul(y, re) | 0, s = s + Math.imul(y, ne) | 0, n = n + Math.imul(p, se) | 0, i = (i = i + Math.imul(p, oe) | 0) + Math.imul(b, se) | 0, s = s + Math.imul(b, oe) | 0;
                                        var Se = (h + (n = n + Math.imul(d, ce) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, he) | 0) + Math.imul(f, ce) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, he) | 0) + (i >>> 13) | 0) + (Se >>> 26) | 0, Se &= 67108863, n = Math.imul(U, F), i = (i = Math.imul(U, H)) + Math.imul(B, F) | 0, s = Math.imul(B, H), n = n + Math.imul(P, V) | 0, i = (i = i + Math.imul(P, $) | 0) + Math.imul(O, V) | 0, s = s + Math.imul(O, $) | 0, n = n + Math.imul(C, G) | 0, i = (i = i + Math.imul(C, W) | 0) + Math.imul(R, G) | 0, s = s + Math.imul(R, W) | 0, n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, X) | 0) + Math.imul(T, Y) | 0, s = s + Math.imul(T, X) | 0, n = n + Math.imul(S, Q) | 0, i = (i = i + Math.imul(S, ee) | 0) + Math.imul(A, Q) | 0, s = s + Math.imul(A, ee) | 0, n = n + Math.imul(w, re) | 0, i = (i = i + Math.imul(w, ne) | 0) + Math.imul(_, re) | 0, s = s + Math.imul(_, ne) | 0, n = n + Math.imul(m, se) | 0, i = (i = i + Math.imul(m, oe) | 0) + Math.imul(y, se) | 0, s = s + Math.imul(y, oe) | 0, n = n + Math.imul(p, ce) | 0, i = (i = i + Math.imul(p, he) | 0) + Math.imul(b, ce) | 0, s = s + Math.imul(b, he) | 0;
                                        var Ae = (h + (n = n + Math.imul(d, de) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, fe) | 0) + Math.imul(f, de) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, fe) | 0) + (i >>> 13) | 0) + (Ae >>> 26) | 0, Ae &= 67108863, n = Math.imul(j, F), i = (i = Math.imul(j, H)) + Math.imul(D, F) | 0, s = Math.imul(D, H), n = n + Math.imul(U, V) | 0, i = (i = i + Math.imul(U, $) | 0) + Math.imul(B, V) | 0, s = s + Math.imul(B, $) | 0, n = n + Math.imul(P, G) | 0, i = (i = i + Math.imul(P, W) | 0) + Math.imul(O, G) | 0, s = s + Math.imul(O, W) | 0, n = n + Math.imul(C, Y) | 0, i = (i = i + Math.imul(C, X) | 0) + Math.imul(R, Y) | 0, s = s + Math.imul(R, X) | 0, n = n + Math.imul(I, Q) | 0, i = (i = i + Math.imul(I, ee) | 0) + Math.imul(T, Q) | 0, s = s + Math.imul(T, ee) | 0, n = n + Math.imul(S, re) | 0, i = (i = i + Math.imul(S, ne) | 0) + Math.imul(A, re) | 0, s = s + Math.imul(A, ne) | 0, n = n + Math.imul(w, se) | 0, i = (i = i + Math.imul(w, oe) | 0) + Math.imul(_, se) | 0, s = s + Math.imul(_, oe) | 0, n = n + Math.imul(m, ce) | 0, i = (i = i + Math.imul(m, he) | 0) + Math.imul(y, ce) | 0, s = s + Math.imul(y, he) | 0, n = n + Math.imul(p, de) | 0, i = (i = i + Math.imul(p, fe) | 0) + Math.imul(b, de) | 0, s = s + Math.imul(b, fe) | 0;
                                        var Me = (h + (n = n + Math.imul(d, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, be) | 0) + Math.imul(f, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, be) | 0) + (i >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, n = Math.imul(j, V), i = (i = Math.imul(j, $)) + Math.imul(D, V) | 0, s = Math.imul(D, $), n = n + Math.imul(U, G) | 0, i = (i = i + Math.imul(U, W) | 0) + Math.imul(B, G) | 0, s = s + Math.imul(B, W) | 0, n = n + Math.imul(P, Y) | 0, i = (i = i + Math.imul(P, X) | 0) + Math.imul(O, Y) | 0, s = s + Math.imul(O, X) | 0, n = n + Math.imul(C, Q) | 0, i = (i = i + Math.imul(C, ee) | 0) + Math.imul(R, Q) | 0, s = s + Math.imul(R, ee) | 0, n = n + Math.imul(I, re) | 0, i = (i = i + Math.imul(I, ne) | 0) + Math.imul(T, re) | 0, s = s + Math.imul(T, ne) | 0, n = n + Math.imul(S, se) | 0, i = (i = i + Math.imul(S, oe) | 0) + Math.imul(A, se) | 0, s = s + Math.imul(A, oe) | 0, n = n + Math.imul(w, ce) | 0, i = (i = i + Math.imul(w, he) | 0) + Math.imul(_, ce) | 0, s = s + Math.imul(_, he) | 0, n = n + Math.imul(m, de) | 0, i = (i = i + Math.imul(m, fe) | 0) + Math.imul(y, de) | 0, s = s + Math.imul(y, fe) | 0;
                                        var Ie = (h + (n = n + Math.imul(p, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, be) | 0) + Math.imul(b, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(b, be) | 0) + (i >>> 13) | 0) + (Ie >>> 26) | 0, Ie &= 67108863, n = Math.imul(j, G), i = (i = Math.imul(j, W)) + Math.imul(D, G) | 0, s = Math.imul(D, W), n = n + Math.imul(U, Y) | 0, i = (i = i + Math.imul(U, X) | 0) + Math.imul(B, Y) | 0, s = s + Math.imul(B, X) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, ee) | 0) + Math.imul(O, Q) | 0, s = s + Math.imul(O, ee) | 0, n = n + Math.imul(C, re) | 0, i = (i = i + Math.imul(C, ne) | 0) + Math.imul(R, re) | 0, s = s + Math.imul(R, ne) | 0, n = n + Math.imul(I, se) | 0, i = (i = i + Math.imul(I, oe) | 0) + Math.imul(T, se) | 0, s = s + Math.imul(T, oe) | 0, n = n + Math.imul(S, ce) | 0, i = (i = i + Math.imul(S, he) | 0) + Math.imul(A, ce) | 0, s = s + Math.imul(A, he) | 0, n = n + Math.imul(w, de) | 0, i = (i = i + Math.imul(w, fe) | 0) + Math.imul(_, de) | 0, s = s + Math.imul(_, fe) | 0;
                                        var Te = (h + (n = n + Math.imul(m, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, be) | 0) + Math.imul(y, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(y, be) | 0) + (i >>> 13) | 0) + (Te >>> 26) | 0, Te &= 67108863, n = Math.imul(j, Y), i = (i = Math.imul(j, X)) + Math.imul(D, Y) | 0, s = Math.imul(D, X), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, ee) | 0) + Math.imul(B, Q) | 0, s = s + Math.imul(B, ee) | 0, n = n + Math.imul(P, re) | 0, i = (i = i + Math.imul(P, ne) | 0) + Math.imul(O, re) | 0, s = s + Math.imul(O, ne) | 0, n = n + Math.imul(C, se) | 0, i = (i = i + Math.imul(C, oe) | 0) + Math.imul(R, se) | 0, s = s + Math.imul(R, oe) | 0, n = n + Math.imul(I, ce) | 0, i = (i = i + Math.imul(I, he) | 0) + Math.imul(T, ce) | 0, s = s + Math.imul(T, he) | 0, n = n + Math.imul(S, de) | 0, i = (i = i + Math.imul(S, fe) | 0) + Math.imul(A, de) | 0, s = s + Math.imul(A, fe) | 0;
                                        var xe = (h + (n = n + Math.imul(w, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, be) | 0) + Math.imul(_, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(_, be) | 0) + (i >>> 13) | 0) + (xe >>> 26) | 0, xe &= 67108863, n = Math.imul(j, Q), i = (i = Math.imul(j, ee)) + Math.imul(D, Q) | 0, s = Math.imul(D, ee), n = n + Math.imul(U, re) | 0, i = (i = i + Math.imul(U, ne) | 0) + Math.imul(B, re) | 0, s = s + Math.imul(B, ne) | 0, n = n + Math.imul(P, se) | 0, i = (i = i + Math.imul(P, oe) | 0) + Math.imul(O, se) | 0, s = s + Math.imul(O, oe) | 0, n = n + Math.imul(C, ce) | 0, i = (i = i + Math.imul(C, he) | 0) + Math.imul(R, ce) | 0, s = s + Math.imul(R, he) | 0, n = n + Math.imul(I, de) | 0, i = (i = i + Math.imul(I, fe) | 0) + Math.imul(T, de) | 0, s = s + Math.imul(T, fe) | 0;
                                        var Ce = (h + (n = n + Math.imul(S, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, be) | 0) + Math.imul(A, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(A, be) | 0) + (i >>> 13) | 0) + (Ce >>> 26) | 0, Ce &= 67108863, n = Math.imul(j, re), i = (i = Math.imul(j, ne)) + Math.imul(D, re) | 0, s = Math.imul(D, ne), n = n + Math.imul(U, se) | 0, i = (i = i + Math.imul(U, oe) | 0) + Math.imul(B, se) | 0, s = s + Math.imul(B, oe) | 0, n = n + Math.imul(P, ce) | 0, i = (i = i + Math.imul(P, he) | 0) + Math.imul(O, ce) | 0, s = s + Math.imul(O, he) | 0, n = n + Math.imul(C, de) | 0, i = (i = i + Math.imul(C, fe) | 0) + Math.imul(R, de) | 0, s = s + Math.imul(R, fe) | 0;
                                        var Re = (h + (n = n + Math.imul(I, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, be) | 0) + Math.imul(T, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(T, be) | 0) + (i >>> 13) | 0) + (Re >>> 26) | 0, Re &= 67108863, n = Math.imul(j, se), i = (i = Math.imul(j, oe)) + Math.imul(D, se) | 0, s = Math.imul(D, oe), n = n + Math.imul(U, ce) | 0, i = (i = i + Math.imul(U, he) | 0) + Math.imul(B, ce) | 0, s = s + Math.imul(B, he) | 0, n = n + Math.imul(P, de) | 0, i = (i = i + Math.imul(P, fe) | 0) + Math.imul(O, de) | 0, s = s + Math.imul(O, fe) | 0;
                                        var ke = (h + (n = n + Math.imul(C, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(C, be) | 0) + Math.imul(R, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(R, be) | 0) + (i >>> 13) | 0) + (ke >>> 26) | 0, ke &= 67108863, n = Math.imul(j, ce), i = (i = Math.imul(j, he)) + Math.imul(D, ce) | 0, s = Math.imul(D, he), n = n + Math.imul(U, de) | 0, i = (i = i + Math.imul(U, fe) | 0) + Math.imul(B, de) | 0, s = s + Math.imul(B, fe) | 0;
                                        var Pe = (h + (n = n + Math.imul(P, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, be) | 0) + Math.imul(O, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(O, be) | 0) + (i >>> 13) | 0) + (Pe >>> 26) | 0, Pe &= 67108863, n = Math.imul(j, de), i = (i = Math.imul(j, fe)) + Math.imul(D, de) | 0, s = Math.imul(D, fe);
                                        var Oe = (h + (n = n + Math.imul(U, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, be) | 0) + Math.imul(B, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(B, be) | 0) + (i >>> 13) | 0) + (Oe >>> 26) | 0, Oe &= 67108863;
                                        var Ne = (h + (n = Math.imul(j, pe)) | 0) + ((8191 & (i = (i = Math.imul(j, be)) + Math.imul(D, pe) | 0)) << 13) | 0;
                                        return h = ((s = Math.imul(D, be)) + (i >>> 13) | 0) + (Ne >>> 26) | 0, Ne &= 67108863, c[0] = ge, c[1] = me, c[2] = ye, c[3] = ve, c[4] = we, c[5] = _e, c[6] = Ee, c[7] = Se, c[8] = Ae, c[9] = Me, c[10] = Ie, c[11] = Te, c[12] = xe, c[13] = Ce, c[14] = Re, c[15] = ke, c[16] = Pe, c[17] = Oe, c[18] = Ne, 0 !== h && (c[19] = h, r.length++), r;
                                    };
                                    function b(e, t, r) {
                                        return (new g).mulp(e, t, r);
                                    }
                                    function g(e, t) {
                                        this.x = e, this.y = t;
                                    }
                                    Math.imul || (p = l), s.prototype.mulTo = function(e, t) {
                                        var r, n = this.length + e.length;
                                        return r = 10 === this.length && 10 === e.length ? p(this, e, t) : n < 63 ? l(this, e, t) : n < 1024 ? function(e, t, r) {
                                            r.negative = t.negative ^ e.negative, r.length = e.length + t.length;
                                            for(var n = 0, i = 0, s = 0; s < r.length - 1; s++){
                                                var o = i;
                                                i = 0;
                                                for(var a = 67108863 & n, c = Math.min(s, t.length - 1), h = Math.max(0, s - e.length + 1); h <= c; h++){
                                                    var u = s - h, d = (0 | e.words[u]) * (0 | t.words[h]), f = 67108863 & d;
                                                    a = 67108863 & (f = f + a | 0), i += (o = (o = o + (d / 67108864 | 0) | 0) + (f >>> 26) | 0) >>> 26, o &= 67108863;
                                                }
                                                r.words[s] = a, n = o, o = i;
                                            }
                                            return 0 !== n ? r.words[s] = n : r.length--, r.strip();
                                        }(this, e, t) : b(this, e, t), r;
                                    }, g.prototype.makeRBT = function(e) {
                                        for(var t = new Array(e), r = s.prototype._countBits(e) - 1, n = 0; n < e; n++)t[n] = this.revBin(n, r, e);
                                        return t;
                                    }, g.prototype.revBin = function(e, t, r) {
                                        if (0 === e || e === r - 1) return e;
                                        for(var n = 0, i = 0; i < t; i++)n |= (1 & e) << t - i - 1, e >>= 1;
                                        return n;
                                    }, g.prototype.permute = function(e, t, r, n, i, s) {
                                        for(var o = 0; o < s; o++)n[o] = t[e[o]], i[o] = r[e[o]];
                                    }, g.prototype.transform = function(e, t, r, n, i, s) {
                                        this.permute(s, e, t, r, n, i);
                                        for(var o = 1; o < i; o <<= 1)for(var a = o << 1, c = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), u = 0; u < i; u += a)for(var d = c, f = h, l = 0; l < o; l++){
                                            var p = r[u + l], b = n[u + l], g = r[u + l + o], m = n[u + l + o], y = d * g - f * m;
                                            m = d * m + f * g, g = y, r[u + l] = p + g, n[u + l] = b + m, r[u + l + o] = p - g, n[u + l + o] = b - m, l !== a && (y = c * d - h * f, f = c * f + h * d, d = y);
                                        }
                                    }, g.prototype.guessLen13b = function(e, t) {
                                        var r = 1 | Math.max(t, e), n = 1 & r, i = 0;
                                        for(r = r / 2 | 0; r; r >>>= 1)i++;
                                        return 1 << i + 1 + n;
                                    }, g.prototype.conjugate = function(e, t, r) {
                                        if (!(r <= 1)) for(var n = 0; n < r / 2; n++){
                                            var i = e[n];
                                            e[n] = e[r - n - 1], e[r - n - 1] = i, i = t[n], t[n] = -t[r - n - 1], t[r - n - 1] = -i;
                                        }
                                    }, g.prototype.normalize13b = function(e, t) {
                                        for(var r = 0, n = 0; n < t / 2; n++){
                                            var i = 8192 * Math.round(e[2 * n + 1] / t) + Math.round(e[2 * n] / t) + r;
                                            e[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
                                        }
                                        return e;
                                    }, g.prototype.convert13b = function(e, t, r, i) {
                                        for(var s = 0, o = 0; o < t; o++)s += 0 | e[o], r[2 * o] = 8191 & s, s >>>= 13, r[2 * o + 1] = 8191 & s, s >>>= 13;
                                        for(o = 2 * t; o < i; ++o)r[o] = 0;
                                        n(0 === s), n(!(-8192 & s));
                                    }, g.prototype.stub = function(e) {
                                        for(var t = new Array(e), r = 0; r < e; r++)t[r] = 0;
                                        return t;
                                    }, g.prototype.mulp = function(e, t, r) {
                                        var n = 2 * this.guessLen13b(e.length, t.length), i = this.makeRBT(n), s = this.stub(n), o = new Array(n), a = new Array(n), c = new Array(n), h = new Array(n), u = new Array(n), d = new Array(n), f = r.words;
                                        f.length = n, this.convert13b(e.words, e.length, o, n), this.convert13b(t.words, t.length, h, n), this.transform(o, s, a, c, n, i), this.transform(h, s, u, d, n, i);
                                        for(var l = 0; l < n; l++){
                                            var p = a[l] * u[l] - c[l] * d[l];
                                            c[l] = a[l] * d[l] + c[l] * u[l], a[l] = p;
                                        }
                                        return this.conjugate(a, c, n), this.transform(a, c, f, s, n, i), this.conjugate(f, s, n), this.normalize13b(f, n), r.negative = e.negative ^ t.negative, r.length = e.length + t.length, r.strip();
                                    }, s.prototype.mul = function(e) {
                                        var t = new s(null);
                                        return t.words = new Array(this.length + e.length), this.mulTo(e, t);
                                    }, s.prototype.mulf = function(e) {
                                        var t = new s(null);
                                        return t.words = new Array(this.length + e.length), b(this, e, t);
                                    }, s.prototype.imul = function(e) {
                                        return this.clone().mulTo(e, this);
                                    }, s.prototype.imuln = function(e) {
                                        n("number" == typeof e), n(e < 67108864);
                                        for(var t = 0, r = 0; r < this.length; r++){
                                            var i = (0 | this.words[r]) * e, s = (67108863 & i) + (67108863 & t);
                                            t >>= 26, t += i / 67108864 | 0, t += s >>> 26, this.words[r] = 67108863 & s;
                                        }
                                        return 0 !== t && (this.words[r] = t, this.length++), this;
                                    }, s.prototype.muln = function(e) {
                                        return this.clone().imuln(e);
                                    }, s.prototype.sqr = function() {
                                        return this.mul(this);
                                    }, s.prototype.isqr = function() {
                                        return this.imul(this.clone());
                                    }, s.prototype.pow = function(e) {
                                        var t = function(e) {
                                            for(var t = new Array(e.bitLength()), r = 0; r < t.length; r++){
                                                var n = r / 26 | 0, i = r % 26;
                                                t[r] = (e.words[n] & 1 << i) >>> i;
                                            }
                                            return t;
                                        }(e);
                                        if (0 === t.length) return new s(1);
                                        for(var r = this, n = 0; n < t.length && 0 === t[n]; n++, r = r.sqr());
                                        if (++n < t.length) for(var i = r.sqr(); n < t.length; n++, i = i.sqr())0 !== t[n] && (r = r.mul(i));
                                        return r;
                                    }, s.prototype.iushln = function(e) {
                                        n("number" == typeof e && e >= 0);
                                        var t, r = e % 26, i = (e - r) / 26, s = 67108863 >>> 26 - r << 26 - r;
                                        if (0 !== r) {
                                            var o = 0;
                                            for(t = 0; t < this.length; t++){
                                                var a = this.words[t] & s, c = (0 | this.words[t]) - a << r;
                                                this.words[t] = c | o, o = a >>> 26 - r;
                                            }
                                            o && (this.words[t] = o, this.length++);
                                        }
                                        if (0 !== i) {
                                            for(t = this.length - 1; t >= 0; t--)this.words[t + i] = this.words[t];
                                            for(t = 0; t < i; t++)this.words[t] = 0;
                                            this.length += i;
                                        }
                                        return this.strip();
                                    }, s.prototype.ishln = function(e) {
                                        return n(0 === this.negative), this.iushln(e);
                                    }, s.prototype.iushrn = function(e, t, r) {
                                        var i;
                                        n("number" == typeof e && e >= 0), i = t ? (t - t % 26) / 26 : 0;
                                        var s = e % 26, o = Math.min((e - s) / 26, this.length), a = 67108863 ^ 67108863 >>> s << s, c = r;
                                        if (i -= o, i = Math.max(0, i), c) {
                                            for(var h = 0; h < o; h++)c.words[h] = this.words[h];
                                            c.length = o;
                                        }
                                        if (0 === o) ;
                                        else if (this.length > o) for(this.length -= o, h = 0; h < this.length; h++)this.words[h] = this.words[h + o];
                                        else this.words[0] = 0, this.length = 1;
                                        var u = 0;
                                        for(h = this.length - 1; h >= 0 && (0 !== u || h >= i); h--){
                                            var d = 0 | this.words[h];
                                            this.words[h] = u << 26 - s | d >>> s, u = d & a;
                                        }
                                        return c && 0 !== u && (c.words[c.length++] = u), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
                                    }, s.prototype.ishrn = function(e, t, r) {
                                        return n(0 === this.negative), this.iushrn(e, t, r);
                                    }, s.prototype.shln = function(e) {
                                        return this.clone().ishln(e);
                                    }, s.prototype.ushln = function(e) {
                                        return this.clone().iushln(e);
                                    }, s.prototype.shrn = function(e) {
                                        return this.clone().ishrn(e);
                                    }, s.prototype.ushrn = function(e) {
                                        return this.clone().iushrn(e);
                                    }, s.prototype.testn = function(e) {
                                        n("number" == typeof e && e >= 0);
                                        var t = e % 26, r = (e - t) / 26, i = 1 << t;
                                        return !(this.length <= r || !(this.words[r] & i));
                                    }, s.prototype.imaskn = function(e) {
                                        n("number" == typeof e && e >= 0);
                                        var t = e % 26, r = (e - t) / 26;
                                        if (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                                        if (0 !== t && r++, this.length = Math.min(r, this.length), 0 !== t) {
                                            var i = 67108863 ^ 67108863 >>> t << t;
                                            this.words[this.length - 1] &= i;
                                        }
                                        return this.strip();
                                    }, s.prototype.maskn = function(e) {
                                        return this.clone().imaskn(e);
                                    }, s.prototype.iaddn = function(e) {
                                        return n("number" == typeof e), n(e < 67108864), e < 0 ? this.isubn(-e) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < e ? (this.words[0] = e - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(e), this.negative = 1, this) : this._iaddn(e);
                                    }, s.prototype._iaddn = function(e) {
                                        this.words[0] += e;
                                        for(var t = 0; t < this.length && this.words[t] >= 67108864; t++)this.words[t] -= 67108864, t === this.length - 1 ? this.words[t + 1] = 1 : this.words[t + 1]++;
                                        return this.length = Math.max(this.length, t + 1), this;
                                    }, s.prototype.isubn = function(e) {
                                        if (n("number" == typeof e), n(e < 67108864), e < 0) return this.iaddn(-e);
                                        if (0 !== this.negative) return this.negative = 0, this.iaddn(e), this.negative = 1, this;
                                        if (this.words[0] -= e, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                                        else for(var t = 0; t < this.length && this.words[t] < 0; t++)this.words[t] += 67108864, this.words[t + 1] -= 1;
                                        return this.strip();
                                    }, s.prototype.addn = function(e) {
                                        return this.clone().iaddn(e);
                                    }, s.prototype.subn = function(e) {
                                        return this.clone().isubn(e);
                                    }, s.prototype.iabs = function() {
                                        return this.negative = 0, this;
                                    }, s.prototype.abs = function() {
                                        return this.clone().iabs();
                                    }, s.prototype._ishlnsubmul = function(e, t, r) {
                                        var i, s, o = e.length + r;
                                        this._expand(o);
                                        var a = 0;
                                        for(i = 0; i < e.length; i++){
                                            s = (0 | this.words[i + r]) + a;
                                            var c = (0 | e.words[i]) * t;
                                            a = ((s -= 67108863 & c) >> 26) - (c / 67108864 | 0), this.words[i + r] = 67108863 & s;
                                        }
                                        for(; i < this.length - r; i++)a = (s = (0 | this.words[i + r]) + a) >> 26, this.words[i + r] = 67108863 & s;
                                        if (0 === a) return this.strip();
                                        for(n(-1 === a), a = 0, i = 0; i < this.length; i++)a = (s = -(0 | this.words[i]) + a) >> 26, this.words[i] = 67108863 & s;
                                        return this.negative = 1, this.strip();
                                    }, s.prototype._wordDiv = function(e, t) {
                                        var r = (this.length, e.length), n = this.clone(), i = e, o = 0 | i.words[i.length - 1];
                                        0 != (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                                        var a, c = n.length - i.length;
                                        if ("mod" !== t) {
                                            (a = new s(null)).length = c + 1, a.words = new Array(a.length);
                                            for(var h = 0; h < a.length; h++)a.words[h] = 0;
                                        }
                                        var u = n.clone()._ishlnsubmul(i, 1, c);
                                        0 === u.negative && (n = u, a && (a.words[c] = 1));
                                        for(var d = c - 1; d >= 0; d--){
                                            var f = 67108864 * (0 | n.words[i.length + d]) + (0 | n.words[i.length + d - 1]);
                                            for(f = Math.min(f / o | 0, 67108863), n._ishlnsubmul(i, f, d); 0 !== n.negative;)f--, n.negative = 0, n._ishlnsubmul(i, 1, d), n.isZero() || (n.negative ^= 1);
                                            a && (a.words[d] = f);
                                        }
                                        return a && a.strip(), n.strip(), "div" !== t && 0 !== r && n.iushrn(r), {
                                            div: a || null,
                                            mod: n
                                        };
                                    }, s.prototype.divmod = function(e, t, r) {
                                        return n(!e.isZero()), this.isZero() ? {
                                            div: new s(0),
                                            mod: new s(0)
                                        } : 0 !== this.negative && 0 === e.negative ? (a = this.neg().divmod(e, t), "mod" !== t && (i = a.div.neg()), "div" !== t && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(e)), {
                                            div: i,
                                            mod: o
                                        }) : 0 === this.negative && 0 !== e.negative ? (a = this.divmod(e.neg(), t), "mod" !== t && (i = a.div.neg()), {
                                            div: i,
                                            mod: a.mod
                                        }) : this.negative & e.negative ? (a = this.neg().divmod(e.neg(), t), "div" !== t && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(e)), {
                                            div: a.div,
                                            mod: o
                                        }) : e.length > this.length || this.cmp(e) < 0 ? {
                                            div: new s(0),
                                            mod: this
                                        } : 1 === e.length ? "div" === t ? {
                                            div: this.divn(e.words[0]),
                                            mod: null
                                        } : "mod" === t ? {
                                            div: null,
                                            mod: new s(this.modn(e.words[0]))
                                        } : {
                                            div: this.divn(e.words[0]),
                                            mod: new s(this.modn(e.words[0]))
                                        } : this._wordDiv(e, t);
                                        "TURBOPACK unreachable";
                                        var i, o, a;
                                    }, s.prototype.div = function(e) {
                                        return this.divmod(e, "div", !1).div;
                                    }, s.prototype.mod = function(e) {
                                        return this.divmod(e, "mod", !1).mod;
                                    }, s.prototype.umod = function(e) {
                                        return this.divmod(e, "mod", !0).mod;
                                    }, s.prototype.divRound = function(e) {
                                        var t = this.divmod(e);
                                        if (t.mod.isZero()) return t.div;
                                        var r = 0 !== t.div.negative ? t.mod.isub(e) : t.mod, n = e.ushrn(1), i = e.andln(1), s = r.cmp(n);
                                        return s < 0 || 1 === i && 0 === s ? t.div : 0 !== t.div.negative ? t.div.isubn(1) : t.div.iaddn(1);
                                    }, s.prototype.modn = function(e) {
                                        n(e <= 67108863);
                                        for(var t = (1 << 26) % e, r = 0, i = this.length - 1; i >= 0; i--)r = (t * r + (0 | this.words[i])) % e;
                                        return r;
                                    }, s.prototype.idivn = function(e) {
                                        n(e <= 67108863);
                                        for(var t = 0, r = this.length - 1; r >= 0; r--){
                                            var i = (0 | this.words[r]) + 67108864 * t;
                                            this.words[r] = i / e | 0, t = i % e;
                                        }
                                        return this.strip();
                                    }, s.prototype.divn = function(e) {
                                        return this.clone().idivn(e);
                                    }, s.prototype.egcd = function(e) {
                                        n(0 === e.negative), n(!e.isZero());
                                        var t = this, r = e.clone();
                                        t = 0 !== t.negative ? t.umod(e) : t.clone();
                                        for(var i = new s(1), o = new s(0), a = new s(0), c = new s(1), h = 0; t.isEven() && r.isEven();)t.iushrn(1), r.iushrn(1), ++h;
                                        for(var u = r.clone(), d = t.clone(); !t.isZero();){
                                            for(var f = 0, l = 1; !(t.words[0] & l) && f < 26; ++f, l <<= 1);
                                            if (f > 0) for(t.iushrn(f); f-- > 0;)(i.isOdd() || o.isOdd()) && (i.iadd(u), o.isub(d)), i.iushrn(1), o.iushrn(1);
                                            for(var p = 0, b = 1; !(r.words[0] & b) && p < 26; ++p, b <<= 1);
                                            if (p > 0) for(r.iushrn(p); p-- > 0;)(a.isOdd() || c.isOdd()) && (a.iadd(u), c.isub(d)), a.iushrn(1), c.iushrn(1);
                                            t.cmp(r) >= 0 ? (t.isub(r), i.isub(a), o.isub(c)) : (r.isub(t), a.isub(i), c.isub(o));
                                        }
                                        return {
                                            a,
                                            b: c,
                                            gcd: r.iushln(h)
                                        };
                                    }, s.prototype._invmp = function(e) {
                                        n(0 === e.negative), n(!e.isZero());
                                        var t = this, r = e.clone();
                                        t = 0 !== t.negative ? t.umod(e) : t.clone();
                                        for(var i, o = new s(1), a = new s(0), c = r.clone(); t.cmpn(1) > 0 && r.cmpn(1) > 0;){
                                            for(var h = 0, u = 1; !(t.words[0] & u) && h < 26; ++h, u <<= 1);
                                            if (h > 0) for(t.iushrn(h); h-- > 0;)o.isOdd() && o.iadd(c), o.iushrn(1);
                                            for(var d = 0, f = 1; !(r.words[0] & f) && d < 26; ++d, f <<= 1);
                                            if (d > 0) for(r.iushrn(d); d-- > 0;)a.isOdd() && a.iadd(c), a.iushrn(1);
                                            t.cmp(r) >= 0 ? (t.isub(r), o.isub(a)) : (r.isub(t), a.isub(o));
                                        }
                                        return (i = 0 === t.cmpn(1) ? o : a).cmpn(0) < 0 && i.iadd(e), i;
                                    }, s.prototype.gcd = function(e) {
                                        if (this.isZero()) return e.abs();
                                        if (e.isZero()) return this.abs();
                                        var t = this.clone(), r = e.clone();
                                        t.negative = 0, r.negative = 0;
                                        for(var n = 0; t.isEven() && r.isEven(); n++)t.iushrn(1), r.iushrn(1);
                                        for(;;){
                                            for(; t.isEven();)t.iushrn(1);
                                            for(; r.isEven();)r.iushrn(1);
                                            var i = t.cmp(r);
                                            if (i < 0) {
                                                var s = t;
                                                t = r, r = s;
                                            } else if (0 === i || 0 === r.cmpn(1)) break;
                                            t.isub(r);
                                        }
                                        return r.iushln(n);
                                    }, s.prototype.invm = function(e) {
                                        return this.egcd(e).a.umod(e);
                                    }, s.prototype.isEven = function() {
                                        return !(1 & this.words[0]);
                                    }, s.prototype.isOdd = function() {
                                        return !(1 & ~this.words[0]);
                                    }, s.prototype.andln = function(e) {
                                        return this.words[0] & e;
                                    }, s.prototype.bincn = function(e) {
                                        n("number" == typeof e);
                                        var t = e % 26, r = (e - t) / 26, i = 1 << t;
                                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= i, this;
                                        for(var s = i, o = r; 0 !== s && o < this.length; o++){
                                            var a = 0 | this.words[o];
                                            s = (a += s) >>> 26, a &= 67108863, this.words[o] = a;
                                        }
                                        return 0 !== s && (this.words[o] = s, this.length++), this;
                                    }, s.prototype.isZero = function() {
                                        return 1 === this.length && 0 === this.words[0];
                                    }, s.prototype.cmpn = function(e) {
                                        var t, r = e < 0;
                                        if (0 !== this.negative && !r) return -1;
                                        if (0 === this.negative && r) return 1;
                                        if (this.strip(), this.length > 1) t = 1;
                                        else {
                                            r && (e = -e), n(e <= 67108863, "Number is too big");
                                            var i = 0 | this.words[0];
                                            t = i === e ? 0 : i < e ? -1 : 1;
                                        }
                                        return 0 !== this.negative ? 0 | -t : t;
                                    }, s.prototype.cmp = function(e) {
                                        if (0 !== this.negative && 0 === e.negative) return -1;
                                        if (0 === this.negative && 0 !== e.negative) return 1;
                                        var t = this.ucmp(e);
                                        return 0 !== this.negative ? 0 | -t : t;
                                    }, s.prototype.ucmp = function(e) {
                                        if (this.length > e.length) return 1;
                                        if (this.length < e.length) return -1;
                                        for(var t = 0, r = this.length - 1; r >= 0; r--){
                                            var n = 0 | this.words[r], i = 0 | e.words[r];
                                            if (n !== i) {
                                                n < i ? t = -1 : n > i && (t = 1);
                                                break;
                                            }
                                        }
                                        return t;
                                    }, s.prototype.gtn = function(e) {
                                        return 1 === this.cmpn(e);
                                    }, s.prototype.gt = function(e) {
                                        return 1 === this.cmp(e);
                                    }, s.prototype.gten = function(e) {
                                        return this.cmpn(e) >= 0;
                                    }, s.prototype.gte = function(e) {
                                        return this.cmp(e) >= 0;
                                    }, s.prototype.ltn = function(e) {
                                        return -1 === this.cmpn(e);
                                    }, s.prototype.lt = function(e) {
                                        return -1 === this.cmp(e);
                                    }, s.prototype.lten = function(e) {
                                        return this.cmpn(e) <= 0;
                                    }, s.prototype.lte = function(e) {
                                        return this.cmp(e) <= 0;
                                    }, s.prototype.eqn = function(e) {
                                        return 0 === this.cmpn(e);
                                    }, s.prototype.eq = function(e) {
                                        return 0 === this.cmp(e);
                                    }, s.red = function(e) {
                                        return new S(e);
                                    }, s.prototype.toRed = function(e) {
                                        return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), e.convertTo(this)._forceRed(e);
                                    }, s.prototype.fromRed = function() {
                                        return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                                    }, s.prototype._forceRed = function(e) {
                                        return this.red = e, this;
                                    }, s.prototype.forceRed = function(e) {
                                        return n(!this.red, "Already a number in reduction context"), this._forceRed(e);
                                    }, s.prototype.redAdd = function(e) {
                                        return n(this.red, "redAdd works only with red numbers"), this.red.add(this, e);
                                    }, s.prototype.redIAdd = function(e) {
                                        return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, e);
                                    }, s.prototype.redSub = function(e) {
                                        return n(this.red, "redSub works only with red numbers"), this.red.sub(this, e);
                                    }, s.prototype.redISub = function(e) {
                                        return n(this.red, "redISub works only with red numbers"), this.red.isub(this, e);
                                    }, s.prototype.redShl = function(e) {
                                        return n(this.red, "redShl works only with red numbers"), this.red.shl(this, e);
                                    }, s.prototype.redMul = function(e) {
                                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.mul(this, e);
                                    }, s.prototype.redIMul = function(e) {
                                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.imul(this, e);
                                    }, s.prototype.redSqr = function() {
                                        return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                                    }, s.prototype.redISqr = function() {
                                        return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                                    }, s.prototype.redSqrt = function() {
                                        return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                                    }, s.prototype.redInvm = function() {
                                        return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                                    }, s.prototype.redNeg = function() {
                                        return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                                    }, s.prototype.redPow = function(e) {
                                        return n(this.red && !e.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, e);
                                    };
                                    var m = {
                                        k256: null,
                                        p224: null,
                                        p192: null,
                                        p25519: null
                                    };
                                    function y(e, t) {
                                        this.name = e, this.p = new s(t, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
                                    }
                                    function v() {
                                        y.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                                    }
                                    function w() {
                                        y.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                                    }
                                    function _() {
                                        y.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                                    }
                                    function E() {
                                        y.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                                    }
                                    function S(e) {
                                        if ("string" == typeof e) {
                                            var t = s._prime(e);
                                            this.m = t.p, this.prime = t;
                                        } else n(e.gtn(1), "modulus must be greater than 1"), this.m = e, this.prime = null;
                                    }
                                    function A(e) {
                                        S.call(this, e), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
                                    }
                                    y.prototype._tmp = function() {
                                        var e = new s(null);
                                        return e.words = new Array(Math.ceil(this.n / 13)), e;
                                    }, y.prototype.ireduce = function(e) {
                                        var t, r = e;
                                        do {
                                            this.split(r, this.tmp), t = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
                                        }while (t > this.n)
                                        var n = t < this.n ? -1 : r.ucmp(this.p);
                                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                                    }, y.prototype.split = function(e, t) {
                                        e.iushrn(this.n, 0, t);
                                    }, y.prototype.imulK = function(e) {
                                        return e.imul(this.k);
                                    }, i(v, y), v.prototype.split = function(e, t) {
                                        for(var r = 4194303, n = Math.min(e.length, 9), i = 0; i < n; i++)t.words[i] = e.words[i];
                                        if (t.length = n, e.length <= 9) return e.words[0] = 0, void (e.length = 1);
                                        var s = e.words[9];
                                        for(t.words[t.length++] = s & r, i = 10; i < e.length; i++){
                                            var o = 0 | e.words[i];
                                            e.words[i - 10] = (o & r) << 4 | s >>> 22, s = o;
                                        }
                                        s >>>= 22, e.words[i - 10] = s, 0 === s && e.length > 10 ? e.length -= 10 : e.length -= 9;
                                    }, v.prototype.imulK = function(e) {
                                        e.words[e.length] = 0, e.words[e.length + 1] = 0, e.length += 2;
                                        for(var t = 0, r = 0; r < e.length; r++){
                                            var n = 0 | e.words[r];
                                            t += 977 * n, e.words[r] = 67108863 & t, t = 64 * n + (t / 67108864 | 0);
                                        }
                                        return 0 === e.words[e.length - 1] && (e.length--, 0 === e.words[e.length - 1] && e.length--), e;
                                    }, i(w, y), i(_, y), i(E, y), E.prototype.imulK = function(e) {
                                        for(var t = 0, r = 0; r < e.length; r++){
                                            var n = 19 * (0 | e.words[r]) + t, i = 67108863 & n;
                                            n >>>= 26, e.words[r] = i, t = n;
                                        }
                                        return 0 !== t && (e.words[e.length++] = t), e;
                                    }, s._prime = function(e) {
                                        if (m[e]) return m[e];
                                        var t;
                                        if ("k256" === e) t = new v;
                                        else if ("p224" === e) t = new w;
                                        else if ("p192" === e) t = new _;
                                        else {
                                            if ("p25519" !== e) throw new Error("Unknown prime " + e);
                                            t = new E;
                                        }
                                        return m[e] = t, t;
                                    }, S.prototype._verify1 = function(e) {
                                        n(0 === e.negative, "red works only with positives"), n(e.red, "red works only with red numbers");
                                    }, S.prototype._verify2 = function(e, t) {
                                        n(!(e.negative | t.negative), "red works only with positives"), n(e.red && e.red === t.red, "red works only with red numbers");
                                    }, S.prototype.imod = function(e) {
                                        return this.prime ? this.prime.ireduce(e)._forceRed(this) : e.umod(this.m)._forceRed(this);
                                    }, S.prototype.neg = function(e) {
                                        return e.isZero() ? e.clone() : this.m.sub(e)._forceRed(this);
                                    }, S.prototype.add = function(e, t) {
                                        this._verify2(e, t);
                                        var r = e.add(t);
                                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
                                    }, S.prototype.iadd = function(e, t) {
                                        this._verify2(e, t);
                                        var r = e.iadd(t);
                                        return r.cmp(this.m) >= 0 && r.isub(this.m), r;
                                    }, S.prototype.sub = function(e, t) {
                                        this._verify2(e, t);
                                        var r = e.sub(t);
                                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
                                    }, S.prototype.isub = function(e, t) {
                                        this._verify2(e, t);
                                        var r = e.isub(t);
                                        return r.cmpn(0) < 0 && r.iadd(this.m), r;
                                    }, S.prototype.shl = function(e, t) {
                                        return this._verify1(e), this.imod(e.ushln(t));
                                    }, S.prototype.imul = function(e, t) {
                                        return this._verify2(e, t), this.imod(e.imul(t));
                                    }, S.prototype.mul = function(e, t) {
                                        return this._verify2(e, t), this.imod(e.mul(t));
                                    }, S.prototype.isqr = function(e) {
                                        return this.imul(e, e.clone());
                                    }, S.prototype.sqr = function(e) {
                                        return this.mul(e, e);
                                    }, S.prototype.sqrt = function(e) {
                                        if (e.isZero()) return e.clone();
                                        var t = this.m.andln(3);
                                        if (n(t % 2 == 1), 3 === t) {
                                            var r = this.m.add(new s(1)).iushrn(2);
                                            return this.pow(e, r);
                                        }
                                        for(var i = this.m.subn(1), o = 0; !i.isZero() && 0 === i.andln(1);)o++, i.iushrn(1);
                                        n(!i.isZero());
                                        var a = new s(1).toRed(this), c = a.redNeg(), h = this.m.subn(1).iushrn(1), u = this.m.bitLength();
                                        for(u = new s(2 * u * u).toRed(this); 0 !== this.pow(u, h).cmp(c);)u.redIAdd(c);
                                        for(var d = this.pow(u, i), f = this.pow(e, i.addn(1).iushrn(1)), l = this.pow(e, i), p = o; 0 !== l.cmp(a);){
                                            for(var b = l, g = 0; 0 !== b.cmp(a); g++)b = b.redSqr();
                                            n(g < p);
                                            var m = this.pow(d, new s(1).iushln(p - g - 1));
                                            f = f.redMul(m), d = m.redSqr(), l = l.redMul(d), p = g;
                                        }
                                        return f;
                                    }, S.prototype.invm = function(e) {
                                        var t = e._invmp(this.m);
                                        return 0 !== t.negative ? (t.negative = 0, this.imod(t).redNeg()) : this.imod(t);
                                    }, S.prototype.pow = function(e, t) {
                                        if (t.isZero()) return new s(1).toRed(this);
                                        if (0 === t.cmpn(1)) return e.clone();
                                        var r = new Array(16);
                                        r[0] = new s(1).toRed(this), r[1] = e;
                                        for(var n = 2; n < r.length; n++)r[n] = this.mul(r[n - 1], e);
                                        var i = r[0], o = 0, a = 0, c = t.bitLength() % 26;
                                        for(0 === c && (c = 26), n = t.length - 1; n >= 0; n--){
                                            for(var h = t.words[n], u = c - 1; u >= 0; u--){
                                                var d = h >> u & 1;
                                                i !== r[0] && (i = this.sqr(i)), 0 !== d || 0 !== o ? (o <<= 1, o |= d, (4 == ++a || 0 === n && 0 === u) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
                                            }
                                            c = 26;
                                        }
                                        return i;
                                    }, S.prototype.convertTo = function(e) {
                                        var t = e.umod(this.m);
                                        return t === e ? t.clone() : t;
                                    }, S.prototype.convertFrom = function(e) {
                                        var t = e.clone();
                                        return t.red = null, t;
                                    }, s.mont = function(e) {
                                        return new A(e);
                                    }, i(A, S), A.prototype.convertTo = function(e) {
                                        return this.imod(e.ushln(this.shift));
                                    }, A.prototype.convertFrom = function(e) {
                                        var t = this.imod(e.mul(this.rinv));
                                        return t.red = null, t;
                                    }, A.prototype.imul = function(e, t) {
                                        if (e.isZero() || t.isZero()) return e.words[0] = 0, e.length = 1, e;
                                        var r = e.imul(t), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), s = i;
                                        return i.cmp(this.m) >= 0 ? s = i.isub(this.m) : i.cmpn(0) < 0 && (s = i.iadd(this.m)), s._forceRed(this);
                                    }, A.prototype.mul = function(e, t) {
                                        if (e.isZero() || t.isZero()) return new s(0)._forceRed(this);
                                        var r = e.mul(t), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                                    }, A.prototype.invm = function(e) {
                                        return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this);
                                    };
                                }(e = r.nmd(e), this);
                            },
                            3900: function(e, t, r) {
                                !function(e, t) {
                                    "use strict";
                                    function n(e, t) {
                                        if (!e) throw new Error(t || "Assertion failed");
                                    }
                                    function i(e, t) {
                                        e.super_ = t;
                                        var r = function() {};
                                        r.prototype = t.prototype, e.prototype = new r, e.prototype.constructor = e;
                                    }
                                    function s(e, t, r) {
                                        if (s.isBN(e)) return e;
                                        this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== e && ("le" !== t && "be" !== t || (r = t, t = 10), this._init(e || 0, t || 10, r || "be"));
                                    }
                                    var o;
                                    "object" == typeof e ? e.exports = s : t.BN = s, s.BN = s, s.wordSize = 26;
                                    try {
                                        o = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(9322).Buffer;
                                    } catch (e) {}
                                    function a(e, t) {
                                        var r = e.charCodeAt(t);
                                        return r >= 48 && r <= 57 ? r - 48 : r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : void n(!1, "Invalid character in " + e);
                                    }
                                    function c(e, t, r) {
                                        var n = a(e, r);
                                        return r - 1 >= t && (n |= a(e, r - 1) << 4), n;
                                    }
                                    function h(e, t, r, i) {
                                        for(var s = 0, o = 0, a = Math.min(e.length, r), c = t; c < a; c++){
                                            var h = e.charCodeAt(c) - 48;
                                            s *= i, o = h >= 49 ? h - 49 + 10 : h >= 17 ? h - 17 + 10 : h, n(h >= 0 && o < i, "Invalid character"), s += o;
                                        }
                                        return s;
                                    }
                                    function u(e, t) {
                                        e.words = t.words, e.length = t.length, e.negative = t.negative, e.red = t.red;
                                    }
                                    if (s.isBN = function(e) {
                                        return e instanceof s || null !== e && "object" == typeof e && e.constructor.wordSize === s.wordSize && Array.isArray(e.words);
                                    }, s.max = function(e, t) {
                                        return e.cmp(t) > 0 ? e : t;
                                    }, s.min = function(e, t) {
                                        return e.cmp(t) < 0 ? e : t;
                                    }, s.prototype._init = function(e, t, r) {
                                        if ("number" == typeof e) return this._initNumber(e, t, r);
                                        if ("object" == typeof e) return this._initArray(e, t, r);
                                        "hex" === t && (t = 16), n(t === (0 | t) && t >= 2 && t <= 36);
                                        var i = 0;
                                        "-" === (e = e.toString().replace(/\s+/g, ""))[0] && (i++, this.negative = 1), i < e.length && (16 === t ? this._parseHex(e, i, r) : (this._parseBase(e, t, i), "le" === r && this._initArray(this.toArray(), t, r)));
                                    }, s.prototype._initNumber = function(e, t, r) {
                                        e < 0 && (this.negative = 1, e = -e), e < 67108864 ? (this.words = [
                                            67108863 & e
                                        ], this.length = 1) : e < 4503599627370496 ? (this.words = [
                                            67108863 & e,
                                            e / 67108864 & 67108863
                                        ], this.length = 2) : (n(e < 9007199254740992), this.words = [
                                            67108863 & e,
                                            e / 67108864 & 67108863,
                                            1
                                        ], this.length = 3), "le" === r && this._initArray(this.toArray(), t, r);
                                    }, s.prototype._initArray = function(e, t, r) {
                                        if (n("number" == typeof e.length), e.length <= 0) return this.words = [
                                            0
                                        ], this.length = 1, this;
                                        this.length = Math.ceil(e.length / 3), this.words = new Array(this.length);
                                        for(var i = 0; i < this.length; i++)this.words[i] = 0;
                                        var s, o, a = 0;
                                        if ("be" === r) for(i = e.length - 1, s = 0; i >= 0; i -= 3)o = e[i] | e[i - 1] << 8 | e[i - 2] << 16, this.words[s] |= o << a & 67108863, this.words[s + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, s++);
                                        else if ("le" === r) for(i = 0, s = 0; i < e.length; i += 3)o = e[i] | e[i + 1] << 8 | e[i + 2] << 16, this.words[s] |= o << a & 67108863, this.words[s + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, s++);
                                        return this._strip();
                                    }, s.prototype._parseHex = function(e, t, r) {
                                        this.length = Math.ceil((e.length - t) / 6), this.words = new Array(this.length);
                                        for(var n = 0; n < this.length; n++)this.words[n] = 0;
                                        var i, s = 0, o = 0;
                                        if ("be" === r) for(n = e.length - 1; n >= t; n -= 2)i = c(e, t, n) << s, this.words[o] |= 67108863 & i, s >= 18 ? (s -= 18, o += 1, this.words[o] |= i >>> 26) : s += 8;
                                        else for(n = (e.length - t) % 2 == 0 ? t + 1 : t; n < e.length; n += 2)i = c(e, t, n) << s, this.words[o] |= 67108863 & i, s >= 18 ? (s -= 18, o += 1, this.words[o] |= i >>> 26) : s += 8;
                                        this._strip();
                                    }, s.prototype._parseBase = function(e, t, r) {
                                        this.words = [
                                            0
                                        ], this.length = 1;
                                        for(var n = 0, i = 1; i <= 67108863; i *= t)n++;
                                        n--, i = i / t | 0;
                                        for(var s = e.length - r, o = s % n, a = Math.min(s, s - o) + r, c = 0, u = r; u < a; u += n)c = h(e, u, u + n, t), this.imuln(i), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                                        if (0 !== o) {
                                            var d = 1;
                                            for(c = h(e, u, e.length, t), u = 0; u < o; u++)d *= t;
                                            this.imuln(d), this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                                        }
                                        this._strip();
                                    }, s.prototype.copy = function(e) {
                                        e.words = new Array(this.length);
                                        for(var t = 0; t < this.length; t++)e.words[t] = this.words[t];
                                        e.length = this.length, e.negative = this.negative, e.red = this.red;
                                    }, s.prototype._move = function(e) {
                                        u(e, this);
                                    }, s.prototype.clone = function() {
                                        var e = new s(null);
                                        return this.copy(e), e;
                                    }, s.prototype._expand = function(e) {
                                        for(; this.length < e;)this.words[this.length++] = 0;
                                        return this;
                                    }, s.prototype._strip = function() {
                                        for(; this.length > 1 && 0 === this.words[this.length - 1];)this.length--;
                                        return this._normSign();
                                    }, s.prototype._normSign = function() {
                                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
                                    }, "undefined" != typeof Symbol && "function" == typeof Symbol.for) try {
                                        s.prototype[Symbol.for("nodejs.util.inspect.custom")] = d;
                                    } catch (e) {
                                        s.prototype.inspect = d;
                                    }
                                    else s.prototype.inspect = d;
                                    function d() {
                                        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
                                    }
                                    var f = [
                                        "",
                                        "0",
                                        "00",
                                        "000",
                                        "0000",
                                        "00000",
                                        "000000",
                                        "0000000",
                                        "00000000",
                                        "000000000",
                                        "0000000000",
                                        "00000000000",
                                        "000000000000",
                                        "0000000000000",
                                        "00000000000000",
                                        "000000000000000",
                                        "0000000000000000",
                                        "00000000000000000",
                                        "000000000000000000",
                                        "0000000000000000000",
                                        "00000000000000000000",
                                        "000000000000000000000",
                                        "0000000000000000000000",
                                        "00000000000000000000000",
                                        "000000000000000000000000",
                                        "0000000000000000000000000"
                                    ], l = [
                                        0,
                                        0,
                                        25,
                                        16,
                                        12,
                                        11,
                                        10,
                                        9,
                                        8,
                                        8,
                                        7,
                                        7,
                                        7,
                                        7,
                                        6,
                                        6,
                                        6,
                                        6,
                                        6,
                                        6,
                                        6,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5,
                                        5
                                    ], p = [
                                        0,
                                        0,
                                        33554432,
                                        43046721,
                                        16777216,
                                        48828125,
                                        60466176,
                                        40353607,
                                        16777216,
                                        43046721,
                                        1e7,
                                        19487171,
                                        35831808,
                                        62748517,
                                        7529536,
                                        11390625,
                                        16777216,
                                        24137569,
                                        34012224,
                                        47045881,
                                        64e6,
                                        4084101,
                                        5153632,
                                        6436343,
                                        7962624,
                                        9765625,
                                        11881376,
                                        14348907,
                                        17210368,
                                        20511149,
                                        243e5,
                                        28629151,
                                        33554432,
                                        39135393,
                                        45435424,
                                        52521875,
                                        60466176
                                    ];
                                    function b(e, t, r) {
                                        r.negative = t.negative ^ e.negative;
                                        var n = e.length + t.length | 0;
                                        r.length = n, n = n - 1 | 0;
                                        var i = 0 | e.words[0], s = 0 | t.words[0], o = i * s, a = 67108863 & o, c = o / 67108864 | 0;
                                        r.words[0] = a;
                                        for(var h = 1; h < n; h++){
                                            for(var u = c >>> 26, d = 67108863 & c, f = Math.min(h, t.length - 1), l = Math.max(0, h - e.length + 1); l <= f; l++){
                                                var p = h - l | 0;
                                                u += (o = (i = 0 | e.words[p]) * (s = 0 | t.words[l]) + d) / 67108864 | 0, d = 67108863 & o;
                                            }
                                            r.words[h] = 0 | d, c = 0 | u;
                                        }
                                        return 0 !== c ? r.words[h] = 0 | c : r.length--, r._strip();
                                    }
                                    s.prototype.toString = function(e, t) {
                                        var r;
                                        if (t = 0 | t || 1, 16 === (e = e || 10) || "hex" === e) {
                                            r = "";
                                            for(var i = 0, s = 0, o = 0; o < this.length; o++){
                                                var a = this.words[o], c = (16777215 & (a << i | s)).toString(16);
                                                s = a >>> 24 - i & 16777215, (i += 2) >= 26 && (i -= 26, o--), r = 0 !== s || o !== this.length - 1 ? f[6 - c.length] + c + r : c + r;
                                            }
                                            for(0 !== s && (r = s.toString(16) + r); r.length % t != 0;)r = "0" + r;
                                            return 0 !== this.negative && (r = "-" + r), r;
                                        }
                                        if (e === (0 | e) && e >= 2 && e <= 36) {
                                            var h = l[e], u = p[e];
                                            r = "";
                                            var d = this.clone();
                                            for(d.negative = 0; !d.isZero();){
                                                var b = d.modrn(u).toString(e);
                                                r = (d = d.idivn(u)).isZero() ? b + r : f[h - b.length] + b + r;
                                            }
                                            for(this.isZero() && (r = "0" + r); r.length % t != 0;)r = "0" + r;
                                            return 0 !== this.negative && (r = "-" + r), r;
                                        }
                                        n(!1, "Base should be between 2 and 36");
                                    }, s.prototype.toNumber = function() {
                                        var e = this.words[0];
                                        return 2 === this.length ? e += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? e += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -e : e;
                                    }, s.prototype.toJSON = function() {
                                        return this.toString(16, 2);
                                    }, o && (s.prototype.toBuffer = function(e, t) {
                                        return this.toArrayLike(o, e, t);
                                    }), s.prototype.toArray = function(e, t) {
                                        return this.toArrayLike(Array, e, t);
                                    }, s.prototype.toArrayLike = function(e, t, r) {
                                        this._strip();
                                        var i = this.byteLength(), s = r || Math.max(1, i);
                                        n(i <= s, "byte array longer than desired length"), n(s > 0, "Requested array length <= 0");
                                        var o = function(e, t) {
                                            return e.allocUnsafe ? e.allocUnsafe(t) : new e(t);
                                        }(e, s);
                                        return this["_toArrayLike" + ("le" === t ? "LE" : "BE")](o, i), o;
                                    }, s.prototype._toArrayLikeLE = function(e, t) {
                                        for(var r = 0, n = 0, i = 0, s = 0; i < this.length; i++){
                                            var o = this.words[i] << s | n;
                                            e[r++] = 255 & o, r < e.length && (e[r++] = o >> 8 & 255), r < e.length && (e[r++] = o >> 16 & 255), 6 === s ? (r < e.length && (e[r++] = o >> 24 & 255), n = 0, s = 0) : (n = o >>> 24, s += 2);
                                        }
                                        if (r < e.length) for(e[r++] = n; r < e.length;)e[r++] = 0;
                                    }, s.prototype._toArrayLikeBE = function(e, t) {
                                        for(var r = e.length - 1, n = 0, i = 0, s = 0; i < this.length; i++){
                                            var o = this.words[i] << s | n;
                                            e[r--] = 255 & o, r >= 0 && (e[r--] = o >> 8 & 255), r >= 0 && (e[r--] = o >> 16 & 255), 6 === s ? (r >= 0 && (e[r--] = o >> 24 & 255), n = 0, s = 0) : (n = o >>> 24, s += 2);
                                        }
                                        if (r >= 0) for(e[r--] = n; r >= 0;)e[r--] = 0;
                                    }, Math.clz32 ? s.prototype._countBits = function(e) {
                                        return 32 - Math.clz32(e);
                                    } : s.prototype._countBits = function(e) {
                                        var t = e, r = 0;
                                        return t >= 4096 && (r += 13, t >>>= 13), t >= 64 && (r += 7, t >>>= 7), t >= 8 && (r += 4, t >>>= 4), t >= 2 && (r += 2, t >>>= 2), r + t;
                                    }, s.prototype._zeroBits = function(e) {
                                        if (0 === e) return 26;
                                        var t = e, r = 0;
                                        return 8191 & t || (r += 13, t >>>= 13), 127 & t || (r += 7, t >>>= 7), 15 & t || (r += 4, t >>>= 4), 3 & t || (r += 2, t >>>= 2), 1 & t || r++, r;
                                    }, s.prototype.bitLength = function() {
                                        var e = this.words[this.length - 1], t = this._countBits(e);
                                        return 26 * (this.length - 1) + t;
                                    }, s.prototype.zeroBits = function() {
                                        if (this.isZero()) return 0;
                                        for(var e = 0, t = 0; t < this.length; t++){
                                            var r = this._zeroBits(this.words[t]);
                                            if (e += r, 26 !== r) break;
                                        }
                                        return e;
                                    }, s.prototype.byteLength = function() {
                                        return Math.ceil(this.bitLength() / 8);
                                    }, s.prototype.toTwos = function(e) {
                                        return 0 !== this.negative ? this.abs().inotn(e).iaddn(1) : this.clone();
                                    }, s.prototype.fromTwos = function(e) {
                                        return this.testn(e - 1) ? this.notn(e).iaddn(1).ineg() : this.clone();
                                    }, s.prototype.isNeg = function() {
                                        return 0 !== this.negative;
                                    }, s.prototype.neg = function() {
                                        return this.clone().ineg();
                                    }, s.prototype.ineg = function() {
                                        return this.isZero() || (this.negative ^= 1), this;
                                    }, s.prototype.iuor = function(e) {
                                        for(; this.length < e.length;)this.words[this.length++] = 0;
                                        for(var t = 0; t < e.length; t++)this.words[t] = this.words[t] | e.words[t];
                                        return this._strip();
                                    }, s.prototype.ior = function(e) {
                                        return n(!(this.negative | e.negative)), this.iuor(e);
                                    }, s.prototype.or = function(e) {
                                        return this.length > e.length ? this.clone().ior(e) : e.clone().ior(this);
                                    }, s.prototype.uor = function(e) {
                                        return this.length > e.length ? this.clone().iuor(e) : e.clone().iuor(this);
                                    }, s.prototype.iuand = function(e) {
                                        var t;
                                        t = this.length > e.length ? e : this;
                                        for(var r = 0; r < t.length; r++)this.words[r] = this.words[r] & e.words[r];
                                        return this.length = t.length, this._strip();
                                    }, s.prototype.iand = function(e) {
                                        return n(!(this.negative | e.negative)), this.iuand(e);
                                    }, s.prototype.and = function(e) {
                                        return this.length > e.length ? this.clone().iand(e) : e.clone().iand(this);
                                    }, s.prototype.uand = function(e) {
                                        return this.length > e.length ? this.clone().iuand(e) : e.clone().iuand(this);
                                    }, s.prototype.iuxor = function(e) {
                                        var t, r;
                                        this.length > e.length ? (t = this, r = e) : (t = e, r = this);
                                        for(var n = 0; n < r.length; n++)this.words[n] = t.words[n] ^ r.words[n];
                                        if (this !== t) for(; n < t.length; n++)this.words[n] = t.words[n];
                                        return this.length = t.length, this._strip();
                                    }, s.prototype.ixor = function(e) {
                                        return n(!(this.negative | e.negative)), this.iuxor(e);
                                    }, s.prototype.xor = function(e) {
                                        return this.length > e.length ? this.clone().ixor(e) : e.clone().ixor(this);
                                    }, s.prototype.uxor = function(e) {
                                        return this.length > e.length ? this.clone().iuxor(e) : e.clone().iuxor(this);
                                    }, s.prototype.inotn = function(e) {
                                        n("number" == typeof e && e >= 0);
                                        var t = 0 | Math.ceil(e / 26), r = e % 26;
                                        this._expand(t), r > 0 && t--;
                                        for(var i = 0; i < t; i++)this.words[i] = 67108863 & ~this.words[i];
                                        return r > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - r), this._strip();
                                    }, s.prototype.notn = function(e) {
                                        return this.clone().inotn(e);
                                    }, s.prototype.setn = function(e, t) {
                                        n("number" == typeof e && e >= 0);
                                        var r = e / 26 | 0, i = e % 26;
                                        return this._expand(r + 1), this.words[r] = t ? this.words[r] | 1 << i : this.words[r] & ~(1 << i), this._strip();
                                    }, s.prototype.iadd = function(e) {
                                        var t, r, n;
                                        if (0 !== this.negative && 0 === e.negative) return this.negative = 0, t = this.isub(e), this.negative ^= 1, this._normSign();
                                        if (0 === this.negative && 0 !== e.negative) return e.negative = 0, t = this.isub(e), e.negative = 1, t._normSign();
                                        this.length > e.length ? (r = this, n = e) : (r = e, n = this);
                                        for(var i = 0, s = 0; s < n.length; s++)t = (0 | r.words[s]) + (0 | n.words[s]) + i, this.words[s] = 67108863 & t, i = t >>> 26;
                                        for(; 0 !== i && s < r.length; s++)t = (0 | r.words[s]) + i, this.words[s] = 67108863 & t, i = t >>> 26;
                                        if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                                        else if (r !== this) for(; s < r.length; s++)this.words[s] = r.words[s];
                                        return this;
                                    }, s.prototype.add = function(e) {
                                        var t;
                                        return 0 !== e.negative && 0 === this.negative ? (e.negative = 0, t = this.sub(e), e.negative ^= 1, t) : 0 === e.negative && 0 !== this.negative ? (this.negative = 0, t = e.sub(this), this.negative = 1, t) : this.length > e.length ? this.clone().iadd(e) : e.clone().iadd(this);
                                    }, s.prototype.isub = function(e) {
                                        if (0 !== e.negative) {
                                            e.negative = 0;
                                            var t = this.iadd(e);
                                            return e.negative = 1, t._normSign();
                                        }
                                        if (0 !== this.negative) return this.negative = 0, this.iadd(e), this.negative = 1, this._normSign();
                                        var r, n, i = this.cmp(e);
                                        if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                                        i > 0 ? (r = this, n = e) : (r = e, n = this);
                                        for(var s = 0, o = 0; o < n.length; o++)s = (t = (0 | r.words[o]) - (0 | n.words[o]) + s) >> 26, this.words[o] = 67108863 & t;
                                        for(; 0 !== s && o < r.length; o++)s = (t = (0 | r.words[o]) + s) >> 26, this.words[o] = 67108863 & t;
                                        if (0 === s && o < r.length && r !== this) for(; o < r.length; o++)this.words[o] = r.words[o];
                                        return this.length = Math.max(this.length, o), r !== this && (this.negative = 1), this._strip();
                                    }, s.prototype.sub = function(e) {
                                        return this.clone().isub(e);
                                    };
                                    var g = function(e, t, r) {
                                        var n, i, s, o = e.words, a = t.words, c = r.words, h = 0, u = 0 | o[0], d = 8191 & u, f = u >>> 13, l = 0 | o[1], p = 8191 & l, b = l >>> 13, g = 0 | o[2], m = 8191 & g, y = g >>> 13, v = 0 | o[3], w = 8191 & v, _ = v >>> 13, E = 0 | o[4], S = 8191 & E, A = E >>> 13, M = 0 | o[5], I = 8191 & M, T = M >>> 13, x = 0 | o[6], C = 8191 & x, R = x >>> 13, k = 0 | o[7], P = 8191 & k, O = k >>> 13, N = 0 | o[8], U = 8191 & N, B = N >>> 13, L = 0 | o[9], j = 8191 & L, D = L >>> 13, q = 0 | a[0], F = 8191 & q, H = q >>> 13, z = 0 | a[1], V = 8191 & z, $ = z >>> 13, K = 0 | a[2], G = 8191 & K, W = K >>> 13, J = 0 | a[3], Y = 8191 & J, X = J >>> 13, Z = 0 | a[4], Q = 8191 & Z, ee = Z >>> 13, te = 0 | a[5], re = 8191 & te, ne = te >>> 13, ie = 0 | a[6], se = 8191 & ie, oe = ie >>> 13, ae = 0 | a[7], ce = 8191 & ae, he = ae >>> 13, ue = 0 | a[8], de = 8191 & ue, fe = ue >>> 13, le = 0 | a[9], pe = 8191 & le, be = le >>> 13;
                                        r.negative = e.negative ^ t.negative, r.length = 19;
                                        var ge = (h + (n = Math.imul(d, F)) | 0) + ((8191 & (i = (i = Math.imul(d, H)) + Math.imul(f, F) | 0)) << 13) | 0;
                                        h = ((s = Math.imul(f, H)) + (i >>> 13) | 0) + (ge >>> 26) | 0, ge &= 67108863, n = Math.imul(p, F), i = (i = Math.imul(p, H)) + Math.imul(b, F) | 0, s = Math.imul(b, H);
                                        var me = (h + (n = n + Math.imul(d, V) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, $) | 0) + Math.imul(f, V) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, $) | 0) + (i >>> 13) | 0) + (me >>> 26) | 0, me &= 67108863, n = Math.imul(m, F), i = (i = Math.imul(m, H)) + Math.imul(y, F) | 0, s = Math.imul(y, H), n = n + Math.imul(p, V) | 0, i = (i = i + Math.imul(p, $) | 0) + Math.imul(b, V) | 0, s = s + Math.imul(b, $) | 0;
                                        var ye = (h + (n = n + Math.imul(d, G) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, W) | 0) + Math.imul(f, G) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, W) | 0) + (i >>> 13) | 0) + (ye >>> 26) | 0, ye &= 67108863, n = Math.imul(w, F), i = (i = Math.imul(w, H)) + Math.imul(_, F) | 0, s = Math.imul(_, H), n = n + Math.imul(m, V) | 0, i = (i = i + Math.imul(m, $) | 0) + Math.imul(y, V) | 0, s = s + Math.imul(y, $) | 0, n = n + Math.imul(p, G) | 0, i = (i = i + Math.imul(p, W) | 0) + Math.imul(b, G) | 0, s = s + Math.imul(b, W) | 0;
                                        var ve = (h + (n = n + Math.imul(d, Y) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, X) | 0) + Math.imul(f, Y) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, X) | 0) + (i >>> 13) | 0) + (ve >>> 26) | 0, ve &= 67108863, n = Math.imul(S, F), i = (i = Math.imul(S, H)) + Math.imul(A, F) | 0, s = Math.imul(A, H), n = n + Math.imul(w, V) | 0, i = (i = i + Math.imul(w, $) | 0) + Math.imul(_, V) | 0, s = s + Math.imul(_, $) | 0, n = n + Math.imul(m, G) | 0, i = (i = i + Math.imul(m, W) | 0) + Math.imul(y, G) | 0, s = s + Math.imul(y, W) | 0, n = n + Math.imul(p, Y) | 0, i = (i = i + Math.imul(p, X) | 0) + Math.imul(b, Y) | 0, s = s + Math.imul(b, X) | 0;
                                        var we = (h + (n = n + Math.imul(d, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, ee) | 0) + Math.imul(f, Q) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, ee) | 0) + (i >>> 13) | 0) + (we >>> 26) | 0, we &= 67108863, n = Math.imul(I, F), i = (i = Math.imul(I, H)) + Math.imul(T, F) | 0, s = Math.imul(T, H), n = n + Math.imul(S, V) | 0, i = (i = i + Math.imul(S, $) | 0) + Math.imul(A, V) | 0, s = s + Math.imul(A, $) | 0, n = n + Math.imul(w, G) | 0, i = (i = i + Math.imul(w, W) | 0) + Math.imul(_, G) | 0, s = s + Math.imul(_, W) | 0, n = n + Math.imul(m, Y) | 0, i = (i = i + Math.imul(m, X) | 0) + Math.imul(y, Y) | 0, s = s + Math.imul(y, X) | 0, n = n + Math.imul(p, Q) | 0, i = (i = i + Math.imul(p, ee) | 0) + Math.imul(b, Q) | 0, s = s + Math.imul(b, ee) | 0;
                                        var _e = (h + (n = n + Math.imul(d, re) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, ne) | 0) + Math.imul(f, re) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, ne) | 0) + (i >>> 13) | 0) + (_e >>> 26) | 0, _e &= 67108863, n = Math.imul(C, F), i = (i = Math.imul(C, H)) + Math.imul(R, F) | 0, s = Math.imul(R, H), n = n + Math.imul(I, V) | 0, i = (i = i + Math.imul(I, $) | 0) + Math.imul(T, V) | 0, s = s + Math.imul(T, $) | 0, n = n + Math.imul(S, G) | 0, i = (i = i + Math.imul(S, W) | 0) + Math.imul(A, G) | 0, s = s + Math.imul(A, W) | 0, n = n + Math.imul(w, Y) | 0, i = (i = i + Math.imul(w, X) | 0) + Math.imul(_, Y) | 0, s = s + Math.imul(_, X) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, ee) | 0) + Math.imul(y, Q) | 0, s = s + Math.imul(y, ee) | 0, n = n + Math.imul(p, re) | 0, i = (i = i + Math.imul(p, ne) | 0) + Math.imul(b, re) | 0, s = s + Math.imul(b, ne) | 0;
                                        var Ee = (h + (n = n + Math.imul(d, se) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, oe) | 0) + Math.imul(f, se) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, oe) | 0) + (i >>> 13) | 0) + (Ee >>> 26) | 0, Ee &= 67108863, n = Math.imul(P, F), i = (i = Math.imul(P, H)) + Math.imul(O, F) | 0, s = Math.imul(O, H), n = n + Math.imul(C, V) | 0, i = (i = i + Math.imul(C, $) | 0) + Math.imul(R, V) | 0, s = s + Math.imul(R, $) | 0, n = n + Math.imul(I, G) | 0, i = (i = i + Math.imul(I, W) | 0) + Math.imul(T, G) | 0, s = s + Math.imul(T, W) | 0, n = n + Math.imul(S, Y) | 0, i = (i = i + Math.imul(S, X) | 0) + Math.imul(A, Y) | 0, s = s + Math.imul(A, X) | 0, n = n + Math.imul(w, Q) | 0, i = (i = i + Math.imul(w, ee) | 0) + Math.imul(_, Q) | 0, s = s + Math.imul(_, ee) | 0, n = n + Math.imul(m, re) | 0, i = (i = i + Math.imul(m, ne) | 0) + Math.imul(y, re) | 0, s = s + Math.imul(y, ne) | 0, n = n + Math.imul(p, se) | 0, i = (i = i + Math.imul(p, oe) | 0) + Math.imul(b, se) | 0, s = s + Math.imul(b, oe) | 0;
                                        var Se = (h + (n = n + Math.imul(d, ce) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, he) | 0) + Math.imul(f, ce) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, he) | 0) + (i >>> 13) | 0) + (Se >>> 26) | 0, Se &= 67108863, n = Math.imul(U, F), i = (i = Math.imul(U, H)) + Math.imul(B, F) | 0, s = Math.imul(B, H), n = n + Math.imul(P, V) | 0, i = (i = i + Math.imul(P, $) | 0) + Math.imul(O, V) | 0, s = s + Math.imul(O, $) | 0, n = n + Math.imul(C, G) | 0, i = (i = i + Math.imul(C, W) | 0) + Math.imul(R, G) | 0, s = s + Math.imul(R, W) | 0, n = n + Math.imul(I, Y) | 0, i = (i = i + Math.imul(I, X) | 0) + Math.imul(T, Y) | 0, s = s + Math.imul(T, X) | 0, n = n + Math.imul(S, Q) | 0, i = (i = i + Math.imul(S, ee) | 0) + Math.imul(A, Q) | 0, s = s + Math.imul(A, ee) | 0, n = n + Math.imul(w, re) | 0, i = (i = i + Math.imul(w, ne) | 0) + Math.imul(_, re) | 0, s = s + Math.imul(_, ne) | 0, n = n + Math.imul(m, se) | 0, i = (i = i + Math.imul(m, oe) | 0) + Math.imul(y, se) | 0, s = s + Math.imul(y, oe) | 0, n = n + Math.imul(p, ce) | 0, i = (i = i + Math.imul(p, he) | 0) + Math.imul(b, ce) | 0, s = s + Math.imul(b, he) | 0;
                                        var Ae = (h + (n = n + Math.imul(d, de) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, fe) | 0) + Math.imul(f, de) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, fe) | 0) + (i >>> 13) | 0) + (Ae >>> 26) | 0, Ae &= 67108863, n = Math.imul(j, F), i = (i = Math.imul(j, H)) + Math.imul(D, F) | 0, s = Math.imul(D, H), n = n + Math.imul(U, V) | 0, i = (i = i + Math.imul(U, $) | 0) + Math.imul(B, V) | 0, s = s + Math.imul(B, $) | 0, n = n + Math.imul(P, G) | 0, i = (i = i + Math.imul(P, W) | 0) + Math.imul(O, G) | 0, s = s + Math.imul(O, W) | 0, n = n + Math.imul(C, Y) | 0, i = (i = i + Math.imul(C, X) | 0) + Math.imul(R, Y) | 0, s = s + Math.imul(R, X) | 0, n = n + Math.imul(I, Q) | 0, i = (i = i + Math.imul(I, ee) | 0) + Math.imul(T, Q) | 0, s = s + Math.imul(T, ee) | 0, n = n + Math.imul(S, re) | 0, i = (i = i + Math.imul(S, ne) | 0) + Math.imul(A, re) | 0, s = s + Math.imul(A, ne) | 0, n = n + Math.imul(w, se) | 0, i = (i = i + Math.imul(w, oe) | 0) + Math.imul(_, se) | 0, s = s + Math.imul(_, oe) | 0, n = n + Math.imul(m, ce) | 0, i = (i = i + Math.imul(m, he) | 0) + Math.imul(y, ce) | 0, s = s + Math.imul(y, he) | 0, n = n + Math.imul(p, de) | 0, i = (i = i + Math.imul(p, fe) | 0) + Math.imul(b, de) | 0, s = s + Math.imul(b, fe) | 0;
                                        var Me = (h + (n = n + Math.imul(d, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(d, be) | 0) + Math.imul(f, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(f, be) | 0) + (i >>> 13) | 0) + (Me >>> 26) | 0, Me &= 67108863, n = Math.imul(j, V), i = (i = Math.imul(j, $)) + Math.imul(D, V) | 0, s = Math.imul(D, $), n = n + Math.imul(U, G) | 0, i = (i = i + Math.imul(U, W) | 0) + Math.imul(B, G) | 0, s = s + Math.imul(B, W) | 0, n = n + Math.imul(P, Y) | 0, i = (i = i + Math.imul(P, X) | 0) + Math.imul(O, Y) | 0, s = s + Math.imul(O, X) | 0, n = n + Math.imul(C, Q) | 0, i = (i = i + Math.imul(C, ee) | 0) + Math.imul(R, Q) | 0, s = s + Math.imul(R, ee) | 0, n = n + Math.imul(I, re) | 0, i = (i = i + Math.imul(I, ne) | 0) + Math.imul(T, re) | 0, s = s + Math.imul(T, ne) | 0, n = n + Math.imul(S, se) | 0, i = (i = i + Math.imul(S, oe) | 0) + Math.imul(A, se) | 0, s = s + Math.imul(A, oe) | 0, n = n + Math.imul(w, ce) | 0, i = (i = i + Math.imul(w, he) | 0) + Math.imul(_, ce) | 0, s = s + Math.imul(_, he) | 0, n = n + Math.imul(m, de) | 0, i = (i = i + Math.imul(m, fe) | 0) + Math.imul(y, de) | 0, s = s + Math.imul(y, fe) | 0;
                                        var Ie = (h + (n = n + Math.imul(p, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, be) | 0) + Math.imul(b, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(b, be) | 0) + (i >>> 13) | 0) + (Ie >>> 26) | 0, Ie &= 67108863, n = Math.imul(j, G), i = (i = Math.imul(j, W)) + Math.imul(D, G) | 0, s = Math.imul(D, W), n = n + Math.imul(U, Y) | 0, i = (i = i + Math.imul(U, X) | 0) + Math.imul(B, Y) | 0, s = s + Math.imul(B, X) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, ee) | 0) + Math.imul(O, Q) | 0, s = s + Math.imul(O, ee) | 0, n = n + Math.imul(C, re) | 0, i = (i = i + Math.imul(C, ne) | 0) + Math.imul(R, re) | 0, s = s + Math.imul(R, ne) | 0, n = n + Math.imul(I, se) | 0, i = (i = i + Math.imul(I, oe) | 0) + Math.imul(T, se) | 0, s = s + Math.imul(T, oe) | 0, n = n + Math.imul(S, ce) | 0, i = (i = i + Math.imul(S, he) | 0) + Math.imul(A, ce) | 0, s = s + Math.imul(A, he) | 0, n = n + Math.imul(w, de) | 0, i = (i = i + Math.imul(w, fe) | 0) + Math.imul(_, de) | 0, s = s + Math.imul(_, fe) | 0;
                                        var Te = (h + (n = n + Math.imul(m, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, be) | 0) + Math.imul(y, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(y, be) | 0) + (i >>> 13) | 0) + (Te >>> 26) | 0, Te &= 67108863, n = Math.imul(j, Y), i = (i = Math.imul(j, X)) + Math.imul(D, Y) | 0, s = Math.imul(D, X), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, ee) | 0) + Math.imul(B, Q) | 0, s = s + Math.imul(B, ee) | 0, n = n + Math.imul(P, re) | 0, i = (i = i + Math.imul(P, ne) | 0) + Math.imul(O, re) | 0, s = s + Math.imul(O, ne) | 0, n = n + Math.imul(C, se) | 0, i = (i = i + Math.imul(C, oe) | 0) + Math.imul(R, se) | 0, s = s + Math.imul(R, oe) | 0, n = n + Math.imul(I, ce) | 0, i = (i = i + Math.imul(I, he) | 0) + Math.imul(T, ce) | 0, s = s + Math.imul(T, he) | 0, n = n + Math.imul(S, de) | 0, i = (i = i + Math.imul(S, fe) | 0) + Math.imul(A, de) | 0, s = s + Math.imul(A, fe) | 0;
                                        var xe = (h + (n = n + Math.imul(w, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, be) | 0) + Math.imul(_, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(_, be) | 0) + (i >>> 13) | 0) + (xe >>> 26) | 0, xe &= 67108863, n = Math.imul(j, Q), i = (i = Math.imul(j, ee)) + Math.imul(D, Q) | 0, s = Math.imul(D, ee), n = n + Math.imul(U, re) | 0, i = (i = i + Math.imul(U, ne) | 0) + Math.imul(B, re) | 0, s = s + Math.imul(B, ne) | 0, n = n + Math.imul(P, se) | 0, i = (i = i + Math.imul(P, oe) | 0) + Math.imul(O, se) | 0, s = s + Math.imul(O, oe) | 0, n = n + Math.imul(C, ce) | 0, i = (i = i + Math.imul(C, he) | 0) + Math.imul(R, ce) | 0, s = s + Math.imul(R, he) | 0, n = n + Math.imul(I, de) | 0, i = (i = i + Math.imul(I, fe) | 0) + Math.imul(T, de) | 0, s = s + Math.imul(T, fe) | 0;
                                        var Ce = (h + (n = n + Math.imul(S, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(S, be) | 0) + Math.imul(A, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(A, be) | 0) + (i >>> 13) | 0) + (Ce >>> 26) | 0, Ce &= 67108863, n = Math.imul(j, re), i = (i = Math.imul(j, ne)) + Math.imul(D, re) | 0, s = Math.imul(D, ne), n = n + Math.imul(U, se) | 0, i = (i = i + Math.imul(U, oe) | 0) + Math.imul(B, se) | 0, s = s + Math.imul(B, oe) | 0, n = n + Math.imul(P, ce) | 0, i = (i = i + Math.imul(P, he) | 0) + Math.imul(O, ce) | 0, s = s + Math.imul(O, he) | 0, n = n + Math.imul(C, de) | 0, i = (i = i + Math.imul(C, fe) | 0) + Math.imul(R, de) | 0, s = s + Math.imul(R, fe) | 0;
                                        var Re = (h + (n = n + Math.imul(I, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, be) | 0) + Math.imul(T, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(T, be) | 0) + (i >>> 13) | 0) + (Re >>> 26) | 0, Re &= 67108863, n = Math.imul(j, se), i = (i = Math.imul(j, oe)) + Math.imul(D, se) | 0, s = Math.imul(D, oe), n = n + Math.imul(U, ce) | 0, i = (i = i + Math.imul(U, he) | 0) + Math.imul(B, ce) | 0, s = s + Math.imul(B, he) | 0, n = n + Math.imul(P, de) | 0, i = (i = i + Math.imul(P, fe) | 0) + Math.imul(O, de) | 0, s = s + Math.imul(O, fe) | 0;
                                        var ke = (h + (n = n + Math.imul(C, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(C, be) | 0) + Math.imul(R, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(R, be) | 0) + (i >>> 13) | 0) + (ke >>> 26) | 0, ke &= 67108863, n = Math.imul(j, ce), i = (i = Math.imul(j, he)) + Math.imul(D, ce) | 0, s = Math.imul(D, he), n = n + Math.imul(U, de) | 0, i = (i = i + Math.imul(U, fe) | 0) + Math.imul(B, de) | 0, s = s + Math.imul(B, fe) | 0;
                                        var Pe = (h + (n = n + Math.imul(P, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, be) | 0) + Math.imul(O, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(O, be) | 0) + (i >>> 13) | 0) + (Pe >>> 26) | 0, Pe &= 67108863, n = Math.imul(j, de), i = (i = Math.imul(j, fe)) + Math.imul(D, de) | 0, s = Math.imul(D, fe);
                                        var Oe = (h + (n = n + Math.imul(U, pe) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, be) | 0) + Math.imul(B, pe) | 0)) << 13) | 0;
                                        h = ((s = s + Math.imul(B, be) | 0) + (i >>> 13) | 0) + (Oe >>> 26) | 0, Oe &= 67108863;
                                        var Ne = (h + (n = Math.imul(j, pe)) | 0) + ((8191 & (i = (i = Math.imul(j, be)) + Math.imul(D, pe) | 0)) << 13) | 0;
                                        return h = ((s = Math.imul(D, be)) + (i >>> 13) | 0) + (Ne >>> 26) | 0, Ne &= 67108863, c[0] = ge, c[1] = me, c[2] = ye, c[3] = ve, c[4] = we, c[5] = _e, c[6] = Ee, c[7] = Se, c[8] = Ae, c[9] = Me, c[10] = Ie, c[11] = Te, c[12] = xe, c[13] = Ce, c[14] = Re, c[15] = ke, c[16] = Pe, c[17] = Oe, c[18] = Ne, 0 !== h && (c[19] = h, r.length++), r;
                                    };
                                    function m(e, t, r) {
                                        r.negative = t.negative ^ e.negative, r.length = e.length + t.length;
                                        for(var n = 0, i = 0, s = 0; s < r.length - 1; s++){
                                            var o = i;
                                            i = 0;
                                            for(var a = 67108863 & n, c = Math.min(s, t.length - 1), h = Math.max(0, s - e.length + 1); h <= c; h++){
                                                var u = s - h, d = (0 | e.words[u]) * (0 | t.words[h]), f = 67108863 & d;
                                                a = 67108863 & (f = f + a | 0), i += (o = (o = o + (d / 67108864 | 0) | 0) + (f >>> 26) | 0) >>> 26, o &= 67108863;
                                            }
                                            r.words[s] = a, n = o, o = i;
                                        }
                                        return 0 !== n ? r.words[s] = n : r.length--, r._strip();
                                    }
                                    function y(e, t, r) {
                                        return m(e, t, r);
                                    }
                                    function v(e, t) {
                                        this.x = e, this.y = t;
                                    }
                                    Math.imul || (g = b), s.prototype.mulTo = function(e, t) {
                                        var r = this.length + e.length;
                                        return 10 === this.length && 10 === e.length ? g(this, e, t) : r < 63 ? b(this, e, t) : r < 1024 ? m(this, e, t) : y(this, e, t);
                                    }, v.prototype.makeRBT = function(e) {
                                        for(var t = new Array(e), r = s.prototype._countBits(e) - 1, n = 0; n < e; n++)t[n] = this.revBin(n, r, e);
                                        return t;
                                    }, v.prototype.revBin = function(e, t, r) {
                                        if (0 === e || e === r - 1) return e;
                                        for(var n = 0, i = 0; i < t; i++)n |= (1 & e) << t - i - 1, e >>= 1;
                                        return n;
                                    }, v.prototype.permute = function(e, t, r, n, i, s) {
                                        for(var o = 0; o < s; o++)n[o] = t[e[o]], i[o] = r[e[o]];
                                    }, v.prototype.transform = function(e, t, r, n, i, s) {
                                        this.permute(s, e, t, r, n, i);
                                        for(var o = 1; o < i; o <<= 1)for(var a = o << 1, c = Math.cos(2 * Math.PI / a), h = Math.sin(2 * Math.PI / a), u = 0; u < i; u += a)for(var d = c, f = h, l = 0; l < o; l++){
                                            var p = r[u + l], b = n[u + l], g = r[u + l + o], m = n[u + l + o], y = d * g - f * m;
                                            m = d * m + f * g, g = y, r[u + l] = p + g, n[u + l] = b + m, r[u + l + o] = p - g, n[u + l + o] = b - m, l !== a && (y = c * d - h * f, f = c * f + h * d, d = y);
                                        }
                                    }, v.prototype.guessLen13b = function(e, t) {
                                        var r = 1 | Math.max(t, e), n = 1 & r, i = 0;
                                        for(r = r / 2 | 0; r; r >>>= 1)i++;
                                        return 1 << i + 1 + n;
                                    }, v.prototype.conjugate = function(e, t, r) {
                                        if (!(r <= 1)) for(var n = 0; n < r / 2; n++){
                                            var i = e[n];
                                            e[n] = e[r - n - 1], e[r - n - 1] = i, i = t[n], t[n] = -t[r - n - 1], t[r - n - 1] = -i;
                                        }
                                    }, v.prototype.normalize13b = function(e, t) {
                                        for(var r = 0, n = 0; n < t / 2; n++){
                                            var i = 8192 * Math.round(e[2 * n + 1] / t) + Math.round(e[2 * n] / t) + r;
                                            e[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0;
                                        }
                                        return e;
                                    }, v.prototype.convert13b = function(e, t, r, i) {
                                        for(var s = 0, o = 0; o < t; o++)s += 0 | e[o], r[2 * o] = 8191 & s, s >>>= 13, r[2 * o + 1] = 8191 & s, s >>>= 13;
                                        for(o = 2 * t; o < i; ++o)r[o] = 0;
                                        n(0 === s), n(!(-8192 & s));
                                    }, v.prototype.stub = function(e) {
                                        for(var t = new Array(e), r = 0; r < e; r++)t[r] = 0;
                                        return t;
                                    }, v.prototype.mulp = function(e, t, r) {
                                        var n = 2 * this.guessLen13b(e.length, t.length), i = this.makeRBT(n), s = this.stub(n), o = new Array(n), a = new Array(n), c = new Array(n), h = new Array(n), u = new Array(n), d = new Array(n), f = r.words;
                                        f.length = n, this.convert13b(e.words, e.length, o, n), this.convert13b(t.words, t.length, h, n), this.transform(o, s, a, c, n, i), this.transform(h, s, u, d, n, i);
                                        for(var l = 0; l < n; l++){
                                            var p = a[l] * u[l] - c[l] * d[l];
                                            c[l] = a[l] * d[l] + c[l] * u[l], a[l] = p;
                                        }
                                        return this.conjugate(a, c, n), this.transform(a, c, f, s, n, i), this.conjugate(f, s, n), this.normalize13b(f, n), r.negative = e.negative ^ t.negative, r.length = e.length + t.length, r._strip();
                                    }, s.prototype.mul = function(e) {
                                        var t = new s(null);
                                        return t.words = new Array(this.length + e.length), this.mulTo(e, t);
                                    }, s.prototype.mulf = function(e) {
                                        var t = new s(null);
                                        return t.words = new Array(this.length + e.length), y(this, e, t);
                                    }, s.prototype.imul = function(e) {
                                        return this.clone().mulTo(e, this);
                                    }, s.prototype.imuln = function(e) {
                                        var t = e < 0;
                                        t && (e = -e), n("number" == typeof e), n(e < 67108864);
                                        for(var r = 0, i = 0; i < this.length; i++){
                                            var s = (0 | this.words[i]) * e, o = (67108863 & s) + (67108863 & r);
                                            r >>= 26, r += s / 67108864 | 0, r += o >>> 26, this.words[i] = 67108863 & o;
                                        }
                                        return 0 !== r && (this.words[i] = r, this.length++), t ? this.ineg() : this;
                                    }, s.prototype.muln = function(e) {
                                        return this.clone().imuln(e);
                                    }, s.prototype.sqr = function() {
                                        return this.mul(this);
                                    }, s.prototype.isqr = function() {
                                        return this.imul(this.clone());
                                    }, s.prototype.pow = function(e) {
                                        var t = function(e) {
                                            for(var t = new Array(e.bitLength()), r = 0; r < t.length; r++){
                                                var n = r / 26 | 0, i = r % 26;
                                                t[r] = e.words[n] >>> i & 1;
                                            }
                                            return t;
                                        }(e);
                                        if (0 === t.length) return new s(1);
                                        for(var r = this, n = 0; n < t.length && 0 === t[n]; n++, r = r.sqr());
                                        if (++n < t.length) for(var i = r.sqr(); n < t.length; n++, i = i.sqr())0 !== t[n] && (r = r.mul(i));
                                        return r;
                                    }, s.prototype.iushln = function(e) {
                                        n("number" == typeof e && e >= 0);
                                        var t, r = e % 26, i = (e - r) / 26, s = 67108863 >>> 26 - r << 26 - r;
                                        if (0 !== r) {
                                            var o = 0;
                                            for(t = 0; t < this.length; t++){
                                                var a = this.words[t] & s, c = (0 | this.words[t]) - a << r;
                                                this.words[t] = c | o, o = a >>> 26 - r;
                                            }
                                            o && (this.words[t] = o, this.length++);
                                        }
                                        if (0 !== i) {
                                            for(t = this.length - 1; t >= 0; t--)this.words[t + i] = this.words[t];
                                            for(t = 0; t < i; t++)this.words[t] = 0;
                                            this.length += i;
                                        }
                                        return this._strip();
                                    }, s.prototype.ishln = function(e) {
                                        return n(0 === this.negative), this.iushln(e);
                                    }, s.prototype.iushrn = function(e, t, r) {
                                        var i;
                                        n("number" == typeof e && e >= 0), i = t ? (t - t % 26) / 26 : 0;
                                        var s = e % 26, o = Math.min((e - s) / 26, this.length), a = 67108863 ^ 67108863 >>> s << s, c = r;
                                        if (i -= o, i = Math.max(0, i), c) {
                                            for(var h = 0; h < o; h++)c.words[h] = this.words[h];
                                            c.length = o;
                                        }
                                        if (0 === o) ;
                                        else if (this.length > o) for(this.length -= o, h = 0; h < this.length; h++)this.words[h] = this.words[h + o];
                                        else this.words[0] = 0, this.length = 1;
                                        var u = 0;
                                        for(h = this.length - 1; h >= 0 && (0 !== u || h >= i); h--){
                                            var d = 0 | this.words[h];
                                            this.words[h] = u << 26 - s | d >>> s, u = d & a;
                                        }
                                        return c && 0 !== u && (c.words[c.length++] = u), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip();
                                    }, s.prototype.ishrn = function(e, t, r) {
                                        return n(0 === this.negative), this.iushrn(e, t, r);
                                    }, s.prototype.shln = function(e) {
                                        return this.clone().ishln(e);
                                    }, s.prototype.ushln = function(e) {
                                        return this.clone().iushln(e);
                                    }, s.prototype.shrn = function(e) {
                                        return this.clone().ishrn(e);
                                    }, s.prototype.ushrn = function(e) {
                                        return this.clone().iushrn(e);
                                    }, s.prototype.testn = function(e) {
                                        n("number" == typeof e && e >= 0);
                                        var t = e % 26, r = (e - t) / 26, i = 1 << t;
                                        return !(this.length <= r || !(this.words[r] & i));
                                    }, s.prototype.imaskn = function(e) {
                                        n("number" == typeof e && e >= 0);
                                        var t = e % 26, r = (e - t) / 26;
                                        if (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                                        if (0 !== t && r++, this.length = Math.min(r, this.length), 0 !== t) {
                                            var i = 67108863 ^ 67108863 >>> t << t;
                                            this.words[this.length - 1] &= i;
                                        }
                                        return this._strip();
                                    }, s.prototype.maskn = function(e) {
                                        return this.clone().imaskn(e);
                                    }, s.prototype.iaddn = function(e) {
                                        return n("number" == typeof e), n(e < 67108864), e < 0 ? this.isubn(-e) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= e ? (this.words[0] = e - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(e), this.negative = 1, this) : this._iaddn(e);
                                    }, s.prototype._iaddn = function(e) {
                                        this.words[0] += e;
                                        for(var t = 0; t < this.length && this.words[t] >= 67108864; t++)this.words[t] -= 67108864, t === this.length - 1 ? this.words[t + 1] = 1 : this.words[t + 1]++;
                                        return this.length = Math.max(this.length, t + 1), this;
                                    }, s.prototype.isubn = function(e) {
                                        if (n("number" == typeof e), n(e < 67108864), e < 0) return this.iaddn(-e);
                                        if (0 !== this.negative) return this.negative = 0, this.iaddn(e), this.negative = 1, this;
                                        if (this.words[0] -= e, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                                        else for(var t = 0; t < this.length && this.words[t] < 0; t++)this.words[t] += 67108864, this.words[t + 1] -= 1;
                                        return this._strip();
                                    }, s.prototype.addn = function(e) {
                                        return this.clone().iaddn(e);
                                    }, s.prototype.subn = function(e) {
                                        return this.clone().isubn(e);
                                    }, s.prototype.iabs = function() {
                                        return this.negative = 0, this;
                                    }, s.prototype.abs = function() {
                                        return this.clone().iabs();
                                    }, s.prototype._ishlnsubmul = function(e, t, r) {
                                        var i, s, o = e.length + r;
                                        this._expand(o);
                                        var a = 0;
                                        for(i = 0; i < e.length; i++){
                                            s = (0 | this.words[i + r]) + a;
                                            var c = (0 | e.words[i]) * t;
                                            a = ((s -= 67108863 & c) >> 26) - (c / 67108864 | 0), this.words[i + r] = 67108863 & s;
                                        }
                                        for(; i < this.length - r; i++)a = (s = (0 | this.words[i + r]) + a) >> 26, this.words[i + r] = 67108863 & s;
                                        if (0 === a) return this._strip();
                                        for(n(-1 === a), a = 0, i = 0; i < this.length; i++)a = (s = -(0 | this.words[i]) + a) >> 26, this.words[i] = 67108863 & s;
                                        return this.negative = 1, this._strip();
                                    }, s.prototype._wordDiv = function(e, t) {
                                        var r = (this.length, e.length), n = this.clone(), i = e, o = 0 | i.words[i.length - 1];
                                        0 != (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                                        var a, c = n.length - i.length;
                                        if ("mod" !== t) {
                                            (a = new s(null)).length = c + 1, a.words = new Array(a.length);
                                            for(var h = 0; h < a.length; h++)a.words[h] = 0;
                                        }
                                        var u = n.clone()._ishlnsubmul(i, 1, c);
                                        0 === u.negative && (n = u, a && (a.words[c] = 1));
                                        for(var d = c - 1; d >= 0; d--){
                                            var f = 67108864 * (0 | n.words[i.length + d]) + (0 | n.words[i.length + d - 1]);
                                            for(f = Math.min(f / o | 0, 67108863), n._ishlnsubmul(i, f, d); 0 !== n.negative;)f--, n.negative = 0, n._ishlnsubmul(i, 1, d), n.isZero() || (n.negative ^= 1);
                                            a && (a.words[d] = f);
                                        }
                                        return a && a._strip(), n._strip(), "div" !== t && 0 !== r && n.iushrn(r), {
                                            div: a || null,
                                            mod: n
                                        };
                                    }, s.prototype.divmod = function(e, t, r) {
                                        return n(!e.isZero()), this.isZero() ? {
                                            div: new s(0),
                                            mod: new s(0)
                                        } : 0 !== this.negative && 0 === e.negative ? (a = this.neg().divmod(e, t), "mod" !== t && (i = a.div.neg()), "div" !== t && (o = a.mod.neg(), r && 0 !== o.negative && o.iadd(e)), {
                                            div: i,
                                            mod: o
                                        }) : 0 === this.negative && 0 !== e.negative ? (a = this.divmod(e.neg(), t), "mod" !== t && (i = a.div.neg()), {
                                            div: i,
                                            mod: a.mod
                                        }) : this.negative & e.negative ? (a = this.neg().divmod(e.neg(), t), "div" !== t && (o = a.mod.neg(), r && 0 !== o.negative && o.isub(e)), {
                                            div: a.div,
                                            mod: o
                                        }) : e.length > this.length || this.cmp(e) < 0 ? {
                                            div: new s(0),
                                            mod: this
                                        } : 1 === e.length ? "div" === t ? {
                                            div: this.divn(e.words[0]),
                                            mod: null
                                        } : "mod" === t ? {
                                            div: null,
                                            mod: new s(this.modrn(e.words[0]))
                                        } : {
                                            div: this.divn(e.words[0]),
                                            mod: new s(this.modrn(e.words[0]))
                                        } : this._wordDiv(e, t);
                                        "TURBOPACK unreachable";
                                        var i, o, a;
                                    }, s.prototype.div = function(e) {
                                        return this.divmod(e, "div", !1).div;
                                    }, s.prototype.mod = function(e) {
                                        return this.divmod(e, "mod", !1).mod;
                                    }, s.prototype.umod = function(e) {
                                        return this.divmod(e, "mod", !0).mod;
                                    }, s.prototype.divRound = function(e) {
                                        var t = this.divmod(e);
                                        if (t.mod.isZero()) return t.div;
                                        var r = 0 !== t.div.negative ? t.mod.isub(e) : t.mod, n = e.ushrn(1), i = e.andln(1), s = r.cmp(n);
                                        return s < 0 || 1 === i && 0 === s ? t.div : 0 !== t.div.negative ? t.div.isubn(1) : t.div.iaddn(1);
                                    }, s.prototype.modrn = function(e) {
                                        var t = e < 0;
                                        t && (e = -e), n(e <= 67108863);
                                        for(var r = (1 << 26) % e, i = 0, s = this.length - 1; s >= 0; s--)i = (r * i + (0 | this.words[s])) % e;
                                        return t ? -i : i;
                                    }, s.prototype.modn = function(e) {
                                        return this.modrn(e);
                                    }, s.prototype.idivn = function(e) {
                                        var t = e < 0;
                                        t && (e = -e), n(e <= 67108863);
                                        for(var r = 0, i = this.length - 1; i >= 0; i--){
                                            var s = (0 | this.words[i]) + 67108864 * r;
                                            this.words[i] = s / e | 0, r = s % e;
                                        }
                                        return this._strip(), t ? this.ineg() : this;
                                    }, s.prototype.divn = function(e) {
                                        return this.clone().idivn(e);
                                    }, s.prototype.egcd = function(e) {
                                        n(0 === e.negative), n(!e.isZero());
                                        var t = this, r = e.clone();
                                        t = 0 !== t.negative ? t.umod(e) : t.clone();
                                        for(var i = new s(1), o = new s(0), a = new s(0), c = new s(1), h = 0; t.isEven() && r.isEven();)t.iushrn(1), r.iushrn(1), ++h;
                                        for(var u = r.clone(), d = t.clone(); !t.isZero();){
                                            for(var f = 0, l = 1; !(t.words[0] & l) && f < 26; ++f, l <<= 1);
                                            if (f > 0) for(t.iushrn(f); f-- > 0;)(i.isOdd() || o.isOdd()) && (i.iadd(u), o.isub(d)), i.iushrn(1), o.iushrn(1);
                                            for(var p = 0, b = 1; !(r.words[0] & b) && p < 26; ++p, b <<= 1);
                                            if (p > 0) for(r.iushrn(p); p-- > 0;)(a.isOdd() || c.isOdd()) && (a.iadd(u), c.isub(d)), a.iushrn(1), c.iushrn(1);
                                            t.cmp(r) >= 0 ? (t.isub(r), i.isub(a), o.isub(c)) : (r.isub(t), a.isub(i), c.isub(o));
                                        }
                                        return {
                                            a,
                                            b: c,
                                            gcd: r.iushln(h)
                                        };
                                    }, s.prototype._invmp = function(e) {
                                        n(0 === e.negative), n(!e.isZero());
                                        var t = this, r = e.clone();
                                        t = 0 !== t.negative ? t.umod(e) : t.clone();
                                        for(var i, o = new s(1), a = new s(0), c = r.clone(); t.cmpn(1) > 0 && r.cmpn(1) > 0;){
                                            for(var h = 0, u = 1; !(t.words[0] & u) && h < 26; ++h, u <<= 1);
                                            if (h > 0) for(t.iushrn(h); h-- > 0;)o.isOdd() && o.iadd(c), o.iushrn(1);
                                            for(var d = 0, f = 1; !(r.words[0] & f) && d < 26; ++d, f <<= 1);
                                            if (d > 0) for(r.iushrn(d); d-- > 0;)a.isOdd() && a.iadd(c), a.iushrn(1);
                                            t.cmp(r) >= 0 ? (t.isub(r), o.isub(a)) : (r.isub(t), a.isub(o));
                                        }
                                        return (i = 0 === t.cmpn(1) ? o : a).cmpn(0) < 0 && i.iadd(e), i;
                                    }, s.prototype.gcd = function(e) {
                                        if (this.isZero()) return e.abs();
                                        if (e.isZero()) return this.abs();
                                        var t = this.clone(), r = e.clone();
                                        t.negative = 0, r.negative = 0;
                                        for(var n = 0; t.isEven() && r.isEven(); n++)t.iushrn(1), r.iushrn(1);
                                        for(;;){
                                            for(; t.isEven();)t.iushrn(1);
                                            for(; r.isEven();)r.iushrn(1);
                                            var i = t.cmp(r);
                                            if (i < 0) {
                                                var s = t;
                                                t = r, r = s;
                                            } else if (0 === i || 0 === r.cmpn(1)) break;
                                            t.isub(r);
                                        }
                                        return r.iushln(n);
                                    }, s.prototype.invm = function(e) {
                                        return this.egcd(e).a.umod(e);
                                    }, s.prototype.isEven = function() {
                                        return !(1 & this.words[0]);
                                    }, s.prototype.isOdd = function() {
                                        return !(1 & ~this.words[0]);
                                    }, s.prototype.andln = function(e) {
                                        return this.words[0] & e;
                                    }, s.prototype.bincn = function(e) {
                                        n("number" == typeof e);
                                        var t = e % 26, r = (e - t) / 26, i = 1 << t;
                                        if (this.length <= r) return this._expand(r + 1), this.words[r] |= i, this;
                                        for(var s = i, o = r; 0 !== s && o < this.length; o++){
                                            var a = 0 | this.words[o];
                                            s = (a += s) >>> 26, a &= 67108863, this.words[o] = a;
                                        }
                                        return 0 !== s && (this.words[o] = s, this.length++), this;
                                    }, s.prototype.isZero = function() {
                                        return 1 === this.length && 0 === this.words[0];
                                    }, s.prototype.cmpn = function(e) {
                                        var t, r = e < 0;
                                        if (0 !== this.negative && !r) return -1;
                                        if (0 === this.negative && r) return 1;
                                        if (this._strip(), this.length > 1) t = 1;
                                        else {
                                            r && (e = -e), n(e <= 67108863, "Number is too big");
                                            var i = 0 | this.words[0];
                                            t = i === e ? 0 : i < e ? -1 : 1;
                                        }
                                        return 0 !== this.negative ? 0 | -t : t;
                                    }, s.prototype.cmp = function(e) {
                                        if (0 !== this.negative && 0 === e.negative) return -1;
                                        if (0 === this.negative && 0 !== e.negative) return 1;
                                        var t = this.ucmp(e);
                                        return 0 !== this.negative ? 0 | -t : t;
                                    }, s.prototype.ucmp = function(e) {
                                        if (this.length > e.length) return 1;
                                        if (this.length < e.length) return -1;
                                        for(var t = 0, r = this.length - 1; r >= 0; r--){
                                            var n = 0 | this.words[r], i = 0 | e.words[r];
                                            if (n !== i) {
                                                n < i ? t = -1 : n > i && (t = 1);
                                                break;
                                            }
                                        }
                                        return t;
                                    }, s.prototype.gtn = function(e) {
                                        return 1 === this.cmpn(e);
                                    }, s.prototype.gt = function(e) {
                                        return 1 === this.cmp(e);
                                    }, s.prototype.gten = function(e) {
                                        return this.cmpn(e) >= 0;
                                    }, s.prototype.gte = function(e) {
                                        return this.cmp(e) >= 0;
                                    }, s.prototype.ltn = function(e) {
                                        return -1 === this.cmpn(e);
                                    }, s.prototype.lt = function(e) {
                                        return -1 === this.cmp(e);
                                    }, s.prototype.lten = function(e) {
                                        return this.cmpn(e) <= 0;
                                    }, s.prototype.lte = function(e) {
                                        return this.cmp(e) <= 0;
                                    }, s.prototype.eqn = function(e) {
                                        return 0 === this.cmpn(e);
                                    }, s.prototype.eq = function(e) {
                                        return 0 === this.cmp(e);
                                    }, s.red = function(e) {
                                        return new I(e);
                                    }, s.prototype.toRed = function(e) {
                                        return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), e.convertTo(this)._forceRed(e);
                                    }, s.prototype.fromRed = function() {
                                        return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
                                    }, s.prototype._forceRed = function(e) {
                                        return this.red = e, this;
                                    }, s.prototype.forceRed = function(e) {
                                        return n(!this.red, "Already a number in reduction context"), this._forceRed(e);
                                    }, s.prototype.redAdd = function(e) {
                                        return n(this.red, "redAdd works only with red numbers"), this.red.add(this, e);
                                    }, s.prototype.redIAdd = function(e) {
                                        return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, e);
                                    }, s.prototype.redSub = function(e) {
                                        return n(this.red, "redSub works only with red numbers"), this.red.sub(this, e);
                                    }, s.prototype.redISub = function(e) {
                                        return n(this.red, "redISub works only with red numbers"), this.red.isub(this, e);
                                    }, s.prototype.redShl = function(e) {
                                        return n(this.red, "redShl works only with red numbers"), this.red.shl(this, e);
                                    }, s.prototype.redMul = function(e) {
                                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.mul(this, e);
                                    }, s.prototype.redIMul = function(e) {
                                        return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.imul(this, e);
                                    }, s.prototype.redSqr = function() {
                                        return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
                                    }, s.prototype.redISqr = function() {
                                        return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
                                    }, s.prototype.redSqrt = function() {
                                        return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
                                    }, s.prototype.redInvm = function() {
                                        return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
                                    }, s.prototype.redNeg = function() {
                                        return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
                                    }, s.prototype.redPow = function(e) {
                                        return n(this.red && !e.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, e);
                                    };
                                    var w = {
                                        k256: null,
                                        p224: null,
                                        p192: null,
                                        p25519: null
                                    };
                                    function _(e, t) {
                                        this.name = e, this.p = new s(t, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
                                    }
                                    function E() {
                                        _.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
                                    }
                                    function S() {
                                        _.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
                                    }
                                    function A() {
                                        _.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
                                    }
                                    function M() {
                                        _.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
                                    }
                                    function I(e) {
                                        if ("string" == typeof e) {
                                            var t = s._prime(e);
                                            this.m = t.p, this.prime = t;
                                        } else n(e.gtn(1), "modulus must be greater than 1"), this.m = e, this.prime = null;
                                    }
                                    function T(e) {
                                        I.call(this, e), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
                                    }
                                    _.prototype._tmp = function() {
                                        var e = new s(null);
                                        return e.words = new Array(Math.ceil(this.n / 13)), e;
                                    }, _.prototype.ireduce = function(e) {
                                        var t, r = e;
                                        do {
                                            this.split(r, this.tmp), t = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
                                        }while (t > this.n)
                                        var n = t < this.n ? -1 : r.ucmp(this.p);
                                        return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r;
                                    }, _.prototype.split = function(e, t) {
                                        e.iushrn(this.n, 0, t);
                                    }, _.prototype.imulK = function(e) {
                                        return e.imul(this.k);
                                    }, i(E, _), E.prototype.split = function(e, t) {
                                        for(var r = 4194303, n = Math.min(e.length, 9), i = 0; i < n; i++)t.words[i] = e.words[i];
                                        if (t.length = n, e.length <= 9) return e.words[0] = 0, void (e.length = 1);
                                        var s = e.words[9];
                                        for(t.words[t.length++] = s & r, i = 10; i < e.length; i++){
                                            var o = 0 | e.words[i];
                                            e.words[i - 10] = (o & r) << 4 | s >>> 22, s = o;
                                        }
                                        s >>>= 22, e.words[i - 10] = s, 0 === s && e.length > 10 ? e.length -= 10 : e.length -= 9;
                                    }, E.prototype.imulK = function(e) {
                                        e.words[e.length] = 0, e.words[e.length + 1] = 0, e.length += 2;
                                        for(var t = 0, r = 0; r < e.length; r++){
                                            var n = 0 | e.words[r];
                                            t += 977 * n, e.words[r] = 67108863 & t, t = 64 * n + (t / 67108864 | 0);
                                        }
                                        return 0 === e.words[e.length - 1] && (e.length--, 0 === e.words[e.length - 1] && e.length--), e;
                                    }, i(S, _), i(A, _), i(M, _), M.prototype.imulK = function(e) {
                                        for(var t = 0, r = 0; r < e.length; r++){
                                            var n = 19 * (0 | e.words[r]) + t, i = 67108863 & n;
                                            n >>>= 26, e.words[r] = i, t = n;
                                        }
                                        return 0 !== t && (e.words[e.length++] = t), e;
                                    }, s._prime = function(e) {
                                        if (w[e]) return w[e];
                                        var t;
                                        if ("k256" === e) t = new E;
                                        else if ("p224" === e) t = new S;
                                        else if ("p192" === e) t = new A;
                                        else {
                                            if ("p25519" !== e) throw new Error("Unknown prime " + e);
                                            t = new M;
                                        }
                                        return w[e] = t, t;
                                    }, I.prototype._verify1 = function(e) {
                                        n(0 === e.negative, "red works only with positives"), n(e.red, "red works only with red numbers");
                                    }, I.prototype._verify2 = function(e, t) {
                                        n(!(e.negative | t.negative), "red works only with positives"), n(e.red && e.red === t.red, "red works only with red numbers");
                                    }, I.prototype.imod = function(e) {
                                        return this.prime ? this.prime.ireduce(e)._forceRed(this) : (u(e, e.umod(this.m)._forceRed(this)), e);
                                    }, I.prototype.neg = function(e) {
                                        return e.isZero() ? e.clone() : this.m.sub(e)._forceRed(this);
                                    }, I.prototype.add = function(e, t) {
                                        this._verify2(e, t);
                                        var r = e.add(t);
                                        return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this);
                                    }, I.prototype.iadd = function(e, t) {
                                        this._verify2(e, t);
                                        var r = e.iadd(t);
                                        return r.cmp(this.m) >= 0 && r.isub(this.m), r;
                                    }, I.prototype.sub = function(e, t) {
                                        this._verify2(e, t);
                                        var r = e.sub(t);
                                        return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this);
                                    }, I.prototype.isub = function(e, t) {
                                        this._verify2(e, t);
                                        var r = e.isub(t);
                                        return r.cmpn(0) < 0 && r.iadd(this.m), r;
                                    }, I.prototype.shl = function(e, t) {
                                        return this._verify1(e), this.imod(e.ushln(t));
                                    }, I.prototype.imul = function(e, t) {
                                        return this._verify2(e, t), this.imod(e.imul(t));
                                    }, I.prototype.mul = function(e, t) {
                                        return this._verify2(e, t), this.imod(e.mul(t));
                                    }, I.prototype.isqr = function(e) {
                                        return this.imul(e, e.clone());
                                    }, I.prototype.sqr = function(e) {
                                        return this.mul(e, e);
                                    }, I.prototype.sqrt = function(e) {
                                        if (e.isZero()) return e.clone();
                                        var t = this.m.andln(3);
                                        if (n(t % 2 == 1), 3 === t) {
                                            var r = this.m.add(new s(1)).iushrn(2);
                                            return this.pow(e, r);
                                        }
                                        for(var i = this.m.subn(1), o = 0; !i.isZero() && 0 === i.andln(1);)o++, i.iushrn(1);
                                        n(!i.isZero());
                                        var a = new s(1).toRed(this), c = a.redNeg(), h = this.m.subn(1).iushrn(1), u = this.m.bitLength();
                                        for(u = new s(2 * u * u).toRed(this); 0 !== this.pow(u, h).cmp(c);)u.redIAdd(c);
                                        for(var d = this.pow(u, i), f = this.pow(e, i.addn(1).iushrn(1)), l = this.pow(e, i), p = o; 0 !== l.cmp(a);){
                                            for(var b = l, g = 0; 0 !== b.cmp(a); g++)b = b.redSqr();
                                            n(g < p);
                                            var m = this.pow(d, new s(1).iushln(p - g - 1));
                                            f = f.redMul(m), d = m.redSqr(), l = l.redMul(d), p = g;
                                        }
                                        return f;
                                    }, I.prototype.invm = function(e) {
                                        var t = e._invmp(this.m);
                                        return 0 !== t.negative ? (t.negative = 0, this.imod(t).redNeg()) : this.imod(t);
                                    }, I.prototype.pow = function(e, t) {
                                        if (t.isZero()) return new s(1).toRed(this);
                                        if (0 === t.cmpn(1)) return e.clone();
                                        var r = new Array(16);
                                        r[0] = new s(1).toRed(this), r[1] = e;
                                        for(var n = 2; n < r.length; n++)r[n] = this.mul(r[n - 1], e);
                                        var i = r[0], o = 0, a = 0, c = t.bitLength() % 26;
                                        for(0 === c && (c = 26), n = t.length - 1; n >= 0; n--){
                                            for(var h = t.words[n], u = c - 1; u >= 0; u--){
                                                var d = h >> u & 1;
                                                i !== r[0] && (i = this.sqr(i)), 0 !== d || 0 !== o ? (o <<= 1, o |= d, (4 == ++a || 0 === n && 0 === u) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0;
                                            }
                                            c = 26;
                                        }
                                        return i;
                                    }, I.prototype.convertTo = function(e) {
                                        var t = e.umod(this.m);
                                        return t === e ? t.clone() : t;
                                    }, I.prototype.convertFrom = function(e) {
                                        var t = e.clone();
                                        return t.red = null, t;
                                    }, s.mont = function(e) {
                                        return new T(e);
                                    }, i(T, I), T.prototype.convertTo = function(e) {
                                        return this.imod(e.ushln(this.shift));
                                    }, T.prototype.convertFrom = function(e) {
                                        var t = this.imod(e.mul(this.rinv));
                                        return t.red = null, t;
                                    }, T.prototype.imul = function(e, t) {
                                        if (e.isZero() || t.isZero()) return e.words[0] = 0, e.length = 1, e;
                                        var r = e.imul(t), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), s = i;
                                        return i.cmp(this.m) >= 0 ? s = i.isub(this.m) : i.cmpn(0) < 0 && (s = i.iadd(this.m)), s._forceRed(this);
                                    }, T.prototype.mul = function(e, t) {
                                        if (e.isZero() || t.isZero()) return new s(0)._forceRed(this);
                                        var r = e.mul(t), n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i = r.isub(n).iushrn(this.shift), o = i;
                                        return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this);
                                    }, T.prototype.invm = function(e) {
                                        return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this);
                                    };
                                }(e = r.nmd(e), this);
                            },
                            5442: (e, t, r)=>{
                                var n;
                                function i(e) {
                                    this.rand = e;
                                }
                                if (e.exports = function(e) {
                                    return n || (n = new i(null)), n.generate(e);
                                }, e.exports.Rand = i, i.prototype.generate = function(e) {
                                    return this._rand(e);
                                }, i.prototype._rand = function(e) {
                                    if (this.rand.getBytes) return this.rand.getBytes(e);
                                    for(var t = new Uint8Array(e), r = 0; r < t.length; r++)t[r] = this.rand.getByte();
                                    return t;
                                }, "object" == typeof self) self.crypto && self.crypto.getRandomValues ? i.prototype._rand = function(e) {
                                    var t = new Uint8Array(e);
                                    return self.crypto.getRandomValues(t), t;
                                } : self.msCrypto && self.msCrypto.getRandomValues ? i.prototype._rand = function(e) {
                                    var t = new Uint8Array(e);
                                    return self.msCrypto.getRandomValues(t), t;
                                } : "object" == typeof window && (i.prototype._rand = function() {
                                    throw new Error("Not implemented yet");
                                });
                                else try {
                                    var s = r(4507);
                                    if ("function" != typeof s.randomBytes) throw new Error("Not supported");
                                    i.prototype._rand = function(e) {
                                        return s.randomBytes(e);
                                    };
                                } catch (e) {}
                            },
                            7088: (e, t, r)=>{
                                var n = r(6608).Buffer;
                                function i(e) {
                                    n.isBuffer(e) || (e = n.from(e));
                                    for(var t = e.length / 4 | 0, r = new Array(t), i = 0; i < t; i++)r[i] = e.readUInt32BE(4 * i);
                                    return r;
                                }
                                function s(e) {
                                    for(; 0 < e.length; e++)e[0] = 0;
                                }
                                function o(e, t, r, n, i) {
                                    for(var s, o, a, c, h = r[0], u = r[1], d = r[2], f = r[3], l = e[0] ^ t[0], p = e[1] ^ t[1], b = e[2] ^ t[2], g = e[3] ^ t[3], m = 4, y = 1; y < i; y++)s = h[l >>> 24] ^ u[p >>> 16 & 255] ^ d[b >>> 8 & 255] ^ f[255 & g] ^ t[m++], o = h[p >>> 24] ^ u[b >>> 16 & 255] ^ d[g >>> 8 & 255] ^ f[255 & l] ^ t[m++], a = h[b >>> 24] ^ u[g >>> 16 & 255] ^ d[l >>> 8 & 255] ^ f[255 & p] ^ t[m++], c = h[g >>> 24] ^ u[l >>> 16 & 255] ^ d[p >>> 8 & 255] ^ f[255 & b] ^ t[m++], l = s, p = o, b = a, g = c;
                                    return s = (n[l >>> 24] << 24 | n[p >>> 16 & 255] << 16 | n[b >>> 8 & 255] << 8 | n[255 & g]) ^ t[m++], o = (n[p >>> 24] << 24 | n[b >>> 16 & 255] << 16 | n[g >>> 8 & 255] << 8 | n[255 & l]) ^ t[m++], a = (n[b >>> 24] << 24 | n[g >>> 16 & 255] << 16 | n[l >>> 8 & 255] << 8 | n[255 & p]) ^ t[m++], c = (n[g >>> 24] << 24 | n[l >>> 16 & 255] << 16 | n[p >>> 8 & 255] << 8 | n[255 & b]) ^ t[m++], [
                                        s >>>= 0,
                                        o >>>= 0,
                                        a >>>= 0,
                                        c >>>= 0
                                    ];
                                }
                                var a = [
                                    0,
                                    1,
                                    2,
                                    4,
                                    8,
                                    16,
                                    32,
                                    64,
                                    128,
                                    27,
                                    54
                                ], c = function() {
                                    for(var e = new Array(256), t = 0; t < 256; t++)e[t] = t < 128 ? t << 1 : t << 1 ^ 283;
                                    for(var r = [], n = [], i = [
                                        [],
                                        [],
                                        [],
                                        []
                                    ], s = [
                                        [],
                                        [],
                                        [],
                                        []
                                    ], o = 0, a = 0, c = 0; c < 256; ++c){
                                        var h = a ^ a << 1 ^ a << 2 ^ a << 3 ^ a << 4;
                                        h = h >>> 8 ^ 255 & h ^ 99, r[o] = h, n[h] = o;
                                        var u = e[o], d = e[u], f = e[d], l = 257 * e[h] ^ 16843008 * h;
                                        i[0][o] = l << 24 | l >>> 8, i[1][o] = l << 16 | l >>> 16, i[2][o] = l << 8 | l >>> 24, i[3][o] = l, l = 16843009 * f ^ 65537 * d ^ 257 * u ^ 16843008 * o, s[0][h] = l << 24 | l >>> 8, s[1][h] = l << 16 | l >>> 16, s[2][h] = l << 8 | l >>> 24, s[3][h] = l, 0 === o ? o = a = 1 : (o = u ^ e[e[e[f ^ u]]], a ^= e[e[a]]);
                                    }
                                    return {
                                        SBOX: r,
                                        INV_SBOX: n,
                                        SUB_MIX: i,
                                        INV_SUB_MIX: s
                                    };
                                }();
                                function h(e) {
                                    this._key = i(e), this._reset();
                                }
                                h.blockSize = 16, h.keySize = 32, h.prototype.blockSize = h.blockSize, h.prototype.keySize = h.keySize, h.prototype._reset = function() {
                                    for(var e = this._key, t = e.length, r = t + 6, n = 4 * (r + 1), i = [], s = 0; s < t; s++)i[s] = e[s];
                                    for(s = t; s < n; s++){
                                        var o = i[s - 1];
                                        s % t == 0 ? (o = o << 8 | o >>> 24, o = c.SBOX[o >>> 24] << 24 | c.SBOX[o >>> 16 & 255] << 16 | c.SBOX[o >>> 8 & 255] << 8 | c.SBOX[255 & o], o ^= a[s / t | 0] << 24) : t > 6 && s % t == 4 && (o = c.SBOX[o >>> 24] << 24 | c.SBOX[o >>> 16 & 255] << 16 | c.SBOX[o >>> 8 & 255] << 8 | c.SBOX[255 & o]), i[s] = i[s - t] ^ o;
                                    }
                                    for(var h = [], u = 0; u < n; u++){
                                        var d = n - u, f = i[d - (u % 4 ? 0 : 4)];
                                        h[u] = u < 4 || d <= 4 ? f : c.INV_SUB_MIX[0][c.SBOX[f >>> 24]] ^ c.INV_SUB_MIX[1][c.SBOX[f >>> 16 & 255]] ^ c.INV_SUB_MIX[2][c.SBOX[f >>> 8 & 255]] ^ c.INV_SUB_MIX[3][c.SBOX[255 & f]];
                                    }
                                    this._nRounds = r, this._keySchedule = i, this._invKeySchedule = h;
                                }, h.prototype.encryptBlockRaw = function(e) {
                                    return o(e = i(e), this._keySchedule, c.SUB_MIX, c.SBOX, this._nRounds);
                                }, h.prototype.encryptBlock = function(e) {
                                    var t = this.encryptBlockRaw(e), r = n.allocUnsafe(16);
                                    return r.writeUInt32BE(t[0], 0), r.writeUInt32BE(t[1], 4), r.writeUInt32BE(t[2], 8), r.writeUInt32BE(t[3], 12), r;
                                }, h.prototype.decryptBlock = function(e) {
                                    var t = (e = i(e))[1];
                                    e[1] = e[3], e[3] = t;
                                    var r = o(e, this._invKeySchedule, c.INV_SUB_MIX, c.INV_SBOX, this._nRounds), s = n.allocUnsafe(16);
                                    return s.writeUInt32BE(r[0], 0), s.writeUInt32BE(r[3], 4), s.writeUInt32BE(r[2], 8), s.writeUInt32BE(r[1], 12), s;
                                }, h.prototype.scrub = function() {
                                    s(this._keySchedule), s(this._invKeySchedule), s(this._key);
                                }, e.exports.AES = h;
                            },
                            8182: (e, t, r)=>{
                                var n = r(7088), i = r(6608).Buffer, s = r(4705), o = r(1193), a = r(50), c = r(460), h = r(6696);
                                function u(e, t, r, o) {
                                    s.call(this);
                                    var c = i.alloc(4, 0);
                                    this._cipher = new n.AES(t);
                                    var u = this._cipher.encryptBlock(c);
                                    this._ghash = new a(u), r = function(e, t, r) {
                                        if (12 === t.length) return e._finID = i.concat([
                                            t,
                                            i.from([
                                                0,
                                                0,
                                                0,
                                                1
                                            ])
                                        ]), i.concat([
                                            t,
                                            i.from([
                                                0,
                                                0,
                                                0,
                                                2
                                            ])
                                        ]);
                                        var n = new a(r), s = t.length, o = s % 16;
                                        n.update(t), o && (o = 16 - o, n.update(i.alloc(o, 0))), n.update(i.alloc(8, 0));
                                        var c = 8 * s, u = i.alloc(8);
                                        u.writeUIntBE(c, 0, 8), n.update(u), e._finID = n.state;
                                        var d = i.from(e._finID);
                                        return h(d), d;
                                    }(this, r, u), this._prev = i.from(r), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = o, this._alen = 0, this._len = 0, this._mode = e, this._authTag = null, this._called = !1;
                                }
                                o(u, s), u.prototype._update = function(e) {
                                    if (!this._called && this._alen) {
                                        var t = 16 - this._alen % 16;
                                        t < 16 && (t = i.alloc(t, 0), this._ghash.update(t));
                                    }
                                    this._called = !0;
                                    var r = this._mode.encrypt(this, e);
                                    return this._decrypt ? this._ghash.update(e) : this._ghash.update(r), this._len += e.length, r;
                                }, u.prototype._final = function() {
                                    if (this._decrypt && !this._authTag) throw new Error("Unsupported state or unable to authenticate data");
                                    var e = c(this._ghash.final(8 * this._alen, 8 * this._len), this._cipher.encryptBlock(this._finID));
                                    if (this._decrypt && function(e, t) {
                                        var r = 0;
                                        e.length !== t.length && r++;
                                        for(var n = Math.min(e.length, t.length), i = 0; i < n; ++i)r += e[i] ^ t[i];
                                        return r;
                                    }(e, this._authTag)) throw new Error("Unsupported state or unable to authenticate data");
                                    this._authTag = e, this._cipher.scrub();
                                }, u.prototype.getAuthTag = function() {
                                    if (this._decrypt || !i.isBuffer(this._authTag)) throw new Error("Attempting to get auth tag in unsupported state");
                                    return this._authTag;
                                }, u.prototype.setAuthTag = function(e) {
                                    if (!this._decrypt) throw new Error("Attempting to set auth tag in unsupported state");
                                    this._authTag = e;
                                }, u.prototype.setAAD = function(e) {
                                    if (this._called) throw new Error("Attempting to set AAD in unsupported state");
                                    this._ghash.update(e), this._alen += e.length;
                                }, e.exports = u;
                            },
                            5007: (e, t, r)=>{
                                var n = r(5173), i = r(8733), s = r(3349);
                                t.createCipher = t.Cipher = n.createCipher, t.createCipheriv = t.Cipheriv = n.createCipheriv, t.createDecipher = t.Decipher = i.createDecipher, t.createDecipheriv = t.Decipheriv = i.createDecipheriv, t.listCiphers = t.getCiphers = function() {
                                    return Object.keys(s);
                                };
                            },
                            8733: (e, t, r)=>{
                                var n = r(8182), i = r(6608).Buffer, s = r(6200), o = r(8116), a = r(4705), c = r(7088), h = r(1804);
                                function u(e, t, r) {
                                    a.call(this), this._cache = new d, this._last = void 0, this._cipher = new c.AES(t), this._prev = i.from(r), this._mode = e, this._autopadding = !0;
                                }
                                function d() {
                                    this.cache = i.allocUnsafe(0);
                                }
                                function f(e, t, r) {
                                    var a = s[e.toLowerCase()];
                                    if (!a) throw new TypeError("invalid suite type");
                                    if ("string" == typeof r && (r = i.from(r)), "GCM" !== a.mode && r.length !== a.iv) throw new TypeError("invalid iv length " + r.length);
                                    if ("string" == typeof t && (t = i.from(t)), t.length !== a.key / 8) throw new TypeError("invalid key length " + t.length);
                                    return "stream" === a.type ? new o(a.module, t, r, !0) : "auth" === a.type ? new n(a.module, t, r, !0) : new u(a.module, t, r);
                                }
                                r(1193)(u, a), u.prototype._update = function(e) {
                                    var t, r;
                                    this._cache.add(e);
                                    for(var n = []; t = this._cache.get(this._autopadding);)r = this._mode.decrypt(this, t), n.push(r);
                                    return i.concat(n);
                                }, u.prototype._final = function() {
                                    var e = this._cache.flush();
                                    if (this._autopadding) return function(e) {
                                        var t = e[15];
                                        if (t < 1 || t > 16) throw new Error("unable to decrypt data");
                                        for(var r = -1; ++r < t;)if (e[r + (16 - t)] !== t) throw new Error("unable to decrypt data");
                                        if (16 !== t) return e.slice(0, 16 - t);
                                    }(this._mode.decrypt(this, e));
                                    if (e) throw new Error("data not multiple of block length");
                                }, u.prototype.setAutoPadding = function(e) {
                                    return this._autopadding = !!e, this;
                                }, d.prototype.add = function(e) {
                                    this.cache = i.concat([
                                        this.cache,
                                        e
                                    ]);
                                }, d.prototype.get = function(e) {
                                    var t;
                                    if (e) {
                                        if (this.cache.length > 16) return t = this.cache.slice(0, 16), this.cache = this.cache.slice(16), t;
                                    } else if (this.cache.length >= 16) return t = this.cache.slice(0, 16), this.cache = this.cache.slice(16), t;
                                    return null;
                                }, d.prototype.flush = function() {
                                    if (this.cache.length) return this.cache;
                                }, t.createDecipher = function(e, t) {
                                    var r = s[e.toLowerCase()];
                                    if (!r) throw new TypeError("invalid suite type");
                                    var n = h(t, !1, r.key, r.iv);
                                    return f(e, n.key, n.iv);
                                }, t.createDecipheriv = f;
                            },
                            5173: (e, t, r)=>{
                                var n = r(6200), i = r(8182), s = r(6608).Buffer, o = r(8116), a = r(4705), c = r(7088), h = r(1804);
                                function u(e, t, r) {
                                    a.call(this), this._cache = new f, this._cipher = new c.AES(t), this._prev = s.from(r), this._mode = e, this._autopadding = !0;
                                }
                                r(1193)(u, a), u.prototype._update = function(e) {
                                    var t, r;
                                    this._cache.add(e);
                                    for(var n = []; t = this._cache.get();)r = this._mode.encrypt(this, t), n.push(r);
                                    return s.concat(n);
                                };
                                var d = s.alloc(16, 16);
                                function f() {
                                    this.cache = s.allocUnsafe(0);
                                }
                                function l(e, t, r) {
                                    var a = n[e.toLowerCase()];
                                    if (!a) throw new TypeError("invalid suite type");
                                    if ("string" == typeof t && (t = s.from(t)), t.length !== a.key / 8) throw new TypeError("invalid key length " + t.length);
                                    if ("string" == typeof r && (r = s.from(r)), "GCM" !== a.mode && r.length !== a.iv) throw new TypeError("invalid iv length " + r.length);
                                    return "stream" === a.type ? new o(a.module, t, r) : "auth" === a.type ? new i(a.module, t, r) : new u(a.module, t, r);
                                }
                                u.prototype._final = function() {
                                    var e = this._cache.flush();
                                    if (this._autopadding) return e = this._mode.encrypt(this, e), this._cipher.scrub(), e;
                                    if (!e.equals(d)) throw this._cipher.scrub(), new Error("data not multiple of block length");
                                }, u.prototype.setAutoPadding = function(e) {
                                    return this._autopadding = !!e, this;
                                }, f.prototype.add = function(e) {
                                    this.cache = s.concat([
                                        this.cache,
                                        e
                                    ]);
                                }, f.prototype.get = function() {
                                    if (this.cache.length > 15) {
                                        var e = this.cache.slice(0, 16);
                                        return this.cache = this.cache.slice(16), e;
                                    }
                                    return null;
                                }, f.prototype.flush = function() {
                                    for(var e = 16 - this.cache.length, t = s.allocUnsafe(e), r = -1; ++r < e;)t.writeUInt8(e, r);
                                    return s.concat([
                                        this.cache,
                                        t
                                    ]);
                                }, t.createCipheriv = l, t.createCipher = function(e, t) {
                                    var r = n[e.toLowerCase()];
                                    if (!r) throw new TypeError("invalid suite type");
                                    var i = h(t, !1, r.key, r.iv);
                                    return l(e, i.key, i.iv);
                                };
                            },
                            50: (e, t, r)=>{
                                var n = r(6608).Buffer, i = n.alloc(16, 0);
                                function s(e) {
                                    var t = n.allocUnsafe(16);
                                    return t.writeUInt32BE(e[0] >>> 0, 0), t.writeUInt32BE(e[1] >>> 0, 4), t.writeUInt32BE(e[2] >>> 0, 8), t.writeUInt32BE(e[3] >>> 0, 12), t;
                                }
                                function o(e) {
                                    this.h = e, this.state = n.alloc(16, 0), this.cache = n.allocUnsafe(0);
                                }
                                o.prototype.ghash = function(e) {
                                    for(var t = -1; ++t < e.length;)this.state[t] ^= e[t];
                                    this._multiply();
                                }, o.prototype._multiply = function() {
                                    for(var e, t, r, n = [
                                        (e = this.h).readUInt32BE(0),
                                        e.readUInt32BE(4),
                                        e.readUInt32BE(8),
                                        e.readUInt32BE(12)
                                    ], i = [
                                        0,
                                        0,
                                        0,
                                        0
                                    ], o = -1; ++o < 128;){
                                        for(!!(this.state[~~(o / 8)] & 1 << 7 - o % 8) && (i[0] ^= n[0], i[1] ^= n[1], i[2] ^= n[2], i[3] ^= n[3]), r = !!(1 & n[3]), t = 3; t > 0; t--)n[t] = n[t] >>> 1 | (1 & n[t - 1]) << 31;
                                        n[0] = n[0] >>> 1, r && (n[0] = n[0] ^ 225 << 24);
                                    }
                                    this.state = s(i);
                                }, o.prototype.update = function(e) {
                                    var t;
                                    for(this.cache = n.concat([
                                        this.cache,
                                        e
                                    ]); this.cache.length >= 16;)t = this.cache.slice(0, 16), this.cache = this.cache.slice(16), this.ghash(t);
                                }, o.prototype.final = function(e, t) {
                                    return this.cache.length && this.ghash(n.concat([
                                        this.cache,
                                        i
                                    ], 16)), this.ghash(s([
                                        0,
                                        e,
                                        0,
                                        t
                                    ])), this.state;
                                }, e.exports = o;
                            },
                            6696: (e)=>{
                                e.exports = function(e) {
                                    for(var t, r = e.length; r--;){
                                        if (255 !== (t = e.readUInt8(r))) {
                                            t++, e.writeUInt8(t, r);
                                            break;
                                        }
                                        e.writeUInt8(0, r);
                                    }
                                };
                            },
                            3506: (e, t, r)=>{
                                var n = r(460);
                                t.encrypt = function(e, t) {
                                    var r = n(t, e._prev);
                                    return e._prev = e._cipher.encryptBlock(r), e._prev;
                                }, t.decrypt = function(e, t) {
                                    var r = e._prev;
                                    e._prev = t;
                                    var i = e._cipher.decryptBlock(t);
                                    return n(i, r);
                                };
                            },
                            6149: (e, t, r)=>{
                                var n = r(6608).Buffer, i = r(460);
                                function s(e, t, r) {
                                    var s = t.length, o = i(t, e._cache);
                                    return e._cache = e._cache.slice(s), e._prev = n.concat([
                                        e._prev,
                                        r ? t : o
                                    ]), o;
                                }
                                t.encrypt = function(e, t, r) {
                                    for(var i, o = n.allocUnsafe(0); t.length;){
                                        if (0 === e._cache.length && (e._cache = e._cipher.encryptBlock(e._prev), e._prev = n.allocUnsafe(0)), !(e._cache.length <= t.length)) {
                                            o = n.concat([
                                                o,
                                                s(e, t, r)
                                            ]);
                                            break;
                                        }
                                        i = e._cache.length, o = n.concat([
                                            o,
                                            s(e, t.slice(0, i), r)
                                        ]), t = t.slice(i);
                                    }
                                    return o;
                                };
                            },
                            8394: (e, t, r)=>{
                                var n = r(6608).Buffer;
                                function i(e, t, r) {
                                    for(var n, i, o = -1, a = 0; ++o < 8;)n = t & 1 << 7 - o ? 128 : 0, a += (128 & (i = e._cipher.encryptBlock(e._prev)[0] ^ n)) >> o % 8, e._prev = s(e._prev, r ? n : i);
                                    return a;
                                }
                                function s(e, t) {
                                    var r = e.length, i = -1, s = n.allocUnsafe(e.length);
                                    for(e = n.concat([
                                        e,
                                        n.from([
                                            t
                                        ])
                                    ]); ++i < r;)s[i] = e[i] << 1 | e[i + 1] >> 7;
                                    return s;
                                }
                                t.encrypt = function(e, t, r) {
                                    for(var s = t.length, o = n.allocUnsafe(s), a = -1; ++a < s;)o[a] = i(e, t[a], r);
                                    return o;
                                };
                            },
                            193: (e, t, r)=>{
                                var n = r(6608).Buffer;
                                function i(e, t, r) {
                                    var i = e._cipher.encryptBlock(e._prev)[0] ^ t;
                                    return e._prev = n.concat([
                                        e._prev.slice(1),
                                        n.from([
                                            r ? t : i
                                        ])
                                    ]), i;
                                }
                                t.encrypt = function(e, t, r) {
                                    for(var s = t.length, o = n.allocUnsafe(s), a = -1; ++a < s;)o[a] = i(e, t[a], r);
                                    return o;
                                };
                            },
                            5527: (e, t, r)=>{
                                var n = r(460), i = r(6608).Buffer, s = r(6696);
                                function o(e) {
                                    var t = e._cipher.encryptBlockRaw(e._prev);
                                    return s(e._prev), t;
                                }
                                t.encrypt = function(e, t) {
                                    var r = Math.ceil(t.length / 16), s = e._cache.length;
                                    e._cache = i.concat([
                                        e._cache,
                                        i.allocUnsafe(16 * r)
                                    ]);
                                    for(var a = 0; a < r; a++){
                                        var c = o(e), h = s + 16 * a;
                                        e._cache.writeUInt32BE(c[0], h + 0), e._cache.writeUInt32BE(c[1], h + 4), e._cache.writeUInt32BE(c[2], h + 8), e._cache.writeUInt32BE(c[3], h + 12);
                                    }
                                    var u = e._cache.slice(0, t.length);
                                    return e._cache = e._cache.slice(t.length), n(t, u);
                                };
                            },
                            882: (e, t)=>{
                                t.encrypt = function(e, t) {
                                    return e._cipher.encryptBlock(t);
                                }, t.decrypt = function(e, t) {
                                    return e._cipher.decryptBlock(t);
                                };
                            },
                            6200: (e, t, r)=>{
                                var n = {
                                    ECB: r(882),
                                    CBC: r(3506),
                                    CFB: r(6149),
                                    CFB8: r(193),
                                    CFB1: r(8394),
                                    OFB: r(7481),
                                    CTR: r(5527),
                                    GCM: r(5527)
                                }, i = r(3349);
                                for(var s in i)i[s].module = n[i[s].mode];
                                e.exports = i;
                            },
                            7481: (e, t, r)=>{
                                var n = r(460);
                                function i(e) {
                                    return e._prev = e._cipher.encryptBlock(e._prev), e._prev;
                                }
                                t.encrypt = function(e, t) {
                                    for(; e._cache.length < t.length;)e._cache = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].concat([
                                        e._cache,
                                        i(e)
                                    ]);
                                    var r = e._cache.slice(0, t.length);
                                    return e._cache = e._cache.slice(t.length), n(t, r);
                                };
                            },
                            8116: (e, t, r)=>{
                                var n = r(7088), i = r(6608).Buffer, s = r(4705);
                                function o(e, t, r, o) {
                                    s.call(this), this._cipher = new n.AES(t), this._prev = i.from(r), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = o, this._mode = e;
                                }
                                r(1193)(o, s), o.prototype._update = function(e) {
                                    return this._mode.encrypt(this, e, this._decrypt);
                                }, o.prototype._final = function() {
                                    this._cipher.scrub();
                                }, e.exports = o;
                            },
                            8350: (e, t, r)=>{
                                var n = r(4487), i = r(5007), s = r(6200), o = r(3811), a = r(1804);
                                function c(e, t, r) {
                                    if (e = e.toLowerCase(), s[e]) return i.createCipheriv(e, t, r);
                                    if (o[e]) return new n({
                                        key: t,
                                        iv: r,
                                        mode: e
                                    });
                                    throw new TypeError("invalid suite type");
                                }
                                function h(e, t, r) {
                                    if (e = e.toLowerCase(), s[e]) return i.createDecipheriv(e, t, r);
                                    if (o[e]) return new n({
                                        key: t,
                                        iv: r,
                                        mode: e,
                                        decrypt: !0
                                    });
                                    throw new TypeError("invalid suite type");
                                }
                                t.createCipher = t.Cipher = function(e, t) {
                                    var r, n;
                                    if (e = e.toLowerCase(), s[e]) r = s[e].key, n = s[e].iv;
                                    else {
                                        if (!o[e]) throw new TypeError("invalid suite type");
                                        r = 8 * o[e].key, n = o[e].iv;
                                    }
                                    var i = a(t, !1, r, n);
                                    return c(e, i.key, i.iv);
                                }, t.createCipheriv = t.Cipheriv = c, t.createDecipher = t.Decipher = function(e, t) {
                                    var r, n;
                                    if (e = e.toLowerCase(), s[e]) r = s[e].key, n = s[e].iv;
                                    else {
                                        if (!o[e]) throw new TypeError("invalid suite type");
                                        r = 8 * o[e].key, n = o[e].iv;
                                    }
                                    var i = a(t, !1, r, n);
                                    return h(e, i.key, i.iv);
                                }, t.createDecipheriv = t.Decipheriv = h, t.listCiphers = t.getCiphers = function() {
                                    return Object.keys(o).concat(i.getCiphers());
                                };
                            },
                            4487: (e, t, r)=>{
                                var n = r(4705), i = r(2398), s = r(1193), o = r(6608).Buffer, a = {
                                    "des-ede3-cbc": i.CBC.instantiate(i.EDE),
                                    "des-ede3": i.EDE,
                                    "des-ede-cbc": i.CBC.instantiate(i.EDE),
                                    "des-ede": i.EDE,
                                    "des-cbc": i.CBC.instantiate(i.DES),
                                    "des-ecb": i.DES
                                };
                                function c(e) {
                                    n.call(this);
                                    var t, r = e.mode.toLowerCase(), i = a[r];
                                    t = e.decrypt ? "decrypt" : "encrypt";
                                    var s = e.key;
                                    o.isBuffer(s) || (s = o.from(s)), "des-ede" !== r && "des-ede-cbc" !== r || (s = o.concat([
                                        s,
                                        s.slice(0, 8)
                                    ]));
                                    var c = e.iv;
                                    o.isBuffer(c) || (c = o.from(c)), this._des = i.create({
                                        key: s,
                                        iv: c,
                                        type: t
                                    });
                                }
                                a.des = a["des-cbc"], a.des3 = a["des-ede3-cbc"], e.exports = c, s(c, n), c.prototype._update = function(e) {
                                    return o.from(this._des.update(e));
                                }, c.prototype._final = function() {
                                    return o.from(this._des.final());
                                };
                            },
                            3811: (e, t)=>{
                                t["des-ecb"] = {
                                    key: 8,
                                    iv: 0
                                }, t["des-cbc"] = t.des = {
                                    key: 8,
                                    iv: 8
                                }, t["des-ede3-cbc"] = t.des3 = {
                                    key: 24,
                                    iv: 8
                                }, t["des-ede3"] = {
                                    key: 24,
                                    iv: 0
                                }, t["des-ede-cbc"] = {
                                    key: 16,
                                    iv: 8
                                }, t["des-ede"] = {
                                    key: 16,
                                    iv: 0
                                };
                            },
                            1377: (e, t, r)=>{
                                var n = r(3900), i = r(2869);
                                function s(e) {
                                    var t, r = e.modulus.byteLength();
                                    do {
                                        t = new n(i(r));
                                    }while (t.cmp(e.modulus) >= 0 || !t.umod(e.prime1) || !t.umod(e.prime2))
                                    return t;
                                }
                                function o(e, t) {
                                    var r = function(e) {
                                        var t = s(e);
                                        return {
                                            blinder: t.toRed(n.mont(e.modulus)).redPow(new n(e.publicExponent)).fromRed(),
                                            unblinder: t.invm(e.modulus)
                                        };
                                    }(t), i = t.modulus.byteLength(), o = new n(e).mul(r.blinder).umod(t.modulus), a = o.toRed(n.mont(t.prime1)), c = o.toRed(n.mont(t.prime2)), h = t.coefficient, u = t.prime1, d = t.prime2, f = a.redPow(t.exponent1).fromRed(), l = c.redPow(t.exponent2).fromRed(), p = f.isub(l).imul(h).umod(u).imul(d);
                                    return l.iadd(p).imul(r.unblinder).umod(t.modulus).toArrayLike(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"], "be", i);
                                }
                                o.getr = s, e.exports = o;
                            },
                            8950: (e, t, r)=>{
                                "use strict";
                                e.exports = r(6980);
                            },
                            6105: (e, t, r)=>{
                                "use strict";
                                var n = r(6608).Buffer, i = r(8955), s = r(1094), o = r(1193), a = r(9508), c = r(5504), h = r(6980);
                                function u(e) {
                                    s.Writable.call(this);
                                    var t = h[e];
                                    if (!t) throw new Error("Unknown message digest");
                                    this._hashType = t.hash, this._hash = i(t.hash), this._tag = t.id, this._signType = t.sign;
                                }
                                function d(e) {
                                    s.Writable.call(this);
                                    var t = h[e];
                                    if (!t) throw new Error("Unknown message digest");
                                    this._hash = i(t.hash), this._tag = t.id, this._signType = t.sign;
                                }
                                function f(e) {
                                    return new u(e);
                                }
                                function l(e) {
                                    return new d(e);
                                }
                                Object.keys(h).forEach(function(e) {
                                    h[e].id = n.from(h[e].id, "hex"), h[e.toLowerCase()] = h[e];
                                }), o(u, s.Writable), u.prototype._write = function(e, t, r) {
                                    this._hash.update(e), r();
                                }, u.prototype.update = function(e, t) {
                                    return this._hash.update("string" == typeof e ? n.from(e, t) : e), this;
                                }, u.prototype.sign = function(e, t) {
                                    this.end();
                                    var r = this._hash.digest(), n = a(r, e, this._hashType, this._signType, this._tag);
                                    return t ? n.toString(t) : n;
                                }, o(d, s.Writable), d.prototype._write = function(e, t, r) {
                                    this._hash.update(e), r();
                                }, d.prototype.update = function(e, t) {
                                    return this._hash.update("string" == typeof e ? n.from(e, t) : e), this;
                                }, d.prototype.verify = function(e, t, r) {
                                    var i = "string" == typeof t ? n.from(t, r) : t;
                                    this.end();
                                    var s = this._hash.digest();
                                    return c(i, s, e, this._signType, this._tag);
                                }, e.exports = {
                                    Sign: f,
                                    Verify: l,
                                    createSign: f,
                                    createVerify: l
                                };
                            },
                            9508: (e, t, r)=>{
                                "use strict";
                                var n = r(6608).Buffer, i = r(3053), s = r(1377), o = r(3071).ec, a = r(3900), c = r(780), h = r(9262);
                                function u(e, t, r, s) {
                                    if ((e = n.from(e.toArray())).length < t.byteLength()) {
                                        var o = n.alloc(t.byteLength() - e.length);
                                        e = n.concat([
                                            o,
                                            e
                                        ]);
                                    }
                                    var a = r.length, c = function(e, t) {
                                        e = (e = d(e, t)).mod(t);
                                        var r = n.from(e.toArray());
                                        if (r.length < t.byteLength()) {
                                            var i = n.alloc(t.byteLength() - r.length);
                                            r = n.concat([
                                                i,
                                                r
                                            ]);
                                        }
                                        return r;
                                    }(r, t), h = n.alloc(a);
                                    h.fill(1);
                                    var u = n.alloc(a);
                                    return u = i(s, u).update(h).update(n.from([
                                        0
                                    ])).update(e).update(c).digest(), h = i(s, u).update(h).digest(), {
                                        k: u = i(s, u).update(h).update(n.from([
                                            1
                                        ])).update(e).update(c).digest(),
                                        v: h = i(s, u).update(h).digest()
                                    };
                                }
                                function d(e, t) {
                                    var r = new a(e), n = (e.length << 3) - t.bitLength();
                                    return n > 0 && r.ishrn(n), r;
                                }
                                function f(e, t, r) {
                                    var s, o;
                                    do {
                                        for(s = n.alloc(0); 8 * s.length < e.bitLength();)t.v = i(r, t.k).update(t.v).digest(), s = n.concat([
                                            s,
                                            t.v
                                        ]);
                                        o = d(s, e), t.k = i(r, t.k).update(t.v).update(n.from([
                                            0
                                        ])).digest(), t.v = i(r, t.k).update(t.v).digest();
                                    }while (-1 !== o.cmp(e))
                                    return o;
                                }
                                function l(e, t, r, n) {
                                    return e.toRed(a.mont(r)).redPow(t).fromRed().mod(n);
                                }
                                e.exports = function(e, t, r, i, p) {
                                    var b = c(t);
                                    if (b.curve) {
                                        if ("ecdsa" !== i && "ecdsa/rsa" !== i) throw new Error("wrong private key type");
                                        return function(e, t) {
                                            var r = h[t.curve.join(".")];
                                            if (!r) throw new Error("unknown curve " + t.curve.join("."));
                                            var i = new o(r).keyFromPrivate(t.privateKey).sign(e);
                                            return n.from(i.toDER());
                                        }(e, b);
                                    }
                                    if ("dsa" === b.type) {
                                        if ("dsa" !== i) throw new Error("wrong private key type");
                                        return function(e, t, r) {
                                            for(var i, s = t.params.priv_key, o = t.params.p, c = t.params.q, h = t.params.g, p = new a(0), b = d(e, c).mod(c), g = !1, m = u(s, c, e, r); !1 === g;)p = l(h, i = f(c, m, r), o, c), 0 === (g = i.invm(c).imul(b.add(s.mul(p))).mod(c)).cmpn(0) && (g = !1, p = new a(0));
                                            return function(e, t) {
                                                e = e.toArray(), t = t.toArray(), 128 & e[0] && (e = [
                                                    0
                                                ].concat(e)), 128 & t[0] && (t = [
                                                    0
                                                ].concat(t));
                                                var r = [
                                                    48,
                                                    e.length + t.length + 4,
                                                    2,
                                                    e.length
                                                ];
                                                return r = r.concat(e, [
                                                    2,
                                                    t.length
                                                ], t), n.from(r);
                                            }(p, g);
                                        }(e, b, r);
                                    }
                                    if ("rsa" !== i && "ecdsa/rsa" !== i) throw new Error("wrong private key type");
                                    if (void 0 !== t.padding && 1 !== t.padding) throw new Error("illegal or unsupported padding mode");
                                    e = n.concat([
                                        p,
                                        e
                                    ]);
                                    for(var g = b.modulus.byteLength(), m = [
                                        0,
                                        1
                                    ]; e.length + m.length + 1 < g;)m.push(255);
                                    m.push(0);
                                    for(var y = -1; ++y < e.length;)m.push(e[y]);
                                    return s(m, b);
                                }, e.exports.getKey = u, e.exports.makeKey = f;
                            },
                            5504: (e, t, r)=>{
                                "use strict";
                                var n = r(6608).Buffer, i = r(3900), s = r(3071).ec, o = r(780), a = r(9262);
                                function c(e, t) {
                                    if (e.cmpn(0) <= 0) throw new Error("invalid sig");
                                    if (e.cmp(t) >= 0) throw new Error("invalid sig");
                                }
                                e.exports = function(e, t, r, h, u) {
                                    var d = o(r);
                                    if ("ec" === d.type) {
                                        if ("ecdsa" !== h && "ecdsa/rsa" !== h) throw new Error("wrong public key type");
                                        return function(e, t, r) {
                                            var n = a[r.data.algorithm.curve.join(".")];
                                            if (!n) throw new Error("unknown curve " + r.data.algorithm.curve.join("."));
                                            var i = new s(n), o = r.data.subjectPrivateKey.data;
                                            return i.verify(t, e, o);
                                        }(e, t, d);
                                    }
                                    if ("dsa" === d.type) {
                                        if ("dsa" !== h) throw new Error("wrong public key type");
                                        return function(e, t, r) {
                                            var n = r.data.p, s = r.data.q, a = r.data.g, h = r.data.pub_key, u = o.signature.decode(e, "der"), d = u.s, f = u.r;
                                            c(d, s), c(f, s);
                                            var l = i.mont(n), p = d.invm(s);
                                            return 0 === a.toRed(l).redPow(new i(t).mul(p).mod(s)).fromRed().mul(h.toRed(l).redPow(f.mul(p).mod(s)).fromRed()).mod(n).mod(s).cmp(f);
                                        }(e, t, d);
                                    }
                                    if ("rsa" !== h && "ecdsa/rsa" !== h) throw new Error("wrong public key type");
                                    t = n.concat([
                                        u,
                                        t
                                    ]);
                                    for(var f = d.modulus.byteLength(), l = [
                                        1
                                    ], p = 0; t.length + l.length + 2 < f;)l.push(255), p += 1;
                                    l.push(0);
                                    for(var b = -1; ++b < t.length;)l.push(t[b]);
                                    l = n.from(l);
                                    var g = i.mont(d.modulus);
                                    e = (e = new i(e).toRed(g)).redPow(new i(d.publicExponent)), e = n.from(e.fromRed().toArray());
                                    var m = p < 8 ? 1 : 0;
                                    for(f = Math.min(e.length, l.length), e.length !== l.length && (m = 1), b = -1; ++b < f;)m |= e[b] ^ l[b];
                                    return 0 === m;
                                };
                            },
                            460: (e)=>{
                                e.exports = function(e, t) {
                                    for(var r = Math.min(e.length, t.length), n = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](r), i = 0; i < r; ++i)n[i] = e[i] ^ t[i];
                                    return n;
                                };
                            },
                            6533: (e, t, r)=>{
                                "use strict";
                                const n = r(4933), i = r(3328), s = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
                                t.Buffer = c, t.SlowBuffer = function(e) {
                                    return +e != e && (e = 0), c.alloc(+e);
                                }, t.INSPECT_MAX_BYTES = 50;
                                const o = 2147483647;
                                function a(e) {
                                    if (e > o) throw new RangeError('The value "' + e + '" is invalid for option "size"');
                                    const t = new Uint8Array(e);
                                    return Object.setPrototypeOf(t, c.prototype), t;
                                }
                                function c(e, t, r) {
                                    if ("number" == typeof e) {
                                        if ("string" == typeof t) throw new TypeError('The "string" argument must be of type string. Received type number');
                                        return d(e);
                                    }
                                    return h(e, t, r);
                                }
                                function h(e, t, r) {
                                    if ("string" == typeof e) return function(e, t) {
                                        if ("string" == typeof t && "" !== t || (t = "utf8"), !c.isEncoding(t)) throw new TypeError("Unknown encoding: " + t);
                                        const r = 0 | b(e, t);
                                        let n = a(r);
                                        const i = n.write(e, t);
                                        return i !== r && (n = n.slice(0, i)), n;
                                    }(e, t);
                                    if (ArrayBuffer.isView(e)) return function(e) {
                                        if (J(e, Uint8Array)) {
                                            const t = new Uint8Array(e);
                                            return l(t.buffer, t.byteOffset, t.byteLength);
                                        }
                                        return f(e);
                                    }(e);
                                    if (null == e) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
                                    if (J(e, ArrayBuffer) || e && J(e.buffer, ArrayBuffer)) return l(e, t, r);
                                    if ("undefined" != typeof SharedArrayBuffer && (J(e, SharedArrayBuffer) || e && J(e.buffer, SharedArrayBuffer))) return l(e, t, r);
                                    if ("number" == typeof e) throw new TypeError('The "value" argument must not be of type number. Received type number');
                                    const n = e.valueOf && e.valueOf();
                                    if (null != n && n !== e) return c.from(n, t, r);
                                    const i = function(e) {
                                        if (c.isBuffer(e)) {
                                            const t = 0 | p(e.length), r = a(t);
                                            return 0 === r.length || e.copy(r, 0, 0, t), r;
                                        }
                                        return void 0 !== e.length ? "number" != typeof e.length || Y(e.length) ? a(0) : f(e) : "Buffer" === e.type && Array.isArray(e.data) ? f(e.data) : void 0;
                                    }(e);
                                    if (i) return i;
                                    if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e[Symbol.toPrimitive]) return c.from(e[Symbol.toPrimitive]("string"), t, r);
                                    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
                                }
                                function u(e) {
                                    if ("number" != typeof e) throw new TypeError('"size" argument must be of type number');
                                    if (e < 0) throw new RangeError('The value "' + e + '" is invalid for option "size"');
                                }
                                function d(e) {
                                    return u(e), a(e < 0 ? 0 : 0 | p(e));
                                }
                                function f(e) {
                                    const t = e.length < 0 ? 0 : 0 | p(e.length), r = a(t);
                                    for(let n = 0; n < t; n += 1)r[n] = 255 & e[n];
                                    return r;
                                }
                                function l(e, t, r) {
                                    if (t < 0 || e.byteLength < t) throw new RangeError('"offset" is outside of buffer bounds');
                                    if (e.byteLength < t + (r || 0)) throw new RangeError('"length" is outside of buffer bounds');
                                    let n;
                                    return n = void 0 === t && void 0 === r ? new Uint8Array(e) : void 0 === r ? new Uint8Array(e, t) : new Uint8Array(e, t, r), Object.setPrototypeOf(n, c.prototype), n;
                                }
                                function p(e) {
                                    if (e >= o) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + o.toString(16) + " bytes");
                                    return 0 | e;
                                }
                                function b(e, t) {
                                    if (c.isBuffer(e)) return e.length;
                                    if (ArrayBuffer.isView(e) || J(e, ArrayBuffer)) return e.byteLength;
                                    if ("string" != typeof e) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
                                    const r = e.length, n = arguments.length > 2 && !0 === arguments[2];
                                    if (!n && 0 === r) return 0;
                                    let i = !1;
                                    for(;;)switch(t){
                                        case "ascii":
                                        case "latin1":
                                        case "binary":
                                            return r;
                                        case "utf8":
                                        case "utf-8":
                                            return K(e).length;
                                        case "ucs2":
                                        case "ucs-2":
                                        case "utf16le":
                                        case "utf-16le":
                                            return 2 * r;
                                        case "hex":
                                            return r >>> 1;
                                        case "base64":
                                            return G(e).length;
                                        default:
                                            if (i) return n ? -1 : K(e).length;
                                            t = ("" + t).toLowerCase(), i = !0;
                                    }
                                }
                                function g(e, t, r) {
                                    let n = !1;
                                    if ((void 0 === t || t < 0) && (t = 0), t > this.length) return "";
                                    if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) return "";
                                    if ((r >>>= 0) <= (t >>>= 0)) return "";
                                    for(e || (e = "utf8");;)switch(e){
                                        case "hex":
                                            return R(this, t, r);
                                        case "utf8":
                                        case "utf-8":
                                            return I(this, t, r);
                                        case "ascii":
                                            return x(this, t, r);
                                        case "latin1":
                                        case "binary":
                                            return C(this, t, r);
                                        case "base64":
                                            return M(this, t, r);
                                        case "ucs2":
                                        case "ucs-2":
                                        case "utf16le":
                                        case "utf-16le":
                                            return k(this, t, r);
                                        default:
                                            if (n) throw new TypeError("Unknown encoding: " + e);
                                            e = (e + "").toLowerCase(), n = !0;
                                    }
                                }
                                function m(e, t, r) {
                                    const n = e[t];
                                    e[t] = e[r], e[r] = n;
                                }
                                function y(e, t, r, n, i) {
                                    if (0 === e.length) return -1;
                                    if ("string" == typeof r ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), Y(r = +r) && (r = i ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) {
                                        if (i) return -1;
                                        r = e.length - 1;
                                    } else if (r < 0) {
                                        if (!i) return -1;
                                        r = 0;
                                    }
                                    if ("string" == typeof t && (t = c.from(t, n)), c.isBuffer(t)) return 0 === t.length ? -1 : v(e, t, r, n, i);
                                    if ("number" == typeof t) return t &= 255, "function" == typeof Uint8Array.prototype.indexOf ? i ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : v(e, [
                                        t
                                    ], r, n, i);
                                    throw new TypeError("val must be string, number or Buffer");
                                }
                                function v(e, t, r, n, i) {
                                    let s, o = 1, a = e.length, c = t.length;
                                    if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                                        if (e.length < 2 || t.length < 2) return -1;
                                        o = 2, a /= 2, c /= 2, r /= 2;
                                    }
                                    function h(e, t) {
                                        return 1 === o ? e[t] : e.readUInt16BE(t * o);
                                    }
                                    if (i) {
                                        let n = -1;
                                        for(s = r; s < a; s++)if (h(e, s) === h(t, -1 === n ? 0 : s - n)) {
                                            if (-1 === n && (n = s), s - n + 1 === c) return n * o;
                                        } else -1 !== n && (s -= s - n), n = -1;
                                    } else for(r + c > a && (r = a - c), s = r; s >= 0; s--){
                                        let r = !0;
                                        for(let n = 0; n < c; n++)if (h(e, s + n) !== h(t, n)) {
                                            r = !1;
                                            break;
                                        }
                                        if (r) return s;
                                    }
                                    return -1;
                                }
                                function w(e, t, r, n) {
                                    r = Number(r) || 0;
                                    const i = e.length - r;
                                    n ? (n = Number(n)) > i && (n = i) : n = i;
                                    const s = t.length;
                                    let o;
                                    for(n > s / 2 && (n = s / 2), o = 0; o < n; ++o){
                                        const n = parseInt(t.substr(2 * o, 2), 16);
                                        if (Y(n)) return o;
                                        e[r + o] = n;
                                    }
                                    return o;
                                }
                                function _(e, t, r, n) {
                                    return W(K(t, e.length - r), e, r, n);
                                }
                                function E(e, t, r, n) {
                                    return W(function(e) {
                                        const t = [];
                                        for(let r = 0; r < e.length; ++r)t.push(255 & e.charCodeAt(r));
                                        return t;
                                    }(t), e, r, n);
                                }
                                function S(e, t, r, n) {
                                    return W(G(t), e, r, n);
                                }
                                function A(e, t, r, n) {
                                    return W(function(e, t) {
                                        let r, n, i;
                                        const s = [];
                                        for(let o = 0; o < e.length && !((t -= 2) < 0); ++o)r = e.charCodeAt(o), n = r >> 8, i = r % 256, s.push(i), s.push(n);
                                        return s;
                                    }(t, e.length - r), e, r, n);
                                }
                                function M(e, t, r) {
                                    return 0 === t && r === e.length ? n.fromByteArray(e) : n.fromByteArray(e.slice(t, r));
                                }
                                function I(e, t, r) {
                                    r = Math.min(e.length, r);
                                    const n = [];
                                    let i = t;
                                    for(; i < r;){
                                        const t = e[i];
                                        let s = null, o = t > 239 ? 4 : t > 223 ? 3 : t > 191 ? 2 : 1;
                                        if (i + o <= r) {
                                            let r, n, a, c;
                                            switch(o){
                                                case 1:
                                                    t < 128 && (s = t);
                                                    break;
                                                case 2:
                                                    r = e[i + 1], 128 == (192 & r) && (c = (31 & t) << 6 | 63 & r, c > 127 && (s = c));
                                                    break;
                                                case 3:
                                                    r = e[i + 1], n = e[i + 2], 128 == (192 & r) && 128 == (192 & n) && (c = (15 & t) << 12 | (63 & r) << 6 | 63 & n, c > 2047 && (c < 55296 || c > 57343) && (s = c));
                                                    break;
                                                case 4:
                                                    r = e[i + 1], n = e[i + 2], a = e[i + 3], 128 == (192 & r) && 128 == (192 & n) && 128 == (192 & a) && (c = (15 & t) << 18 | (63 & r) << 12 | (63 & n) << 6 | 63 & a, c > 65535 && c < 1114112 && (s = c));
                                            }
                                        }
                                        null === s ? (s = 65533, o = 1) : s > 65535 && (s -= 65536, n.push(s >>> 10 & 1023 | 55296), s = 56320 | 1023 & s), n.push(s), i += o;
                                    }
                                    return function(e) {
                                        const t = e.length;
                                        if (t <= T) return String.fromCharCode.apply(String, e);
                                        let r = "", n = 0;
                                        for(; n < t;)r += String.fromCharCode.apply(String, e.slice(n, n += T));
                                        return r;
                                    }(n);
                                }
                                t.kMaxLength = o, c.TYPED_ARRAY_SUPPORT = function() {
                                    try {
                                        const e = new Uint8Array(1), t = {
                                            foo: function() {
                                                return 42;
                                            }
                                        };
                                        return Object.setPrototypeOf(t, Uint8Array.prototype), Object.setPrototypeOf(e, t), 42 === e.foo();
                                    } catch (e) {
                                        return !1;
                                    }
                                }(), c.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(c.prototype, "parent", {
                                    enumerable: !0,
                                    get: function() {
                                        if (c.isBuffer(this)) return this.buffer;
                                    }
                                }), Object.defineProperty(c.prototype, "offset", {
                                    enumerable: !0,
                                    get: function() {
                                        if (c.isBuffer(this)) return this.byteOffset;
                                    }
                                }), c.poolSize = 8192, c.from = function(e, t, r) {
                                    return h(e, t, r);
                                }, Object.setPrototypeOf(c.prototype, Uint8Array.prototype), Object.setPrototypeOf(c, Uint8Array), c.alloc = function(e, t, r) {
                                    return function(e, t, r) {
                                        return u(e), e <= 0 ? a(e) : void 0 !== t ? "string" == typeof r ? a(e).fill(t, r) : a(e).fill(t) : a(e);
                                    }(e, t, r);
                                }, c.allocUnsafe = function(e) {
                                    return d(e);
                                }, c.allocUnsafeSlow = function(e) {
                                    return d(e);
                                }, c.isBuffer = function(e) {
                                    return null != e && !0 === e._isBuffer && e !== c.prototype;
                                }, c.compare = function(e, t) {
                                    if (J(e, Uint8Array) && (e = c.from(e, e.offset, e.byteLength)), J(t, Uint8Array) && (t = c.from(t, t.offset, t.byteLength)), !c.isBuffer(e) || !c.isBuffer(t)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                                    if (e === t) return 0;
                                    let r = e.length, n = t.length;
                                    for(let i = 0, s = Math.min(r, n); i < s; ++i)if (e[i] !== t[i]) {
                                        r = e[i], n = t[i];
                                        break;
                                    }
                                    return r < n ? -1 : n < r ? 1 : 0;
                                }, c.isEncoding = function(e) {
                                    switch(String(e).toLowerCase()){
                                        case "hex":
                                        case "utf8":
                                        case "utf-8":
                                        case "ascii":
                                        case "latin1":
                                        case "binary":
                                        case "base64":
                                        case "ucs2":
                                        case "ucs-2":
                                        case "utf16le":
                                        case "utf-16le":
                                            return !0;
                                        default:
                                            return !1;
                                    }
                                }, c.concat = function(e, t) {
                                    if (!Array.isArray(e)) throw new TypeError('"list" argument must be an Array of Buffers');
                                    if (0 === e.length) return c.alloc(0);
                                    let r;
                                    if (void 0 === t) for(t = 0, r = 0; r < e.length; ++r)t += e[r].length;
                                    const n = c.allocUnsafe(t);
                                    let i = 0;
                                    for(r = 0; r < e.length; ++r){
                                        let t = e[r];
                                        if (J(t, Uint8Array)) i + t.length > n.length ? (c.isBuffer(t) || (t = c.from(t)), t.copy(n, i)) : Uint8Array.prototype.set.call(n, t, i);
                                        else {
                                            if (!c.isBuffer(t)) throw new TypeError('"list" argument must be an Array of Buffers');
                                            t.copy(n, i);
                                        }
                                        i += t.length;
                                    }
                                    return n;
                                }, c.byteLength = b, c.prototype._isBuffer = !0, c.prototype.swap16 = function() {
                                    const e = this.length;
                                    if (e % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                                    for(let t = 0; t < e; t += 2)m(this, t, t + 1);
                                    return this;
                                }, c.prototype.swap32 = function() {
                                    const e = this.length;
                                    if (e % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                                    for(let t = 0; t < e; t += 4)m(this, t, t + 3), m(this, t + 1, t + 2);
                                    return this;
                                }, c.prototype.swap64 = function() {
                                    const e = this.length;
                                    if (e % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                                    for(let t = 0; t < e; t += 8)m(this, t, t + 7), m(this, t + 1, t + 6), m(this, t + 2, t + 5), m(this, t + 3, t + 4);
                                    return this;
                                }, c.prototype.toString = function() {
                                    const e = this.length;
                                    return 0 === e ? "" : 0 === arguments.length ? I(this, 0, e) : g.apply(this, arguments);
                                }, c.prototype.toLocaleString = c.prototype.toString, c.prototype.equals = function(e) {
                                    if (!c.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
                                    return this === e || 0 === c.compare(this, e);
                                }, c.prototype.inspect = function() {
                                    let e = "";
                                    const r = t.INSPECT_MAX_BYTES;
                                    return e = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(), this.length > r && (e += " ... "), "<Buffer " + e + ">";
                                }, s && (c.prototype[s] = c.prototype.inspect), c.prototype.compare = function(e, t, r, n, i) {
                                    if (J(e, Uint8Array) && (e = c.from(e, e.offset, e.byteLength)), !c.isBuffer(e)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e);
                                    if (void 0 === t && (t = 0), void 0 === r && (r = e ? e.length : 0), void 0 === n && (n = 0), void 0 === i && (i = this.length), t < 0 || r > e.length || n < 0 || i > this.length) throw new RangeError("out of range index");
                                    if (n >= i && t >= r) return 0;
                                    if (n >= i) return -1;
                                    if (t >= r) return 1;
                                    if (this === e) return 0;
                                    let s = (i >>>= 0) - (n >>>= 0), o = (r >>>= 0) - (t >>>= 0);
                                    const a = Math.min(s, o), h = this.slice(n, i), u = e.slice(t, r);
                                    for(let e = 0; e < a; ++e)if (h[e] !== u[e]) {
                                        s = h[e], o = u[e];
                                        break;
                                    }
                                    return s < o ? -1 : o < s ? 1 : 0;
                                }, c.prototype.includes = function(e, t, r) {
                                    return -1 !== this.indexOf(e, t, r);
                                }, c.prototype.indexOf = function(e, t, r) {
                                    return y(this, e, t, r, !0);
                                }, c.prototype.lastIndexOf = function(e, t, r) {
                                    return y(this, e, t, r, !1);
                                }, c.prototype.write = function(e, t, r, n) {
                                    if (void 0 === t) n = "utf8", r = this.length, t = 0;
                                    else if (void 0 === r && "string" == typeof t) n = t, r = this.length, t = 0;
                                    else {
                                        if (!isFinite(t)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                                        t >>>= 0, isFinite(r) ? (r >>>= 0, void 0 === n && (n = "utf8")) : (n = r, r = void 0);
                                    }
                                    const i = this.length - t;
                                    if ((void 0 === r || r > i) && (r = i), e.length > 0 && (r < 0 || t < 0) || t > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                                    n || (n = "utf8");
                                    let s = !1;
                                    for(;;)switch(n){
                                        case "hex":
                                            return w(this, e, t, r);
                                        case "utf8":
                                        case "utf-8":
                                            return _(this, e, t, r);
                                        case "ascii":
                                        case "latin1":
                                        case "binary":
                                            return E(this, e, t, r);
                                        case "base64":
                                            return S(this, e, t, r);
                                        case "ucs2":
                                        case "ucs-2":
                                        case "utf16le":
                                        case "utf-16le":
                                            return A(this, e, t, r);
                                        default:
                                            if (s) throw new TypeError("Unknown encoding: " + n);
                                            n = ("" + n).toLowerCase(), s = !0;
                                    }
                                }, c.prototype.toJSON = function() {
                                    return {
                                        type: "Buffer",
                                        data: Array.prototype.slice.call(this._arr || this, 0)
                                    };
                                };
                                const T = 4096;
                                function x(e, t, r) {
                                    let n = "";
                                    r = Math.min(e.length, r);
                                    for(let i = t; i < r; ++i)n += String.fromCharCode(127 & e[i]);
                                    return n;
                                }
                                function C(e, t, r) {
                                    let n = "";
                                    r = Math.min(e.length, r);
                                    for(let i = t; i < r; ++i)n += String.fromCharCode(e[i]);
                                    return n;
                                }
                                function R(e, t, r) {
                                    const n = e.length;
                                    (!t || t < 0) && (t = 0), (!r || r < 0 || r > n) && (r = n);
                                    let i = "";
                                    for(let n = t; n < r; ++n)i += X[e[n]];
                                    return i;
                                }
                                function k(e, t, r) {
                                    const n = e.slice(t, r);
                                    let i = "";
                                    for(let e = 0; e < n.length - 1; e += 2)i += String.fromCharCode(n[e] + 256 * n[e + 1]);
                                    return i;
                                }
                                function P(e, t, r) {
                                    if (e % 1 != 0 || e < 0) throw new RangeError("offset is not uint");
                                    if (e + t > r) throw new RangeError("Trying to access beyond buffer length");
                                }
                                function O(e, t, r, n, i, s) {
                                    if (!c.isBuffer(e)) throw new TypeError('"buffer" argument must be a Buffer instance');
                                    if (t > i || t < s) throw new RangeError('"value" argument is out of bounds');
                                    if (r + n > e.length) throw new RangeError("Index out of range");
                                }
                                function N(e, t, r, n, i) {
                                    H(t, n, i, e, r, 7);
                                    let s = Number(t & BigInt(4294967295));
                                    e[r++] = s, s >>= 8, e[r++] = s, s >>= 8, e[r++] = s, s >>= 8, e[r++] = s;
                                    let o = Number(t >> BigInt(32) & BigInt(4294967295));
                                    return e[r++] = o, o >>= 8, e[r++] = o, o >>= 8, e[r++] = o, o >>= 8, e[r++] = o, r;
                                }
                                function U(e, t, r, n, i) {
                                    H(t, n, i, e, r, 7);
                                    let s = Number(t & BigInt(4294967295));
                                    e[r + 7] = s, s >>= 8, e[r + 6] = s, s >>= 8, e[r + 5] = s, s >>= 8, e[r + 4] = s;
                                    let o = Number(t >> BigInt(32) & BigInt(4294967295));
                                    return e[r + 3] = o, o >>= 8, e[r + 2] = o, o >>= 8, e[r + 1] = o, o >>= 8, e[r] = o, r + 8;
                                }
                                function B(e, t, r, n, i, s) {
                                    if (r + n > e.length) throw new RangeError("Index out of range");
                                    if (r < 0) throw new RangeError("Index out of range");
                                }
                                function L(e, t, r, n, s) {
                                    return t = +t, r >>>= 0, s || B(e, 0, r, 4), i.write(e, t, r, n, 23, 4), r + 4;
                                }
                                function j(e, t, r, n, s) {
                                    return t = +t, r >>>= 0, s || B(e, 0, r, 8), i.write(e, t, r, n, 52, 8), r + 8;
                                }
                                c.prototype.slice = function(e, t) {
                                    const r = this.length;
                                    (e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r), (t = void 0 === t ? r : ~~t) < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r), t < e && (t = e);
                                    const n = this.subarray(e, t);
                                    return Object.setPrototypeOf(n, c.prototype), n;
                                }, c.prototype.readUintLE = c.prototype.readUIntLE = function(e, t, r) {
                                    e >>>= 0, t >>>= 0, r || P(e, t, this.length);
                                    let n = this[e], i = 1, s = 0;
                                    for(; ++s < t && (i *= 256);)n += this[e + s] * i;
                                    return n;
                                }, c.prototype.readUintBE = c.prototype.readUIntBE = function(e, t, r) {
                                    e >>>= 0, t >>>= 0, r || P(e, t, this.length);
                                    let n = this[e + --t], i = 1;
                                    for(; t > 0 && (i *= 256);)n += this[e + --t] * i;
                                    return n;
                                }, c.prototype.readUint8 = c.prototype.readUInt8 = function(e, t) {
                                    return e >>>= 0, t || P(e, 1, this.length), this[e];
                                }, c.prototype.readUint16LE = c.prototype.readUInt16LE = function(e, t) {
                                    return e >>>= 0, t || P(e, 2, this.length), this[e] | this[e + 1] << 8;
                                }, c.prototype.readUint16BE = c.prototype.readUInt16BE = function(e, t) {
                                    return e >>>= 0, t || P(e, 2, this.length), this[e] << 8 | this[e + 1];
                                }, c.prototype.readUint32LE = c.prototype.readUInt32LE = function(e, t) {
                                    return e >>>= 0, t || P(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3];
                                }, c.prototype.readUint32BE = c.prototype.readUInt32BE = function(e, t) {
                                    return e >>>= 0, t || P(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);
                                }, c.prototype.readBigUInt64LE = Z(function(e) {
                                    z(e >>>= 0, "offset");
                                    const t = this[e], r = this[e + 7];
                                    void 0 !== t && void 0 !== r || V(e, this.length - 8);
                                    const n = t + 256 * this[++e] + 65536 * this[++e] + this[++e] * 2 ** 24, i = this[++e] + 256 * this[++e] + 65536 * this[++e] + r * 2 ** 24;
                                    return BigInt(n) + (BigInt(i) << BigInt(32));
                                }), c.prototype.readBigUInt64BE = Z(function(e) {
                                    z(e >>>= 0, "offset");
                                    const t = this[e], r = this[e + 7];
                                    void 0 !== t && void 0 !== r || V(e, this.length - 8);
                                    const n = t * 2 ** 24 + 65536 * this[++e] + 256 * this[++e] + this[++e], i = this[++e] * 2 ** 24 + 65536 * this[++e] + 256 * this[++e] + r;
                                    return (BigInt(n) << BigInt(32)) + BigInt(i);
                                }), c.prototype.readIntLE = function(e, t, r) {
                                    e >>>= 0, t >>>= 0, r || P(e, t, this.length);
                                    let n = this[e], i = 1, s = 0;
                                    for(; ++s < t && (i *= 256);)n += this[e + s] * i;
                                    return i *= 128, n >= i && (n -= Math.pow(2, 8 * t)), n;
                                }, c.prototype.readIntBE = function(e, t, r) {
                                    e >>>= 0, t >>>= 0, r || P(e, t, this.length);
                                    let n = t, i = 1, s = this[e + --n];
                                    for(; n > 0 && (i *= 256);)s += this[e + --n] * i;
                                    return i *= 128, s >= i && (s -= Math.pow(2, 8 * t)), s;
                                }, c.prototype.readInt8 = function(e, t) {
                                    return e >>>= 0, t || P(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e];
                                }, c.prototype.readInt16LE = function(e, t) {
                                    e >>>= 0, t || P(e, 2, this.length);
                                    const r = this[e] | this[e + 1] << 8;
                                    return 32768 & r ? 4294901760 | r : r;
                                }, c.prototype.readInt16BE = function(e, t) {
                                    e >>>= 0, t || P(e, 2, this.length);
                                    const r = this[e + 1] | this[e] << 8;
                                    return 32768 & r ? 4294901760 | r : r;
                                }, c.prototype.readInt32LE = function(e, t) {
                                    return e >>>= 0, t || P(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;
                                }, c.prototype.readInt32BE = function(e, t) {
                                    return e >>>= 0, t || P(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];
                                }, c.prototype.readBigInt64LE = Z(function(e) {
                                    z(e >>>= 0, "offset");
                                    const t = this[e], r = this[e + 7];
                                    void 0 !== t && void 0 !== r || V(e, this.length - 8);
                                    const n = this[e + 4] + 256 * this[e + 5] + 65536 * this[e + 6] + (r << 24);
                                    return (BigInt(n) << BigInt(32)) + BigInt(t + 256 * this[++e] + 65536 * this[++e] + this[++e] * 2 ** 24);
                                }), c.prototype.readBigInt64BE = Z(function(e) {
                                    z(e >>>= 0, "offset");
                                    const t = this[e], r = this[e + 7];
                                    void 0 !== t && void 0 !== r || V(e, this.length - 8);
                                    const n = (t << 24) + 65536 * this[++e] + 256 * this[++e] + this[++e];
                                    return (BigInt(n) << BigInt(32)) + BigInt(this[++e] * 2 ** 24 + 65536 * this[++e] + 256 * this[++e] + r);
                                }), c.prototype.readFloatLE = function(e, t) {
                                    return e >>>= 0, t || P(e, 4, this.length), i.read(this, e, !0, 23, 4);
                                }, c.prototype.readFloatBE = function(e, t) {
                                    return e >>>= 0, t || P(e, 4, this.length), i.read(this, e, !1, 23, 4);
                                }, c.prototype.readDoubleLE = function(e, t) {
                                    return e >>>= 0, t || P(e, 8, this.length), i.read(this, e, !0, 52, 8);
                                }, c.prototype.readDoubleBE = function(e, t) {
                                    return e >>>= 0, t || P(e, 8, this.length), i.read(this, e, !1, 52, 8);
                                }, c.prototype.writeUintLE = c.prototype.writeUIntLE = function(e, t, r, n) {
                                    e = +e, t >>>= 0, r >>>= 0, n || O(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
                                    let i = 1, s = 0;
                                    for(this[t] = 255 & e; ++s < r && (i *= 256);)this[t + s] = e / i & 255;
                                    return t + r;
                                }, c.prototype.writeUintBE = c.prototype.writeUIntBE = function(e, t, r, n) {
                                    e = +e, t >>>= 0, r >>>= 0, n || O(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
                                    let i = r - 1, s = 1;
                                    for(this[t + i] = 255 & e; --i >= 0 && (s *= 256);)this[t + i] = e / s & 255;
                                    return t + r;
                                }, c.prototype.writeUint8 = c.prototype.writeUInt8 = function(e, t, r) {
                                    return e = +e, t >>>= 0, r || O(this, e, t, 1, 255, 0), this[t] = 255 & e, t + 1;
                                }, c.prototype.writeUint16LE = c.prototype.writeUInt16LE = function(e, t, r) {
                                    return e = +e, t >>>= 0, r || O(this, e, t, 2, 65535, 0), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2;
                                }, c.prototype.writeUint16BE = c.prototype.writeUInt16BE = function(e, t, r) {
                                    return e = +e, t >>>= 0, r || O(this, e, t, 2, 65535, 0), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2;
                                }, c.prototype.writeUint32LE = c.prototype.writeUInt32LE = function(e, t, r) {
                                    return e = +e, t >>>= 0, r || O(this, e, t, 4, 4294967295, 0), this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e, t + 4;
                                }, c.prototype.writeUint32BE = c.prototype.writeUInt32BE = function(e, t, r) {
                                    return e = +e, t >>>= 0, r || O(this, e, t, 4, 4294967295, 0), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4;
                                }, c.prototype.writeBigUInt64LE = Z(function(e, t = 0) {
                                    return N(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"));
                                }), c.prototype.writeBigUInt64BE = Z(function(e, t = 0) {
                                    return U(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"));
                                }), c.prototype.writeIntLE = function(e, t, r, n) {
                                    if (e = +e, t >>>= 0, !n) {
                                        const n = Math.pow(2, 8 * r - 1);
                                        O(this, e, t, r, n - 1, -n);
                                    }
                                    let i = 0, s = 1, o = 0;
                                    for(this[t] = 255 & e; ++i < r && (s *= 256);)e < 0 && 0 === o && 0 !== this[t + i - 1] && (o = 1), this[t + i] = (e / s | 0) - o & 255;
                                    return t + r;
                                }, c.prototype.writeIntBE = function(e, t, r, n) {
                                    if (e = +e, t >>>= 0, !n) {
                                        const n = Math.pow(2, 8 * r - 1);
                                        O(this, e, t, r, n - 1, -n);
                                    }
                                    let i = r - 1, s = 1, o = 0;
                                    for(this[t + i] = 255 & e; --i >= 0 && (s *= 256);)e < 0 && 0 === o && 0 !== this[t + i + 1] && (o = 1), this[t + i] = (e / s | 0) - o & 255;
                                    return t + r;
                                }, c.prototype.writeInt8 = function(e, t, r) {
                                    return e = +e, t >>>= 0, r || O(this, e, t, 1, 127, -128), e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1;
                                }, c.prototype.writeInt16LE = function(e, t, r) {
                                    return e = +e, t >>>= 0, r || O(this, e, t, 2, 32767, -32768), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2;
                                }, c.prototype.writeInt16BE = function(e, t, r) {
                                    return e = +e, t >>>= 0, r || O(this, e, t, 2, 32767, -32768), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2;
                                }, c.prototype.writeInt32LE = function(e, t, r) {
                                    return e = +e, t >>>= 0, r || O(this, e, t, 4, 2147483647, -2147483648), this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24, t + 4;
                                }, c.prototype.writeInt32BE = function(e, t, r) {
                                    return e = +e, t >>>= 0, r || O(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4;
                                }, c.prototype.writeBigInt64LE = Z(function(e, t = 0) {
                                    return N(this, e, t, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
                                }), c.prototype.writeBigInt64BE = Z(function(e, t = 0) {
                                    return U(this, e, t, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
                                }), c.prototype.writeFloatLE = function(e, t, r) {
                                    return L(this, e, t, !0, r);
                                }, c.prototype.writeFloatBE = function(e, t, r) {
                                    return L(this, e, t, !1, r);
                                }, c.prototype.writeDoubleLE = function(e, t, r) {
                                    return j(this, e, t, !0, r);
                                }, c.prototype.writeDoubleBE = function(e, t, r) {
                                    return j(this, e, t, !1, r);
                                }, c.prototype.copy = function(e, t, r, n) {
                                    if (!c.isBuffer(e)) throw new TypeError("argument should be a Buffer");
                                    if (r || (r = 0), n || 0 === n || (n = this.length), t >= e.length && (t = e.length), t || (t = 0), n > 0 && n < r && (n = r), n === r) return 0;
                                    if (0 === e.length || 0 === this.length) return 0;
                                    if (t < 0) throw new RangeError("targetStart out of bounds");
                                    if (r < 0 || r >= this.length) throw new RangeError("Index out of range");
                                    if (n < 0) throw new RangeError("sourceEnd out of bounds");
                                    n > this.length && (n = this.length), e.length - t < n - r && (n = e.length - t + r);
                                    const i = n - r;
                                    return this === e && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(t, r, n) : Uint8Array.prototype.set.call(e, this.subarray(r, n), t), i;
                                }, c.prototype.fill = function(e, t, r, n) {
                                    if ("string" == typeof e) {
                                        if ("string" == typeof t ? (n = t, t = 0, r = this.length) : "string" == typeof r && (n = r, r = this.length), void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");
                                        if ("string" == typeof n && !c.isEncoding(n)) throw new TypeError("Unknown encoding: " + n);
                                        if (1 === e.length) {
                                            const t = e.charCodeAt(0);
                                            ("utf8" === n && t < 128 || "latin1" === n) && (e = t);
                                        }
                                    } else "number" == typeof e ? e &= 255 : "boolean" == typeof e && (e = Number(e));
                                    if (t < 0 || this.length < t || this.length < r) throw new RangeError("Out of range index");
                                    if (r <= t) return this;
                                    let i;
                                    if (t >>>= 0, r = void 0 === r ? this.length : r >>> 0, e || (e = 0), "number" == typeof e) for(i = t; i < r; ++i)this[i] = e;
                                    else {
                                        const s = c.isBuffer(e) ? e : c.from(e, n), o = s.length;
                                        if (0 === o) throw new TypeError('The value "' + e + '" is invalid for argument "value"');
                                        for(i = 0; i < r - t; ++i)this[i + t] = s[i % o];
                                    }
                                    return this;
                                };
                                const D = {};
                                function q(e, t, r) {
                                    D[e] = class extends r {
                                        constructor(){
                                            super(), Object.defineProperty(this, "message", {
                                                value: t.apply(this, arguments),
                                                writable: !0,
                                                configurable: !0
                                            }), this.name = `${this.name} [${e}]`, this.stack, delete this.name;
                                        }
                                        get code() {
                                            return e;
                                        }
                                        set code(e) {
                                            Object.defineProperty(this, "code", {
                                                configurable: !0,
                                                enumerable: !0,
                                                value: e,
                                                writable: !0
                                            });
                                        }
                                        toString() {
                                            return `${this.name} [${e}]: ${this.message}`;
                                        }
                                    };
                                }
                                function F(e) {
                                    let t = "", r = e.length;
                                    const n = "-" === e[0] ? 1 : 0;
                                    for(; r >= n + 4; r -= 3)t = `_${e.slice(r - 3, r)}${t}`;
                                    return `${e.slice(0, r)}${t}`;
                                }
                                function H(e, t, r, n, i, s) {
                                    if (e > r || e < t) {
                                        const n = "bigint" == typeof t ? "n" : "";
                                        let i;
                                        throw i = s > 3 ? 0 === t || t === BigInt(0) ? `>= 0${n} and < 2${n} ** ${8 * (s + 1)}${n}` : `>= -(2${n} ** ${8 * (s + 1) - 1}${n}) and < 2 ** ${8 * (s + 1) - 1}${n}` : `>= ${t}${n} and <= ${r}${n}`, new D.ERR_OUT_OF_RANGE("value", i, e);
                                    }
                                    !function(e, t, r) {
                                        z(t, "offset"), void 0 !== e[t] && void 0 !== e[t + r] || V(t, e.length - (r + 1));
                                    }(n, i, s);
                                }
                                function z(e, t) {
                                    if ("number" != typeof e) throw new D.ERR_INVALID_ARG_TYPE(t, "number", e);
                                }
                                function V(e, t, r) {
                                    if (Math.floor(e) !== e) throw z(e, r), new D.ERR_OUT_OF_RANGE(r || "offset", "an integer", e);
                                    if (t < 0) throw new D.ERR_BUFFER_OUT_OF_BOUNDS;
                                    throw new D.ERR_OUT_OF_RANGE(r || "offset", `>= ${r ? 1 : 0} and <= ${t}`, e);
                                }
                                q("ERR_BUFFER_OUT_OF_BOUNDS", function(e) {
                                    return e ? `${e} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
                                }, RangeError), q("ERR_INVALID_ARG_TYPE", function(e, t) {
                                    return `The "${e}" argument must be of type number. Received type ${typeof t}`;
                                }, TypeError), q("ERR_OUT_OF_RANGE", function(e, t, r) {
                                    let n = `The value of "${e}" is out of range.`, i = r;
                                    return Number.isInteger(r) && Math.abs(r) > 2 ** 32 ? i = F(String(r)) : "bigint" == typeof r && (i = String(r), (r > BigInt(2) ** BigInt(32) || r < -(BigInt(2) ** BigInt(32))) && (i = F(i)), i += "n"), n += ` It must be ${t}. Received ${i}`, n;
                                }, RangeError);
                                const $ = /[^+/0-9A-Za-z-_]/g;
                                function K(e, t) {
                                    let r;
                                    t = t || 1 / 0;
                                    const n = e.length;
                                    let i = null;
                                    const s = [];
                                    for(let o = 0; o < n; ++o){
                                        if (r = e.charCodeAt(o), r > 55295 && r < 57344) {
                                            if (!i) {
                                                if (r > 56319) {
                                                    (t -= 3) > -1 && s.push(239, 191, 189);
                                                    continue;
                                                }
                                                if (o + 1 === n) {
                                                    (t -= 3) > -1 && s.push(239, 191, 189);
                                                    continue;
                                                }
                                                i = r;
                                                continue;
                                            }
                                            if (r < 56320) {
                                                (t -= 3) > -1 && s.push(239, 191, 189), i = r;
                                                continue;
                                            }
                                            r = 65536 + (i - 55296 << 10 | r - 56320);
                                        } else i && (t -= 3) > -1 && s.push(239, 191, 189);
                                        if (i = null, r < 128) {
                                            if ((t -= 1) < 0) break;
                                            s.push(r);
                                        } else if (r < 2048) {
                                            if ((t -= 2) < 0) break;
                                            s.push(r >> 6 | 192, 63 & r | 128);
                                        } else if (r < 65536) {
                                            if ((t -= 3) < 0) break;
                                            s.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128);
                                        } else {
                                            if (!(r < 1114112)) throw new Error("Invalid code point");
                                            if ((t -= 4) < 0) break;
                                            s.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128);
                                        }
                                    }
                                    return s;
                                }
                                function G(e) {
                                    return n.toByteArray(function(e) {
                                        if ((e = (e = e.split("=")[0]).trim().replace($, "")).length < 2) return "";
                                        for(; e.length % 4 != 0;)e += "=";
                                        return e;
                                    }(e));
                                }
                                function W(e, t, r, n) {
                                    let i;
                                    for(i = 0; i < n && !(i + r >= t.length || i >= e.length); ++i)t[i + r] = e[i];
                                    return i;
                                }
                                function J(e, t) {
                                    return e instanceof t || null != e && null != e.constructor && null != e.constructor.name && e.constructor.name === t.name;
                                }
                                function Y(e) {
                                    return e != e;
                                }
                                const X = function() {
                                    const e = "0123456789abcdef", t = new Array(256);
                                    for(let r = 0; r < 16; ++r){
                                        const n = 16 * r;
                                        for(let i = 0; i < 16; ++i)t[n + i] = e[r] + e[i];
                                    }
                                    return t;
                                }();
                                function Z(e) {
                                    return "undefined" == typeof BigInt ? Q : e;
                                }
                                function Q() {
                                    throw new Error("BigInt not supported");
                                }
                            },
                            4705: (e, t, r)=>{
                                var n = r(6608).Buffer, i = r(3803).Transform, s = r(6704).I;
                                function o(e) {
                                    i.call(this), this.hashMode = "string" == typeof e, this.hashMode ? this[e] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;
                                }
                                r(1193)(o, i), o.prototype.update = function(e, t, r) {
                                    "string" == typeof e && (e = n.from(e, t));
                                    var i = this._update(e);
                                    return this.hashMode ? this : (r && (i = this._toString(i, r)), i);
                                }, o.prototype.setAutoPadding = function() {}, o.prototype.getAuthTag = function() {
                                    throw new Error("trying to get auth tag in unsupported state");
                                }, o.prototype.setAuthTag = function() {
                                    throw new Error("trying to set auth tag in unsupported state");
                                }, o.prototype.setAAD = function() {
                                    throw new Error("trying to set aad in unsupported state");
                                }, o.prototype._transform = function(e, t, r) {
                                    var n;
                                    try {
                                        this.hashMode ? this._update(e) : this.push(this._update(e));
                                    } catch (e) {
                                        n = e;
                                    } finally{
                                        r(n);
                                    }
                                }, o.prototype._flush = function(e) {
                                    var t;
                                    try {
                                        this.push(this.__final());
                                    } catch (e) {
                                        t = e;
                                    }
                                    e(t);
                                }, o.prototype._finalOrDigest = function(e) {
                                    var t = this.__final() || n.alloc(0);
                                    return e && (t = this._toString(t, e, !0)), t;
                                }, o.prototype._toString = function(e, t, r) {
                                    if (this._decoder || (this._decoder = new s(t), this._encoding = t), this._encoding !== t) throw new Error("can't switch encodings");
                                    var n = this._decoder.write(e);
                                    return r && (n += this._decoder.end()), n;
                                }, e.exports = o;
                            },
                            9520: (e, t, r)=>{
                                var n = r(3071), i = r(4619);
                                e.exports = function(e) {
                                    return new o(e);
                                };
                                var s = {
                                    secp256k1: {
                                        name: "secp256k1",
                                        byteLength: 32
                                    },
                                    secp224r1: {
                                        name: "p224",
                                        byteLength: 28
                                    },
                                    prime256v1: {
                                        name: "p256",
                                        byteLength: 32
                                    },
                                    prime192v1: {
                                        name: "p192",
                                        byteLength: 24
                                    },
                                    ed25519: {
                                        name: "ed25519",
                                        byteLength: 32
                                    },
                                    secp384r1: {
                                        name: "p384",
                                        byteLength: 48
                                    },
                                    secp521r1: {
                                        name: "p521",
                                        byteLength: 66
                                    }
                                };
                                function o(e) {
                                    this.curveType = s[e], this.curveType || (this.curveType = {
                                        name: e
                                    }), this.curve = new n.ec(this.curveType.name), this.keys = void 0;
                                }
                                function a(e, t, r) {
                                    Array.isArray(e) || (e = e.toArray());
                                    var n = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](e);
                                    if (r && n.length < r) {
                                        var i = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](r - n.length);
                                        i.fill(0), n = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].concat([
                                            i,
                                            n
                                        ]);
                                    }
                                    return t ? n.toString(t) : n;
                                }
                                s.p224 = s.secp224r1, s.p256 = s.secp256r1 = s.prime256v1, s.p192 = s.secp192r1 = s.prime192v1, s.p384 = s.secp384r1, s.p521 = s.secp521r1, o.prototype.generateKeys = function(e, t) {
                                    return this.keys = this.curve.genKeyPair(), this.getPublicKey(e, t);
                                }, o.prototype.computeSecret = function(e, t, r) {
                                    return t = t || "utf8", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].isBuffer(e) || (e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](e, t)), a(this.curve.keyFromPublic(e).getPublic().mul(this.keys.getPrivate()).getX(), r, this.curveType.byteLength);
                                }, o.prototype.getPublicKey = function(e, t) {
                                    var r = this.keys.getPublic("compressed" === t, !0);
                                    return "hybrid" === t && (r[r.length - 1] % 2 ? r[0] = 7 : r[0] = 6), a(r, e);
                                }, o.prototype.getPrivateKey = function(e) {
                                    return a(this.keys.getPrivate(), e);
                                }, o.prototype.setPublicKey = function(e, t) {
                                    return t = t || "utf8", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].isBuffer(e) || (e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](e, t)), this.keys._importPublic(e), this;
                                }, o.prototype.setPrivateKey = function(e, t) {
                                    t = t || "utf8", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].isBuffer(e) || (e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](e, t));
                                    var r = new i(e);
                                    return r = r.toString(16), this.keys = this.curve.genKeyPair(), this.keys._importPrivate(r), this;
                                };
                            },
                            8955: (e, t, r)=>{
                                "use strict";
                                var n = r(1193), i = r(5035), s = r(3934), o = r(5244), a = r(4705);
                                function c(e) {
                                    a.call(this, "digest"), this._hash = e;
                                }
                                n(c, a), c.prototype._update = function(e) {
                                    this._hash.update(e);
                                }, c.prototype._final = function() {
                                    return this._hash.digest();
                                }, e.exports = function(e) {
                                    return "md5" === (e = e.toLowerCase()) ? new i : "rmd160" === e || "ripemd160" === e ? new s : new c(o(e));
                                };
                            },
                            6159: (e, t, r)=>{
                                var n = r(5035);
                                e.exports = function(e) {
                                    return (new n).update(e).digest();
                                };
                            },
                            3053: (e, t, r)=>{
                                "use strict";
                                var n = r(1193), i = r(670), s = r(4705), o = r(6608).Buffer, a = r(6159), c = r(3934), h = r(5244), u = o.alloc(128);
                                function d(e, t) {
                                    s.call(this, "digest"), "string" == typeof t && (t = o.from(t));
                                    var r = "sha512" === e || "sha384" === e ? 128 : 64;
                                    this._alg = e, this._key = t, t.length > r ? t = ("rmd160" === e ? new c : h(e)).update(t).digest() : t.length < r && (t = o.concat([
                                        t,
                                        u
                                    ], r));
                                    for(var n = this._ipad = o.allocUnsafe(r), i = this._opad = o.allocUnsafe(r), a = 0; a < r; a++)n[a] = 54 ^ t[a], i[a] = 92 ^ t[a];
                                    this._hash = "rmd160" === e ? new c : h(e), this._hash.update(n);
                                }
                                n(d, s), d.prototype._update = function(e) {
                                    this._hash.update(e);
                                }, d.prototype._final = function() {
                                    var e = this._hash.digest();
                                    return ("rmd160" === this._alg ? new c : h(this._alg)).update(this._opad).update(e).digest();
                                }, e.exports = function(e, t) {
                                    return "rmd160" === (e = e.toLowerCase()) || "ripemd160" === e ? new d("rmd160", t) : "md5" === e ? new i(a, t) : new d(e, t);
                                };
                            },
                            670: (e, t, r)=>{
                                "use strict";
                                var n = r(1193), i = r(6608).Buffer, s = r(4705), o = i.alloc(128), a = 64;
                                function c(e, t) {
                                    s.call(this, "digest"), "string" == typeof t && (t = i.from(t)), this._alg = e, this._key = t, t.length > a ? t = e(t) : t.length < a && (t = i.concat([
                                        t,
                                        o
                                    ], a));
                                    for(var r = this._ipad = i.allocUnsafe(a), n = this._opad = i.allocUnsafe(a), c = 0; c < a; c++)r[c] = 54 ^ t[c], n[c] = 92 ^ t[c];
                                    this._hash = [
                                        r
                                    ];
                                }
                                n(c, s), c.prototype._update = function(e) {
                                    this._hash.push(e);
                                }, c.prototype._final = function() {
                                    var e = this._alg(i.concat(this._hash));
                                    return this._alg(i.concat([
                                        this._opad,
                                        e
                                    ]));
                                }, e.exports = c;
                            },
                            9114: function() {
                                !function(e) {
                                    !function(t) {
                                        var r = "URLSearchParams" in e, n = "Symbol" in e && "iterator" in Symbol, i = "FileReader" in e && "Blob" in e && function() {
                                            try {
                                                return new Blob, !0;
                                            } catch (e) {
                                                return !1;
                                            }
                                        }(), s = "FormData" in e, o = "ArrayBuffer" in e;
                                        if (o) var a = [
                                            "[object Int8Array]",
                                            "[object Uint8Array]",
                                            "[object Uint8ClampedArray]",
                                            "[object Int16Array]",
                                            "[object Uint16Array]",
                                            "[object Int32Array]",
                                            "[object Uint32Array]",
                                            "[object Float32Array]",
                                            "[object Float64Array]"
                                        ], c = ArrayBuffer.isView || function(e) {
                                            return e && a.indexOf(Object.prototype.toString.call(e)) > -1;
                                        };
                                        function h(e) {
                                            if ("string" != typeof e && (e = String(e)), /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(e)) throw new TypeError("Invalid character in header field name");
                                            return e.toLowerCase();
                                        }
                                        function u(e) {
                                            return "string" != typeof e && (e = String(e)), e;
                                        }
                                        function d(e) {
                                            var t = {
                                                next: function() {
                                                    var t = e.shift();
                                                    return {
                                                        done: void 0 === t,
                                                        value: t
                                                    };
                                                }
                                            };
                                            return n && (t[Symbol.iterator] = function() {
                                                return t;
                                            }), t;
                                        }
                                        function f(e) {
                                            this.map = {}, e instanceof f ? e.forEach(function(e, t) {
                                                this.append(t, e);
                                            }, this) : Array.isArray(e) ? e.forEach(function(e) {
                                                this.append(e[0], e[1]);
                                            }, this) : e && Object.getOwnPropertyNames(e).forEach(function(t) {
                                                this.append(t, e[t]);
                                            }, this);
                                        }
                                        function l(e) {
                                            if (e.bodyUsed) return Promise.reject(new TypeError("Already read"));
                                            e.bodyUsed = !0;
                                        }
                                        function p(e) {
                                            return new Promise(function(t, r) {
                                                e.onload = function() {
                                                    t(e.result);
                                                }, e.onerror = function() {
                                                    r(e.error);
                                                };
                                            });
                                        }
                                        function b(e) {
                                            var t = new FileReader, r = p(t);
                                            return t.readAsArrayBuffer(e), r;
                                        }
                                        function g(e) {
                                            if (e.slice) return e.slice(0);
                                            var t = new Uint8Array(e.byteLength);
                                            return t.set(new Uint8Array(e)), t.buffer;
                                        }
                                        function m() {
                                            return this.bodyUsed = !1, this._initBody = function(e) {
                                                var t;
                                                this._bodyInit = e, e ? "string" == typeof e ? this._bodyText = e : i && Blob.prototype.isPrototypeOf(e) ? this._bodyBlob = e : s && FormData.prototype.isPrototypeOf(e) ? this._bodyFormData = e : r && URLSearchParams.prototype.isPrototypeOf(e) ? this._bodyText = e.toString() : o && i && (t = e) && DataView.prototype.isPrototypeOf(t) ? (this._bodyArrayBuffer = g(e.buffer), this._bodyInit = new Blob([
                                                    this._bodyArrayBuffer
                                                ])) : o && (ArrayBuffer.prototype.isPrototypeOf(e) || c(e)) ? this._bodyArrayBuffer = g(e) : this._bodyText = e = Object.prototype.toString.call(e) : this._bodyText = "", this.headers.get("content-type") || ("string" == typeof e ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : r && URLSearchParams.prototype.isPrototypeOf(e) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
                                            }, i && (this.blob = function() {
                                                var e = l(this);
                                                if (e) return e;
                                                if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                                                if (this._bodyArrayBuffer) return Promise.resolve(new Blob([
                                                    this._bodyArrayBuffer
                                                ]));
                                                if (this._bodyFormData) throw new Error("could not read FormData body as blob");
                                                return Promise.resolve(new Blob([
                                                    this._bodyText
                                                ]));
                                            }, this.arrayBuffer = function() {
                                                return this._bodyArrayBuffer ? l(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(b);
                                            }), this.text = function() {
                                                var e, t, r, n = l(this);
                                                if (n) return n;
                                                if (this._bodyBlob) return e = this._bodyBlob, r = p(t = new FileReader), t.readAsText(e), r;
                                                if (this._bodyArrayBuffer) return Promise.resolve(function(e) {
                                                    for(var t = new Uint8Array(e), r = new Array(t.length), n = 0; n < t.length; n++)r[n] = String.fromCharCode(t[n]);
                                                    return r.join("");
                                                }(this._bodyArrayBuffer));
                                                if (this._bodyFormData) throw new Error("could not read FormData body as text");
                                                return Promise.resolve(this._bodyText);
                                            }, s && (this.formData = function() {
                                                return this.text().then(w);
                                            }), this.json = function() {
                                                return this.text().then(JSON.parse);
                                            }, this;
                                        }
                                        f.prototype.append = function(e, t) {
                                            e = h(e), t = u(t);
                                            var r = this.map[e];
                                            this.map[e] = r ? r + ", " + t : t;
                                        }, f.prototype.delete = function(e) {
                                            delete this.map[h(e)];
                                        }, f.prototype.get = function(e) {
                                            return e = h(e), this.has(e) ? this.map[e] : null;
                                        }, f.prototype.has = function(e) {
                                            return this.map.hasOwnProperty(h(e));
                                        }, f.prototype.set = function(e, t) {
                                            this.map[h(e)] = u(t);
                                        }, f.prototype.forEach = function(e, t) {
                                            for(var r in this.map)this.map.hasOwnProperty(r) && e.call(t, this.map[r], r, this);
                                        }, f.prototype.keys = function() {
                                            var e = [];
                                            return this.forEach(function(t, r) {
                                                e.push(r);
                                            }), d(e);
                                        }, f.prototype.values = function() {
                                            var e = [];
                                            return this.forEach(function(t) {
                                                e.push(t);
                                            }), d(e);
                                        }, f.prototype.entries = function() {
                                            var e = [];
                                            return this.forEach(function(t, r) {
                                                e.push([
                                                    r,
                                                    t
                                                ]);
                                            }), d(e);
                                        }, n && (f.prototype[Symbol.iterator] = f.prototype.entries);
                                        var y = [
                                            "DELETE",
                                            "GET",
                                            "HEAD",
                                            "OPTIONS",
                                            "POST",
                                            "PUT"
                                        ];
                                        function v(e, t) {
                                            var r, n, i = (t = t || {}).body;
                                            if (e instanceof v) {
                                                if (e.bodyUsed) throw new TypeError("Already read");
                                                this.url = e.url, this.credentials = e.credentials, t.headers || (this.headers = new f(e.headers)), this.method = e.method, this.mode = e.mode, this.signal = e.signal, i || null == e._bodyInit || (i = e._bodyInit, e.bodyUsed = !0);
                                            } else this.url = String(e);
                                            if (this.credentials = t.credentials || this.credentials || "same-origin", !t.headers && this.headers || (this.headers = new f(t.headers)), this.method = (n = (r = t.method || this.method || "GET").toUpperCase(), y.indexOf(n) > -1 ? n : r), this.mode = t.mode || this.mode || null, this.signal = t.signal || this.signal, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && i) throw new TypeError("Body not allowed for GET or HEAD requests");
                                            this._initBody(i);
                                        }
                                        function w(e) {
                                            var t = new FormData;
                                            return e.trim().split("&").forEach(function(e) {
                                                if (e) {
                                                    var r = e.split("="), n = r.shift().replace(/\+/g, " "), i = r.join("=").replace(/\+/g, " ");
                                                    t.append(decodeURIComponent(n), decodeURIComponent(i));
                                                }
                                            }), t;
                                        }
                                        function _(e, t) {
                                            t || (t = {}), this.type = "default", this.status = void 0 === t.status ? 200 : t.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in t ? t.statusText : "OK", this.headers = new f(t.headers), this.url = t.url || "", this._initBody(e);
                                        }
                                        v.prototype.clone = function() {
                                            return new v(this, {
                                                body: this._bodyInit
                                            });
                                        }, m.call(v.prototype), m.call(_.prototype), _.prototype.clone = function() {
                                            return new _(this._bodyInit, {
                                                status: this.status,
                                                statusText: this.statusText,
                                                headers: new f(this.headers),
                                                url: this.url
                                            });
                                        }, _.error = function() {
                                            var e = new _(null, {
                                                status: 0,
                                                statusText: ""
                                            });
                                            return e.type = "error", e;
                                        };
                                        var E = [
                                            301,
                                            302,
                                            303,
                                            307,
                                            308
                                        ];
                                        _.redirect = function(e, t) {
                                            if (-1 === E.indexOf(t)) throw new RangeError("Invalid status code");
                                            return new _(null, {
                                                status: t,
                                                headers: {
                                                    location: e
                                                }
                                            });
                                        }, t.DOMException = e.DOMException;
                                        try {
                                            new t.DOMException;
                                        } catch (e) {
                                            t.DOMException = function(e, t) {
                                                this.message = e, this.name = t;
                                                var r = Error(e);
                                                this.stack = r.stack;
                                            }, t.DOMException.prototype = Object.create(Error.prototype), t.DOMException.prototype.constructor = t.DOMException;
                                        }
                                        function S(e, r) {
                                            return new Promise(function(n, s) {
                                                var o = new v(e, r);
                                                if (o.signal && o.signal.aborted) return s(new t.DOMException("Aborted", "AbortError"));
                                                var a = new XMLHttpRequest;
                                                function c() {
                                                    a.abort();
                                                }
                                                a.onload = function() {
                                                    var e, t, r = {
                                                        status: a.status,
                                                        statusText: a.statusText,
                                                        headers: (e = a.getAllResponseHeaders() || "", t = new f, e.replace(/\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach(function(e) {
                                                            var r = e.split(":"), n = r.shift().trim();
                                                            if (n) {
                                                                var i = r.join(":").trim();
                                                                t.append(n, i);
                                                            }
                                                        }), t)
                                                    };
                                                    r.url = "responseURL" in a ? a.responseURL : r.headers.get("X-Request-URL");
                                                    var i = "response" in a ? a.response : a.responseText;
                                                    n(new _(i, r));
                                                }, a.onerror = function() {
                                                    s(new TypeError("Network request failed"));
                                                }, a.ontimeout = function() {
                                                    s(new TypeError("Network request failed"));
                                                }, a.onabort = function() {
                                                    s(new t.DOMException("Aborted", "AbortError"));
                                                }, a.open(o.method, o.url, !0), "include" === o.credentials ? a.withCredentials = !0 : "omit" === o.credentials && (a.withCredentials = !1), "responseType" in a && i && (a.responseType = "blob"), o.headers.forEach(function(e, t) {
                                                    a.setRequestHeader(t, e);
                                                }), o.signal && (o.signal.addEventListener("abort", c), a.onreadystatechange = function() {
                                                    4 === a.readyState && o.signal.removeEventListener("abort", c);
                                                }), a.send(void 0 === o._bodyInit ? null : o._bodyInit);
                                            });
                                        }
                                        S.polyfill = !0, e.fetch || (e.fetch = S, e.Headers = f, e.Request = v, e.Response = _), t.Headers = f, t.Request = v, t.Response = _, t.fetch = S, Object.defineProperty(t, "__esModule", {
                                            value: !0
                                        });
                                    }({});
                                }("undefined" != typeof self ? self : this);
                            },
                            4062: (e, t, r)=>{
                                "use strict";
                                t.randomBytes = t.rng = t.pseudoRandomBytes = t.prng = r(2869), t.createHash = t.Hash = r(8955), t.createHmac = t.Hmac = r(3053);
                                var n = r(8950), i = Object.keys(n), s = [
                                    "sha1",
                                    "sha224",
                                    "sha256",
                                    "sha384",
                                    "sha512",
                                    "md5",
                                    "rmd160"
                                ].concat(i);
                                t.getHashes = function() {
                                    return s;
                                };
                                var o = r(3166);
                                t.pbkdf2 = o.pbkdf2, t.pbkdf2Sync = o.pbkdf2Sync;
                                var a = r(8350);
                                t.Cipher = a.Cipher, t.createCipher = a.createCipher, t.Cipheriv = a.Cipheriv, t.createCipheriv = a.createCipheriv, t.Decipher = a.Decipher, t.createDecipher = a.createDecipher, t.Decipheriv = a.Decipheriv, t.createDecipheriv = a.createDecipheriv, t.getCiphers = a.getCiphers, t.listCiphers = a.listCiphers;
                                var c = r(8216);
                                t.DiffieHellmanGroup = c.DiffieHellmanGroup, t.createDiffieHellmanGroup = c.createDiffieHellmanGroup, t.getDiffieHellman = c.getDiffieHellman, t.createDiffieHellman = c.createDiffieHellman, t.DiffieHellman = c.DiffieHellman;
                                var h = r(6105);
                                t.createSign = h.createSign, t.Sign = h.Sign, t.createVerify = h.createVerify, t.Verify = h.Verify, t.createECDH = r(9520);
                                var u = r(2211);
                                t.publicEncrypt = u.publicEncrypt, t.privateEncrypt = u.privateEncrypt, t.publicDecrypt = u.publicDecrypt, t.privateDecrypt = u.privateDecrypt;
                                var d = r(4925);
                                t.randomFill = d.randomFill, t.randomFillSync = d.randomFillSync, t.createCredentials = function() {
                                    throw new Error([
                                        "sorry, createCredentials is not implemented yet",
                                        "we accept pull requests",
                                        "https://github.com/crypto-browserify/crypto-browserify"
                                    ].join("\n"));
                                }, t.constants = {
                                    DH_CHECK_P_NOT_SAFE_PRIME: 2,
                                    DH_CHECK_P_NOT_PRIME: 1,
                                    DH_UNABLE_TO_CHECK_GENERATOR: 4,
                                    DH_NOT_SUITABLE_GENERATOR: 8,
                                    NPN_ENABLED: 1,
                                    ALPN_ENABLED: 1,
                                    RSA_PKCS1_PADDING: 1,
                                    RSA_SSLV23_PADDING: 2,
                                    RSA_NO_PADDING: 3,
                                    RSA_PKCS1_OAEP_PADDING: 4,
                                    RSA_X931_PADDING: 5,
                                    RSA_PKCS1_PSS_PADDING: 6,
                                    POINT_CONVERSION_COMPRESSED: 2,
                                    POINT_CONVERSION_UNCOMPRESSED: 4,
                                    POINT_CONVERSION_HYBRID: 6
                                };
                            },
                            2398: (e, t, r)=>{
                                "use strict";
                                t.utils = r(1496), t.Cipher = r(5958), t.DES = r(9409), t.CBC = r(6779), t.EDE = r(6625);
                            },
                            6779: (e, t, r)=>{
                                "use strict";
                                var n = r(5578), i = r(1193), s = {};
                                function o(e) {
                                    n.equal(e.length, 8, "Invalid IV length"), this.iv = new Array(8);
                                    for(var t = 0; t < this.iv.length; t++)this.iv[t] = e[t];
                                }
                                t.instantiate = function(e) {
                                    function t(t) {
                                        e.call(this, t), this._cbcInit();
                                    }
                                    i(t, e);
                                    for(var r = Object.keys(s), n = 0; n < r.length; n++){
                                        var o = r[n];
                                        t.prototype[o] = s[o];
                                    }
                                    return t.create = function(e) {
                                        return new t(e);
                                    }, t;
                                }, s._cbcInit = function() {
                                    var e = new o(this.options.iv);
                                    this._cbcState = e;
                                }, s._update = function(e, t, r, n) {
                                    var i = this._cbcState, s = this.constructor.super_.prototype, o = i.iv;
                                    if ("encrypt" === this.type) {
                                        for(var a = 0; a < this.blockSize; a++)o[a] ^= e[t + a];
                                        for(s._update.call(this, o, 0, r, n), a = 0; a < this.blockSize; a++)o[a] = r[n + a];
                                    } else {
                                        for(s._update.call(this, e, t, r, n), a = 0; a < this.blockSize; a++)r[n + a] ^= o[a];
                                        for(a = 0; a < this.blockSize; a++)o[a] = e[t + a];
                                    }
                                };
                            },
                            5958: (e, t, r)=>{
                                "use strict";
                                var n = r(5578);
                                function i(e) {
                                    this.options = e, this.type = this.options.type, this.blockSize = 8, this._init(), this.buffer = new Array(this.blockSize), this.bufferOff = 0;
                                }
                                e.exports = i, i.prototype._init = function() {}, i.prototype.update = function(e) {
                                    return 0 === e.length ? [] : "decrypt" === this.type ? this._updateDecrypt(e) : this._updateEncrypt(e);
                                }, i.prototype._buffer = function(e, t) {
                                    for(var r = Math.min(this.buffer.length - this.bufferOff, e.length - t), n = 0; n < r; n++)this.buffer[this.bufferOff + n] = e[t + n];
                                    return this.bufferOff += r, r;
                                }, i.prototype._flushBuffer = function(e, t) {
                                    return this._update(this.buffer, 0, e, t), this.bufferOff = 0, this.blockSize;
                                }, i.prototype._updateEncrypt = function(e) {
                                    var t = 0, r = 0, n = (this.bufferOff + e.length) / this.blockSize | 0, i = new Array(n * this.blockSize);
                                    0 !== this.bufferOff && (t += this._buffer(e, t), this.bufferOff === this.buffer.length && (r += this._flushBuffer(i, r)));
                                    for(var s = e.length - (e.length - t) % this.blockSize; t < s; t += this.blockSize)this._update(e, t, i, r), r += this.blockSize;
                                    for(; t < e.length; t++, this.bufferOff++)this.buffer[this.bufferOff] = e[t];
                                    return i;
                                }, i.prototype._updateDecrypt = function(e) {
                                    for(var t = 0, r = 0, n = Math.ceil((this.bufferOff + e.length) / this.blockSize) - 1, i = new Array(n * this.blockSize); n > 0; n--)t += this._buffer(e, t), r += this._flushBuffer(i, r);
                                    return t += this._buffer(e, t), i;
                                }, i.prototype.final = function(e) {
                                    var t, r;
                                    return e && (t = this.update(e)), r = "encrypt" === this.type ? this._finalEncrypt() : this._finalDecrypt(), t ? t.concat(r) : r;
                                }, i.prototype._pad = function(e, t) {
                                    if (0 === t) return !1;
                                    for(; t < e.length;)e[t++] = 0;
                                    return !0;
                                }, i.prototype._finalEncrypt = function() {
                                    if (!this._pad(this.buffer, this.bufferOff)) return [];
                                    var e = new Array(this.blockSize);
                                    return this._update(this.buffer, 0, e, 0), e;
                                }, i.prototype._unpad = function(e) {
                                    return e;
                                }, i.prototype._finalDecrypt = function() {
                                    n.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
                                    var e = new Array(this.blockSize);
                                    return this._flushBuffer(e, 0), this._unpad(e);
                                };
                            },
                            9409: (e, t, r)=>{
                                "use strict";
                                var n = r(5578), i = r(1193), s = r(1496), o = r(5958);
                                function a() {
                                    this.tmp = new Array(2), this.keys = null;
                                }
                                function c(e) {
                                    o.call(this, e);
                                    var t = new a;
                                    this._desState = t, this.deriveKeys(t, e.key);
                                }
                                i(c, o), e.exports = c, c.create = function(e) {
                                    return new c(e);
                                };
                                var h = [
                                    1,
                                    1,
                                    2,
                                    2,
                                    2,
                                    2,
                                    2,
                                    2,
                                    1,
                                    2,
                                    2,
                                    2,
                                    2,
                                    2,
                                    2,
                                    1
                                ];
                                c.prototype.deriveKeys = function(e, t) {
                                    e.keys = new Array(32), n.equal(t.length, this.blockSize, "Invalid key length");
                                    var r = s.readUInt32BE(t, 0), i = s.readUInt32BE(t, 4);
                                    s.pc1(r, i, e.tmp, 0), r = e.tmp[0], i = e.tmp[1];
                                    for(var o = 0; o < e.keys.length; o += 2){
                                        var a = h[o >>> 1];
                                        r = s.r28shl(r, a), i = s.r28shl(i, a), s.pc2(r, i, e.keys, o);
                                    }
                                }, c.prototype._update = function(e, t, r, n) {
                                    var i = this._desState, o = s.readUInt32BE(e, t), a = s.readUInt32BE(e, t + 4);
                                    s.ip(o, a, i.tmp, 0), o = i.tmp[0], a = i.tmp[1], "encrypt" === this.type ? this._encrypt(i, o, a, i.tmp, 0) : this._decrypt(i, o, a, i.tmp, 0), o = i.tmp[0], a = i.tmp[1], s.writeUInt32BE(r, o, n), s.writeUInt32BE(r, a, n + 4);
                                }, c.prototype._pad = function(e, t) {
                                    for(var r = e.length - t, n = t; n < e.length; n++)e[n] = r;
                                    return !0;
                                }, c.prototype._unpad = function(e) {
                                    for(var t = e[e.length - 1], r = e.length - t; r < e.length; r++)n.equal(e[r], t);
                                    return e.slice(0, e.length - t);
                                }, c.prototype._encrypt = function(e, t, r, n, i) {
                                    for(var o = t, a = r, c = 0; c < e.keys.length; c += 2){
                                        var h = e.keys[c], u = e.keys[c + 1];
                                        s.expand(a, e.tmp, 0), h ^= e.tmp[0], u ^= e.tmp[1];
                                        var d = s.substitute(h, u), f = a;
                                        a = (o ^ s.permute(d)) >>> 0, o = f;
                                    }
                                    s.rip(a, o, n, i);
                                }, c.prototype._decrypt = function(e, t, r, n, i) {
                                    for(var o = r, a = t, c = e.keys.length - 2; c >= 0; c -= 2){
                                        var h = e.keys[c], u = e.keys[c + 1];
                                        s.expand(o, e.tmp, 0), h ^= e.tmp[0], u ^= e.tmp[1];
                                        var d = s.substitute(h, u), f = o;
                                        o = (a ^ s.permute(d)) >>> 0, a = f;
                                    }
                                    s.rip(o, a, n, i);
                                };
                            },
                            6625: (e, t, r)=>{
                                "use strict";
                                var n = r(5578), i = r(1193), s = r(5958), o = r(9409);
                                function a(e, t) {
                                    n.equal(t.length, 24, "Invalid key length");
                                    var r = t.slice(0, 8), i = t.slice(8, 16), s = t.slice(16, 24);
                                    this.ciphers = "encrypt" === e ? [
                                        o.create({
                                            type: "encrypt",
                                            key: r
                                        }),
                                        o.create({
                                            type: "decrypt",
                                            key: i
                                        }),
                                        o.create({
                                            type: "encrypt",
                                            key: s
                                        })
                                    ] : [
                                        o.create({
                                            type: "decrypt",
                                            key: s
                                        }),
                                        o.create({
                                            type: "encrypt",
                                            key: i
                                        }),
                                        o.create({
                                            type: "decrypt",
                                            key: r
                                        })
                                    ];
                                }
                                function c(e) {
                                    s.call(this, e);
                                    var t = new a(this.type, this.options.key);
                                    this._edeState = t;
                                }
                                i(c, s), e.exports = c, c.create = function(e) {
                                    return new c(e);
                                }, c.prototype._update = function(e, t, r, n) {
                                    var i = this._edeState;
                                    i.ciphers[0]._update(e, t, r, n), i.ciphers[1]._update(r, n, r, n), i.ciphers[2]._update(r, n, r, n);
                                }, c.prototype._pad = o.prototype._pad, c.prototype._unpad = o.prototype._unpad;
                            },
                            1496: (e, t)=>{
                                "use strict";
                                t.readUInt32BE = function(e, t) {
                                    return (e[0 + t] << 24 | e[1 + t] << 16 | e[2 + t] << 8 | e[3 + t]) >>> 0;
                                }, t.writeUInt32BE = function(e, t, r) {
                                    e[0 + r] = t >>> 24, e[1 + r] = t >>> 16 & 255, e[2 + r] = t >>> 8 & 255, e[3 + r] = 255 & t;
                                }, t.ip = function(e, t, r, n) {
                                    for(var i = 0, s = 0, o = 6; o >= 0; o -= 2){
                                        for(var a = 0; a <= 24; a += 8)i <<= 1, i |= t >>> a + o & 1;
                                        for(a = 0; a <= 24; a += 8)i <<= 1, i |= e >>> a + o & 1;
                                    }
                                    for(o = 6; o >= 0; o -= 2){
                                        for(a = 1; a <= 25; a += 8)s <<= 1, s |= t >>> a + o & 1;
                                        for(a = 1; a <= 25; a += 8)s <<= 1, s |= e >>> a + o & 1;
                                    }
                                    r[n + 0] = i >>> 0, r[n + 1] = s >>> 0;
                                }, t.rip = function(e, t, r, n) {
                                    for(var i = 0, s = 0, o = 0; o < 4; o++)for(var a = 24; a >= 0; a -= 8)i <<= 1, i |= t >>> a + o & 1, i <<= 1, i |= e >>> a + o & 1;
                                    for(o = 4; o < 8; o++)for(a = 24; a >= 0; a -= 8)s <<= 1, s |= t >>> a + o & 1, s <<= 1, s |= e >>> a + o & 1;
                                    r[n + 0] = i >>> 0, r[n + 1] = s >>> 0;
                                }, t.pc1 = function(e, t, r, n) {
                                    for(var i = 0, s = 0, o = 7; o >= 5; o--){
                                        for(var a = 0; a <= 24; a += 8)i <<= 1, i |= t >> a + o & 1;
                                        for(a = 0; a <= 24; a += 8)i <<= 1, i |= e >> a + o & 1;
                                    }
                                    for(a = 0; a <= 24; a += 8)i <<= 1, i |= t >> a + o & 1;
                                    for(o = 1; o <= 3; o++){
                                        for(a = 0; a <= 24; a += 8)s <<= 1, s |= t >> a + o & 1;
                                        for(a = 0; a <= 24; a += 8)s <<= 1, s |= e >> a + o & 1;
                                    }
                                    for(a = 0; a <= 24; a += 8)s <<= 1, s |= e >> a + o & 1;
                                    r[n + 0] = i >>> 0, r[n + 1] = s >>> 0;
                                }, t.r28shl = function(e, t) {
                                    return e << t & 268435455 | e >>> 28 - t;
                                };
                                var r = [
                                    14,
                                    11,
                                    17,
                                    4,
                                    27,
                                    23,
                                    25,
                                    0,
                                    13,
                                    22,
                                    7,
                                    18,
                                    5,
                                    9,
                                    16,
                                    24,
                                    2,
                                    20,
                                    12,
                                    21,
                                    1,
                                    8,
                                    15,
                                    26,
                                    15,
                                    4,
                                    25,
                                    19,
                                    9,
                                    1,
                                    26,
                                    16,
                                    5,
                                    11,
                                    23,
                                    8,
                                    12,
                                    7,
                                    17,
                                    0,
                                    22,
                                    3,
                                    10,
                                    14,
                                    6,
                                    20,
                                    27,
                                    24
                                ];
                                t.pc2 = function(e, t, n, i) {
                                    for(var s = 0, o = 0, a = r.length >>> 1, c = 0; c < a; c++)s <<= 1, s |= e >>> r[c] & 1;
                                    for(c = a; c < r.length; c++)o <<= 1, o |= t >>> r[c] & 1;
                                    n[i + 0] = s >>> 0, n[i + 1] = o >>> 0;
                                }, t.expand = function(e, t, r) {
                                    var n = 0, i = 0;
                                    n = (1 & e) << 5 | e >>> 27;
                                    for(var s = 23; s >= 15; s -= 4)n <<= 6, n |= e >>> s & 63;
                                    for(s = 11; s >= 3; s -= 4)i |= e >>> s & 63, i <<= 6;
                                    i |= (31 & e) << 1 | e >>> 31, t[r + 0] = n >>> 0, t[r + 1] = i >>> 0;
                                };
                                var n = [
                                    14,
                                    0,
                                    4,
                                    15,
                                    13,
                                    7,
                                    1,
                                    4,
                                    2,
                                    14,
                                    15,
                                    2,
                                    11,
                                    13,
                                    8,
                                    1,
                                    3,
                                    10,
                                    10,
                                    6,
                                    6,
                                    12,
                                    12,
                                    11,
                                    5,
                                    9,
                                    9,
                                    5,
                                    0,
                                    3,
                                    7,
                                    8,
                                    4,
                                    15,
                                    1,
                                    12,
                                    14,
                                    8,
                                    8,
                                    2,
                                    13,
                                    4,
                                    6,
                                    9,
                                    2,
                                    1,
                                    11,
                                    7,
                                    15,
                                    5,
                                    12,
                                    11,
                                    9,
                                    3,
                                    7,
                                    14,
                                    3,
                                    10,
                                    10,
                                    0,
                                    5,
                                    6,
                                    0,
                                    13,
                                    15,
                                    3,
                                    1,
                                    13,
                                    8,
                                    4,
                                    14,
                                    7,
                                    6,
                                    15,
                                    11,
                                    2,
                                    3,
                                    8,
                                    4,
                                    14,
                                    9,
                                    12,
                                    7,
                                    0,
                                    2,
                                    1,
                                    13,
                                    10,
                                    12,
                                    6,
                                    0,
                                    9,
                                    5,
                                    11,
                                    10,
                                    5,
                                    0,
                                    13,
                                    14,
                                    8,
                                    7,
                                    10,
                                    11,
                                    1,
                                    10,
                                    3,
                                    4,
                                    15,
                                    13,
                                    4,
                                    1,
                                    2,
                                    5,
                                    11,
                                    8,
                                    6,
                                    12,
                                    7,
                                    6,
                                    12,
                                    9,
                                    0,
                                    3,
                                    5,
                                    2,
                                    14,
                                    15,
                                    9,
                                    10,
                                    13,
                                    0,
                                    7,
                                    9,
                                    0,
                                    14,
                                    9,
                                    6,
                                    3,
                                    3,
                                    4,
                                    15,
                                    6,
                                    5,
                                    10,
                                    1,
                                    2,
                                    13,
                                    8,
                                    12,
                                    5,
                                    7,
                                    14,
                                    11,
                                    12,
                                    4,
                                    11,
                                    2,
                                    15,
                                    8,
                                    1,
                                    13,
                                    1,
                                    6,
                                    10,
                                    4,
                                    13,
                                    9,
                                    0,
                                    8,
                                    6,
                                    15,
                                    9,
                                    3,
                                    8,
                                    0,
                                    7,
                                    11,
                                    4,
                                    1,
                                    15,
                                    2,
                                    14,
                                    12,
                                    3,
                                    5,
                                    11,
                                    10,
                                    5,
                                    14,
                                    2,
                                    7,
                                    12,
                                    7,
                                    13,
                                    13,
                                    8,
                                    14,
                                    11,
                                    3,
                                    5,
                                    0,
                                    6,
                                    6,
                                    15,
                                    9,
                                    0,
                                    10,
                                    3,
                                    1,
                                    4,
                                    2,
                                    7,
                                    8,
                                    2,
                                    5,
                                    12,
                                    11,
                                    1,
                                    12,
                                    10,
                                    4,
                                    14,
                                    15,
                                    9,
                                    10,
                                    3,
                                    6,
                                    15,
                                    9,
                                    0,
                                    0,
                                    6,
                                    12,
                                    10,
                                    11,
                                    1,
                                    7,
                                    13,
                                    13,
                                    8,
                                    15,
                                    9,
                                    1,
                                    4,
                                    3,
                                    5,
                                    14,
                                    11,
                                    5,
                                    12,
                                    2,
                                    7,
                                    8,
                                    2,
                                    4,
                                    14,
                                    2,
                                    14,
                                    12,
                                    11,
                                    4,
                                    2,
                                    1,
                                    12,
                                    7,
                                    4,
                                    10,
                                    7,
                                    11,
                                    13,
                                    6,
                                    1,
                                    8,
                                    5,
                                    5,
                                    0,
                                    3,
                                    15,
                                    15,
                                    10,
                                    13,
                                    3,
                                    0,
                                    9,
                                    14,
                                    8,
                                    9,
                                    6,
                                    4,
                                    11,
                                    2,
                                    8,
                                    1,
                                    12,
                                    11,
                                    7,
                                    10,
                                    1,
                                    13,
                                    14,
                                    7,
                                    2,
                                    8,
                                    13,
                                    15,
                                    6,
                                    9,
                                    15,
                                    12,
                                    0,
                                    5,
                                    9,
                                    6,
                                    10,
                                    3,
                                    4,
                                    0,
                                    5,
                                    14,
                                    3,
                                    12,
                                    10,
                                    1,
                                    15,
                                    10,
                                    4,
                                    15,
                                    2,
                                    9,
                                    7,
                                    2,
                                    12,
                                    6,
                                    9,
                                    8,
                                    5,
                                    0,
                                    6,
                                    13,
                                    1,
                                    3,
                                    13,
                                    4,
                                    14,
                                    14,
                                    0,
                                    7,
                                    11,
                                    5,
                                    3,
                                    11,
                                    8,
                                    9,
                                    4,
                                    14,
                                    3,
                                    15,
                                    2,
                                    5,
                                    12,
                                    2,
                                    9,
                                    8,
                                    5,
                                    12,
                                    15,
                                    3,
                                    10,
                                    7,
                                    11,
                                    0,
                                    14,
                                    4,
                                    1,
                                    10,
                                    7,
                                    1,
                                    6,
                                    13,
                                    0,
                                    11,
                                    8,
                                    6,
                                    13,
                                    4,
                                    13,
                                    11,
                                    0,
                                    2,
                                    11,
                                    14,
                                    7,
                                    15,
                                    4,
                                    0,
                                    9,
                                    8,
                                    1,
                                    13,
                                    10,
                                    3,
                                    14,
                                    12,
                                    3,
                                    9,
                                    5,
                                    7,
                                    12,
                                    5,
                                    2,
                                    10,
                                    15,
                                    6,
                                    8,
                                    1,
                                    6,
                                    1,
                                    6,
                                    4,
                                    11,
                                    11,
                                    13,
                                    13,
                                    8,
                                    12,
                                    1,
                                    3,
                                    4,
                                    7,
                                    10,
                                    14,
                                    7,
                                    10,
                                    9,
                                    15,
                                    5,
                                    6,
                                    0,
                                    8,
                                    15,
                                    0,
                                    14,
                                    5,
                                    2,
                                    9,
                                    3,
                                    2,
                                    12,
                                    13,
                                    1,
                                    2,
                                    15,
                                    8,
                                    13,
                                    4,
                                    8,
                                    6,
                                    10,
                                    15,
                                    3,
                                    11,
                                    7,
                                    1,
                                    4,
                                    10,
                                    12,
                                    9,
                                    5,
                                    3,
                                    6,
                                    14,
                                    11,
                                    5,
                                    0,
                                    0,
                                    14,
                                    12,
                                    9,
                                    7,
                                    2,
                                    7,
                                    2,
                                    11,
                                    1,
                                    4,
                                    14,
                                    1,
                                    7,
                                    9,
                                    4,
                                    12,
                                    10,
                                    14,
                                    8,
                                    2,
                                    13,
                                    0,
                                    15,
                                    6,
                                    12,
                                    10,
                                    9,
                                    13,
                                    0,
                                    15,
                                    3,
                                    3,
                                    5,
                                    5,
                                    6,
                                    8,
                                    11
                                ];
                                t.substitute = function(e, t) {
                                    for(var r = 0, i = 0; i < 4; i++)r <<= 4, r |= n[64 * i + (e >>> 18 - 6 * i & 63)];
                                    for(i = 0; i < 4; i++)r <<= 4, r |= n[256 + 64 * i + (t >>> 18 - 6 * i & 63)];
                                    return r >>> 0;
                                };
                                var i = [
                                    16,
                                    25,
                                    12,
                                    11,
                                    3,
                                    20,
                                    4,
                                    15,
                                    31,
                                    17,
                                    9,
                                    6,
                                    27,
                                    14,
                                    1,
                                    22,
                                    30,
                                    24,
                                    8,
                                    18,
                                    0,
                                    5,
                                    29,
                                    23,
                                    13,
                                    19,
                                    2,
                                    26,
                                    10,
                                    21,
                                    28,
                                    7
                                ];
                                t.permute = function(e) {
                                    for(var t = 0, r = 0; r < i.length; r++)t <<= 1, t |= e >>> i[r] & 1;
                                    return t >>> 0;
                                }, t.padSplit = function(e, t, r) {
                                    for(var n = e.toString(2); n.length < t;)n = "0" + n;
                                    for(var i = [], s = 0; s < t; s += r)i.push(n.slice(s, s + r));
                                    return i.join(" ");
                                };
                            },
                            8216: (e, t, r)=>{
                                var n = r(5122), i = r(7821), s = r(9242), o = {
                                    binary: !0,
                                    hex: !0,
                                    base64: !0
                                };
                                t.DiffieHellmanGroup = t.createDiffieHellmanGroup = t.getDiffieHellman = function(e) {
                                    var t = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](i[e].prime, "hex"), r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](i[e].gen, "hex");
                                    return new s(t, r);
                                }, t.createDiffieHellman = t.DiffieHellman = function e(t, r, i, a) {
                                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].isBuffer(r) || void 0 === o[r] ? e(t, "binary", r, i) : (r = r || "binary", a = a || "binary", i = i || new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"]([
                                        2
                                    ]), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].isBuffer(i) || (i = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](i, a)), "number" == typeof t ? new s(n(t, i), i, !0) : (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].isBuffer(t) || (t = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](t, r)), new s(t, i, !0)));
                                };
                            },
                            9242: (e, t, r)=>{
                                var n = r(4619), i = new (r(4442)), s = new n(24), o = new n(11), a = new n(10), c = new n(3), h = new n(7), u = r(5122), d = r(2869);
                                function f(e, t) {
                                    return t = t || "utf8", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].isBuffer(e) || (e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](e, t)), this._pub = new n(e), this;
                                }
                                function l(e, t) {
                                    return t = t || "utf8", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].isBuffer(e) || (e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](e, t)), this._priv = new n(e), this;
                                }
                                e.exports = b;
                                var p = {};
                                function b(e, t, r) {
                                    this.setGenerator(t), this.__prime = new n(e), this._prime = n.mont(this.__prime), this._primeLen = e.length, this._pub = void 0, this._priv = void 0, this._primeCode = void 0, r ? (this.setPublicKey = f, this.setPrivateKey = l) : this._primeCode = 8;
                                }
                                function g(e, t) {
                                    var r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](e.toArray());
                                    return t ? r.toString(t) : r;
                                }
                                Object.defineProperty(b.prototype, "verifyError", {
                                    enumerable: !0,
                                    get: function() {
                                        return "number" != typeof this._primeCode && (this._primeCode = function(e, t) {
                                            var r = t.toString("hex"), n = [
                                                r,
                                                e.toString(16)
                                            ].join("_");
                                            if (n in p) return p[n];
                                            var d, f = 0;
                                            if (e.isEven() || !u.simpleSieve || !u.fermatTest(e) || !i.test(e)) return f += 1, f += "02" === r || "05" === r ? 8 : 4, p[n] = f, f;
                                            switch(i.test(e.shrn(1)) || (f += 2), r){
                                                case "02":
                                                    e.mod(s).cmp(o) && (f += 8);
                                                    break;
                                                case "05":
                                                    (d = e.mod(a)).cmp(c) && d.cmp(h) && (f += 8);
                                                    break;
                                                default:
                                                    f += 4;
                                            }
                                            return p[n] = f, f;
                                        }(this.__prime, this.__gen)), this._primeCode;
                                    }
                                }), b.prototype.generateKeys = function() {
                                    return this._priv || (this._priv = new n(d(this._primeLen))), this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(), this.getPublicKey();
                                }, b.prototype.computeSecret = function(e) {
                                    var t = (e = (e = new n(e)).toRed(this._prime)).redPow(this._priv).fromRed(), r = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](t.toArray()), i = this.getPrime();
                                    if (r.length < i.length) {
                                        var s = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](i.length - r.length);
                                        s.fill(0), r = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].concat([
                                            s,
                                            r
                                        ]);
                                    }
                                    return r;
                                }, b.prototype.getPublicKey = function(e) {
                                    return g(this._pub, e);
                                }, b.prototype.getPrivateKey = function(e) {
                                    return g(this._priv, e);
                                }, b.prototype.getPrime = function(e) {
                                    return g(this.__prime, e);
                                }, b.prototype.getGenerator = function(e) {
                                    return g(this._gen, e);
                                }, b.prototype.setGenerator = function(e, t) {
                                    return t = t || "utf8", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].isBuffer(e) || (e = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"](e, t)), this.__gen = e, this._gen = new n(e), this;
                                };
                            },
                            5122: (e, t, r)=>{
                                var n = r(2869);
                                e.exports = m, m.simpleSieve = b, m.fermatTest = g;
                                var i = r(4619), s = new i(24), o = new (r(4442)), a = new i(1), c = new i(2), h = new i(5), u = (new i(16), new i(8), new i(10)), d = new i(3), f = (new i(7), new i(11)), l = new i(4), p = (new i(12), null);
                                function b(e) {
                                    for(var t = function() {
                                        if (null !== p) return p;
                                        var e = [];
                                        e[0] = 2;
                                        for(var t = 1, r = 3; r < 1048576; r += 2){
                                            for(var n = Math.ceil(Math.sqrt(r)), i = 0; i < t && e[i] <= n && r % e[i] != 0; i++);
                                            t !== i && e[i] <= n || (e[t++] = r);
                                        }
                                        return p = e, e;
                                    }(), r = 0; r < t.length; r++)if (0 === e.modn(t[r])) return 0 === e.cmpn(t[r]);
                                    return !0;
                                }
                                function g(e) {
                                    var t = i.mont(e);
                                    return 0 === c.toRed(t).redPow(e.subn(1)).fromRed().cmpn(1);
                                }
                                function m(e, t) {
                                    if (e < 16) return new i(2 === t || 5 === t ? [
                                        140,
                                        123
                                    ] : [
                                        140,
                                        39
                                    ]);
                                    var r, p;
                                    for(t = new i(t);;){
                                        for(r = new i(n(Math.ceil(e / 8))); r.bitLength() > e;)r.ishrn(1);
                                        if (r.isEven() && r.iadd(a), r.testn(1) || r.iadd(c), t.cmp(c)) {
                                            if (!t.cmp(h)) for(; r.mod(u).cmp(d);)r.iadd(l);
                                        } else for(; r.mod(s).cmp(f);)r.iadd(l);
                                        if (b(p = r.shrn(1)) && b(r) && g(p) && g(r) && o.test(p) && o.test(r)) return r;
                                    }
                                }
                            },
                            3071: (e, t, r)=>{
                                "use strict";
                                var n = t;
                                n.version = r(3718).rE, n.utils = r(9185), n.rand = r(5442), n.curve = r(5228), n.curves = r(5366), n.ec = r(2961), n.eddsa = r(7808);
                            },
                            4499: (e, t, r)=>{
                                "use strict";
                                var n = r(4619), i = r(9185), s = i.getNAF, o = i.getJSF, a = i.assert;
                                function c(e, t) {
                                    this.type = e, this.p = new n(t.p, 16), this.red = t.prime ? n.red(t.prime) : n.mont(this.p), this.zero = new n(0).toRed(this.red), this.one = new n(1).toRed(this.red), this.two = new n(2).toRed(this.red), this.n = t.n && new n(t.n, 16), this.g = t.g && this.pointFromJSON(t.g, t.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
                                    var r = this.n && this.p.div(this.n);
                                    !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));
                                }
                                function h(e, t) {
                                    this.curve = e, this.type = t, this.precomputed = null;
                                }
                                e.exports = c, c.prototype.point = function() {
                                    throw new Error("Not implemented");
                                }, c.prototype.validate = function() {
                                    throw new Error("Not implemented");
                                }, c.prototype._fixedNafMul = function(e, t) {
                                    a(e.precomputed);
                                    var r = e._getDoubles(), n = s(t, 1, this._bitLength), i = (1 << r.step + 1) - (r.step % 2 == 0 ? 2 : 1);
                                    i /= 3;
                                    var o, c, h = [];
                                    for(o = 0; o < n.length; o += r.step){
                                        c = 0;
                                        for(var u = o + r.step - 1; u >= o; u--)c = (c << 1) + n[u];
                                        h.push(c);
                                    }
                                    for(var d = this.jpoint(null, null, null), f = this.jpoint(null, null, null), l = i; l > 0; l--){
                                        for(o = 0; o < h.length; o++)(c = h[o]) === l ? f = f.mixedAdd(r.points[o]) : c === -l && (f = f.mixedAdd(r.points[o].neg()));
                                        d = d.add(f);
                                    }
                                    return d.toP();
                                }, c.prototype._wnafMul = function(e, t) {
                                    var r = 4, n = e._getNAFPoints(r);
                                    r = n.wnd;
                                    for(var i = n.points, o = s(t, r, this._bitLength), c = this.jpoint(null, null, null), h = o.length - 1; h >= 0; h--){
                                        for(var u = 0; h >= 0 && 0 === o[h]; h--)u++;
                                        if (h >= 0 && u++, c = c.dblp(u), h < 0) break;
                                        var d = o[h];
                                        a(0 !== d), c = "affine" === e.type ? d > 0 ? c.mixedAdd(i[d - 1 >> 1]) : c.mixedAdd(i[-d - 1 >> 1].neg()) : d > 0 ? c.add(i[d - 1 >> 1]) : c.add(i[-d - 1 >> 1].neg());
                                    }
                                    return "affine" === e.type ? c.toP() : c;
                                }, c.prototype._wnafMulAdd = function(e, t, r, n, i) {
                                    var a, c, h, u = this._wnafT1, d = this._wnafT2, f = this._wnafT3, l = 0;
                                    for(a = 0; a < n; a++){
                                        var p = (h = t[a])._getNAFPoints(e);
                                        u[a] = p.wnd, d[a] = p.points;
                                    }
                                    for(a = n - 1; a >= 1; a -= 2){
                                        var b = a - 1, g = a;
                                        if (1 === u[b] && 1 === u[g]) {
                                            var m = [
                                                t[b],
                                                null,
                                                null,
                                                t[g]
                                            ];
                                            0 === t[b].y.cmp(t[g].y) ? (m[1] = t[b].add(t[g]), m[2] = t[b].toJ().mixedAdd(t[g].neg())) : 0 === t[b].y.cmp(t[g].y.redNeg()) ? (m[1] = t[b].toJ().mixedAdd(t[g]), m[2] = t[b].add(t[g].neg())) : (m[1] = t[b].toJ().mixedAdd(t[g]), m[2] = t[b].toJ().mixedAdd(t[g].neg()));
                                            var y = [
                                                -3,
                                                -1,
                                                -5,
                                                -7,
                                                0,
                                                7,
                                                5,
                                                1,
                                                3
                                            ], v = o(r[b], r[g]);
                                            for(l = Math.max(v[0].length, l), f[b] = new Array(l), f[g] = new Array(l), c = 0; c < l; c++){
                                                var w = 0 | v[0][c], _ = 0 | v[1][c];
                                                f[b][c] = y[3 * (w + 1) + (_ + 1)], f[g][c] = 0, d[b] = m;
                                            }
                                        } else f[b] = s(r[b], u[b], this._bitLength), f[g] = s(r[g], u[g], this._bitLength), l = Math.max(f[b].length, l), l = Math.max(f[g].length, l);
                                    }
                                    var E = this.jpoint(null, null, null), S = this._wnafT4;
                                    for(a = l; a >= 0; a--){
                                        for(var A = 0; a >= 0;){
                                            var M = !0;
                                            for(c = 0; c < n; c++)S[c] = 0 | f[c][a], 0 !== S[c] && (M = !1);
                                            if (!M) break;
                                            A++, a--;
                                        }
                                        if (a >= 0 && A++, E = E.dblp(A), a < 0) break;
                                        for(c = 0; c < n; c++){
                                            var I = S[c];
                                            0 !== I && (I > 0 ? h = d[c][I - 1 >> 1] : I < 0 && (h = d[c][-I - 1 >> 1].neg()), E = "affine" === h.type ? E.mixedAdd(h) : E.add(h));
                                        }
                                    }
                                    for(a = 0; a < n; a++)d[a] = null;
                                    return i ? E : E.toP();
                                }, c.BasePoint = h, h.prototype.eq = function() {
                                    throw new Error("Not implemented");
                                }, h.prototype.validate = function() {
                                    return this.curve.validate(this);
                                }, c.prototype.decodePoint = function(e, t) {
                                    e = i.toArray(e, t);
                                    var r = this.p.byteLength();
                                    if ((4 === e[0] || 6 === e[0] || 7 === e[0]) && e.length - 1 == 2 * r) return 6 === e[0] ? a(e[e.length - 1] % 2 == 0) : 7 === e[0] && a(e[e.length - 1] % 2 == 1), this.point(e.slice(1, 1 + r), e.slice(1 + r, 1 + 2 * r));
                                    if ((2 === e[0] || 3 === e[0]) && e.length - 1 === r) return this.pointFromX(e.slice(1, 1 + r), 3 === e[0]);
                                    throw new Error("Unknown point format");
                                }, h.prototype.encodeCompressed = function(e) {
                                    return this.encode(e, !0);
                                }, h.prototype._encode = function(e) {
                                    var t = this.curve.p.byteLength(), r = this.getX().toArray("be", t);
                                    return e ? [
                                        this.getY().isEven() ? 2 : 3
                                    ].concat(r) : [
                                        4
                                    ].concat(r, this.getY().toArray("be", t));
                                }, h.prototype.encode = function(e, t) {
                                    return i.encode(this._encode(t), e);
                                }, h.prototype.precompute = function(e) {
                                    if (this.precomputed) return this;
                                    var t = {
                                        doubles: null,
                                        naf: null,
                                        beta: null
                                    };
                                    return t.naf = this._getNAFPoints(8), t.doubles = this._getDoubles(4, e), t.beta = this._getBeta(), this.precomputed = t, this;
                                }, h.prototype._hasDoubles = function(e) {
                                    if (!this.precomputed) return !1;
                                    var t = this.precomputed.doubles;
                                    return !!t && t.points.length >= Math.ceil((e.bitLength() + 1) / t.step);
                                }, h.prototype._getDoubles = function(e, t) {
                                    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
                                    for(var r = [
                                        this
                                    ], n = this, i = 0; i < t; i += e){
                                        for(var s = 0; s < e; s++)n = n.dbl();
                                        r.push(n);
                                    }
                                    return {
                                        step: e,
                                        points: r
                                    };
                                }, h.prototype._getNAFPoints = function(e) {
                                    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
                                    for(var t = [
                                        this
                                    ], r = (1 << e) - 1, n = 1 === r ? null : this.dbl(), i = 1; i < r; i++)t[i] = t[i - 1].add(n);
                                    return {
                                        wnd: e,
                                        points: t
                                    };
                                }, h.prototype._getBeta = function() {
                                    return null;
                                }, h.prototype.dblp = function(e) {
                                    for(var t = this, r = 0; r < e; r++)t = t.dbl();
                                    return t;
                                };
                            },
                            3544: (e, t, r)=>{
                                "use strict";
                                var n = r(9185), i = r(4619), s = r(1193), o = r(4499), a = n.assert;
                                function c(e) {
                                    this.twisted = 1 != (0 | e.a), this.mOneA = this.twisted && -1 == (0 | e.a), this.extended = this.mOneA, o.call(this, "edwards", e), this.a = new i(e.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new i(e.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new i(e.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), a(!this.twisted || 0 === this.c.fromRed().cmpn(1)), this.oneC = 1 == (0 | e.c);
                                }
                                function h(e, t, r, n, s) {
                                    o.BasePoint.call(this, e, "projective"), null === t && null === r && null === n ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = !0) : (this.x = new i(t, 16), this.y = new i(r, 16), this.z = n ? new i(n, 16) : this.curve.one, this.t = s && new i(s, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
                                }
                                s(c, o), e.exports = c, c.prototype._mulA = function(e) {
                                    return this.mOneA ? e.redNeg() : this.a.redMul(e);
                                }, c.prototype._mulC = function(e) {
                                    return this.oneC ? e : this.c.redMul(e);
                                }, c.prototype.jpoint = function(e, t, r, n) {
                                    return this.point(e, t, r, n);
                                }, c.prototype.pointFromX = function(e, t) {
                                    (e = new i(e, 16)).red || (e = e.toRed(this.red));
                                    var r = e.redSqr(), n = this.c2.redSub(this.a.redMul(r)), s = this.one.redSub(this.c2.redMul(this.d).redMul(r)), o = n.redMul(s.redInvm()), a = o.redSqrt();
                                    if (0 !== a.redSqr().redSub(o).cmp(this.zero)) throw new Error("invalid point");
                                    var c = a.fromRed().isOdd();
                                    return (t && !c || !t && c) && (a = a.redNeg()), this.point(e, a);
                                }, c.prototype.pointFromY = function(e, t) {
                                    (e = new i(e, 16)).red || (e = e.toRed(this.red));
                                    var r = e.redSqr(), n = r.redSub(this.c2), s = r.redMul(this.d).redMul(this.c2).redSub(this.a), o = n.redMul(s.redInvm());
                                    if (0 === o.cmp(this.zero)) {
                                        if (t) throw new Error("invalid point");
                                        return this.point(this.zero, e);
                                    }
                                    var a = o.redSqrt();
                                    if (0 !== a.redSqr().redSub(o).cmp(this.zero)) throw new Error("invalid point");
                                    return a.fromRed().isOdd() !== t && (a = a.redNeg()), this.point(a, e);
                                }, c.prototype.validate = function(e) {
                                    if (e.isInfinity()) return !0;
                                    e.normalize();
                                    var t = e.x.redSqr(), r = e.y.redSqr(), n = t.redMul(this.a).redAdd(r), i = this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(r)));
                                    return 0 === n.cmp(i);
                                }, s(h, o.BasePoint), c.prototype.pointFromJSON = function(e) {
                                    return h.fromJSON(this, e);
                                }, c.prototype.point = function(e, t, r, n) {
                                    return new h(this, e, t, r, n);
                                }, h.fromJSON = function(e, t) {
                                    return new h(e, t[0], t[1], t[2]);
                                }, h.prototype.inspect = function() {
                                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
                                }, h.prototype.isInfinity = function() {
                                    return 0 === this.x.cmpn(0) && (0 === this.y.cmp(this.z) || this.zOne && 0 === this.y.cmp(this.curve.c));
                                }, h.prototype._extDbl = function() {
                                    var e = this.x.redSqr(), t = this.y.redSqr(), r = this.z.redSqr();
                                    r = r.redIAdd(r);
                                    var n = this.curve._mulA(e), i = this.x.redAdd(this.y).redSqr().redISub(e).redISub(t), s = n.redAdd(t), o = s.redSub(r), a = n.redSub(t), c = i.redMul(o), h = s.redMul(a), u = i.redMul(a), d = o.redMul(s);
                                    return this.curve.point(c, h, d, u);
                                }, h.prototype._projDbl = function() {
                                    var e, t, r, n, i, s, o = this.x.redAdd(this.y).redSqr(), a = this.x.redSqr(), c = this.y.redSqr();
                                    if (this.curve.twisted) {
                                        var h = (n = this.curve._mulA(a)).redAdd(c);
                                        this.zOne ? (e = o.redSub(a).redSub(c).redMul(h.redSub(this.curve.two)), t = h.redMul(n.redSub(c)), r = h.redSqr().redSub(h).redSub(h)) : (i = this.z.redSqr(), s = h.redSub(i).redISub(i), e = o.redSub(a).redISub(c).redMul(s), t = h.redMul(n.redSub(c)), r = h.redMul(s));
                                    } else n = a.redAdd(c), i = this.curve._mulC(this.z).redSqr(), s = n.redSub(i).redSub(i), e = this.curve._mulC(o.redISub(n)).redMul(s), t = this.curve._mulC(n).redMul(a.redISub(c)), r = n.redMul(s);
                                    return this.curve.point(e, t, r);
                                }, h.prototype.dbl = function() {
                                    return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
                                }, h.prototype._extAdd = function(e) {
                                    var t = this.y.redSub(this.x).redMul(e.y.redSub(e.x)), r = this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)), n = this.t.redMul(this.curve.dd).redMul(e.t), i = this.z.redMul(e.z.redAdd(e.z)), s = r.redSub(t), o = i.redSub(n), a = i.redAdd(n), c = r.redAdd(t), h = s.redMul(o), u = a.redMul(c), d = s.redMul(c), f = o.redMul(a);
                                    return this.curve.point(h, u, f, d);
                                }, h.prototype._projAdd = function(e) {
                                    var t, r, n = this.z.redMul(e.z), i = n.redSqr(), s = this.x.redMul(e.x), o = this.y.redMul(e.y), a = this.curve.d.redMul(s).redMul(o), c = i.redSub(a), h = i.redAdd(a), u = this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(s).redISub(o), d = n.redMul(c).redMul(u);
                                    return this.curve.twisted ? (t = n.redMul(h).redMul(o.redSub(this.curve._mulA(s))), r = c.redMul(h)) : (t = n.redMul(h).redMul(o.redSub(s)), r = this.curve._mulC(c).redMul(h)), this.curve.point(d, t, r);
                                }, h.prototype.add = function(e) {
                                    return this.isInfinity() ? e : e.isInfinity() ? this : this.curve.extended ? this._extAdd(e) : this._projAdd(e);
                                }, h.prototype.mul = function(e) {
                                    return this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve._wnafMul(this, e);
                                }, h.prototype.mulAdd = function(e, t, r) {
                                    return this.curve._wnafMulAdd(1, [
                                        this,
                                        t
                                    ], [
                                        e,
                                        r
                                    ], 2, !1);
                                }, h.prototype.jmulAdd = function(e, t, r) {
                                    return this.curve._wnafMulAdd(1, [
                                        this,
                                        t
                                    ], [
                                        e,
                                        r
                                    ], 2, !0);
                                }, h.prototype.normalize = function() {
                                    if (this.zOne) return this;
                                    var e = this.z.redInvm();
                                    return this.x = this.x.redMul(e), this.y = this.y.redMul(e), this.t && (this.t = this.t.redMul(e)), this.z = this.curve.one, this.zOne = !0, this;
                                }, h.prototype.neg = function() {
                                    return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
                                }, h.prototype.getX = function() {
                                    return this.normalize(), this.x.fromRed();
                                }, h.prototype.getY = function() {
                                    return this.normalize(), this.y.fromRed();
                                }, h.prototype.eq = function(e) {
                                    return this === e || 0 === this.getX().cmp(e.getX()) && 0 === this.getY().cmp(e.getY());
                                }, h.prototype.eqXToP = function(e) {
                                    var t = e.toRed(this.curve.red).redMul(this.z);
                                    if (0 === this.x.cmp(t)) return !0;
                                    for(var r = e.clone(), n = this.curve.redN.redMul(this.z);;){
                                        if (r.iadd(this.curve.n), r.cmp(this.curve.p) >= 0) return !1;
                                        if (t.redIAdd(n), 0 === this.x.cmp(t)) return !0;
                                    }
                                }, h.prototype.toP = h.prototype.normalize, h.prototype.mixedAdd = h.prototype.add;
                            },
                            5228: (e, t, r)=>{
                                "use strict";
                                var n = t;
                                n.base = r(4499), n.short = r(3970), n.mont = r(536), n.edwards = r(3544);
                            },
                            536: (e, t, r)=>{
                                "use strict";
                                var n = r(4619), i = r(1193), s = r(4499), o = r(9185);
                                function a(e) {
                                    s.call(this, "mont", e), this.a = new n(e.a, 16).toRed(this.red), this.b = new n(e.b, 16).toRed(this.red), this.i4 = new n(4).toRed(this.red).redInvm(), this.two = new n(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
                                }
                                function c(e, t, r) {
                                    s.BasePoint.call(this, e, "projective"), null === t && null === r ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new n(t, 16), this.z = new n(r, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
                                }
                                i(a, s), e.exports = a, a.prototype.validate = function(e) {
                                    var t = e.normalize().x, r = t.redSqr(), n = r.redMul(t).redAdd(r.redMul(this.a)).redAdd(t);
                                    return 0 === n.redSqrt().redSqr().cmp(n);
                                }, i(c, s.BasePoint), a.prototype.decodePoint = function(e, t) {
                                    return this.point(o.toArray(e, t), 1);
                                }, a.prototype.point = function(e, t) {
                                    return new c(this, e, t);
                                }, a.prototype.pointFromJSON = function(e) {
                                    return c.fromJSON(this, e);
                                }, c.prototype.precompute = function() {}, c.prototype._encode = function() {
                                    return this.getX().toArray("be", this.curve.p.byteLength());
                                }, c.fromJSON = function(e, t) {
                                    return new c(e, t[0], t[1] || e.one);
                                }, c.prototype.inspect = function() {
                                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
                                }, c.prototype.isInfinity = function() {
                                    return 0 === this.z.cmpn(0);
                                }, c.prototype.dbl = function() {
                                    var e = this.x.redAdd(this.z).redSqr(), t = this.x.redSub(this.z).redSqr(), r = e.redSub(t), n = e.redMul(t), i = r.redMul(t.redAdd(this.curve.a24.redMul(r)));
                                    return this.curve.point(n, i);
                                }, c.prototype.add = function() {
                                    throw new Error("Not supported on Montgomery curve");
                                }, c.prototype.diffAdd = function(e, t) {
                                    var r = this.x.redAdd(this.z), n = this.x.redSub(this.z), i = e.x.redAdd(e.z), s = e.x.redSub(e.z).redMul(r), o = i.redMul(n), a = t.z.redMul(s.redAdd(o).redSqr()), c = t.x.redMul(s.redISub(o).redSqr());
                                    return this.curve.point(a, c);
                                }, c.prototype.mul = function(e) {
                                    for(var t = e.clone(), r = this, n = this.curve.point(null, null), i = []; 0 !== t.cmpn(0); t.iushrn(1))i.push(t.andln(1));
                                    for(var s = i.length - 1; s >= 0; s--)0 === i[s] ? (r = r.diffAdd(n, this), n = n.dbl()) : (n = r.diffAdd(n, this), r = r.dbl());
                                    return n;
                                }, c.prototype.mulAdd = function() {
                                    throw new Error("Not supported on Montgomery curve");
                                }, c.prototype.jumlAdd = function() {
                                    throw new Error("Not supported on Montgomery curve");
                                }, c.prototype.eq = function(e) {
                                    return 0 === this.getX().cmp(e.getX());
                                }, c.prototype.normalize = function() {
                                    return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
                                }, c.prototype.getX = function() {
                                    return this.normalize(), this.x.fromRed();
                                };
                            },
                            3970: (e, t, r)=>{
                                "use strict";
                                var n = r(9185), i = r(4619), s = r(1193), o = r(4499), a = n.assert;
                                function c(e) {
                                    o.call(this, "short", e), this.a = new i(e.a, 16).toRed(this.red), this.b = new i(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(e), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
                                }
                                function h(e, t, r, n) {
                                    o.BasePoint.call(this, e, "affine"), null === t && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new i(t, 16), this.y = new i(r, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);
                                }
                                function u(e, t, r, n) {
                                    o.BasePoint.call(this, e, "jacobian"), null === t && null === r && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new i(0)) : (this.x = new i(t, 16), this.y = new i(r, 16), this.z = new i(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
                                }
                                s(c, o), e.exports = c, c.prototype._getEndomorphism = function(e) {
                                    if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                                        var t, r;
                                        if (e.beta) t = new i(e.beta, 16).toRed(this.red);
                                        else {
                                            var n = this._getEndoRoots(this.p);
                                            t = (t = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red);
                                        }
                                        if (e.lambda) r = new i(e.lambda, 16);
                                        else {
                                            var s = this._getEndoRoots(this.n);
                                            0 === this.g.mul(s[0]).x.cmp(this.g.x.redMul(t)) ? r = s[0] : (r = s[1], a(0 === this.g.mul(r).x.cmp(this.g.x.redMul(t))));
                                        }
                                        return {
                                            beta: t,
                                            lambda: r,
                                            basis: e.basis ? e.basis.map(function(e) {
                                                return {
                                                    a: new i(e.a, 16),
                                                    b: new i(e.b, 16)
                                                };
                                            }) : this._getEndoBasis(r)
                                        };
                                    }
                                }, c.prototype._getEndoRoots = function(e) {
                                    var t = e === this.p ? this.red : i.mont(e), r = new i(2).toRed(t).redInvm(), n = r.redNeg(), s = new i(3).toRed(t).redNeg().redSqrt().redMul(r);
                                    return [
                                        n.redAdd(s).fromRed(),
                                        n.redSub(s).fromRed()
                                    ];
                                }, c.prototype._getEndoBasis = function(e) {
                                    for(var t, r, n, s, o, a, c, h, u, d = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), f = e, l = this.n.clone(), p = new i(1), b = new i(0), g = new i(0), m = new i(1), y = 0; 0 !== f.cmpn(0);){
                                        var v = l.div(f);
                                        h = l.sub(v.mul(f)), u = g.sub(v.mul(p));
                                        var w = m.sub(v.mul(b));
                                        if (!n && h.cmp(d) < 0) t = c.neg(), r = p, n = h.neg(), s = u;
                                        else if (n && 2 == ++y) break;
                                        c = h, l = f, f = h, g = p, p = u, m = b, b = w;
                                    }
                                    o = h.neg(), a = u;
                                    var _ = n.sqr().add(s.sqr());
                                    return o.sqr().add(a.sqr()).cmp(_) >= 0 && (o = t, a = r), n.negative && (n = n.neg(), s = s.neg()), o.negative && (o = o.neg(), a = a.neg()), [
                                        {
                                            a: n,
                                            b: s
                                        },
                                        {
                                            a: o,
                                            b: a
                                        }
                                    ];
                                }, c.prototype._endoSplit = function(e) {
                                    var t = this.endo.basis, r = t[0], n = t[1], i = n.b.mul(e).divRound(this.n), s = r.b.neg().mul(e).divRound(this.n), o = i.mul(r.a), a = s.mul(n.a), c = i.mul(r.b), h = s.mul(n.b);
                                    return {
                                        k1: e.sub(o).sub(a),
                                        k2: c.add(h).neg()
                                    };
                                }, c.prototype.pointFromX = function(e, t) {
                                    (e = new i(e, 16)).red || (e = e.toRed(this.red));
                                    var r = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b), n = r.redSqrt();
                                    if (0 !== n.redSqr().redSub(r).cmp(this.zero)) throw new Error("invalid point");
                                    var s = n.fromRed().isOdd();
                                    return (t && !s || !t && s) && (n = n.redNeg()), this.point(e, n);
                                }, c.prototype.validate = function(e) {
                                    if (e.inf) return !0;
                                    var t = e.x, r = e.y, n = this.a.redMul(t), i = t.redSqr().redMul(t).redIAdd(n).redIAdd(this.b);
                                    return 0 === r.redSqr().redISub(i).cmpn(0);
                                }, c.prototype._endoWnafMulAdd = function(e, t, r) {
                                    for(var n = this._endoWnafT1, i = this._endoWnafT2, s = 0; s < e.length; s++){
                                        var o = this._endoSplit(t[s]), a = e[s], c = a._getBeta();
                                        o.k1.negative && (o.k1.ineg(), a = a.neg(!0)), o.k2.negative && (o.k2.ineg(), c = c.neg(!0)), n[2 * s] = a, n[2 * s + 1] = c, i[2 * s] = o.k1, i[2 * s + 1] = o.k2;
                                    }
                                    for(var h = this._wnafMulAdd(1, n, i, 2 * s, r), u = 0; u < 2 * s; u++)n[u] = null, i[u] = null;
                                    return h;
                                }, s(h, o.BasePoint), c.prototype.point = function(e, t, r) {
                                    return new h(this, e, t, r);
                                }, c.prototype.pointFromJSON = function(e, t) {
                                    return h.fromJSON(this, e, t);
                                }, h.prototype._getBeta = function() {
                                    if (this.curve.endo) {
                                        var e = this.precomputed;
                                        if (e && e.beta) return e.beta;
                                        var t = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                                        if (e) {
                                            var r = this.curve, n = function(e) {
                                                return r.point(e.x.redMul(r.endo.beta), e.y);
                                            };
                                            e.beta = t, t.precomputed = {
                                                beta: null,
                                                naf: e.naf && {
                                                    wnd: e.naf.wnd,
                                                    points: e.naf.points.map(n)
                                                },
                                                doubles: e.doubles && {
                                                    step: e.doubles.step,
                                                    points: e.doubles.points.map(n)
                                                }
                                            };
                                        }
                                        return t;
                                    }
                                }, h.prototype.toJSON = function() {
                                    return this.precomputed ? [
                                        this.x,
                                        this.y,
                                        this.precomputed && {
                                            doubles: this.precomputed.doubles && {
                                                step: this.precomputed.doubles.step,
                                                points: this.precomputed.doubles.points.slice(1)
                                            },
                                            naf: this.precomputed.naf && {
                                                wnd: this.precomputed.naf.wnd,
                                                points: this.precomputed.naf.points.slice(1)
                                            }
                                        }
                                    ] : [
                                        this.x,
                                        this.y
                                    ];
                                }, h.fromJSON = function(e, t, r) {
                                    "string" == typeof t && (t = JSON.parse(t));
                                    var n = e.point(t[0], t[1], r);
                                    if (!t[2]) return n;
                                    function i(t) {
                                        return e.point(t[0], t[1], r);
                                    }
                                    var s = t[2];
                                    return n.precomputed = {
                                        beta: null,
                                        doubles: s.doubles && {
                                            step: s.doubles.step,
                                            points: [
                                                n
                                            ].concat(s.doubles.points.map(i))
                                        },
                                        naf: s.naf && {
                                            wnd: s.naf.wnd,
                                            points: [
                                                n
                                            ].concat(s.naf.points.map(i))
                                        }
                                    }, n;
                                }, h.prototype.inspect = function() {
                                    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
                                }, h.prototype.isInfinity = function() {
                                    return this.inf;
                                }, h.prototype.add = function(e) {
                                    if (this.inf) return e;
                                    if (e.inf) return this;
                                    if (this.eq(e)) return this.dbl();
                                    if (this.neg().eq(e)) return this.curve.point(null, null);
                                    if (0 === this.x.cmp(e.x)) return this.curve.point(null, null);
                                    var t = this.y.redSub(e.y);
                                    0 !== t.cmpn(0) && (t = t.redMul(this.x.redSub(e.x).redInvm()));
                                    var r = t.redSqr().redISub(this.x).redISub(e.x), n = t.redMul(this.x.redSub(r)).redISub(this.y);
                                    return this.curve.point(r, n);
                                }, h.prototype.dbl = function() {
                                    if (this.inf) return this;
                                    var e = this.y.redAdd(this.y);
                                    if (0 === e.cmpn(0)) return this.curve.point(null, null);
                                    var t = this.curve.a, r = this.x.redSqr(), n = e.redInvm(), i = r.redAdd(r).redIAdd(r).redIAdd(t).redMul(n), s = i.redSqr().redISub(this.x.redAdd(this.x)), o = i.redMul(this.x.redSub(s)).redISub(this.y);
                                    return this.curve.point(s, o);
                                }, h.prototype.getX = function() {
                                    return this.x.fromRed();
                                }, h.prototype.getY = function() {
                                    return this.y.fromRed();
                                }, h.prototype.mul = function(e) {
                                    return e = new i(e, 16), this.isInfinity() ? this : this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([
                                        this
                                    ], [
                                        e
                                    ]) : this.curve._wnafMul(this, e);
                                }, h.prototype.mulAdd = function(e, t, r) {
                                    var n = [
                                        this,
                                        t
                                    ], i = [
                                        e,
                                        r
                                    ];
                                    return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2);
                                }, h.prototype.jmulAdd = function(e, t, r) {
                                    var n = [
                                        this,
                                        t
                                    ], i = [
                                        e,
                                        r
                                    ];
                                    return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0);
                                }, h.prototype.eq = function(e) {
                                    return this === e || this.inf === e.inf && (this.inf || 0 === this.x.cmp(e.x) && 0 === this.y.cmp(e.y));
                                }, h.prototype.neg = function(e) {
                                    if (this.inf) return this;
                                    var t = this.curve.point(this.x, this.y.redNeg());
                                    if (e && this.precomputed) {
                                        var r = this.precomputed, n = function(e) {
                                            return e.neg();
                                        };
                                        t.precomputed = {
                                            naf: r.naf && {
                                                wnd: r.naf.wnd,
                                                points: r.naf.points.map(n)
                                            },
                                            doubles: r.doubles && {
                                                step: r.doubles.step,
                                                points: r.doubles.points.map(n)
                                            }
                                        };
                                    }
                                    return t;
                                }, h.prototype.toJ = function() {
                                    return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
                                }, s(u, o.BasePoint), c.prototype.jpoint = function(e, t, r) {
                                    return new u(this, e, t, r);
                                }, u.prototype.toP = function() {
                                    if (this.isInfinity()) return this.curve.point(null, null);
                                    var e = this.z.redInvm(), t = e.redSqr(), r = this.x.redMul(t), n = this.y.redMul(t).redMul(e);
                                    return this.curve.point(r, n);
                                }, u.prototype.neg = function() {
                                    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
                                }, u.prototype.add = function(e) {
                                    if (this.isInfinity()) return e;
                                    if (e.isInfinity()) return this;
                                    var t = e.z.redSqr(), r = this.z.redSqr(), n = this.x.redMul(t), i = e.x.redMul(r), s = this.y.redMul(t.redMul(e.z)), o = e.y.redMul(r.redMul(this.z)), a = n.redSub(i), c = s.redSub(o);
                                    if (0 === a.cmpn(0)) return 0 !== c.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                                    var h = a.redSqr(), u = h.redMul(a), d = n.redMul(h), f = c.redSqr().redIAdd(u).redISub(d).redISub(d), l = c.redMul(d.redISub(f)).redISub(s.redMul(u)), p = this.z.redMul(e.z).redMul(a);
                                    return this.curve.jpoint(f, l, p);
                                }, u.prototype.mixedAdd = function(e) {
                                    if (this.isInfinity()) return e.toJ();
                                    if (e.isInfinity()) return this;
                                    var t = this.z.redSqr(), r = this.x, n = e.x.redMul(t), i = this.y, s = e.y.redMul(t).redMul(this.z), o = r.redSub(n), a = i.redSub(s);
                                    if (0 === o.cmpn(0)) return 0 !== a.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                                    var c = o.redSqr(), h = c.redMul(o), u = r.redMul(c), d = a.redSqr().redIAdd(h).redISub(u).redISub(u), f = a.redMul(u.redISub(d)).redISub(i.redMul(h)), l = this.z.redMul(o);
                                    return this.curve.jpoint(d, f, l);
                                }, u.prototype.dblp = function(e) {
                                    if (0 === e) return this;
                                    if (this.isInfinity()) return this;
                                    if (!e) return this.dbl();
                                    var t;
                                    if (this.curve.zeroA || this.curve.threeA) {
                                        var r = this;
                                        for(t = 0; t < e; t++)r = r.dbl();
                                        return r;
                                    }
                                    var n = this.curve.a, i = this.curve.tinv, s = this.x, o = this.y, a = this.z, c = a.redSqr().redSqr(), h = o.redAdd(o);
                                    for(t = 0; t < e; t++){
                                        var u = s.redSqr(), d = h.redSqr(), f = d.redSqr(), l = u.redAdd(u).redIAdd(u).redIAdd(n.redMul(c)), p = s.redMul(d), b = l.redSqr().redISub(p.redAdd(p)), g = p.redISub(b), m = l.redMul(g);
                                        m = m.redIAdd(m).redISub(f);
                                        var y = h.redMul(a);
                                        t + 1 < e && (c = c.redMul(f)), s = b, a = y, h = m;
                                    }
                                    return this.curve.jpoint(s, h.redMul(i), a);
                                }, u.prototype.dbl = function() {
                                    return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
                                }, u.prototype._zeroDbl = function() {
                                    var e, t, r;
                                    if (this.zOne) {
                                        var n = this.x.redSqr(), i = this.y.redSqr(), s = i.redSqr(), o = this.x.redAdd(i).redSqr().redISub(n).redISub(s);
                                        o = o.redIAdd(o);
                                        var a = n.redAdd(n).redIAdd(n), c = a.redSqr().redISub(o).redISub(o), h = s.redIAdd(s);
                                        h = (h = h.redIAdd(h)).redIAdd(h), e = c, t = a.redMul(o.redISub(c)).redISub(h), r = this.y.redAdd(this.y);
                                    } else {
                                        var u = this.x.redSqr(), d = this.y.redSqr(), f = d.redSqr(), l = this.x.redAdd(d).redSqr().redISub(u).redISub(f);
                                        l = l.redIAdd(l);
                                        var p = u.redAdd(u).redIAdd(u), b = p.redSqr(), g = f.redIAdd(f);
                                        g = (g = g.redIAdd(g)).redIAdd(g), e = b.redISub(l).redISub(l), t = p.redMul(l.redISub(e)).redISub(g), r = (r = this.y.redMul(this.z)).redIAdd(r);
                                    }
                                    return this.curve.jpoint(e, t, r);
                                }, u.prototype._threeDbl = function() {
                                    var e, t, r;
                                    if (this.zOne) {
                                        var n = this.x.redSqr(), i = this.y.redSqr(), s = i.redSqr(), o = this.x.redAdd(i).redSqr().redISub(n).redISub(s);
                                        o = o.redIAdd(o);
                                        var a = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a), c = a.redSqr().redISub(o).redISub(o);
                                        e = c;
                                        var h = s.redIAdd(s);
                                        h = (h = h.redIAdd(h)).redIAdd(h), t = a.redMul(o.redISub(c)).redISub(h), r = this.y.redAdd(this.y);
                                    } else {
                                        var u = this.z.redSqr(), d = this.y.redSqr(), f = this.x.redMul(d), l = this.x.redSub(u).redMul(this.x.redAdd(u));
                                        l = l.redAdd(l).redIAdd(l);
                                        var p = f.redIAdd(f), b = (p = p.redIAdd(p)).redAdd(p);
                                        e = l.redSqr().redISub(b), r = this.y.redAdd(this.z).redSqr().redISub(d).redISub(u);
                                        var g = d.redSqr();
                                        g = (g = (g = g.redIAdd(g)).redIAdd(g)).redIAdd(g), t = l.redMul(p.redISub(e)).redISub(g);
                                    }
                                    return this.curve.jpoint(e, t, r);
                                }, u.prototype._dbl = function() {
                                    var e = this.curve.a, t = this.x, r = this.y, n = this.z, i = n.redSqr().redSqr(), s = t.redSqr(), o = r.redSqr(), a = s.redAdd(s).redIAdd(s).redIAdd(e.redMul(i)), c = t.redAdd(t), h = (c = c.redIAdd(c)).redMul(o), u = a.redSqr().redISub(h.redAdd(h)), d = h.redISub(u), f = o.redSqr();
                                    f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
                                    var l = a.redMul(d).redISub(f), p = r.redAdd(r).redMul(n);
                                    return this.curve.jpoint(u, l, p);
                                }, u.prototype.trpl = function() {
                                    if (!this.curve.zeroA) return this.dbl().add(this);
                                    var e = this.x.redSqr(), t = this.y.redSqr(), r = this.z.redSqr(), n = t.redSqr(), i = e.redAdd(e).redIAdd(e), s = i.redSqr(), o = this.x.redAdd(t).redSqr().redISub(e).redISub(n), a = (o = (o = (o = o.redIAdd(o)).redAdd(o).redIAdd(o)).redISub(s)).redSqr(), c = n.redIAdd(n);
                                    c = (c = (c = c.redIAdd(c)).redIAdd(c)).redIAdd(c);
                                    var h = i.redIAdd(o).redSqr().redISub(s).redISub(a).redISub(c), u = t.redMul(h);
                                    u = (u = u.redIAdd(u)).redIAdd(u);
                                    var d = this.x.redMul(a).redISub(u);
                                    d = (d = d.redIAdd(d)).redIAdd(d);
                                    var f = this.y.redMul(h.redMul(c.redISub(h)).redISub(o.redMul(a)));
                                    f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
                                    var l = this.z.redAdd(o).redSqr().redISub(r).redISub(a);
                                    return this.curve.jpoint(d, f, l);
                                }, u.prototype.mul = function(e, t) {
                                    return e = new i(e, t), this.curve._wnafMul(this, e);
                                }, u.prototype.eq = function(e) {
                                    if ("affine" === e.type) return this.eq(e.toJ());
                                    if (this === e) return !0;
                                    var t = this.z.redSqr(), r = e.z.redSqr();
                                    if (0 !== this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0)) return !1;
                                    var n = t.redMul(this.z), i = r.redMul(e.z);
                                    return 0 === this.y.redMul(i).redISub(e.y.redMul(n)).cmpn(0);
                                }, u.prototype.eqXToP = function(e) {
                                    var t = this.z.redSqr(), r = e.toRed(this.curve.red).redMul(t);
                                    if (0 === this.x.cmp(r)) return !0;
                                    for(var n = e.clone(), i = this.curve.redN.redMul(t);;){
                                        if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                                        if (r.redIAdd(i), 0 === this.x.cmp(r)) return !0;
                                    }
                                }, u.prototype.inspect = function() {
                                    return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
                                }, u.prototype.isInfinity = function() {
                                    return 0 === this.z.cmpn(0);
                                };
                            },
                            5366: (e, t, r)=>{
                                "use strict";
                                var n, i = t, s = r(1631), o = r(5228), a = r(9185).assert;
                                function c(e) {
                                    "short" === e.type ? this.curve = new o.short(e) : "edwards" === e.type ? this.curve = new o.edwards(e) : this.curve = new o.mont(e), this.g = this.curve.g, this.n = this.curve.n, this.hash = e.hash, a(this.g.validate(), "Invalid curve"), a(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
                                }
                                function h(e, t) {
                                    Object.defineProperty(i, e, {
                                        configurable: !0,
                                        enumerable: !0,
                                        get: function() {
                                            var r = new c(t);
                                            return Object.defineProperty(i, e, {
                                                configurable: !0,
                                                enumerable: !0,
                                                value: r
                                            }), r;
                                        }
                                    });
                                }
                                i.PresetCurve = c, h("p192", {
                                    type: "short",
                                    prime: "p192",
                                    p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                                    a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                                    b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                                    n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                                    hash: s.sha256,
                                    gRed: !1,
                                    g: [
                                        "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
                                        "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
                                    ]
                                }), h("p224", {
                                    type: "short",
                                    prime: "p224",
                                    p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                                    a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                                    b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                                    n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                                    hash: s.sha256,
                                    gRed: !1,
                                    g: [
                                        "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
                                        "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
                                    ]
                                }), h("p256", {
                                    type: "short",
                                    prime: null,
                                    p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                                    a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                                    b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                                    n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                                    hash: s.sha256,
                                    gRed: !1,
                                    g: [
                                        "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
                                        "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
                                    ]
                                }), h("p384", {
                                    type: "short",
                                    prime: null,
                                    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                                    a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                                    b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                                    n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                                    hash: s.sha384,
                                    gRed: !1,
                                    g: [
                                        "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
                                        "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
                                    ]
                                }), h("p521", {
                                    type: "short",
                                    prime: null,
                                    p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                                    a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                                    b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                                    n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                                    hash: s.sha512,
                                    gRed: !1,
                                    g: [
                                        "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
                                        "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
                                    ]
                                }), h("curve25519", {
                                    type: "mont",
                                    prime: "p25519",
                                    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                                    a: "76d06",
                                    b: "1",
                                    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                                    hash: s.sha256,
                                    gRed: !1,
                                    g: [
                                        "9"
                                    ]
                                }), h("ed25519", {
                                    type: "edwards",
                                    prime: "p25519",
                                    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                                    a: "-1",
                                    c: "1",
                                    d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                                    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                                    hash: s.sha256,
                                    gRed: !1,
                                    g: [
                                        "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
                                        "6666666666666666666666666666666666666666666666666666666666666658"
                                    ]
                                });
                                try {
                                    n = r(7153);
                                } catch (e) {
                                    n = void 0;
                                }
                                h("secp256k1", {
                                    type: "short",
                                    prime: "k256",
                                    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                                    a: "0",
                                    b: "7",
                                    n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                                    h: "1",
                                    hash: s.sha256,
                                    beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                                    lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                                    basis: [
                                        {
                                            a: "3086d221a7d46bcde86c90e49284eb15",
                                            b: "-e4437ed6010e88286f547fa90abfe4c3"
                                        },
                                        {
                                            a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                                            b: "3086d221a7d46bcde86c90e49284eb15"
                                        }
                                    ],
                                    gRed: !1,
                                    g: [
                                        "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
                                        "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
                                        n
                                    ]
                                });
                            },
                            2961: (e, t, r)=>{
                                "use strict";
                                var n = r(4619), i = r(2519), s = r(9185), o = r(5366), a = r(5442), c = s.assert, h = r(5666), u = r(4375);
                                function d(e) {
                                    if (!(this instanceof d)) return new d(e);
                                    "string" == typeof e && (c(Object.prototype.hasOwnProperty.call(o, e), "Unknown curve " + e), e = o[e]), e instanceof o.PresetCurve && (e = {
                                        curve: e
                                    }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash;
                                }
                                e.exports = d, d.prototype.keyPair = function(e) {
                                    return new h(this, e);
                                }, d.prototype.keyFromPrivate = function(e, t) {
                                    return h.fromPrivate(this, e, t);
                                }, d.prototype.keyFromPublic = function(e, t) {
                                    return h.fromPublic(this, e, t);
                                }, d.prototype.genKeyPair = function(e) {
                                    e || (e = {});
                                    for(var t = new i({
                                        hash: this.hash,
                                        pers: e.pers,
                                        persEnc: e.persEnc || "utf8",
                                        entropy: e.entropy || a(this.hash.hmacStrength),
                                        entropyEnc: e.entropy && e.entropyEnc || "utf8",
                                        nonce: this.n.toArray()
                                    }), r = this.n.byteLength(), s = this.n.sub(new n(2));;){
                                        var o = new n(t.generate(r));
                                        if (!(o.cmp(s) > 0)) return o.iaddn(1), this.keyFromPrivate(o);
                                    }
                                }, d.prototype._truncateToN = function(e, t, r) {
                                    var i;
                                    if (n.isBN(e) || "number" == typeof e) i = (e = new n(e, 16)).byteLength();
                                    else if ("object" == typeof e) i = e.length, e = new n(e, 16);
                                    else {
                                        var s = e.toString();
                                        i = s.length + 1 >>> 1, e = new n(s, 16);
                                    }
                                    "number" != typeof r && (r = 8 * i);
                                    var o = r - this.n.bitLength();
                                    return o > 0 && (e = e.ushrn(o)), !t && e.cmp(this.n) >= 0 ? e.sub(this.n) : e;
                                }, d.prototype.sign = function(e, t, r, s) {
                                    if ("object" == typeof r && (s = r, r = null), s || (s = {}), "string" != typeof e && "number" != typeof e && !n.isBN(e)) {
                                        c("object" == typeof e && e && "number" == typeof e.length, "Expected message to be an array-like, a hex string, or a BN instance"), c(e.length >>> 0 === e.length);
                                        for(var o = 0; o < e.length; o++)c((255 & e[o]) === e[o]);
                                    }
                                    t = this.keyFromPrivate(t, r), e = this._truncateToN(e, !1, s.msgBitLength), c(!e.isNeg(), "Can not sign a negative message");
                                    var a = this.n.byteLength(), h = t.getPrivate().toArray("be", a), d = e.toArray("be", a);
                                    c(new n(d).eq(e), "Can not sign message");
                                    for(var f = new i({
                                        hash: this.hash,
                                        entropy: h,
                                        nonce: d,
                                        pers: s.pers,
                                        persEnc: s.persEnc || "utf8"
                                    }), l = this.n.sub(new n(1)), p = 0;; p++){
                                        var b = s.k ? s.k(p) : new n(f.generate(this.n.byteLength()));
                                        if (!((b = this._truncateToN(b, !0)).cmpn(1) <= 0 || b.cmp(l) >= 0)) {
                                            var g = this.g.mul(b);
                                            if (!g.isInfinity()) {
                                                var m = g.getX(), y = m.umod(this.n);
                                                if (0 !== y.cmpn(0)) {
                                                    var v = b.invm(this.n).mul(y.mul(t.getPrivate()).iadd(e));
                                                    if (0 !== (v = v.umod(this.n)).cmpn(0)) {
                                                        var w = (g.getY().isOdd() ? 1 : 0) | (0 !== m.cmp(y) ? 2 : 0);
                                                        return s.canonical && v.cmp(this.nh) > 0 && (v = this.n.sub(v), w ^= 1), new u({
                                                            r: y,
                                                            s: v,
                                                            recoveryParam: w
                                                        });
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }, d.prototype.verify = function(e, t, r, n, i) {
                                    i || (i = {}), e = this._truncateToN(e, !1, i.msgBitLength), r = this.keyFromPublic(r, n);
                                    var s = (t = new u(t, "hex")).r, o = t.s;
                                    if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return !1;
                                    if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
                                    var a, c = o.invm(this.n), h = c.mul(e).umod(this.n), d = c.mul(s).umod(this.n);
                                    return this.curve._maxwellTrick ? !(a = this.g.jmulAdd(h, r.getPublic(), d)).isInfinity() && a.eqXToP(s) : !(a = this.g.mulAdd(h, r.getPublic(), d)).isInfinity() && 0 === a.getX().umod(this.n).cmp(s);
                                }, d.prototype.recoverPubKey = function(e, t, r, i) {
                                    c((3 & r) === r, "The recovery param is more than two bits"), t = new u(t, i);
                                    var s = this.n, o = new n(e), a = t.r, h = t.s, d = 1 & r, f = r >> 1;
                                    if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && f) throw new Error("Unable to find sencond key candinate");
                                    a = f ? this.curve.pointFromX(a.add(this.curve.n), d) : this.curve.pointFromX(a, d);
                                    var l = t.r.invm(s), p = s.sub(o).mul(l).umod(s), b = h.mul(l).umod(s);
                                    return this.g.mulAdd(p, a, b);
                                }, d.prototype.getKeyRecoveryParam = function(e, t, r, n) {
                                    if (null !== (t = new u(t, n)).recoveryParam) return t.recoveryParam;
                                    for(var i = 0; i < 4; i++){
                                        var s;
                                        try {
                                            s = this.recoverPubKey(e, t, i);
                                        } catch (e) {
                                            continue;
                                        }
                                        if (s.eq(r)) return i;
                                    }
                                    throw new Error("Unable to find valid recovery factor");
                                };
                            },
                            5666: (e, t, r)=>{
                                "use strict";
                                var n = r(4619), i = r(9185).assert;
                                function s(e, t) {
                                    this.ec = e, this.priv = null, this.pub = null, t.priv && this._importPrivate(t.priv, t.privEnc), t.pub && this._importPublic(t.pub, t.pubEnc);
                                }
                                e.exports = s, s.fromPublic = function(e, t, r) {
                                    return t instanceof s ? t : new s(e, {
                                        pub: t,
                                        pubEnc: r
                                    });
                                }, s.fromPrivate = function(e, t, r) {
                                    return t instanceof s ? t : new s(e, {
                                        priv: t,
                                        privEnc: r
                                    });
                                }, s.prototype.validate = function() {
                                    var e = this.getPublic();
                                    return e.isInfinity() ? {
                                        result: !1,
                                        reason: "Invalid public key"
                                    } : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? {
                                        result: !0,
                                        reason: null
                                    } : {
                                        result: !1,
                                        reason: "Public key * N != O"
                                    } : {
                                        result: !1,
                                        reason: "Public key is not a point"
                                    };
                                }, s.prototype.getPublic = function(e, t) {
                                    return "string" == typeof e && (t = e, e = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), t ? this.pub.encode(t, e) : this.pub;
                                }, s.prototype.getPrivate = function(e) {
                                    return "hex" === e ? this.priv.toString(16, 2) : this.priv;
                                }, s.prototype._importPrivate = function(e, t) {
                                    this.priv = new n(e, t || 16), this.priv = this.priv.umod(this.ec.curve.n);
                                }, s.prototype._importPublic = function(e, t) {
                                    if (e.x || e.y) return "mont" === this.ec.curve.type ? i(e.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || i(e.x && e.y, "Need both x and y coordinate"), void (this.pub = this.ec.curve.point(e.x, e.y));
                                    this.pub = this.ec.curve.decodePoint(e, t);
                                }, s.prototype.derive = function(e) {
                                    return e.validate() || i(e.validate(), "public point not validated"), e.mul(this.priv).getX();
                                }, s.prototype.sign = function(e, t, r) {
                                    return this.ec.sign(e, this, t, r);
                                }, s.prototype.verify = function(e, t, r) {
                                    return this.ec.verify(e, t, this, void 0, r);
                                }, s.prototype.inspect = function() {
                                    return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
                                };
                            },
                            4375: (e, t, r)=>{
                                "use strict";
                                var n = r(4619), i = r(9185), s = i.assert;
                                function o(e, t) {
                                    if (e instanceof o) return e;
                                    this._importDER(e, t) || (s(e.r && e.s, "Signature without r or s"), this.r = new n(e.r, 16), this.s = new n(e.s, 16), void 0 === e.recoveryParam ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam);
                                }
                                function a() {
                                    this.place = 0;
                                }
                                function c(e, t) {
                                    var r = e[t.place++];
                                    if (!(128 & r)) return r;
                                    var n = 15 & r;
                                    if (0 === n || n > 4) return !1;
                                    if (0 === e[t.place]) return !1;
                                    for(var i = 0, s = 0, o = t.place; s < n; s++, o++)i <<= 8, i |= e[o], i >>>= 0;
                                    return !(i <= 127) && (t.place = o, i);
                                }
                                function h(e) {
                                    for(var t = 0, r = e.length - 1; !e[t] && !(128 & e[t + 1]) && t < r;)t++;
                                    return 0 === t ? e : e.slice(t);
                                }
                                function u(e, t) {
                                    if (t < 128) e.push(t);
                                    else {
                                        var r = 1 + (Math.log(t) / Math.LN2 >>> 3);
                                        for(e.push(128 | r); --r;)e.push(t >>> (r << 3) & 255);
                                        e.push(t);
                                    }
                                }
                                e.exports = o, o.prototype._importDER = function(e, t) {
                                    e = i.toArray(e, t);
                                    var r = new a;
                                    if (48 !== e[r.place++]) return !1;
                                    var s = c(e, r);
                                    if (!1 === s) return !1;
                                    if (s + r.place !== e.length) return !1;
                                    if (2 !== e[r.place++]) return !1;
                                    var o = c(e, r);
                                    if (!1 === o) return !1;
                                    if (128 & e[r.place]) return !1;
                                    var h = e.slice(r.place, o + r.place);
                                    if (r.place += o, 2 !== e[r.place++]) return !1;
                                    var u = c(e, r);
                                    if (!1 === u) return !1;
                                    if (e.length !== u + r.place) return !1;
                                    if (128 & e[r.place]) return !1;
                                    var d = e.slice(r.place, u + r.place);
                                    if (0 === h[0]) {
                                        if (!(128 & h[1])) return !1;
                                        h = h.slice(1);
                                    }
                                    if (0 === d[0]) {
                                        if (!(128 & d[1])) return !1;
                                        d = d.slice(1);
                                    }
                                    return this.r = new n(h), this.s = new n(d), this.recoveryParam = null, !0;
                                }, o.prototype.toDER = function(e) {
                                    var t = this.r.toArray(), r = this.s.toArray();
                                    for(128 & t[0] && (t = [
                                        0
                                    ].concat(t)), 128 & r[0] && (r = [
                                        0
                                    ].concat(r)), t = h(t), r = h(r); !(r[0] || 128 & r[1]);)r = r.slice(1);
                                    var n = [
                                        2
                                    ];
                                    u(n, t.length), (n = n.concat(t)).push(2), u(n, r.length);
                                    var s = n.concat(r), o = [
                                        48
                                    ];
                                    return u(o, s.length), o = o.concat(s), i.encode(o, e);
                                };
                            },
                            7808: (e, t, r)=>{
                                "use strict";
                                var n = r(1631), i = r(5366), s = r(9185), o = s.assert, a = s.parseBytes, c = r(6419), h = r(5406);
                                function u(e) {
                                    if (o("ed25519" === e, "only tested with ed25519 so far"), !(this instanceof u)) return new u(e);
                                    e = i[e].curve, this.curve = e, this.g = e.g, this.g.precompute(e.n.bitLength() + 1), this.pointClass = e.point().constructor, this.encodingLength = Math.ceil(e.n.bitLength() / 8), this.hash = n.sha512;
                                }
                                e.exports = u, u.prototype.sign = function(e, t) {
                                    e = a(e);
                                    var r = this.keyFromSecret(t), n = this.hashInt(r.messagePrefix(), e), i = this.g.mul(n), s = this.encodePoint(i), o = this.hashInt(s, r.pubBytes(), e).mul(r.priv()), c = n.add(o).umod(this.curve.n);
                                    return this.makeSignature({
                                        R: i,
                                        S: c,
                                        Rencoded: s
                                    });
                                }, u.prototype.verify = function(e, t, r) {
                                    if (e = a(e), (t = this.makeSignature(t)).S().gte(t.eddsa.curve.n) || t.S().isNeg()) return !1;
                                    var n = this.keyFromPublic(r), i = this.hashInt(t.Rencoded(), n.pubBytes(), e), s = this.g.mul(t.S());
                                    return t.R().add(n.pub().mul(i)).eq(s);
                                }, u.prototype.hashInt = function() {
                                    for(var e = this.hash(), t = 0; t < arguments.length; t++)e.update(arguments[t]);
                                    return s.intFromLE(e.digest()).umod(this.curve.n);
                                }, u.prototype.keyFromPublic = function(e) {
                                    return c.fromPublic(this, e);
                                }, u.prototype.keyFromSecret = function(e) {
                                    return c.fromSecret(this, e);
                                }, u.prototype.makeSignature = function(e) {
                                    return e instanceof h ? e : new h(this, e);
                                }, u.prototype.encodePoint = function(e) {
                                    var t = e.getY().toArray("le", this.encodingLength);
                                    return t[this.encodingLength - 1] |= e.getX().isOdd() ? 128 : 0, t;
                                }, u.prototype.decodePoint = function(e) {
                                    var t = (e = s.parseBytes(e)).length - 1, r = e.slice(0, t).concat(-129 & e[t]), n = !!(128 & e[t]), i = s.intFromLE(r);
                                    return this.curve.pointFromY(i, n);
                                }, u.prototype.encodeInt = function(e) {
                                    return e.toArray("le", this.encodingLength);
                                }, u.prototype.decodeInt = function(e) {
                                    return s.intFromLE(e);
                                }, u.prototype.isPoint = function(e) {
                                    return e instanceof this.pointClass;
                                };
                            },
                            6419: (e, t, r)=>{
                                "use strict";
                                var n = r(9185), i = n.assert, s = n.parseBytes, o = n.cachedProperty;
                                function a(e, t) {
                                    this.eddsa = e, this._secret = s(t.secret), e.isPoint(t.pub) ? this._pub = t.pub : this._pubBytes = s(t.pub);
                                }
                                a.fromPublic = function(e, t) {
                                    return t instanceof a ? t : new a(e, {
                                        pub: t
                                    });
                                }, a.fromSecret = function(e, t) {
                                    return t instanceof a ? t : new a(e, {
                                        secret: t
                                    });
                                }, a.prototype.secret = function() {
                                    return this._secret;
                                }, o(a, "pubBytes", function() {
                                    return this.eddsa.encodePoint(this.pub());
                                }), o(a, "pub", function() {
                                    return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
                                }), o(a, "privBytes", function() {
                                    var e = this.eddsa, t = this.hash(), r = e.encodingLength - 1, n = t.slice(0, e.encodingLength);
                                    return n[0] &= 248, n[r] &= 127, n[r] |= 64, n;
                                }), o(a, "priv", function() {
                                    return this.eddsa.decodeInt(this.privBytes());
                                }), o(a, "hash", function() {
                                    return this.eddsa.hash().update(this.secret()).digest();
                                }), o(a, "messagePrefix", function() {
                                    return this.hash().slice(this.eddsa.encodingLength);
                                }), a.prototype.sign = function(e) {
                                    return i(this._secret, "KeyPair can only verify"), this.eddsa.sign(e, this);
                                }, a.prototype.verify = function(e, t) {
                                    return this.eddsa.verify(e, t, this);
                                }, a.prototype.getSecret = function(e) {
                                    return i(this._secret, "KeyPair is public only"), n.encode(this.secret(), e);
                                }, a.prototype.getPublic = function(e) {
                                    return n.encode(this.pubBytes(), e);
                                }, e.exports = a;
                            },
                            5406: (e, t, r)=>{
                                "use strict";
                                var n = r(4619), i = r(9185), s = i.assert, o = i.cachedProperty, a = i.parseBytes;
                                function c(e, t) {
                                    this.eddsa = e, "object" != typeof t && (t = a(t)), Array.isArray(t) && (s(t.length === 2 * e.encodingLength, "Signature has invalid size"), t = {
                                        R: t.slice(0, e.encodingLength),
                                        S: t.slice(e.encodingLength)
                                    }), s(t.R && t.S, "Signature without R or S"), e.isPoint(t.R) && (this._R = t.R), t.S instanceof n && (this._S = t.S), this._Rencoded = Array.isArray(t.R) ? t.R : t.Rencoded, this._Sencoded = Array.isArray(t.S) ? t.S : t.Sencoded;
                                }
                                o(c, "S", function() {
                                    return this.eddsa.decodeInt(this.Sencoded());
                                }), o(c, "R", function() {
                                    return this.eddsa.decodePoint(this.Rencoded());
                                }), o(c, "Rencoded", function() {
                                    return this.eddsa.encodePoint(this.R());
                                }), o(c, "Sencoded", function() {
                                    return this.eddsa.encodeInt(this.S());
                                }), c.prototype.toBytes = function() {
                                    return this.Rencoded().concat(this.Sencoded());
                                }, c.prototype.toHex = function() {
                                    return i.encode(this.toBytes(), "hex").toUpperCase();
                                }, e.exports = c;
                            },
                            7153: (e)=>{
                                e.exports = {
                                    doubles: {
                                        step: 4,
                                        points: [
                                            [
                                                "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a",
                                                "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"
                                            ],
                                            [
                                                "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508",
                                                "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"
                                            ],
                                            [
                                                "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739",
                                                "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"
                                            ],
                                            [
                                                "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640",
                                                "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"
                                            ],
                                            [
                                                "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c",
                                                "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"
                                            ],
                                            [
                                                "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda",
                                                "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"
                                            ],
                                            [
                                                "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa",
                                                "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"
                                            ],
                                            [
                                                "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0",
                                                "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"
                                            ],
                                            [
                                                "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d",
                                                "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"
                                            ],
                                            [
                                                "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d",
                                                "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"
                                            ],
                                            [
                                                "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1",
                                                "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"
                                            ],
                                            [
                                                "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0",
                                                "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"
                                            ],
                                            [
                                                "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047",
                                                "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"
                                            ],
                                            [
                                                "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862",
                                                "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"
                                            ],
                                            [
                                                "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7",
                                                "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"
                                            ],
                                            [
                                                "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd",
                                                "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"
                                            ],
                                            [
                                                "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83",
                                                "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"
                                            ],
                                            [
                                                "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a",
                                                "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"
                                            ],
                                            [
                                                "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8",
                                                "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"
                                            ],
                                            [
                                                "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d",
                                                "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"
                                            ],
                                            [
                                                "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725",
                                                "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"
                                            ],
                                            [
                                                "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754",
                                                "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"
                                            ],
                                            [
                                                "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c",
                                                "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"
                                            ],
                                            [
                                                "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6",
                                                "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"
                                            ],
                                            [
                                                "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39",
                                                "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"
                                            ],
                                            [
                                                "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891",
                                                "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"
                                            ],
                                            [
                                                "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b",
                                                "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"
                                            ],
                                            [
                                                "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03",
                                                "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"
                                            ],
                                            [
                                                "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d",
                                                "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"
                                            ],
                                            [
                                                "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070",
                                                "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"
                                            ],
                                            [
                                                "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4",
                                                "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"
                                            ],
                                            [
                                                "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da",
                                                "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"
                                            ],
                                            [
                                                "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11",
                                                "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"
                                            ],
                                            [
                                                "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e",
                                                "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"
                                            ],
                                            [
                                                "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41",
                                                "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"
                                            ],
                                            [
                                                "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef",
                                                "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"
                                            ],
                                            [
                                                "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8",
                                                "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"
                                            ],
                                            [
                                                "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d",
                                                "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"
                                            ],
                                            [
                                                "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96",
                                                "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"
                                            ],
                                            [
                                                "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd",
                                                "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"
                                            ],
                                            [
                                                "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5",
                                                "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"
                                            ],
                                            [
                                                "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266",
                                                "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"
                                            ],
                                            [
                                                "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71",
                                                "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"
                                            ],
                                            [
                                                "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac",
                                                "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"
                                            ],
                                            [
                                                "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751",
                                                "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"
                                            ],
                                            [
                                                "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e",
                                                "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"
                                            ],
                                            [
                                                "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241",
                                                "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"
                                            ],
                                            [
                                                "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3",
                                                "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"
                                            ],
                                            [
                                                "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f",
                                                "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"
                                            ],
                                            [
                                                "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19",
                                                "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"
                                            ],
                                            [
                                                "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be",
                                                "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"
                                            ],
                                            [
                                                "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9",
                                                "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"
                                            ],
                                            [
                                                "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2",
                                                "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"
                                            ],
                                            [
                                                "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13",
                                                "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"
                                            ],
                                            [
                                                "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c",
                                                "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"
                                            ],
                                            [
                                                "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba",
                                                "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"
                                            ],
                                            [
                                                "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151",
                                                "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"
                                            ],
                                            [
                                                "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073",
                                                "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"
                                            ],
                                            [
                                                "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458",
                                                "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"
                                            ],
                                            [
                                                "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b",
                                                "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"
                                            ],
                                            [
                                                "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366",
                                                "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"
                                            ],
                                            [
                                                "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa",
                                                "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"
                                            ],
                                            [
                                                "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0",
                                                "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"
                                            ],
                                            [
                                                "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787",
                                                "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"
                                            ],
                                            [
                                                "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e",
                                                "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"
                                            ]
                                        ]
                                    },
                                    naf: {
                                        wnd: 7,
                                        points: [
                                            [
                                                "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9",
                                                "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"
                                            ],
                                            [
                                                "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4",
                                                "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"
                                            ],
                                            [
                                                "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc",
                                                "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"
                                            ],
                                            [
                                                "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe",
                                                "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"
                                            ],
                                            [
                                                "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb",
                                                "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"
                                            ],
                                            [
                                                "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8",
                                                "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"
                                            ],
                                            [
                                                "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e",
                                                "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"
                                            ],
                                            [
                                                "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34",
                                                "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"
                                            ],
                                            [
                                                "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c",
                                                "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"
                                            ],
                                            [
                                                "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5",
                                                "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"
                                            ],
                                            [
                                                "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f",
                                                "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"
                                            ],
                                            [
                                                "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714",
                                                "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"
                                            ],
                                            [
                                                "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729",
                                                "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"
                                            ],
                                            [
                                                "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db",
                                                "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"
                                            ],
                                            [
                                                "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4",
                                                "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"
                                            ],
                                            [
                                                "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5",
                                                "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"
                                            ],
                                            [
                                                "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479",
                                                "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"
                                            ],
                                            [
                                                "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d",
                                                "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"
                                            ],
                                            [
                                                "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f",
                                                "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"
                                            ],
                                            [
                                                "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb",
                                                "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"
                                            ],
                                            [
                                                "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9",
                                                "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"
                                            ],
                                            [
                                                "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963",
                                                "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"
                                            ],
                                            [
                                                "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74",
                                                "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"
                                            ],
                                            [
                                                "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530",
                                                "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"
                                            ],
                                            [
                                                "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b",
                                                "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"
                                            ],
                                            [
                                                "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247",
                                                "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"
                                            ],
                                            [
                                                "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1",
                                                "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"
                                            ],
                                            [
                                                "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120",
                                                "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"
                                            ],
                                            [
                                                "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435",
                                                "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"
                                            ],
                                            [
                                                "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18",
                                                "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"
                                            ],
                                            [
                                                "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8",
                                                "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"
                                            ],
                                            [
                                                "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb",
                                                "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"
                                            ],
                                            [
                                                "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f",
                                                "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"
                                            ],
                                            [
                                                "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143",
                                                "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"
                                            ],
                                            [
                                                "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba",
                                                "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"
                                            ],
                                            [
                                                "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45",
                                                "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"
                                            ],
                                            [
                                                "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a",
                                                "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"
                                            ],
                                            [
                                                "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e",
                                                "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"
                                            ],
                                            [
                                                "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8",
                                                "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"
                                            ],
                                            [
                                                "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c",
                                                "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"
                                            ],
                                            [
                                                "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519",
                                                "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"
                                            ],
                                            [
                                                "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab",
                                                "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"
                                            ],
                                            [
                                                "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca",
                                                "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"
                                            ],
                                            [
                                                "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf",
                                                "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"
                                            ],
                                            [
                                                "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610",
                                                "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"
                                            ],
                                            [
                                                "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4",
                                                "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"
                                            ],
                                            [
                                                "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c",
                                                "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"
                                            ],
                                            [
                                                "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940",
                                                "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"
                                            ],
                                            [
                                                "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980",
                                                "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"
                                            ],
                                            [
                                                "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3",
                                                "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"
                                            ],
                                            [
                                                "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf",
                                                "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"
                                            ],
                                            [
                                                "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63",
                                                "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"
                                            ],
                                            [
                                                "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448",
                                                "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"
                                            ],
                                            [
                                                "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf",
                                                "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"
                                            ],
                                            [
                                                "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5",
                                                "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"
                                            ],
                                            [
                                                "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6",
                                                "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"
                                            ],
                                            [
                                                "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5",
                                                "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"
                                            ],
                                            [
                                                "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99",
                                                "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"
                                            ],
                                            [
                                                "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51",
                                                "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"
                                            ],
                                            [
                                                "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5",
                                                "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"
                                            ],
                                            [
                                                "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5",
                                                "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"
                                            ],
                                            [
                                                "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997",
                                                "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"
                                            ],
                                            [
                                                "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881",
                                                "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"
                                            ],
                                            [
                                                "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5",
                                                "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"
                                            ],
                                            [
                                                "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66",
                                                "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"
                                            ],
                                            [
                                                "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726",
                                                "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"
                                            ],
                                            [
                                                "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede",
                                                "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"
                                            ],
                                            [
                                                "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94",
                                                "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"
                                            ],
                                            [
                                                "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31",
                                                "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"
                                            ],
                                            [
                                                "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51",
                                                "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"
                                            ],
                                            [
                                                "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252",
                                                "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"
                                            ],
                                            [
                                                "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5",
                                                "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"
                                            ],
                                            [
                                                "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b",
                                                "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"
                                            ],
                                            [
                                                "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4",
                                                "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"
                                            ],
                                            [
                                                "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f",
                                                "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"
                                            ],
                                            [
                                                "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889",
                                                "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"
                                            ],
                                            [
                                                "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246",
                                                "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"
                                            ],
                                            [
                                                "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984",
                                                "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"
                                            ],
                                            [
                                                "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a",
                                                "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"
                                            ],
                                            [
                                                "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030",
                                                "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"
                                            ],
                                            [
                                                "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197",
                                                "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"
                                            ],
                                            [
                                                "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593",
                                                "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"
                                            ],
                                            [
                                                "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef",
                                                "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"
                                            ],
                                            [
                                                "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38",
                                                "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"
                                            ],
                                            [
                                                "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a",
                                                "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"
                                            ],
                                            [
                                                "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111",
                                                "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"
                                            ],
                                            [
                                                "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502",
                                                "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"
                                            ],
                                            [
                                                "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea",
                                                "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"
                                            ],
                                            [
                                                "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26",
                                                "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"
                                            ],
                                            [
                                                "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986",
                                                "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"
                                            ],
                                            [
                                                "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e",
                                                "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"
                                            ],
                                            [
                                                "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4",
                                                "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"
                                            ],
                                            [
                                                "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda",
                                                "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"
                                            ],
                                            [
                                                "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859",
                                                "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"
                                            ],
                                            [
                                                "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f",
                                                "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"
                                            ],
                                            [
                                                "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c",
                                                "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"
                                            ],
                                            [
                                                "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942",
                                                "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"
                                            ],
                                            [
                                                "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a",
                                                "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"
                                            ],
                                            [
                                                "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80",
                                                "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"
                                            ],
                                            [
                                                "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d",
                                                "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"
                                            ],
                                            [
                                                "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1",
                                                "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"
                                            ],
                                            [
                                                "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63",
                                                "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"
                                            ],
                                            [
                                                "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352",
                                                "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"
                                            ],
                                            [
                                                "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193",
                                                "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"
                                            ],
                                            [
                                                "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00",
                                                "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"
                                            ],
                                            [
                                                "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58",
                                                "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"
                                            ],
                                            [
                                                "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7",
                                                "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"
                                            ],
                                            [
                                                "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8",
                                                "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"
                                            ],
                                            [
                                                "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e",
                                                "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"
                                            ],
                                            [
                                                "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d",
                                                "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"
                                            ],
                                            [
                                                "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b",
                                                "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"
                                            ],
                                            [
                                                "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f",
                                                "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"
                                            ],
                                            [
                                                "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6",
                                                "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"
                                            ],
                                            [
                                                "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297",
                                                "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"
                                            ],
                                            [
                                                "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a",
                                                "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"
                                            ],
                                            [
                                                "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c",
                                                "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"
                                            ],
                                            [
                                                "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52",
                                                "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"
                                            ],
                                            [
                                                "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb",
                                                "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"
                                            ],
                                            [
                                                "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065",
                                                "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"
                                            ],
                                            [
                                                "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917",
                                                "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"
                                            ],
                                            [
                                                "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9",
                                                "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"
                                            ],
                                            [
                                                "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3",
                                                "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"
                                            ],
                                            [
                                                "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57",
                                                "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"
                                            ],
                                            [
                                                "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66",
                                                "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"
                                            ],
                                            [
                                                "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8",
                                                "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"
                                            ],
                                            [
                                                "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721",
                                                "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"
                                            ],
                                            [
                                                "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180",
                                                "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"
                                            ]
                                        ]
                                    }
                                };
                            },
                            9185: (e, t, r)=>{
                                "use strict";
                                var n = t, i = r(4619), s = r(5578), o = r(4209);
                                n.assert = s, n.toArray = o.toArray, n.zero2 = o.zero2, n.toHex = o.toHex, n.encode = o.encode, n.getNAF = function(e, t, r) {
                                    var n, i = new Array(Math.max(e.bitLength(), r) + 1);
                                    for(n = 0; n < i.length; n += 1)i[n] = 0;
                                    var s = 1 << t + 1, o = e.clone();
                                    for(n = 0; n < i.length; n++){
                                        var a, c = o.andln(s - 1);
                                        o.isOdd() ? (a = c > (s >> 1) - 1 ? (s >> 1) - c : c, o.isubn(a)) : a = 0, i[n] = a, o.iushrn(1);
                                    }
                                    return i;
                                }, n.getJSF = function(e, t) {
                                    var r = [
                                        [],
                                        []
                                    ];
                                    e = e.clone(), t = t.clone();
                                    for(var n, i = 0, s = 0; e.cmpn(-i) > 0 || t.cmpn(-s) > 0;){
                                        var o, a, c = e.andln(3) + i & 3, h = t.andln(3) + s & 3;
                                        3 === c && (c = -1), 3 === h && (h = -1), o = 1 & c ? 3 != (n = e.andln(7) + i & 7) && 5 !== n || 2 !== h ? c : -c : 0, r[0].push(o), a = 1 & h ? 3 != (n = t.andln(7) + s & 7) && 5 !== n || 2 !== c ? h : -h : 0, r[1].push(a), 2 * i === o + 1 && (i = 1 - i), 2 * s === a + 1 && (s = 1 - s), e.iushrn(1), t.iushrn(1);
                                    }
                                    return r;
                                }, n.cachedProperty = function(e, t, r) {
                                    var n = "_" + t;
                                    e.prototype[t] = function() {
                                        return void 0 !== this[n] ? this[n] : this[n] = r.call(this);
                                    };
                                }, n.parseBytes = function(e) {
                                    return "string" == typeof e ? n.toArray(e, "hex") : e;
                                }, n.intFromLE = function(e) {
                                    return new i(e, "hex", "le");
                                };
                            },
                            2579: (e)=>{
                                "use strict";
                                var t = Object.prototype.hasOwnProperty, r = "~";
                                function n() {}
                                function i(e, t, r) {
                                    this.fn = e, this.context = t, this.once = r || !1;
                                }
                                function s(e, t, n, s, o) {
                                    if ("function" != typeof n) throw new TypeError("The listener must be a function");
                                    var a = new i(n, s || e, o), c = r ? r + t : t;
                                    return e._events[c] ? e._events[c].fn ? e._events[c] = [
                                        e._events[c],
                                        a
                                    ] : e._events[c].push(a) : (e._events[c] = a, e._eventsCount++), e;
                                }
                                function o(e, t) {
                                    0 == --e._eventsCount ? e._events = new n : delete e._events[t];
                                }
                                function a() {
                                    this._events = new n, this._eventsCount = 0;
                                }
                                Object.create && (n.prototype = Object.create(null), (new n).__proto__ || (r = !1)), a.prototype.eventNames = function() {
                                    var e, n, i = [];
                                    if (0 === this._eventsCount) return i;
                                    for(n in e = this._events)t.call(e, n) && i.push(r ? n.slice(1) : n);
                                    return Object.getOwnPropertySymbols ? i.concat(Object.getOwnPropertySymbols(e)) : i;
                                }, a.prototype.listeners = function(e) {
                                    var t = r ? r + e : e, n = this._events[t];
                                    if (!n) return [];
                                    if (n.fn) return [
                                        n.fn
                                    ];
                                    for(var i = 0, s = n.length, o = new Array(s); i < s; i++)o[i] = n[i].fn;
                                    return o;
                                }, a.prototype.listenerCount = function(e) {
                                    var t = r ? r + e : e, n = this._events[t];
                                    return n ? n.fn ? 1 : n.length : 0;
                                }, a.prototype.emit = function(e, t, n, i, s, o) {
                                    var a = r ? r + e : e;
                                    if (!this._events[a]) return !1;
                                    var c, h, u = this._events[a], d = arguments.length;
                                    if (u.fn) {
                                        switch(u.once && this.removeListener(e, u.fn, void 0, !0), d){
                                            case 1:
                                                return u.fn.call(u.context), !0;
                                            case 2:
                                                return u.fn.call(u.context, t), !0;
                                            case 3:
                                                return u.fn.call(u.context, t, n), !0;
                                            case 4:
                                                return u.fn.call(u.context, t, n, i), !0;
                                            case 5:
                                                return u.fn.call(u.context, t, n, i, s), !0;
                                            case 6:
                                                return u.fn.call(u.context, t, n, i, s, o), !0;
                                        }
                                        for(h = 1, c = new Array(d - 1); h < d; h++)c[h - 1] = arguments[h];
                                        u.fn.apply(u.context, c);
                                    } else {
                                        var f, l = u.length;
                                        for(h = 0; h < l; h++)switch(u[h].once && this.removeListener(e, u[h].fn, void 0, !0), d){
                                            case 1:
                                                u[h].fn.call(u[h].context);
                                                break;
                                            case 2:
                                                u[h].fn.call(u[h].context, t);
                                                break;
                                            case 3:
                                                u[h].fn.call(u[h].context, t, n);
                                                break;
                                            case 4:
                                                u[h].fn.call(u[h].context, t, n, i);
                                                break;
                                            default:
                                                if (!c) for(f = 1, c = new Array(d - 1); f < d; f++)c[f - 1] = arguments[f];
                                                u[h].fn.apply(u[h].context, c);
                                        }
                                    }
                                    return !0;
                                }, a.prototype.on = function(e, t, r) {
                                    return s(this, e, t, r, !1);
                                }, a.prototype.once = function(e, t, r) {
                                    return s(this, e, t, r, !0);
                                }, a.prototype.removeListener = function(e, t, n, i) {
                                    var s = r ? r + e : e;
                                    if (!this._events[s]) return this;
                                    if (!t) return o(this, s), this;
                                    var a = this._events[s];
                                    if (a.fn) a.fn !== t || i && !a.once || n && a.context !== n || o(this, s);
                                    else {
                                        for(var c = 0, h = [], u = a.length; c < u; c++)(a[c].fn !== t || i && !a[c].once || n && a[c].context !== n) && h.push(a[c]);
                                        h.length ? this._events[s] = 1 === h.length ? h[0] : h : o(this, s);
                                    }
                                    return this;
                                }, a.prototype.removeAllListeners = function(e) {
                                    var t;
                                    return e ? (t = r ? r + e : e, this._events[t] && o(this, t)) : (this._events = new n, this._eventsCount = 0), this;
                                }, a.prototype.off = a.prototype.removeListener, a.prototype.addListener = a.prototype.on, a.prefixed = r, a.EventEmitter = a, e.exports = a;
                            },
                            381: (e)=>{
                                "use strict";
                                var t, r = "object" == typeof Reflect ? Reflect : null, n = r && "function" == typeof r.apply ? r.apply : function(e, t, r) {
                                    return Function.prototype.apply.call(e, t, r);
                                };
                                t = r && "function" == typeof r.ownKeys ? r.ownKeys : Object.getOwnPropertySymbols ? function(e) {
                                    return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e));
                                } : function(e) {
                                    return Object.getOwnPropertyNames(e);
                                };
                                var i = Number.isNaN || function(e) {
                                    return e != e;
                                };
                                function s() {
                                    s.init.call(this);
                                }
                                e.exports = s, e.exports.once = function(e, t) {
                                    return new Promise(function(r, n) {
                                        function i(r) {
                                            e.removeListener(t, s), n(r);
                                        }
                                        function s() {
                                            "function" == typeof e.removeListener && e.removeListener("error", i), r([].slice.call(arguments));
                                        }
                                        b(e, t, s, {
                                            once: !0
                                        }), "error" !== t && function(e, t) {
                                            "function" == typeof e.on && b(e, "error", t, {
                                                once: !0
                                            });
                                        }(e, i);
                                    });
                                }, s.EventEmitter = s, s.prototype._events = void 0, s.prototype._eventsCount = 0, s.prototype._maxListeners = void 0;
                                var o = 10;
                                function a(e) {
                                    if ("function" != typeof e) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e);
                                }
                                function c(e) {
                                    return void 0 === e._maxListeners ? s.defaultMaxListeners : e._maxListeners;
                                }
                                function h(e, t, r, n) {
                                    var i, s, o, h;
                                    if (a(r), void 0 === (s = e._events) ? (s = e._events = Object.create(null), e._eventsCount = 0) : (void 0 !== s.newListener && (e.emit("newListener", t, r.listener ? r.listener : r), s = e._events), o = s[t]), void 0 === o) o = s[t] = r, ++e._eventsCount;
                                    else if ("function" == typeof o ? o = s[t] = n ? [
                                        r,
                                        o
                                    ] : [
                                        o,
                                        r
                                    ] : n ? o.unshift(r) : o.push(r), (i = c(e)) > 0 && o.length > i && !o.warned) {
                                        o.warned = !0;
                                        var u = new Error("Possible EventEmitter memory leak detected. " + o.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                                        u.name = "MaxListenersExceededWarning", u.emitter = e, u.type = t, u.count = o.length, h = u, console && console.warn && console.warn(h);
                                    }
                                    return e;
                                }
                                function u() {
                                    if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
                                }
                                function d(e, t, r) {
                                    var n = {
                                        fired: !1,
                                        wrapFn: void 0,
                                        target: e,
                                        type: t,
                                        listener: r
                                    }, i = u.bind(n);
                                    return i.listener = r, n.wrapFn = i, i;
                                }
                                function f(e, t, r) {
                                    var n = e._events;
                                    if (void 0 === n) return [];
                                    var i = n[t];
                                    return void 0 === i ? [] : "function" == typeof i ? r ? [
                                        i.listener || i
                                    ] : [
                                        i
                                    ] : r ? function(e) {
                                        for(var t = new Array(e.length), r = 0; r < t.length; ++r)t[r] = e[r].listener || e[r];
                                        return t;
                                    }(i) : p(i, i.length);
                                }
                                function l(e) {
                                    var t = this._events;
                                    if (void 0 !== t) {
                                        var r = t[e];
                                        if ("function" == typeof r) return 1;
                                        if (void 0 !== r) return r.length;
                                    }
                                    return 0;
                                }
                                function p(e, t) {
                                    for(var r = new Array(t), n = 0; n < t; ++n)r[n] = e[n];
                                    return r;
                                }
                                function b(e, t, r, n) {
                                    if ("function" == typeof e.on) n.once ? e.once(t, r) : e.on(t, r);
                                    else {
                                        if ("function" != typeof e.addEventListener) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e);
                                        e.addEventListener(t, function i(s) {
                                            n.once && e.removeEventListener(t, i), r(s);
                                        });
                                    }
                                }
                                Object.defineProperty(s, "defaultMaxListeners", {
                                    enumerable: !0,
                                    get: function() {
                                        return o;
                                    },
                                    set: function(e) {
                                        if ("number" != typeof e || e < 0 || i(e)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
                                        o = e;
                                    }
                                }), s.init = function() {
                                    void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
                                }, s.prototype.setMaxListeners = function(e) {
                                    if ("number" != typeof e || e < 0 || i(e)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
                                    return this._maxListeners = e, this;
                                }, s.prototype.getMaxListeners = function() {
                                    return c(this);
                                }, s.prototype.emit = function(e) {
                                    for(var t = [], r = 1; r < arguments.length; r++)t.push(arguments[r]);
                                    var i = "error" === e, s = this._events;
                                    if (void 0 !== s) i = i && void 0 === s.error;
                                    else if (!i) return !1;
                                    if (i) {
                                        var o;
                                        if (t.length > 0 && (o = t[0]), o instanceof Error) throw o;
                                        var a = new Error("Unhandled error." + (o ? " (" + o.message + ")" : ""));
                                        throw a.context = o, a;
                                    }
                                    var c = s[e];
                                    if (void 0 === c) return !1;
                                    if ("function" == typeof c) n(c, this, t);
                                    else {
                                        var h = c.length, u = p(c, h);
                                        for(r = 0; r < h; ++r)n(u[r], this, t);
                                    }
                                    return !0;
                                }, s.prototype.addListener = function(e, t) {
                                    return h(this, e, t, !1);
                                }, s.prototype.on = s.prototype.addListener, s.prototype.prependListener = function(e, t) {
                                    return h(this, e, t, !0);
                                }, s.prototype.once = function(e, t) {
                                    return a(t), this.on(e, d(this, e, t)), this;
                                }, s.prototype.prependOnceListener = function(e, t) {
                                    return a(t), this.prependListener(e, d(this, e, t)), this;
                                }, s.prototype.removeListener = function(e, t) {
                                    var r, n, i, s, o;
                                    if (a(t), void 0 === (n = this._events)) return this;
                                    if (void 0 === (r = n[e])) return this;
                                    if (r === t || r.listener === t) 0 == --this._eventsCount ? this._events = Object.create(null) : (delete n[e], n.removeListener && this.emit("removeListener", e, r.listener || t));
                                    else if ("function" != typeof r) {
                                        for(i = -1, s = r.length - 1; s >= 0; s--)if (r[s] === t || r[s].listener === t) {
                                            o = r[s].listener, i = s;
                                            break;
                                        }
                                        if (i < 0) return this;
                                        0 === i ? r.shift() : function(e, t) {
                                            for(; t + 1 < e.length; t++)e[t] = e[t + 1];
                                            e.pop();
                                        }(r, i), 1 === r.length && (n[e] = r[0]), void 0 !== n.removeListener && this.emit("removeListener", e, o || t);
                                    }
                                    return this;
                                }, s.prototype.off = s.prototype.removeListener, s.prototype.removeAllListeners = function(e) {
                                    var t, r, n;
                                    if (void 0 === (r = this._events)) return this;
                                    if (void 0 === r.removeListener) return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== r[e] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete r[e]), this;
                                    if (0 === arguments.length) {
                                        var i, s = Object.keys(r);
                                        for(n = 0; n < s.length; ++n)"removeListener" !== (i = s[n]) && this.removeAllListeners(i);
                                        return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
                                    }
                                    if ("function" == typeof (t = r[e])) this.removeListener(e, t);
                                    else if (void 0 !== t) for(n = t.length - 1; n >= 0; n--)this.removeListener(e, t[n]);
                                    return this;
                                }, s.prototype.listeners = function(e) {
                                    return f(this, e, !0);
                                }, s.prototype.rawListeners = function(e) {
                                    return f(this, e, !1);
                                }, s.listenerCount = function(e, t) {
                                    return "function" == typeof e.listenerCount ? e.listenerCount(t) : l.call(e, t);
                                }, s.prototype.listenerCount = l, s.prototype.eventNames = function() {
                                    return this._eventsCount > 0 ? t(this._events) : [];
                                };
                            },
                            1804: (e, t, r)=>{
                                var n = r(6608).Buffer, i = r(5035);
                                e.exports = function(e, t, r, s) {
                                    if (n.isBuffer(e) || (e = n.from(e, "binary")), t && (n.isBuffer(t) || (t = n.from(t, "binary")), 8 !== t.length)) throw new RangeError("salt should be Buffer with 8 byte length");
                                    for(var o = r / 8, a = n.alloc(o), c = n.alloc(s || 0), h = n.alloc(0); o > 0 || s > 0;){
                                        var u = new i;
                                        u.update(h), u.update(e), t && u.update(t), h = u.digest();
                                        var d = 0;
                                        if (o > 0) {
                                            var f = a.length - o;
                                            d = Math.min(o, h.length), h.copy(a, f, 0, d), o -= d;
                                        }
                                        if (d < h.length && s > 0) {
                                            var l = c.length - s, p = Math.min(s, h.length - d);
                                            h.copy(c, l, d, d + p), s -= p;
                                        }
                                    }
                                    return h.fill(0), {
                                        key: a,
                                        iv: c
                                    };
                                };
                            },
                            800: (e, t, r)=>{
                                "use strict";
                                var n = r(6608).Buffer, i = r(1094).Transform;
                                function s(e) {
                                    i.call(this), this._block = n.allocUnsafe(e), this._blockSize = e, this._blockOffset = 0, this._length = [
                                        0,
                                        0,
                                        0,
                                        0
                                    ], this._finalized = !1;
                                }
                                r(1193)(s, i), s.prototype._transform = function(e, t, r) {
                                    var n = null;
                                    try {
                                        this.update(e, t);
                                    } catch (e) {
                                        n = e;
                                    }
                                    r(n);
                                }, s.prototype._flush = function(e) {
                                    var t = null;
                                    try {
                                        this.push(this.digest());
                                    } catch (e) {
                                        t = e;
                                    }
                                    e(t);
                                }, s.prototype.update = function(e, t) {
                                    if (function(e) {
                                        if (!n.isBuffer(e) && "string" != typeof e) throw new TypeError("Data must be a string or a buffer");
                                    }(e), this._finalized) throw new Error("Digest already called");
                                    n.isBuffer(e) || (e = n.from(e, t));
                                    for(var r = this._block, i = 0; this._blockOffset + e.length - i >= this._blockSize;){
                                        for(var s = this._blockOffset; s < this._blockSize;)r[s++] = e[i++];
                                        this._update(), this._blockOffset = 0;
                                    }
                                    for(; i < e.length;)r[this._blockOffset++] = e[i++];
                                    for(var o = 0, a = 8 * e.length; a > 0; ++o)this._length[o] += a, (a = this._length[o] / 4294967296 | 0) > 0 && (this._length[o] -= 4294967296 * a);
                                    return this;
                                }, s.prototype._update = function() {
                                    throw new Error("_update is not implemented");
                                }, s.prototype.digest = function(e) {
                                    if (this._finalized) throw new Error("Digest already called");
                                    this._finalized = !0;
                                    var t = this._digest();
                                    void 0 !== e && (t = t.toString(e)), this._block.fill(0), this._blockOffset = 0;
                                    for(var r = 0; r < 4; ++r)this._length[r] = 0;
                                    return t;
                                }, s.prototype._digest = function() {
                                    throw new Error("_digest is not implemented");
                                }, e.exports = s;
                            },
                            1631: (e, t, r)=>{
                                var n = t;
                                n.utils = r(7905), n.common = r(4427), n.sha = r(1822), n.ripemd = r(7317), n.hmac = r(7309), n.sha1 = n.sha.sha1, n.sha256 = n.sha.sha256, n.sha224 = n.sha.sha224, n.sha384 = n.sha.sha384, n.sha512 = n.sha.sha512, n.ripemd160 = n.ripemd.ripemd160;
                            },
                            4427: (e, t, r)=>{
                                "use strict";
                                var n = r(7905), i = r(5578);
                                function s() {
                                    this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
                                }
                                t.BlockHash = s, s.prototype.update = function(e, t) {
                                    if (e = n.toArray(e, t), this.pending ? this.pending = this.pending.concat(e) : this.pending = e, this.pendingTotal += e.length, this.pending.length >= this._delta8) {
                                        var r = (e = this.pending).length % this._delta8;
                                        this.pending = e.slice(e.length - r, e.length), 0 === this.pending.length && (this.pending = null), e = n.join32(e, 0, e.length - r, this.endian);
                                        for(var i = 0; i < e.length; i += this._delta32)this._update(e, i, i + this._delta32);
                                    }
                                    return this;
                                }, s.prototype.digest = function(e) {
                                    return this.update(this._pad()), i(null === this.pending), this._digest(e);
                                }, s.prototype._pad = function() {
                                    var e = this.pendingTotal, t = this._delta8, r = t - (e + this.padLength) % t, n = new Array(r + this.padLength);
                                    n[0] = 128;
                                    for(var i = 1; i < r; i++)n[i] = 0;
                                    if (e <<= 3, "big" === this.endian) {
                                        for(var s = 8; s < this.padLength; s++)n[i++] = 0;
                                        n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = e >>> 24 & 255, n[i++] = e >>> 16 & 255, n[i++] = e >>> 8 & 255, n[i++] = 255 & e;
                                    } else for(n[i++] = 255 & e, n[i++] = e >>> 8 & 255, n[i++] = e >>> 16 & 255, n[i++] = e >>> 24 & 255, n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = 0, s = 8; s < this.padLength; s++)n[i++] = 0;
                                    return n;
                                };
                            },
                            7309: (e, t, r)=>{
                                "use strict";
                                var n = r(7905), i = r(5578);
                                function s(e, t, r) {
                                    if (!(this instanceof s)) return new s(e, t, r);
                                    this.Hash = e, this.blockSize = e.blockSize / 8, this.outSize = e.outSize / 8, this.inner = null, this.outer = null, this._init(n.toArray(t, r));
                                }
                                e.exports = s, s.prototype._init = function(e) {
                                    e.length > this.blockSize && (e = (new this.Hash).update(e).digest()), i(e.length <= this.blockSize);
                                    for(var t = e.length; t < this.blockSize; t++)e.push(0);
                                    for(t = 0; t < e.length; t++)e[t] ^= 54;
                                    for(this.inner = (new this.Hash).update(e), t = 0; t < e.length; t++)e[t] ^= 106;
                                    this.outer = (new this.Hash).update(e);
                                }, s.prototype.update = function(e, t) {
                                    return this.inner.update(e, t), this;
                                }, s.prototype.digest = function(e) {
                                    return this.outer.update(this.inner.digest()), this.outer.digest(e);
                                };
                            },
                            7317: (e, t, r)=>{
                                "use strict";
                                var n = r(7905), i = r(4427), s = n.rotl32, o = n.sum32, a = n.sum32_3, c = n.sum32_4, h = i.BlockHash;
                                function u() {
                                    if (!(this instanceof u)) return new u;
                                    h.call(this), this.h = [
                                        1732584193,
                                        4023233417,
                                        2562383102,
                                        271733878,
                                        3285377520
                                    ], this.endian = "little";
                                }
                                function d(e, t, r, n) {
                                    return e <= 15 ? t ^ r ^ n : e <= 31 ? t & r | ~t & n : e <= 47 ? (t | ~r) ^ n : e <= 63 ? t & n | r & ~n : t ^ (r | ~n);
                                }
                                function f(e) {
                                    return e <= 15 ? 0 : e <= 31 ? 1518500249 : e <= 47 ? 1859775393 : e <= 63 ? 2400959708 : 2840853838;
                                }
                                function l(e) {
                                    return e <= 15 ? 1352829926 : e <= 31 ? 1548603684 : e <= 47 ? 1836072691 : e <= 63 ? 2053994217 : 0;
                                }
                                n.inherits(u, h), t.ripemd160 = u, u.blockSize = 512, u.outSize = 160, u.hmacStrength = 192, u.padLength = 64, u.prototype._update = function(e, t) {
                                    for(var r = this.h[0], n = this.h[1], i = this.h[2], h = this.h[3], u = this.h[4], y = r, v = n, w = i, _ = h, E = u, S = 0; S < 80; S++){
                                        var A = o(s(c(r, d(S, n, i, h), e[p[S] + t], f(S)), g[S]), u);
                                        r = u, u = h, h = s(i, 10), i = n, n = A, A = o(s(c(y, d(79 - S, v, w, _), e[b[S] + t], l(S)), m[S]), E), y = E, E = _, _ = s(w, 10), w = v, v = A;
                                    }
                                    A = a(this.h[1], i, _), this.h[1] = a(this.h[2], h, E), this.h[2] = a(this.h[3], u, y), this.h[3] = a(this.h[4], r, v), this.h[4] = a(this.h[0], n, w), this.h[0] = A;
                                }, u.prototype._digest = function(e) {
                                    return "hex" === e ? n.toHex32(this.h, "little") : n.split32(this.h, "little");
                                };
                                var p = [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9,
                                    10,
                                    11,
                                    12,
                                    13,
                                    14,
                                    15,
                                    7,
                                    4,
                                    13,
                                    1,
                                    10,
                                    6,
                                    15,
                                    3,
                                    12,
                                    0,
                                    9,
                                    5,
                                    2,
                                    14,
                                    11,
                                    8,
                                    3,
                                    10,
                                    14,
                                    4,
                                    9,
                                    15,
                                    8,
                                    1,
                                    2,
                                    7,
                                    0,
                                    6,
                                    13,
                                    11,
                                    5,
                                    12,
                                    1,
                                    9,
                                    11,
                                    10,
                                    0,
                                    8,
                                    12,
                                    4,
                                    13,
                                    3,
                                    7,
                                    15,
                                    14,
                                    5,
                                    6,
                                    2,
                                    4,
                                    0,
                                    5,
                                    9,
                                    7,
                                    12,
                                    2,
                                    10,
                                    14,
                                    1,
                                    3,
                                    8,
                                    11,
                                    6,
                                    15,
                                    13
                                ], b = [
                                    5,
                                    14,
                                    7,
                                    0,
                                    9,
                                    2,
                                    11,
                                    4,
                                    13,
                                    6,
                                    15,
                                    8,
                                    1,
                                    10,
                                    3,
                                    12,
                                    6,
                                    11,
                                    3,
                                    7,
                                    0,
                                    13,
                                    5,
                                    10,
                                    14,
                                    15,
                                    8,
                                    12,
                                    4,
                                    9,
                                    1,
                                    2,
                                    15,
                                    5,
                                    1,
                                    3,
                                    7,
                                    14,
                                    6,
                                    9,
                                    11,
                                    8,
                                    12,
                                    2,
                                    10,
                                    0,
                                    4,
                                    13,
                                    8,
                                    6,
                                    4,
                                    1,
                                    3,
                                    11,
                                    15,
                                    0,
                                    5,
                                    12,
                                    2,
                                    13,
                                    9,
                                    7,
                                    10,
                                    14,
                                    12,
                                    15,
                                    10,
                                    4,
                                    1,
                                    5,
                                    8,
                                    7,
                                    6,
                                    2,
                                    13,
                                    14,
                                    0,
                                    3,
                                    9,
                                    11
                                ], g = [
                                    11,
                                    14,
                                    15,
                                    12,
                                    5,
                                    8,
                                    7,
                                    9,
                                    11,
                                    13,
                                    14,
                                    15,
                                    6,
                                    7,
                                    9,
                                    8,
                                    7,
                                    6,
                                    8,
                                    13,
                                    11,
                                    9,
                                    7,
                                    15,
                                    7,
                                    12,
                                    15,
                                    9,
                                    11,
                                    7,
                                    13,
                                    12,
                                    11,
                                    13,
                                    6,
                                    7,
                                    14,
                                    9,
                                    13,
                                    15,
                                    14,
                                    8,
                                    13,
                                    6,
                                    5,
                                    12,
                                    7,
                                    5,
                                    11,
                                    12,
                                    14,
                                    15,
                                    14,
                                    15,
                                    9,
                                    8,
                                    9,
                                    14,
                                    5,
                                    6,
                                    8,
                                    6,
                                    5,
                                    12,
                                    9,
                                    15,
                                    5,
                                    11,
                                    6,
                                    8,
                                    13,
                                    12,
                                    5,
                                    12,
                                    13,
                                    14,
                                    11,
                                    8,
                                    5,
                                    6
                                ], m = [
                                    8,
                                    9,
                                    9,
                                    11,
                                    13,
                                    15,
                                    15,
                                    5,
                                    7,
                                    7,
                                    8,
                                    11,
                                    14,
                                    14,
                                    12,
                                    6,
                                    9,
                                    13,
                                    15,
                                    7,
                                    12,
                                    8,
                                    9,
                                    11,
                                    7,
                                    7,
                                    12,
                                    7,
                                    6,
                                    15,
                                    13,
                                    11,
                                    9,
                                    7,
                                    15,
                                    11,
                                    8,
                                    6,
                                    6,
                                    14,
                                    12,
                                    13,
                                    5,
                                    14,
                                    13,
                                    13,
                                    7,
                                    5,
                                    15,
                                    5,
                                    8,
                                    11,
                                    14,
                                    14,
                                    6,
                                    14,
                                    6,
                                    9,
                                    12,
                                    9,
                                    12,
                                    5,
                                    15,
                                    8,
                                    8,
                                    5,
                                    12,
                                    9,
                                    12,
                                    5,
                                    14,
                                    6,
                                    8,
                                    13,
                                    6,
                                    5,
                                    15,
                                    13,
                                    11,
                                    11
                                ];
                            },
                            1822: (e, t, r)=>{
                                "use strict";
                                t.sha1 = r(2750), t.sha224 = r(7485), t.sha256 = r(7292), t.sha384 = r(696), t.sha512 = r(8889);
                            },
                            2750: (e, t, r)=>{
                                "use strict";
                                var n = r(7905), i = r(4427), s = r(5660), o = n.rotl32, a = n.sum32, c = n.sum32_5, h = s.ft_1, u = i.BlockHash, d = [
                                    1518500249,
                                    1859775393,
                                    2400959708,
                                    3395469782
                                ];
                                function f() {
                                    if (!(this instanceof f)) return new f;
                                    u.call(this), this.h = [
                                        1732584193,
                                        4023233417,
                                        2562383102,
                                        271733878,
                                        3285377520
                                    ], this.W = new Array(80);
                                }
                                n.inherits(f, u), e.exports = f, f.blockSize = 512, f.outSize = 160, f.hmacStrength = 80, f.padLength = 64, f.prototype._update = function(e, t) {
                                    for(var r = this.W, n = 0; n < 16; n++)r[n] = e[t + n];
                                    for(; n < r.length; n++)r[n] = o(r[n - 3] ^ r[n - 8] ^ r[n - 14] ^ r[n - 16], 1);
                                    var i = this.h[0], s = this.h[1], u = this.h[2], f = this.h[3], l = this.h[4];
                                    for(n = 0; n < r.length; n++){
                                        var p = ~~(n / 20), b = c(o(i, 5), h(p, s, u, f), l, r[n], d[p]);
                                        l = f, f = u, u = o(s, 30), s = i, i = b;
                                    }
                                    this.h[0] = a(this.h[0], i), this.h[1] = a(this.h[1], s), this.h[2] = a(this.h[2], u), this.h[3] = a(this.h[3], f), this.h[4] = a(this.h[4], l);
                                }, f.prototype._digest = function(e) {
                                    return "hex" === e ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
                                };
                            },
                            7485: (e, t, r)=>{
                                "use strict";
                                var n = r(7905), i = r(7292);
                                function s() {
                                    if (!(this instanceof s)) return new s;
                                    i.call(this), this.h = [
                                        3238371032,
                                        914150663,
                                        812702999,
                                        4144912697,
                                        4290775857,
                                        1750603025,
                                        1694076839,
                                        3204075428
                                    ];
                                }
                                n.inherits(s, i), e.exports = s, s.blockSize = 512, s.outSize = 224, s.hmacStrength = 192, s.padLength = 64, s.prototype._digest = function(e) {
                                    return "hex" === e ? n.toHex32(this.h.slice(0, 7), "big") : n.split32(this.h.slice(0, 7), "big");
                                };
                            },
                            7292: (e, t, r)=>{
                                "use strict";
                                var n = r(7905), i = r(4427), s = r(5660), o = r(5578), a = n.sum32, c = n.sum32_4, h = n.sum32_5, u = s.ch32, d = s.maj32, f = s.s0_256, l = s.s1_256, p = s.g0_256, b = s.g1_256, g = i.BlockHash, m = [
                                    1116352408,
                                    1899447441,
                                    3049323471,
                                    3921009573,
                                    961987163,
                                    1508970993,
                                    2453635748,
                                    2870763221,
                                    3624381080,
                                    310598401,
                                    607225278,
                                    1426881987,
                                    1925078388,
                                    2162078206,
                                    2614888103,
                                    3248222580,
                                    3835390401,
                                    4022224774,
                                    264347078,
                                    604807628,
                                    770255983,
                                    1249150122,
                                    1555081692,
                                    1996064986,
                                    2554220882,
                                    2821834349,
                                    2952996808,
                                    3210313671,
                                    3336571891,
                                    3584528711,
                                    113926993,
                                    338241895,
                                    666307205,
                                    773529912,
                                    1294757372,
                                    1396182291,
                                    1695183700,
                                    1986661051,
                                    2177026350,
                                    2456956037,
                                    2730485921,
                                    2820302411,
                                    3259730800,
                                    3345764771,
                                    3516065817,
                                    3600352804,
                                    4094571909,
                                    275423344,
                                    430227734,
                                    506948616,
                                    659060556,
                                    883997877,
                                    958139571,
                                    1322822218,
                                    1537002063,
                                    1747873779,
                                    1955562222,
                                    2024104815,
                                    2227730452,
                                    2361852424,
                                    2428436474,
                                    2756734187,
                                    3204031479,
                                    3329325298
                                ];
                                function y() {
                                    if (!(this instanceof y)) return new y;
                                    g.call(this), this.h = [
                                        1779033703,
                                        3144134277,
                                        1013904242,
                                        2773480762,
                                        1359893119,
                                        2600822924,
                                        528734635,
                                        1541459225
                                    ], this.k = m, this.W = new Array(64);
                                }
                                n.inherits(y, g), e.exports = y, y.blockSize = 512, y.outSize = 256, y.hmacStrength = 192, y.padLength = 64, y.prototype._update = function(e, t) {
                                    for(var r = this.W, n = 0; n < 16; n++)r[n] = e[t + n];
                                    for(; n < r.length; n++)r[n] = c(b(r[n - 2]), r[n - 7], p(r[n - 15]), r[n - 16]);
                                    var i = this.h[0], s = this.h[1], g = this.h[2], m = this.h[3], y = this.h[4], v = this.h[5], w = this.h[6], _ = this.h[7];
                                    for(o(this.k.length === r.length), n = 0; n < r.length; n++){
                                        var E = h(_, l(y), u(y, v, w), this.k[n], r[n]), S = a(f(i), d(i, s, g));
                                        _ = w, w = v, v = y, y = a(m, E), m = g, g = s, s = i, i = a(E, S);
                                    }
                                    this.h[0] = a(this.h[0], i), this.h[1] = a(this.h[1], s), this.h[2] = a(this.h[2], g), this.h[3] = a(this.h[3], m), this.h[4] = a(this.h[4], y), this.h[5] = a(this.h[5], v), this.h[6] = a(this.h[6], w), this.h[7] = a(this.h[7], _);
                                }, y.prototype._digest = function(e) {
                                    return "hex" === e ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
                                };
                            },
                            696: (e, t, r)=>{
                                "use strict";
                                var n = r(7905), i = r(8889);
                                function s() {
                                    if (!(this instanceof s)) return new s;
                                    i.call(this), this.h = [
                                        3418070365,
                                        3238371032,
                                        1654270250,
                                        914150663,
                                        2438529370,
                                        812702999,
                                        355462360,
                                        4144912697,
                                        1731405415,
                                        4290775857,
                                        2394180231,
                                        1750603025,
                                        3675008525,
                                        1694076839,
                                        1203062813,
                                        3204075428
                                    ];
                                }
                                n.inherits(s, i), e.exports = s, s.blockSize = 1024, s.outSize = 384, s.hmacStrength = 192, s.padLength = 128, s.prototype._digest = function(e) {
                                    return "hex" === e ? n.toHex32(this.h.slice(0, 12), "big") : n.split32(this.h.slice(0, 12), "big");
                                };
                            },
                            8889: (e, t, r)=>{
                                "use strict";
                                var n = r(7905), i = r(4427), s = r(5578), o = n.rotr64_hi, a = n.rotr64_lo, c = n.shr64_hi, h = n.shr64_lo, u = n.sum64, d = n.sum64_hi, f = n.sum64_lo, l = n.sum64_4_hi, p = n.sum64_4_lo, b = n.sum64_5_hi, g = n.sum64_5_lo, m = i.BlockHash, y = [
                                    1116352408,
                                    3609767458,
                                    1899447441,
                                    602891725,
                                    3049323471,
                                    3964484399,
                                    3921009573,
                                    2173295548,
                                    961987163,
                                    4081628472,
                                    1508970993,
                                    3053834265,
                                    2453635748,
                                    2937671579,
                                    2870763221,
                                    3664609560,
                                    3624381080,
                                    2734883394,
                                    310598401,
                                    1164996542,
                                    607225278,
                                    1323610764,
                                    1426881987,
                                    3590304994,
                                    1925078388,
                                    4068182383,
                                    2162078206,
                                    991336113,
                                    2614888103,
                                    633803317,
                                    3248222580,
                                    3479774868,
                                    3835390401,
                                    2666613458,
                                    4022224774,
                                    944711139,
                                    264347078,
                                    2341262773,
                                    604807628,
                                    2007800933,
                                    770255983,
                                    1495990901,
                                    1249150122,
                                    1856431235,
                                    1555081692,
                                    3175218132,
                                    1996064986,
                                    2198950837,
                                    2554220882,
                                    3999719339,
                                    2821834349,
                                    766784016,
                                    2952996808,
                                    2566594879,
                                    3210313671,
                                    3203337956,
                                    3336571891,
                                    1034457026,
                                    3584528711,
                                    2466948901,
                                    113926993,
                                    3758326383,
                                    338241895,
                                    168717936,
                                    666307205,
                                    1188179964,
                                    773529912,
                                    1546045734,
                                    1294757372,
                                    1522805485,
                                    1396182291,
                                    2643833823,
                                    1695183700,
                                    2343527390,
                                    1986661051,
                                    1014477480,
                                    2177026350,
                                    1206759142,
                                    2456956037,
                                    344077627,
                                    2730485921,
                                    1290863460,
                                    2820302411,
                                    3158454273,
                                    3259730800,
                                    3505952657,
                                    3345764771,
                                    106217008,
                                    3516065817,
                                    3606008344,
                                    3600352804,
                                    1432725776,
                                    4094571909,
                                    1467031594,
                                    275423344,
                                    851169720,
                                    430227734,
                                    3100823752,
                                    506948616,
                                    1363258195,
                                    659060556,
                                    3750685593,
                                    883997877,
                                    3785050280,
                                    958139571,
                                    3318307427,
                                    1322822218,
                                    3812723403,
                                    1537002063,
                                    2003034995,
                                    1747873779,
                                    3602036899,
                                    1955562222,
                                    1575990012,
                                    2024104815,
                                    1125592928,
                                    2227730452,
                                    2716904306,
                                    2361852424,
                                    442776044,
                                    2428436474,
                                    593698344,
                                    2756734187,
                                    3733110249,
                                    3204031479,
                                    2999351573,
                                    3329325298,
                                    3815920427,
                                    3391569614,
                                    3928383900,
                                    3515267271,
                                    566280711,
                                    3940187606,
                                    3454069534,
                                    4118630271,
                                    4000239992,
                                    116418474,
                                    1914138554,
                                    174292421,
                                    2731055270,
                                    289380356,
                                    3203993006,
                                    460393269,
                                    320620315,
                                    685471733,
                                    587496836,
                                    852142971,
                                    1086792851,
                                    1017036298,
                                    365543100,
                                    1126000580,
                                    2618297676,
                                    1288033470,
                                    3409855158,
                                    1501505948,
                                    4234509866,
                                    1607167915,
                                    987167468,
                                    1816402316,
                                    1246189591
                                ];
                                function v() {
                                    if (!(this instanceof v)) return new v;
                                    m.call(this), this.h = [
                                        1779033703,
                                        4089235720,
                                        3144134277,
                                        2227873595,
                                        1013904242,
                                        4271175723,
                                        2773480762,
                                        1595750129,
                                        1359893119,
                                        2917565137,
                                        2600822924,
                                        725511199,
                                        528734635,
                                        4215389547,
                                        1541459225,
                                        327033209
                                    ], this.k = y, this.W = new Array(160);
                                }
                                function w(e, t, r, n, i) {
                                    var s = e & r ^ ~e & i;
                                    return s < 0 && (s += 4294967296), s;
                                }
                                function _(e, t, r, n, i, s) {
                                    var o = t & n ^ ~t & s;
                                    return o < 0 && (o += 4294967296), o;
                                }
                                function E(e, t, r, n, i) {
                                    var s = e & r ^ e & i ^ r & i;
                                    return s < 0 && (s += 4294967296), s;
                                }
                                function S(e, t, r, n, i, s) {
                                    var o = t & n ^ t & s ^ n & s;
                                    return o < 0 && (o += 4294967296), o;
                                }
                                function A(e, t) {
                                    var r = o(e, t, 28) ^ o(t, e, 2) ^ o(t, e, 7);
                                    return r < 0 && (r += 4294967296), r;
                                }
                                function M(e, t) {
                                    var r = a(e, t, 28) ^ a(t, e, 2) ^ a(t, e, 7);
                                    return r < 0 && (r += 4294967296), r;
                                }
                                function I(e, t) {
                                    var r = a(e, t, 14) ^ a(e, t, 18) ^ a(t, e, 9);
                                    return r < 0 && (r += 4294967296), r;
                                }
                                function T(e, t) {
                                    var r = o(e, t, 1) ^ o(e, t, 8) ^ c(e, t, 7);
                                    return r < 0 && (r += 4294967296), r;
                                }
                                function x(e, t) {
                                    var r = a(e, t, 1) ^ a(e, t, 8) ^ h(e, t, 7);
                                    return r < 0 && (r += 4294967296), r;
                                }
                                function C(e, t) {
                                    var r = a(e, t, 19) ^ a(t, e, 29) ^ h(e, t, 6);
                                    return r < 0 && (r += 4294967296), r;
                                }
                                n.inherits(v, m), e.exports = v, v.blockSize = 1024, v.outSize = 512, v.hmacStrength = 192, v.padLength = 128, v.prototype._prepareBlock = function(e, t) {
                                    for(var r = this.W, n = 0; n < 32; n++)r[n] = e[t + n];
                                    for(; n < r.length; n += 2){
                                        var i = (g = r[n - 4], m = r[n - 3], y = void 0, (y = o(g, m, 19) ^ o(m, g, 29) ^ c(g, m, 6)) < 0 && (y += 4294967296), y), s = C(r[n - 4], r[n - 3]), a = r[n - 14], h = r[n - 13], u = T(r[n - 30], r[n - 29]), d = x(r[n - 30], r[n - 29]), f = r[n - 32], b = r[n - 31];
                                        r[n] = l(i, s, a, h, u, d, f, b), r[n + 1] = p(i, s, a, h, u, d, f, b);
                                    }
                                    var g, m, y;
                                }, v.prototype._update = function(e, t) {
                                    this._prepareBlock(e, t);
                                    var r, n, i, a = this.W, c = this.h[0], h = this.h[1], l = this.h[2], p = this.h[3], m = this.h[4], y = this.h[5], v = this.h[6], T = this.h[7], x = this.h[8], C = this.h[9], R = this.h[10], k = this.h[11], P = this.h[12], O = this.h[13], N = this.h[14], U = this.h[15];
                                    s(this.k.length === a.length);
                                    for(var B = 0; B < a.length; B += 2){
                                        var L = N, j = U, D = (i = void 0, (i = o(r = x, n = C, 14) ^ o(r, n, 18) ^ o(n, r, 9)) < 0 && (i += 4294967296), i), q = I(x, C), F = w(x, 0, R, 0, P), H = _(0, C, 0, k, 0, O), z = this.k[B], V = this.k[B + 1], $ = a[B], K = a[B + 1], G = b(L, j, D, q, F, H, z, V, $, K), W = g(L, j, D, q, F, H, z, V, $, K);
                                        L = A(c, h), j = M(c, h), D = E(c, 0, l, 0, m), q = S(0, h, 0, p, 0, y);
                                        var J = d(L, j, D, q), Y = f(L, j, D, q);
                                        N = P, U = O, P = R, O = k, R = x, k = C, x = d(v, T, G, W), C = f(T, T, G, W), v = m, T = y, m = l, y = p, l = c, p = h, c = d(G, W, J, Y), h = f(G, W, J, Y);
                                    }
                                    u(this.h, 0, c, h), u(this.h, 2, l, p), u(this.h, 4, m, y), u(this.h, 6, v, T), u(this.h, 8, x, C), u(this.h, 10, R, k), u(this.h, 12, P, O), u(this.h, 14, N, U);
                                }, v.prototype._digest = function(e) {
                                    return "hex" === e ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
                                };
                            },
                            5660: (e, t, r)=>{
                                "use strict";
                                var n = r(7905).rotr32;
                                function i(e, t, r) {
                                    return e & t ^ ~e & r;
                                }
                                function s(e, t, r) {
                                    return e & t ^ e & r ^ t & r;
                                }
                                function o(e, t, r) {
                                    return e ^ t ^ r;
                                }
                                t.ft_1 = function(e, t, r, n) {
                                    return 0 === e ? i(t, r, n) : 1 === e || 3 === e ? o(t, r, n) : 2 === e ? s(t, r, n) : void 0;
                                }, t.ch32 = i, t.maj32 = s, t.p32 = o, t.s0_256 = function(e) {
                                    return n(e, 2) ^ n(e, 13) ^ n(e, 22);
                                }, t.s1_256 = function(e) {
                                    return n(e, 6) ^ n(e, 11) ^ n(e, 25);
                                }, t.g0_256 = function(e) {
                                    return n(e, 7) ^ n(e, 18) ^ e >>> 3;
                                }, t.g1_256 = function(e) {
                                    return n(e, 17) ^ n(e, 19) ^ e >>> 10;
                                };
                            },
                            7905: (e, t, r)=>{
                                "use strict";
                                var n = r(5578), i = r(1193);
                                function s(e, t) {
                                    return 55296 == (64512 & e.charCodeAt(t)) && !(t < 0 || t + 1 >= e.length) && 56320 == (64512 & e.charCodeAt(t + 1));
                                }
                                function o(e) {
                                    return (e >>> 24 | e >>> 8 & 65280 | e << 8 & 16711680 | (255 & e) << 24) >>> 0;
                                }
                                function a(e) {
                                    return 1 === e.length ? "0" + e : e;
                                }
                                function c(e) {
                                    return 7 === e.length ? "0" + e : 6 === e.length ? "00" + e : 5 === e.length ? "000" + e : 4 === e.length ? "0000" + e : 3 === e.length ? "00000" + e : 2 === e.length ? "000000" + e : 1 === e.length ? "0000000" + e : e;
                                }
                                t.inherits = i, t.toArray = function(e, t) {
                                    if (Array.isArray(e)) return e.slice();
                                    if (!e) return [];
                                    var r = [];
                                    if ("string" == typeof e) if (t) {
                                        if ("hex" === t) for((e = e.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e = "0" + e), i = 0; i < e.length; i += 2)r.push(parseInt(e[i] + e[i + 1], 16));
                                    } else for(var n = 0, i = 0; i < e.length; i++){
                                        var o = e.charCodeAt(i);
                                        o < 128 ? r[n++] = o : o < 2048 ? (r[n++] = o >> 6 | 192, r[n++] = 63 & o | 128) : s(e, i) ? (o = 65536 + ((1023 & o) << 10) + (1023 & e.charCodeAt(++i)), r[n++] = o >> 18 | 240, r[n++] = o >> 12 & 63 | 128, r[n++] = o >> 6 & 63 | 128, r[n++] = 63 & o | 128) : (r[n++] = o >> 12 | 224, r[n++] = o >> 6 & 63 | 128, r[n++] = 63 & o | 128);
                                    }
                                    else for(i = 0; i < e.length; i++)r[i] = 0 | e[i];
                                    return r;
                                }, t.toHex = function(e) {
                                    for(var t = "", r = 0; r < e.length; r++)t += a(e[r].toString(16));
                                    return t;
                                }, t.htonl = o, t.toHex32 = function(e, t) {
                                    for(var r = "", n = 0; n < e.length; n++){
                                        var i = e[n];
                                        "little" === t && (i = o(i)), r += c(i.toString(16));
                                    }
                                    return r;
                                }, t.zero2 = a, t.zero8 = c, t.join32 = function(e, t, r, i) {
                                    var s = r - t;
                                    n(s % 4 == 0);
                                    for(var o = new Array(s / 4), a = 0, c = t; a < o.length; a++, c += 4){
                                        var h;
                                        h = "big" === i ? e[c] << 24 | e[c + 1] << 16 | e[c + 2] << 8 | e[c + 3] : e[c + 3] << 24 | e[c + 2] << 16 | e[c + 1] << 8 | e[c], o[a] = h >>> 0;
                                    }
                                    return o;
                                }, t.split32 = function(e, t) {
                                    for(var r = new Array(4 * e.length), n = 0, i = 0; n < e.length; n++, i += 4){
                                        var s = e[n];
                                        "big" === t ? (r[i] = s >>> 24, r[i + 1] = s >>> 16 & 255, r[i + 2] = s >>> 8 & 255, r[i + 3] = 255 & s) : (r[i + 3] = s >>> 24, r[i + 2] = s >>> 16 & 255, r[i + 1] = s >>> 8 & 255, r[i] = 255 & s);
                                    }
                                    return r;
                                }, t.rotr32 = function(e, t) {
                                    return e >>> t | e << 32 - t;
                                }, t.rotl32 = function(e, t) {
                                    return e << t | e >>> 32 - t;
                                }, t.sum32 = function(e, t) {
                                    return e + t >>> 0;
                                }, t.sum32_3 = function(e, t, r) {
                                    return e + t + r >>> 0;
                                }, t.sum32_4 = function(e, t, r, n) {
                                    return e + t + r + n >>> 0;
                                }, t.sum32_5 = function(e, t, r, n, i) {
                                    return e + t + r + n + i >>> 0;
                                }, t.sum64 = function(e, t, r, n) {
                                    var i = e[t], s = n + e[t + 1] >>> 0, o = (s < n ? 1 : 0) + r + i;
                                    e[t] = o >>> 0, e[t + 1] = s;
                                }, t.sum64_hi = function(e, t, r, n) {
                                    return (t + n >>> 0 < t ? 1 : 0) + e + r >>> 0;
                                }, t.sum64_lo = function(e, t, r, n) {
                                    return t + n >>> 0;
                                }, t.sum64_4_hi = function(e, t, r, n, i, s, o, a) {
                                    var c = 0, h = t;
                                    return c += (h = h + n >>> 0) < t ? 1 : 0, c += (h = h + s >>> 0) < s ? 1 : 0, e + r + i + o + (c += (h = h + a >>> 0) < a ? 1 : 0) >>> 0;
                                }, t.sum64_4_lo = function(e, t, r, n, i, s, o, a) {
                                    return t + n + s + a >>> 0;
                                }, t.sum64_5_hi = function(e, t, r, n, i, s, o, a, c, h) {
                                    var u = 0, d = t;
                                    return u += (d = d + n >>> 0) < t ? 1 : 0, u += (d = d + s >>> 0) < s ? 1 : 0, u += (d = d + a >>> 0) < a ? 1 : 0, e + r + i + o + c + (u += (d = d + h >>> 0) < h ? 1 : 0) >>> 0;
                                }, t.sum64_5_lo = function(e, t, r, n, i, s, o, a, c, h) {
                                    return t + n + s + a + h >>> 0;
                                }, t.rotr64_hi = function(e, t, r) {
                                    return (t << 32 - r | e >>> r) >>> 0;
                                }, t.rotr64_lo = function(e, t, r) {
                                    return (e << 32 - r | t >>> r) >>> 0;
                                }, t.shr64_hi = function(e, t, r) {
                                    return e >>> r;
                                }, t.shr64_lo = function(e, t, r) {
                                    return (e << 32 - r | t >>> r) >>> 0;
                                };
                            },
                            2519: (e, t, r)=>{
                                "use strict";
                                var n = r(1631), i = r(4209), s = r(5578);
                                function o(e) {
                                    if (!(this instanceof o)) return new o(e);
                                    this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
                                    var t = i.toArray(e.entropy, e.entropyEnc || "hex"), r = i.toArray(e.nonce, e.nonceEnc || "hex"), n = i.toArray(e.pers, e.persEnc || "hex");
                                    s(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(t, r, n);
                                }
                                e.exports = o, o.prototype._init = function(e, t, r) {
                                    var n = e.concat(t).concat(r);
                                    this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
                                    for(var i = 0; i < this.V.length; i++)this.K[i] = 0, this.V[i] = 1;
                                    this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656;
                                }, o.prototype._hmac = function() {
                                    return new n.hmac(this.hash, this.K);
                                }, o.prototype._update = function(e) {
                                    var t = this._hmac().update(this.V).update([
                                        0
                                    ]);
                                    e && (t = t.update(e)), this.K = t.digest(), this.V = this._hmac().update(this.V).digest(), e && (this.K = this._hmac().update(this.V).update([
                                        1
                                    ]).update(e).digest(), this.V = this._hmac().update(this.V).digest());
                                }, o.prototype.reseed = function(e, t, r, n) {
                                    "string" != typeof t && (n = r, r = t, t = null), e = i.toArray(e, t), r = i.toArray(r, n), s(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e.concat(r || [])), this._reseed = 1;
                                }, o.prototype.generate = function(e, t, r, n) {
                                    if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
                                    "string" != typeof t && (n = r, r = t, t = null), r && (r = i.toArray(r, n || "hex"), this._update(r));
                                    for(var s = []; s.length < e;)this.V = this._hmac().update(this.V).digest(), s = s.concat(this.V);
                                    var o = s.slice(0, e);
                                    return this._update(r), this._reseed++, i.encode(o, t);
                                };
                            },
                            3328: (e, t)=>{
                                t.read = function(e, t, r, n, i) {
                                    var s, o, a = 8 * i - n - 1, c = (1 << a) - 1, h = c >> 1, u = -7, d = r ? i - 1 : 0, f = r ? -1 : 1, l = e[t + d];
                                    for(d += f, s = l & (1 << -u) - 1, l >>= -u, u += a; u > 0; s = 256 * s + e[t + d], d += f, u -= 8);
                                    for(o = s & (1 << -u) - 1, s >>= -u, u += n; u > 0; o = 256 * o + e[t + d], d += f, u -= 8);
                                    if (0 === s) s = 1 - h;
                                    else {
                                        if (s === c) return o ? NaN : 1 / 0 * (l ? -1 : 1);
                                        o += Math.pow(2, n), s -= h;
                                    }
                                    return (l ? -1 : 1) * o * Math.pow(2, s - n);
                                }, t.write = function(e, t, r, n, i, s) {
                                    var o, a, c, h = 8 * s - i - 1, u = (1 << h) - 1, d = u >> 1, f = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, l = n ? 0 : s - 1, p = n ? 1 : -1, b = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
                                    for(t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (a = isNaN(t) ? 1 : 0, o = u) : (o = Math.floor(Math.log(t) / Math.LN2), t * (c = Math.pow(2, -o)) < 1 && (o--, c *= 2), (t += o + d >= 1 ? f / c : f * Math.pow(2, 1 - d)) * c >= 2 && (o++, c /= 2), o + d >= u ? (a = 0, o = u) : o + d >= 1 ? (a = (t * c - 1) * Math.pow(2, i), o += d) : (a = t * Math.pow(2, d - 1) * Math.pow(2, i), o = 0)); i >= 8; e[r + l] = 255 & a, l += p, a /= 256, i -= 8);
                                    for(o = o << i | a, h += i; h > 0; e[r + l] = 255 & o, l += p, o /= 256, h -= 8);
                                    e[r + l - p] |= 128 * b;
                                };
                            },
                            1193: (e)=>{
                                "function" == typeof Object.create ? e.exports = function(e, t) {
                                    t && (e.super_ = t, e.prototype = Object.create(t.prototype, {
                                        constructor: {
                                            value: e,
                                            enumerable: !1,
                                            writable: !0,
                                            configurable: !0
                                        }
                                    }));
                                } : e.exports = function(e, t) {
                                    if (t) {
                                        e.super_ = t;
                                        var r = function() {};
                                        r.prototype = t.prototype, e.prototype = new r, e.prototype.constructor = e;
                                    }
                                };
                            },
                            5035: (e, t, r)=>{
                                "use strict";
                                var n = r(1193), i = r(800), s = r(6608).Buffer, o = new Array(16);
                                function a() {
                                    i.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;
                                }
                                function c(e, t) {
                                    return e << t | e >>> 32 - t;
                                }
                                function h(e, t, r, n, i, s, o) {
                                    return c(e + (t & r | ~t & n) + i + s | 0, o) + t | 0;
                                }
                                function u(e, t, r, n, i, s, o) {
                                    return c(e + (t & n | r & ~n) + i + s | 0, o) + t | 0;
                                }
                                function d(e, t, r, n, i, s, o) {
                                    return c(e + (t ^ r ^ n) + i + s | 0, o) + t | 0;
                                }
                                function f(e, t, r, n, i, s, o) {
                                    return c(e + (r ^ (t | ~n)) + i + s | 0, o) + t | 0;
                                }
                                n(a, i), a.prototype._update = function() {
                                    for(var e = o, t = 0; t < 16; ++t)e[t] = this._block.readInt32LE(4 * t);
                                    var r = this._a, n = this._b, i = this._c, s = this._d;
                                    r = h(r, n, i, s, e[0], 3614090360, 7), s = h(s, r, n, i, e[1], 3905402710, 12), i = h(i, s, r, n, e[2], 606105819, 17), n = h(n, i, s, r, e[3], 3250441966, 22), r = h(r, n, i, s, e[4], 4118548399, 7), s = h(s, r, n, i, e[5], 1200080426, 12), i = h(i, s, r, n, e[6], 2821735955, 17), n = h(n, i, s, r, e[7], 4249261313, 22), r = h(r, n, i, s, e[8], 1770035416, 7), s = h(s, r, n, i, e[9], 2336552879, 12), i = h(i, s, r, n, e[10], 4294925233, 17), n = h(n, i, s, r, e[11], 2304563134, 22), r = h(r, n, i, s, e[12], 1804603682, 7), s = h(s, r, n, i, e[13], 4254626195, 12), i = h(i, s, r, n, e[14], 2792965006, 17), r = u(r, n = h(n, i, s, r, e[15], 1236535329, 22), i, s, e[1], 4129170786, 5), s = u(s, r, n, i, e[6], 3225465664, 9), i = u(i, s, r, n, e[11], 643717713, 14), n = u(n, i, s, r, e[0], 3921069994, 20), r = u(r, n, i, s, e[5], 3593408605, 5), s = u(s, r, n, i, e[10], 38016083, 9), i = u(i, s, r, n, e[15], 3634488961, 14), n = u(n, i, s, r, e[4], 3889429448, 20), r = u(r, n, i, s, e[9], 568446438, 5), s = u(s, r, n, i, e[14], 3275163606, 9), i = u(i, s, r, n, e[3], 4107603335, 14), n = u(n, i, s, r, e[8], 1163531501, 20), r = u(r, n, i, s, e[13], 2850285829, 5), s = u(s, r, n, i, e[2], 4243563512, 9), i = u(i, s, r, n, e[7], 1735328473, 14), r = d(r, n = u(n, i, s, r, e[12], 2368359562, 20), i, s, e[5], 4294588738, 4), s = d(s, r, n, i, e[8], 2272392833, 11), i = d(i, s, r, n, e[11], 1839030562, 16), n = d(n, i, s, r, e[14], 4259657740, 23), r = d(r, n, i, s, e[1], 2763975236, 4), s = d(s, r, n, i, e[4], 1272893353, 11), i = d(i, s, r, n, e[7], 4139469664, 16), n = d(n, i, s, r, e[10], 3200236656, 23), r = d(r, n, i, s, e[13], 681279174, 4), s = d(s, r, n, i, e[0], 3936430074, 11), i = d(i, s, r, n, e[3], 3572445317, 16), n = d(n, i, s, r, e[6], 76029189, 23), r = d(r, n, i, s, e[9], 3654602809, 4), s = d(s, r, n, i, e[12], 3873151461, 11), i = d(i, s, r, n, e[15], 530742520, 16), r = f(r, n = d(n, i, s, r, e[2], 3299628645, 23), i, s, e[0], 4096336452, 6), s = f(s, r, n, i, e[7], 1126891415, 10), i = f(i, s, r, n, e[14], 2878612391, 15), n = f(n, i, s, r, e[5], 4237533241, 21), r = f(r, n, i, s, e[12], 1700485571, 6), s = f(s, r, n, i, e[3], 2399980690, 10), i = f(i, s, r, n, e[10], 4293915773, 15), n = f(n, i, s, r, e[1], 2240044497, 21), r = f(r, n, i, s, e[8], 1873313359, 6), s = f(s, r, n, i, e[15], 4264355552, 10), i = f(i, s, r, n, e[6], 2734768916, 15), n = f(n, i, s, r, e[13], 1309151649, 21), r = f(r, n, i, s, e[4], 4149444226, 6), s = f(s, r, n, i, e[11], 3174756917, 10), i = f(i, s, r, n, e[2], 718787259, 15), n = f(n, i, s, r, e[9], 3951481745, 21), this._a = this._a + r | 0, this._b = this._b + n | 0, this._c = this._c + i | 0, this._d = this._d + s | 0;
                                }, a.prototype._digest = function() {
                                    this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
                                    var e = s.allocUnsafe(16);
                                    return e.writeInt32LE(this._a, 0), e.writeInt32LE(this._b, 4), e.writeInt32LE(this._c, 8), e.writeInt32LE(this._d, 12), e;
                                }, e.exports = a;
                            },
                            4442: (e, t, r)=>{
                                var n = r(4619), i = r(5442);
                                function s(e) {
                                    this.rand = e || new i.Rand;
                                }
                                e.exports = s, s.create = function(e) {
                                    return new s(e);
                                }, s.prototype._randbelow = function(e) {
                                    var t = e.bitLength(), r = Math.ceil(t / 8);
                                    do {
                                        var i = new n(this.rand.generate(r));
                                    }while (i.cmp(e) >= 0)
                                    return i;
                                }, s.prototype._randrange = function(e, t) {
                                    var r = t.sub(e);
                                    return e.add(this._randbelow(r));
                                }, s.prototype.test = function(e, t, r) {
                                    var i = e.bitLength(), s = n.mont(e), o = new n(1).toRed(s);
                                    t || (t = Math.max(1, i / 48 | 0));
                                    for(var a = e.subn(1), c = 0; !a.testn(c); c++);
                                    for(var h = e.shrn(c), u = a.toRed(s); t > 0; t--){
                                        var d = this._randrange(new n(2), a);
                                        r && r(d);
                                        var f = d.toRed(s).redPow(h);
                                        if (0 !== f.cmp(o) && 0 !== f.cmp(u)) {
                                            for(var l = 1; l < c; l++){
                                                if (0 === (f = f.redSqr()).cmp(o)) return !1;
                                                if (0 === f.cmp(u)) break;
                                            }
                                            if (l === c) return !1;
                                        }
                                    }
                                    return !0;
                                }, s.prototype.getDivisor = function(e, t) {
                                    var r = e.bitLength(), i = n.mont(e), s = new n(1).toRed(i);
                                    t || (t = Math.max(1, r / 48 | 0));
                                    for(var o = e.subn(1), a = 0; !o.testn(a); a++);
                                    for(var c = e.shrn(a), h = o.toRed(i); t > 0; t--){
                                        var u = this._randrange(new n(2), o), d = e.gcd(u);
                                        if (0 !== d.cmpn(1)) return d;
                                        var f = u.toRed(i).redPow(c);
                                        if (0 !== f.cmp(s) && 0 !== f.cmp(h)) {
                                            for(var l = 1; l < a; l++){
                                                if (0 === (f = f.redSqr()).cmp(s)) return f.fromRed().subn(1).gcd(e);
                                                if (0 === f.cmp(h)) break;
                                            }
                                            if (l === a) return (f = f.redSqr()).fromRed().subn(1).gcd(e);
                                        }
                                    }
                                    return !1;
                                };
                            },
                            5578: (e)=>{
                                function t(e, t) {
                                    if (!e) throw new Error(t || "Assertion failed");
                                }
                                e.exports = t, t.equal = function(e, t, r) {
                                    if (e != t) throw new Error(r || "Assertion failed: " + e + " != " + t);
                                };
                            },
                            4209: (e, t)=>{
                                "use strict";
                                var r = t;
                                function n(e) {
                                    return 1 === e.length ? "0" + e : e;
                                }
                                function i(e) {
                                    for(var t = "", r = 0; r < e.length; r++)t += n(e[r].toString(16));
                                    return t;
                                }
                                r.toArray = function(e, t) {
                                    if (Array.isArray(e)) return e.slice();
                                    if (!e) return [];
                                    var r = [];
                                    if ("string" != typeof e) {
                                        for(var n = 0; n < e.length; n++)r[n] = 0 | e[n];
                                        return r;
                                    }
                                    if ("hex" === t) for((e = e.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (e = "0" + e), n = 0; n < e.length; n += 2)r.push(parseInt(e[n] + e[n + 1], 16));
                                    else for(n = 0; n < e.length; n++){
                                        var i = e.charCodeAt(n), s = i >> 8, o = 255 & i;
                                        s ? r.push(s, o) : r.push(o);
                                    }
                                    return r;
                                }, r.zero2 = n, r.toHex = i, r.encode = function(e, t) {
                                    return "hex" === t ? i(e) : e;
                                };
                            },
                            5651: (e, t, r)=>{
                                "use strict";
                                var n = r(5737);
                                t.certificate = r(7467);
                                var i = n.define("RSAPrivateKey", function() {
                                    this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
                                });
                                t.RSAPrivateKey = i;
                                var s = n.define("RSAPublicKey", function() {
                                    this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
                                });
                                t.RSAPublicKey = s;
                                var o = n.define("SubjectPublicKeyInfo", function() {
                                    this.seq().obj(this.key("algorithm").use(a), this.key("subjectPublicKey").bitstr());
                                });
                                t.PublicKey = o;
                                var a = n.define("AlgorithmIdentifier", function() {
                                    this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
                                }), c = n.define("PrivateKeyInfo", function() {
                                    this.seq().obj(this.key("version").int(), this.key("algorithm").use(a), this.key("subjectPrivateKey").octstr());
                                });
                                t.PrivateKey = c;
                                var h = n.define("EncryptedPrivateKeyInfo", function() {
                                    this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
                                });
                                t.EncryptedPrivateKey = h;
                                var u = n.define("DSAPrivateKey", function() {
                                    this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
                                });
                                t.DSAPrivateKey = u, t.DSAparam = n.define("DSAparam", function() {
                                    this.int();
                                });
                                var d = n.define("ECPrivateKey", function() {
                                    this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(f), this.key("publicKey").optional().explicit(1).bitstr());
                                });
                                t.ECPrivateKey = d;
                                var f = n.define("ECParameters", function() {
                                    this.choice({
                                        namedCurve: this.objid()
                                    });
                                });
                                t.signature = n.define("signature", function() {
                                    this.seq().obj(this.key("r").int(), this.key("s").int());
                                });
                            },
                            7467: (e, t, r)=>{
                                "use strict";
                                var n = r(5737), i = n.define("Time", function() {
                                    this.choice({
                                        utcTime: this.utctime(),
                                        generalTime: this.gentime()
                                    });
                                }), s = n.define("AttributeTypeValue", function() {
                                    this.seq().obj(this.key("type").objid(), this.key("value").any());
                                }), o = n.define("AlgorithmIdentifier", function() {
                                    this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
                                }), a = n.define("SubjectPublicKeyInfo", function() {
                                    this.seq().obj(this.key("algorithm").use(o), this.key("subjectPublicKey").bitstr());
                                }), c = n.define("RelativeDistinguishedName", function() {
                                    this.setof(s);
                                }), h = n.define("RDNSequence", function() {
                                    this.seqof(c);
                                }), u = n.define("Name", function() {
                                    this.choice({
                                        rdnSequence: this.use(h)
                                    });
                                }), d = n.define("Validity", function() {
                                    this.seq().obj(this.key("notBefore").use(i), this.key("notAfter").use(i));
                                }), f = n.define("Extension", function() {
                                    this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(!1), this.key("extnValue").octstr());
                                }), l = n.define("TBSCertificate", function() {
                                    this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(o), this.key("issuer").use(u), this.key("validity").use(d), this.key("subject").use(u), this.key("subjectPublicKeyInfo").use(a), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(f).optional());
                                }), p = n.define("X509Certificate", function() {
                                    this.seq().obj(this.key("tbsCertificate").use(l), this.key("signatureAlgorithm").use(o), this.key("signatureValue").bitstr());
                                });
                                e.exports = p;
                            },
                            2011: (e, t, r)=>{
                                var n = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m, i = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m, s = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m, o = r(1804), a = r(5007), c = r(6608).Buffer;
                                e.exports = function(e, t) {
                                    var r, h = e.toString(), u = h.match(n);
                                    if (u) {
                                        var d = "aes" + u[1], f = c.from(u[2], "hex"), l = c.from(u[3].replace(/[\r\n]/g, ""), "base64"), p = o(t, f.slice(0, 8), parseInt(u[1], 10)).key, b = [], g = a.createDecipheriv(d, p, f);
                                        b.push(g.update(l)), b.push(g.final()), r = c.concat(b);
                                    } else {
                                        var m = h.match(s);
                                        r = c.from(m[2].replace(/[\r\n]/g, ""), "base64");
                                    }
                                    return {
                                        tag: h.match(i)[1],
                                        data: r
                                    };
                                };
                            },
                            780: (e, t, r)=>{
                                var n = r(5651), i = r(2853), s = r(2011), o = r(5007), a = r(3166), c = r(6608).Buffer;
                                function h(e) {
                                    var t;
                                    "object" != typeof e || c.isBuffer(e) || (t = e.passphrase, e = e.key), "string" == typeof e && (e = c.from(e));
                                    var r, h, u = s(e, t), d = u.tag, f = u.data;
                                    switch(d){
                                        case "CERTIFICATE":
                                            h = n.certificate.decode(f, "der").tbsCertificate.subjectPublicKeyInfo;
                                        case "PUBLIC KEY":
                                            switch(h || (h = n.PublicKey.decode(f, "der")), r = h.algorithm.algorithm.join(".")){
                                                case "1.2.840.113549.1.1.1":
                                                    return n.RSAPublicKey.decode(h.subjectPublicKey.data, "der");
                                                case "1.2.840.10045.2.1":
                                                    return h.subjectPrivateKey = h.subjectPublicKey, {
                                                        type: "ec",
                                                        data: h
                                                    };
                                                case "1.2.840.10040.4.1":
                                                    return h.algorithm.params.pub_key = n.DSAparam.decode(h.subjectPublicKey.data, "der"), {
                                                        type: "dsa",
                                                        data: h.algorithm.params
                                                    };
                                                default:
                                                    throw new Error("unknown key id " + r);
                                            }
                                        case "ENCRYPTED PRIVATE KEY":
                                            f = function(e, t) {
                                                var r = e.algorithm.decrypt.kde.kdeparams.salt, n = parseInt(e.algorithm.decrypt.kde.kdeparams.iters.toString(), 10), s = i[e.algorithm.decrypt.cipher.algo.join(".")], h = e.algorithm.decrypt.cipher.iv, u = e.subjectPrivateKey, d = parseInt(s.split("-")[1], 10) / 8, f = a.pbkdf2Sync(t, r, n, d, "sha1"), l = o.createDecipheriv(s, f, h), p = [];
                                                return p.push(l.update(u)), p.push(l.final()), c.concat(p);
                                            }(f = n.EncryptedPrivateKey.decode(f, "der"), t);
                                        case "PRIVATE KEY":
                                            switch(r = (h = n.PrivateKey.decode(f, "der")).algorithm.algorithm.join(".")){
                                                case "1.2.840.113549.1.1.1":
                                                    return n.RSAPrivateKey.decode(h.subjectPrivateKey, "der");
                                                case "1.2.840.10045.2.1":
                                                    return {
                                                        curve: h.algorithm.curve,
                                                        privateKey: n.ECPrivateKey.decode(h.subjectPrivateKey, "der").privateKey
                                                    };
                                                case "1.2.840.10040.4.1":
                                                    return h.algorithm.params.priv_key = n.DSAparam.decode(h.subjectPrivateKey, "der"), {
                                                        type: "dsa",
                                                        params: h.algorithm.params
                                                    };
                                                default:
                                                    throw new Error("unknown key id " + r);
                                            }
                                        case "RSA PUBLIC KEY":
                                            return n.RSAPublicKey.decode(f, "der");
                                        case "RSA PRIVATE KEY":
                                            return n.RSAPrivateKey.decode(f, "der");
                                        case "DSA PRIVATE KEY":
                                            return {
                                                type: "dsa",
                                                params: n.DSAPrivateKey.decode(f, "der")
                                            };
                                        case "EC PRIVATE KEY":
                                            return {
                                                curve: (f = n.ECPrivateKey.decode(f, "der")).parameters.value,
                                                privateKey: f.privateKey
                                            };
                                        default:
                                            throw new Error("unknown key type " + d);
                                    }
                                }
                                e.exports = h, h.signature = n.signature;
                            },
                            3166: (e, t, r)=>{
                                t.pbkdf2 = r(7638), t.pbkdf2Sync = r(8674);
                            },
                            7638: (e, t, r)=>{
                                var n, i, s = r(6608).Buffer, o = r(362), a = r(9749), c = r(8674), h = r(4300), u = r.g.crypto && r.g.crypto.subtle, d = {
                                    sha: "SHA-1",
                                    "sha-1": "SHA-1",
                                    sha1: "SHA-1",
                                    sha256: "SHA-256",
                                    "sha-256": "SHA-256",
                                    sha384: "SHA-384",
                                    "sha-384": "SHA-384",
                                    "sha-512": "SHA-512",
                                    sha512: "SHA-512"
                                }, f = [];
                                function l() {
                                    return i || (i = r.g.process && r.g.process.nextTick ? r.g.process.nextTick : r.g.queueMicrotask ? r.g.queueMicrotask : r.g.setImmediate ? r.g.setImmediate : r.g.setTimeout);
                                }
                                function p(e, t, r, n, i) {
                                    return u.importKey("raw", e, {
                                        name: "PBKDF2"
                                    }, !1, [
                                        "deriveBits"
                                    ]).then(function(e) {
                                        return u.deriveBits({
                                            name: "PBKDF2",
                                            salt: t,
                                            iterations: r,
                                            hash: {
                                                name: i
                                            }
                                        }, e, n << 3);
                                    }).then(function(e) {
                                        return s.from(e);
                                    });
                                }
                                e.exports = function(e, t, i, b, g, m) {
                                    "function" == typeof g && (m = g, g = void 0);
                                    var y = d[(g = g || "sha1").toLowerCase()];
                                    if (y && "function" == typeof r.g.Promise) {
                                        if (o(i, b), e = h(e, a, "Password"), t = h(t, a, "Salt"), "function" != typeof m) throw new Error("No callback provided to pbkdf2");
                                        !function(e, t) {
                                            e.then(function(e) {
                                                l()(function() {
                                                    t(null, e);
                                                });
                                            }, function(e) {
                                                l()(function() {
                                                    t(e);
                                                });
                                            });
                                        }((function(e) {
                                            if (r.g.process && !r.g.process.browser) return Promise.resolve(!1);
                                            if (!u || !u.importKey || !u.deriveBits) return Promise.resolve(!1);
                                            if (void 0 !== f[e]) return f[e];
                                            var t = p(n = n || s.alloc(8), n, 10, 128, e).then(function() {
                                                return !0;
                                            }).catch(function() {
                                                return !1;
                                            });
                                            return f[e] = t, t;
                                        })(y).then(function(r) {
                                            return r ? p(e, t, i, b, y) : c(e, t, i, b, g);
                                        }), m);
                                    } else l()(function() {
                                        var r;
                                        try {
                                            r = c(e, t, i, b, g);
                                        } catch (e) {
                                            return m(e);
                                        }
                                        m(null, r);
                                    });
                                };
                            },
                            9749: (e, t, r)=>{
                                var n;
                                n = r.g.process && r.g.process.browser ? "utf-8" : r.g.process && r.g.process.version ? parseInt(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].version.split(".")[0].slice(1), 10) >= 6 ? "utf-8" : "binary" : "utf-8", e.exports = n;
                            },
                            362: (e)=>{
                                var t = Math.pow(2, 30) - 1;
                                e.exports = function(e, r) {
                                    if ("number" != typeof e) throw new TypeError("Iterations not a number");
                                    if (e < 0) throw new TypeError("Bad iterations");
                                    if ("number" != typeof r) throw new TypeError("Key length not a number");
                                    if (r < 0 || r > t || r != r) throw new TypeError("Bad key length");
                                };
                            },
                            8674: (e, t, r)=>{
                                var n = r(6159), i = r(3934), s = r(5244), o = r(6608).Buffer, a = r(362), c = r(9749), h = r(4300), u = o.alloc(128), d = {
                                    md5: 16,
                                    sha1: 20,
                                    sha224: 28,
                                    sha256: 32,
                                    sha384: 48,
                                    sha512: 64,
                                    rmd160: 20,
                                    ripemd160: 20
                                };
                                function f(e, t, r) {
                                    var a = function(e) {
                                        return "rmd160" === e || "ripemd160" === e ? function(e) {
                                            return (new i).update(e).digest();
                                        } : "md5" === e ? n : function(t) {
                                            return s(e).update(t).digest();
                                        };
                                    }(e), c = "sha512" === e || "sha384" === e ? 128 : 64;
                                    t.length > c ? t = a(t) : t.length < c && (t = o.concat([
                                        t,
                                        u
                                    ], c));
                                    for(var h = o.allocUnsafe(c + d[e]), f = o.allocUnsafe(c + d[e]), l = 0; l < c; l++)h[l] = 54 ^ t[l], f[l] = 92 ^ t[l];
                                    var p = o.allocUnsafe(c + r + 4);
                                    h.copy(p, 0, 0, c), this.ipad1 = p, this.ipad2 = h, this.opad = f, this.alg = e, this.blocksize = c, this.hash = a, this.size = d[e];
                                }
                                f.prototype.run = function(e, t) {
                                    return e.copy(t, this.blocksize), this.hash(t).copy(this.opad, this.blocksize), this.hash(this.opad);
                                }, e.exports = function(e, t, r, n, i) {
                                    a(r, n);
                                    var s = new f(i = i || "sha1", e = h(e, c, "Password"), (t = h(t, c, "Salt")).length), u = o.allocUnsafe(n), l = o.allocUnsafe(t.length + 4);
                                    t.copy(l, 0, 0, t.length);
                                    for(var p = 0, b = d[i], g = Math.ceil(n / b), m = 1; m <= g; m++){
                                        l.writeUInt32BE(m, t.length);
                                        for(var y = s.run(l, s.ipad1), v = y, w = 1; w < r; w++){
                                            v = s.run(v, s.ipad2);
                                            for(var _ = 0; _ < b; _++)y[_] ^= v[_];
                                        }
                                        y.copy(u, p), p += b;
                                    }
                                    return u;
                                };
                            },
                            4300: (e, t, r)=>{
                                var n = r(6608).Buffer;
                                e.exports = function(e, t, r) {
                                    if (n.isBuffer(e)) return e;
                                    if ("string" == typeof e) return n.from(e, t);
                                    if (ArrayBuffer.isView(e)) return n.from(e.buffer);
                                    throw new TypeError(r + " must be a string, a Buffer, a typed array or a DataView");
                                };
                            },
                            2211: (e, t, r)=>{
                                t.publicEncrypt = r(3909), t.privateDecrypt = r(2399), t.privateEncrypt = function(e, r) {
                                    return t.publicEncrypt(e, r, !0);
                                }, t.publicDecrypt = function(e, r) {
                                    return t.privateDecrypt(e, r, !0);
                                };
                            },
                            8929: (e, t, r)=>{
                                var n = r(8955), i = r(6608).Buffer;
                                function s(e) {
                                    var t = i.allocUnsafe(4);
                                    return t.writeUInt32BE(e, 0), t;
                                }
                                e.exports = function(e, t) {
                                    for(var r, o = i.alloc(0), a = 0; o.length < t;)r = s(a++), o = i.concat([
                                        o,
                                        n("sha1").update(e).update(r).digest()
                                    ]);
                                    return o.slice(0, t);
                                };
                            },
                            2399: (e, t, r)=>{
                                var n = r(780), i = r(8929), s = r(7794), o = r(4619), a = r(1377), c = r(8955), h = r(7390), u = r(6608).Buffer;
                                e.exports = function(e, t, r) {
                                    var d;
                                    d = e.padding ? e.padding : r ? 1 : 4;
                                    var f, l = n(e), p = l.modulus.byteLength();
                                    if (t.length > p || new o(t).cmp(l.modulus) >= 0) throw new Error("decryption error");
                                    f = r ? h(new o(t), l) : a(t, l);
                                    var b = u.alloc(p - f.length);
                                    if (f = u.concat([
                                        b,
                                        f
                                    ], p), 4 === d) return function(e, t) {
                                        var r = e.modulus.byteLength(), n = c("sha1").update(u.alloc(0)).digest(), o = n.length;
                                        if (0 !== t[0]) throw new Error("decryption error");
                                        var a = t.slice(1, o + 1), h = t.slice(o + 1), d = s(a, i(h, o)), f = s(h, i(d, r - o - 1));
                                        if (function(e, t) {
                                            e = u.from(e), t = u.from(t);
                                            var r = 0, n = e.length;
                                            e.length !== t.length && (r++, n = Math.min(e.length, t.length));
                                            for(var i = -1; ++i < n;)r += e[i] ^ t[i];
                                            return r;
                                        }(n, f.slice(0, o))) throw new Error("decryption error");
                                        for(var l = o; 0 === f[l];)l++;
                                        if (1 !== f[l++]) throw new Error("decryption error");
                                        return f.slice(l);
                                    }(l, f);
                                    if (1 === d) return function(e, t, r) {
                                        for(var n = t.slice(0, 2), i = 2, s = 0; 0 !== t[i++];)if (i >= t.length) {
                                            s++;
                                            break;
                                        }
                                        var o = t.slice(2, i - 1);
                                        if (("0002" !== n.toString("hex") && !r || "0001" !== n.toString("hex") && r) && s++, o.length < 8 && s++, s) throw new Error("decryption error");
                                        return t.slice(i);
                                    }(0, f, r);
                                    if (3 === d) return f;
                                    throw new Error("unknown padding");
                                };
                            },
                            3909: (e, t, r)=>{
                                var n = r(780), i = r(2869), s = r(8955), o = r(8929), a = r(7794), c = r(4619), h = r(7390), u = r(1377), d = r(6608).Buffer;
                                e.exports = function(e, t, r) {
                                    var f;
                                    f = e.padding ? e.padding : r ? 1 : 4;
                                    var l, p = n(e);
                                    if (4 === f) l = function(e, t) {
                                        var r = e.modulus.byteLength(), n = t.length, h = s("sha1").update(d.alloc(0)).digest(), u = h.length, f = 2 * u;
                                        if (n > r - f - 2) throw new Error("message too long");
                                        var l = d.alloc(r - n - f - 2), p = r - u - 1, b = i(u), g = a(d.concat([
                                            h,
                                            l,
                                            d.alloc(1, 1),
                                            t
                                        ], p), o(b, p)), m = a(b, o(g, u));
                                        return new c(d.concat([
                                            d.alloc(1),
                                            m,
                                            g
                                        ], r));
                                    }(p, t);
                                    else if (1 === f) l = function(e, t, r) {
                                        var n, s = t.length, o = e.modulus.byteLength();
                                        if (s > o - 11) throw new Error("message too long");
                                        return n = r ? d.alloc(o - s - 3, 255) : function(e) {
                                            for(var t, r = d.allocUnsafe(e), n = 0, s = i(2 * e), o = 0; n < e;)o === s.length && (s = i(2 * e), o = 0), (t = s[o++]) && (r[n++] = t);
                                            return r;
                                        }(o - s - 3), new c(d.concat([
                                            d.from([
                                                0,
                                                r ? 1 : 2
                                            ]),
                                            n,
                                            d.alloc(1),
                                            t
                                        ], o));
                                    }(p, t, r);
                                    else {
                                        if (3 !== f) throw new Error("unknown padding");
                                        if ((l = new c(t)).cmp(p.modulus) >= 0) throw new Error("data too long for modulus");
                                    }
                                    return r ? u(l, p) : h(l, p);
                                };
                            },
                            7390: (e, t, r)=>{
                                var n = r(4619), i = r(6608).Buffer;
                                e.exports = function(e, t) {
                                    return i.from(e.toRed(n.mont(t.modulus)).redPow(new n(t.publicExponent)).fromRed().toArray());
                                };
                            },
                            7794: (e)=>{
                                e.exports = function(e, t) {
                                    for(var r = e.length, n = -1; ++n < r;)e[n] ^= t[n];
                                    return e;
                                };
                            },
                            2869: (e, t, r)=>{
                                "use strict";
                                var n = 65536, i = r(6608).Buffer, s = r.g.crypto || r.g.msCrypto;
                                s && s.getRandomValues ? e.exports = function(e, t) {
                                    if (e > 4294967295) throw new RangeError("requested too many random bytes");
                                    var r = i.allocUnsafe(e);
                                    if (e > 0) if (e > n) for(var o = 0; o < e; o += n)s.getRandomValues(r.slice(o, o + n));
                                    else s.getRandomValues(r);
                                    return "function" == typeof t ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(function() {
                                        t(null, r);
                                    }) : r;
                                } : e.exports = function() {
                                    throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
                                };
                            },
                            4925: (e, t, r)=>{
                                "use strict";
                                function n() {
                                    throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11");
                                }
                                var i = r(6608), s = r(2869), o = i.Buffer, a = i.kMaxLength, c = r.g.crypto || r.g.msCrypto, h = Math.pow(2, 32) - 1;
                                function u(e, t) {
                                    if ("number" != typeof e || e != e) throw new TypeError("offset must be a number");
                                    if (e > h || e < 0) throw new TypeError("offset must be a uint32");
                                    if (e > a || e > t) throw new RangeError("offset out of range");
                                }
                                function d(e, t, r) {
                                    if ("number" != typeof e || e != e) throw new TypeError("size must be a number");
                                    if (e > h || e < 0) throw new TypeError("size must be a uint32");
                                    if (e + t > r || e > a) throw new RangeError("buffer too small");
                                }
                                function f(e, t, r, n) {
                                    if ("TURBOPACK compile-time truthy", 1) {
                                        var i = e.buffer, o = new Uint8Array(i, t, r);
                                        return c.getRandomValues(o), n ? void __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(function() {
                                            n(null, e);
                                        }) : e;
                                    }
                                    "TURBOPACK unreachable";
                                }
                                c && c.getRandomValues || !("TURBOPACK compile-time value", true) ? (t.randomFill = function(e, t, n, i) {
                                    if (!(o.isBuffer(e) || e instanceof r.g.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
                                    if ("function" == typeof t) i = t, t = 0, n = e.length;
                                    else if ("function" == typeof n) i = n, n = e.length - t;
                                    else if ("function" != typeof i) throw new TypeError('"cb" argument must be a function');
                                    return u(t, e.length), d(n, t, e.length), f(e, t, n, i);
                                }, t.randomFillSync = function(e, t, n) {
                                    if (void 0 === t && (t = 0), !(o.isBuffer(e) || e instanceof r.g.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
                                    return u(t, e.length), void 0 === n && (n = e.length - t), d(n, t, e.length), f(e, t, n);
                                }) : (t.randomFill = n, t.randomFillSync = n);
                            },
                            289: (e)=>{
                                "use strict";
                                var t = {};
                                function r(e, r, n) {
                                    n || (n = Error);
                                    var i = function(e) {
                                        var t, n;
                                        function i(t, n, i) {
                                            return e.call(this, function(e, t, n) {
                                                return "string" == typeof r ? r : r(e, t, n);
                                            }(t, n, i)) || this;
                                        }
                                        return n = e, (t = i).prototype = Object.create(n.prototype), t.prototype.constructor = t, t.__proto__ = n, i;
                                    }(n);
                                    i.prototype.name = n.name, i.prototype.code = e, t[e] = i;
                                }
                                function n(e, t) {
                                    if (Array.isArray(e)) {
                                        var r = e.length;
                                        return e = e.map(function(e) {
                                            return String(e);
                                        }), r > 2 ? "one of ".concat(t, " ").concat(e.slice(0, r - 1).join(", "), ", or ") + e[r - 1] : 2 === r ? "one of ".concat(t, " ").concat(e[0], " or ").concat(e[1]) : "of ".concat(t, " ").concat(e[0]);
                                    }
                                    return "of ".concat(t, " ").concat(String(e));
                                }
                                r("ERR_INVALID_OPT_VALUE", function(e, t) {
                                    return 'The value "' + t + '" is invalid for option "' + e + '"';
                                }, TypeError), r("ERR_INVALID_ARG_TYPE", function(e, t, r) {
                                    var i, s, o, a;
                                    if ("string" == typeof t && "not " === t.substr(0, 4) ? (i = "must not be", t = t.replace(/^not /, "")) : i = "must be", function(e, t, r) {
                                        return (void 0 === r || r > e.length) && (r = e.length), " argument" === e.substring(r - 9, r);
                                    }(e)) s = "The ".concat(e, " ").concat(i, " ").concat(n(t, "type"));
                                    else {
                                        var c = ("number" != typeof a && (a = 0), a + 1 > (o = e).length || -1 === o.indexOf(".", a) ? "argument" : "property");
                                        s = 'The "'.concat(e, '" ').concat(c, " ").concat(i, " ").concat(n(t, "type"));
                                    }
                                    return s + ". Received type ".concat(typeof r);
                                }, TypeError), r("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), r("ERR_METHOD_NOT_IMPLEMENTED", function(e) {
                                    return "The " + e + " method is not implemented";
                                }), r("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), r("ERR_STREAM_DESTROYED", function(e) {
                                    return "Cannot call " + e + " after a stream was destroyed";
                                }), r("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), r("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), r("ERR_STREAM_WRITE_AFTER_END", "write after end"), r("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), r("ERR_UNKNOWN_ENCODING", function(e) {
                                    return "Unknown encoding: " + e;
                                }, TypeError), r("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), e.exports.F = t;
                            },
                            5707: (e, t, r)=>{
                                "use strict";
                                var n = Object.keys || function(e) {
                                    var t = [];
                                    for(var r in e)t.push(r);
                                    return t;
                                };
                                e.exports = h;
                                var i = r(3033), s = r(2553);
                                r(1193)(h, i);
                                for(var o = n(s.prototype), a = 0; a < o.length; a++){
                                    var c = o[a];
                                    h.prototype[c] || (h.prototype[c] = s.prototype[c]);
                                }
                                function h(e) {
                                    if (!(this instanceof h)) return new h(e);
                                    i.call(this, e), s.call(this, e), this.allowHalfOpen = !0, e && (!1 === e.readable && (this.readable = !1), !1 === e.writable && (this.writable = !1), !1 === e.allowHalfOpen && (this.allowHalfOpen = !1, this.once("end", u)));
                                }
                                function u() {
                                    this._writableState.ended || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(d, this);
                                }
                                function d(e) {
                                    e.end();
                                }
                                Object.defineProperty(h.prototype, "writableHighWaterMark", {
                                    enumerable: !1,
                                    get: function() {
                                        return this._writableState.highWaterMark;
                                    }
                                }), Object.defineProperty(h.prototype, "writableBuffer", {
                                    enumerable: !1,
                                    get: function() {
                                        return this._writableState && this._writableState.getBuffer();
                                    }
                                }), Object.defineProperty(h.prototype, "writableLength", {
                                    enumerable: !1,
                                    get: function() {
                                        return this._writableState.length;
                                    }
                                }), Object.defineProperty(h.prototype, "destroyed", {
                                    enumerable: !1,
                                    get: function() {
                                        return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
                                    },
                                    set: function(e) {
                                        void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e, this._writableState.destroyed = e);
                                    }
                                });
                            },
                            5271: (e, t, r)=>{
                                "use strict";
                                e.exports = i;
                                var n = r(141);
                                function i(e) {
                                    if (!(this instanceof i)) return new i(e);
                                    n.call(this, e);
                                }
                                r(1193)(i, n), i.prototype._transform = function(e, t, r) {
                                    r(null, e);
                                };
                            },
                            3033: (e, t, r)=>{
                                "use strict";
                                var n;
                                e.exports = A, A.ReadableState = S, r(381).EventEmitter;
                                var i, s = function(e, t) {
                                    return e.listeners(t).length;
                                }, o = r(2534), a = r(6533).Buffer, c = (void 0 !== r.g ? r.g : "undefined" != typeof window ? window : "undefined" != typeof self ? self : {}).Uint8Array || function() {}, h = r(6429);
                                i = h && h.debuglog ? h.debuglog("stream") : function() {};
                                var u, d, f, l = r(20), p = r(917), b = r(5750).getHighWaterMark, g = r(289).F, m = g.ERR_INVALID_ARG_TYPE, y = g.ERR_STREAM_PUSH_AFTER_EOF, v = g.ERR_METHOD_NOT_IMPLEMENTED, w = g.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
                                r(1193)(A, o);
                                var _ = p.errorOrDestroy, E = [
                                    "error",
                                    "close",
                                    "destroy",
                                    "pause",
                                    "resume"
                                ];
                                function S(e, t, i) {
                                    n = n || r(5707), e = e || {}, "boolean" != typeof i && (i = t instanceof n), this.objectMode = !!e.objectMode, i && (this.objectMode = this.objectMode || !!e.readableObjectMode), this.highWaterMark = b(this, e, "readableHighWaterMark", i), this.buffer = new l, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = !1 !== e.emitClose, this.autoDestroy = !!e.autoDestroy, this.destroyed = !1, this.defaultEncoding = e.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, e.encoding && (u || (u = r(6704).I), this.decoder = new u(e.encoding), this.encoding = e.encoding);
                                }
                                function A(e) {
                                    if (n = n || r(5707), !(this instanceof A)) return new A(e);
                                    var t = this instanceof n;
                                    this._readableState = new S(e, this, t), this.readable = !0, e && ("function" == typeof e.read && (this._read = e.read), "function" == typeof e.destroy && (this._destroy = e.destroy)), o.call(this);
                                }
                                function M(e, t, r, n, s) {
                                    i("readableAddChunk", t);
                                    var o, h = e._readableState;
                                    if (null === t) h.reading = !1, function(e, t) {
                                        if (i("onEofChunk"), !t.ended) {
                                            if (t.decoder) {
                                                var r = t.decoder.end();
                                                r && r.length && (t.buffer.push(r), t.length += t.objectMode ? 1 : r.length);
                                            }
                                            t.ended = !0, t.sync ? C(e) : (t.needReadable = !1, t.emittedReadable || (t.emittedReadable = !0, R(e)));
                                        }
                                    }(e, h);
                                    else if (s || (o = function(e, t) {
                                        var r, n;
                                        return n = t, a.isBuffer(n) || n instanceof c || "string" == typeof t || void 0 === t || e.objectMode || (r = new m("chunk", [
                                            "string",
                                            "Buffer",
                                            "Uint8Array"
                                        ], t)), r;
                                    }(h, t)), o) _(e, o);
                                    else if (h.objectMode || t && t.length > 0) if ("string" == typeof t || h.objectMode || Object.getPrototypeOf(t) === a.prototype || (t = function(e) {
                                        return a.from(e);
                                    }(t)), n) h.endEmitted ? _(e, new w) : I(e, h, t, !0);
                                    else if (h.ended) _(e, new y);
                                    else {
                                        if (h.destroyed) return !1;
                                        h.reading = !1, h.decoder && !r ? (t = h.decoder.write(t), h.objectMode || 0 !== t.length ? I(e, h, t, !1) : k(e, h)) : I(e, h, t, !1);
                                    }
                                    else n || (h.reading = !1, k(e, h));
                                    return !h.ended && (h.length < h.highWaterMark || 0 === h.length);
                                }
                                function I(e, t, r, n) {
                                    t.flowing && 0 === t.length && !t.sync ? (t.awaitDrain = 0, e.emit("data", r)) : (t.length += t.objectMode ? 1 : r.length, n ? t.buffer.unshift(r) : t.buffer.push(r), t.needReadable && C(e)), k(e, t);
                                }
                                Object.defineProperty(A.prototype, "destroyed", {
                                    enumerable: !1,
                                    get: function() {
                                        return void 0 !== this._readableState && this._readableState.destroyed;
                                    },
                                    set: function(e) {
                                        this._readableState && (this._readableState.destroyed = e);
                                    }
                                }), A.prototype.destroy = p.destroy, A.prototype._undestroy = p.undestroy, A.prototype._destroy = function(e, t) {
                                    t(e);
                                }, A.prototype.push = function(e, t) {
                                    var r, n = this._readableState;
                                    return n.objectMode ? r = !0 : "string" == typeof e && ((t = t || n.defaultEncoding) !== n.encoding && (e = a.from(e, t), t = ""), r = !0), M(this, e, t, !1, r);
                                }, A.prototype.unshift = function(e) {
                                    return M(this, e, null, !0, !1);
                                }, A.prototype.isPaused = function() {
                                    return !1 === this._readableState.flowing;
                                }, A.prototype.setEncoding = function(e) {
                                    u || (u = r(6704).I);
                                    var t = new u(e);
                                    this._readableState.decoder = t, this._readableState.encoding = this._readableState.decoder.encoding;
                                    for(var n = this._readableState.buffer.head, i = ""; null !== n;)i += t.write(n.data), n = n.next;
                                    return this._readableState.buffer.clear(), "" !== i && this._readableState.buffer.push(i), this._readableState.length = i.length, this;
                                };
                                var T = 1073741824;
                                function x(e, t) {
                                    return e <= 0 || 0 === t.length && t.ended ? 0 : t.objectMode ? 1 : e != e ? t.flowing && t.length ? t.buffer.head.data.length : t.length : (e > t.highWaterMark && (t.highWaterMark = function(e) {
                                        return e >= T ? e = T : (e--, e |= e >>> 1, e |= e >>> 2, e |= e >>> 4, e |= e >>> 8, e |= e >>> 16, e++), e;
                                    }(e)), e <= t.length ? e : t.ended ? t.length : (t.needReadable = !0, 0));
                                }
                                function C(e) {
                                    var t = e._readableState;
                                    i("emitReadable", t.needReadable, t.emittedReadable), t.needReadable = !1, t.emittedReadable || (i("emitReadable", t.flowing), t.emittedReadable = !0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(R, e));
                                }
                                function R(e) {
                                    var t = e._readableState;
                                    i("emitReadable_", t.destroyed, t.length, t.ended), t.destroyed || !t.length && !t.ended || (e.emit("readable"), t.emittedReadable = !1), t.needReadable = !t.flowing && !t.ended && t.length <= t.highWaterMark, B(e);
                                }
                                function k(e, t) {
                                    t.readingMore || (t.readingMore = !0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(P, e, t));
                                }
                                function P(e, t) {
                                    for(; !t.reading && !t.ended && (t.length < t.highWaterMark || t.flowing && 0 === t.length);){
                                        var r = t.length;
                                        if (i("maybeReadMore read 0"), e.read(0), r === t.length) break;
                                    }
                                    t.readingMore = !1;
                                }
                                function O(e) {
                                    var t = e._readableState;
                                    t.readableListening = e.listenerCount("readable") > 0, t.resumeScheduled && !t.paused ? t.flowing = !0 : e.listenerCount("data") > 0 && e.resume();
                                }
                                function N(e) {
                                    i("readable nexttick read 0"), e.read(0);
                                }
                                function U(e, t) {
                                    i("resume", t.reading), t.reading || e.read(0), t.resumeScheduled = !1, e.emit("resume"), B(e), t.flowing && !t.reading && e.read(0);
                                }
                                function B(e) {
                                    var t = e._readableState;
                                    for(i("flow", t.flowing); t.flowing && null !== e.read(););
                                }
                                function L(e, t) {
                                    return 0 === t.length ? null : (t.objectMode ? r = t.buffer.shift() : !e || e >= t.length ? (r = t.decoder ? t.buffer.join("") : 1 === t.buffer.length ? t.buffer.first() : t.buffer.concat(t.length), t.buffer.clear()) : r = t.buffer.consume(e, t.decoder), r);
                                    "TURBOPACK unreachable";
                                    var r;
                                }
                                function j(e) {
                                    var t = e._readableState;
                                    i("endReadable", t.endEmitted), t.endEmitted || (t.ended = !0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(D, t, e));
                                }
                                function D(e, t) {
                                    if (i("endReadableNT", e.endEmitted, e.length), !e.endEmitted && 0 === e.length && (e.endEmitted = !0, t.readable = !1, t.emit("end"), e.autoDestroy)) {
                                        var r = t._writableState;
                                        (!r || r.autoDestroy && r.finished) && t.destroy();
                                    }
                                }
                                function q(e, t) {
                                    for(var r = 0, n = e.length; r < n; r++)if (e[r] === t) return r;
                                    return -1;
                                }
                                A.prototype.read = function(e) {
                                    i("read", e), e = parseInt(e, 10);
                                    var t = this._readableState, r = e;
                                    if (0 !== e && (t.emittedReadable = !1), 0 === e && t.needReadable && ((0 !== t.highWaterMark ? t.length >= t.highWaterMark : t.length > 0) || t.ended)) return i("read: emitReadable", t.length, t.ended), 0 === t.length && t.ended ? j(this) : C(this), null;
                                    if (0 === (e = x(e, t)) && t.ended) return 0 === t.length && j(this), null;
                                    var n, s = t.needReadable;
                                    return i("need readable", s), (0 === t.length || t.length - e < t.highWaterMark) && i("length less than watermark", s = !0), t.ended || t.reading ? i("reading or ended", s = !1) : s && (i("do read"), t.reading = !0, t.sync = !0, 0 === t.length && (t.needReadable = !0), this._read(t.highWaterMark), t.sync = !1, t.reading || (e = x(r, t))), null === (n = e > 0 ? L(e, t) : null) ? (t.needReadable = t.length <= t.highWaterMark, e = 0) : (t.length -= e, t.awaitDrain = 0), 0 === t.length && (t.ended || (t.needReadable = !0), r !== e && t.ended && j(this)), null !== n && this.emit("data", n), n;
                                }, A.prototype._read = function(e) {
                                    _(this, new v("_read()"));
                                }, A.prototype.pipe = function(e, t) {
                                    var r = this, n = this._readableState;
                                    switch(n.pipesCount){
                                        case 0:
                                            n.pipes = e;
                                            break;
                                        case 1:
                                            n.pipes = [
                                                n.pipes,
                                                e
                                            ];
                                            break;
                                        default:
                                            n.pipes.push(e);
                                    }
                                    n.pipesCount += 1, i("pipe count=%d opts=%j", n.pipesCount, t);
                                    var o = t && !1 === t.end || e === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].stdout || e === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].stderr ? p : a;
                                    function a() {
                                        i("onend"), e.end();
                                    }
                                    n.endEmitted ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(o) : r.once("end", o), e.on("unpipe", function t(s, o) {
                                        i("onunpipe"), s === r && o && !1 === o.hasUnpiped && (o.hasUnpiped = !0, i("cleanup"), e.removeListener("close", f), e.removeListener("finish", l), e.removeListener("drain", c), e.removeListener("error", d), e.removeListener("unpipe", t), r.removeListener("end", a), r.removeListener("end", p), r.removeListener("data", u), h = !0, !n.awaitDrain || e._writableState && !e._writableState.needDrain || c());
                                    });
                                    var c = function(e) {
                                        return function() {
                                            var t = e._readableState;
                                            i("pipeOnDrain", t.awaitDrain), t.awaitDrain && t.awaitDrain--, 0 === t.awaitDrain && s(e, "data") && (t.flowing = !0, B(e));
                                        };
                                    }(r);
                                    e.on("drain", c);
                                    var h = !1;
                                    function u(t) {
                                        i("ondata");
                                        var s = e.write(t);
                                        i("dest.write", s), !1 === s && ((1 === n.pipesCount && n.pipes === e || n.pipesCount > 1 && -1 !== q(n.pipes, e)) && !h && (i("false write response, pause", n.awaitDrain), n.awaitDrain++), r.pause());
                                    }
                                    function d(t) {
                                        i("onerror", t), p(), e.removeListener("error", d), 0 === s(e, "error") && _(e, t);
                                    }
                                    function f() {
                                        e.removeListener("finish", l), p();
                                    }
                                    function l() {
                                        i("onfinish"), e.removeListener("close", f), p();
                                    }
                                    function p() {
                                        i("unpipe"), r.unpipe(e);
                                    }
                                    return r.on("data", u), function(e, t, r) {
                                        if ("function" == typeof e.prependListener) return e.prependListener(t, r);
                                        e._events && e._events[t] ? Array.isArray(e._events[t]) ? e._events[t].unshift(r) : e._events[t] = [
                                            r,
                                            e._events[t]
                                        ] : e.on(t, r);
                                    }(e, "error", d), e.once("close", f), e.once("finish", l), e.emit("pipe", r), n.flowing || (i("pipe resume"), r.resume()), e;
                                }, A.prototype.unpipe = function(e) {
                                    var t = this._readableState, r = {
                                        hasUnpiped: !1
                                    };
                                    if (0 === t.pipesCount) return this;
                                    if (1 === t.pipesCount) return e && e !== t.pipes || (e || (e = t.pipes), t.pipes = null, t.pipesCount = 0, t.flowing = !1, e && e.emit("unpipe", this, r)), this;
                                    if (!e) {
                                        var n = t.pipes, i = t.pipesCount;
                                        t.pipes = null, t.pipesCount = 0, t.flowing = !1;
                                        for(var s = 0; s < i; s++)n[s].emit("unpipe", this, {
                                            hasUnpiped: !1
                                        });
                                        return this;
                                    }
                                    var o = q(t.pipes, e);
                                    return -1 === o || (t.pipes.splice(o, 1), t.pipesCount -= 1, 1 === t.pipesCount && (t.pipes = t.pipes[0]), e.emit("unpipe", this, r)), this;
                                }, A.prototype.on = function(e, t) {
                                    var r = o.prototype.on.call(this, e, t), n = this._readableState;
                                    return "data" === e ? (n.readableListening = this.listenerCount("readable") > 0, !1 !== n.flowing && this.resume()) : "readable" === e && (n.endEmitted || n.readableListening || (n.readableListening = n.needReadable = !0, n.flowing = !1, n.emittedReadable = !1, i("on readable", n.length, n.reading), n.length ? C(this) : n.reading || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(N, this))), r;
                                }, A.prototype.addListener = A.prototype.on, A.prototype.removeListener = function(e, t) {
                                    var r = o.prototype.removeListener.call(this, e, t);
                                    return "readable" === e && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(O, this), r;
                                }, A.prototype.removeAllListeners = function(e) {
                                    var t = o.prototype.removeAllListeners.apply(this, arguments);
                                    return "readable" !== e && void 0 !== e || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(O, this), t;
                                }, A.prototype.resume = function() {
                                    var e = this._readableState;
                                    return e.flowing || (i("resume"), e.flowing = !e.readableListening, function(e, t) {
                                        t.resumeScheduled || (t.resumeScheduled = !0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(U, e, t));
                                    }(this, e)), e.paused = !1, this;
                                }, A.prototype.pause = function() {
                                    return i("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (i("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
                                }, A.prototype.wrap = function(e) {
                                    var t = this, r = this._readableState, n = !1;
                                    for(var s in e.on("end", function() {
                                        if (i("wrapped end"), r.decoder && !r.ended) {
                                            var e = r.decoder.end();
                                            e && e.length && t.push(e);
                                        }
                                        t.push(null);
                                    }), e.on("data", function(s) {
                                        i("wrapped data"), r.decoder && (s = r.decoder.write(s)), r.objectMode && null == s || (r.objectMode || s && s.length) && (t.push(s) || (n = !0, e.pause()));
                                    }), e)void 0 === this[s] && "function" == typeof e[s] && (this[s] = function(t) {
                                        return function() {
                                            return e[t].apply(e, arguments);
                                        };
                                    }(s));
                                    for(var o = 0; o < E.length; o++)e.on(E[o], this.emit.bind(this, E[o]));
                                    return this._read = function(t) {
                                        i("wrapped _read", t), n && (n = !1, e.resume());
                                    }, this;
                                }, "function" == typeof Symbol && (A.prototype[Symbol.asyncIterator] = function() {
                                    return void 0 === d && (d = r(9536)), d(this);
                                }), Object.defineProperty(A.prototype, "readableHighWaterMark", {
                                    enumerable: !1,
                                    get: function() {
                                        return this._readableState.highWaterMark;
                                    }
                                }), Object.defineProperty(A.prototype, "readableBuffer", {
                                    enumerable: !1,
                                    get: function() {
                                        return this._readableState && this._readableState.buffer;
                                    }
                                }), Object.defineProperty(A.prototype, "readableFlowing", {
                                    enumerable: !1,
                                    get: function() {
                                        return this._readableState.flowing;
                                    },
                                    set: function(e) {
                                        this._readableState && (this._readableState.flowing = e);
                                    }
                                }), A._fromList = L, Object.defineProperty(A.prototype, "readableLength", {
                                    enumerable: !1,
                                    get: function() {
                                        return this._readableState.length;
                                    }
                                }), "function" == typeof Symbol && (A.from = function(e, t) {
                                    return void 0 === f && (f = r(4918)), f(A, e, t);
                                });
                            },
                            141: (e, t, r)=>{
                                "use strict";
                                e.exports = u;
                                var n = r(289).F, i = n.ERR_METHOD_NOT_IMPLEMENTED, s = n.ERR_MULTIPLE_CALLBACK, o = n.ERR_TRANSFORM_ALREADY_TRANSFORMING, a = n.ERR_TRANSFORM_WITH_LENGTH_0, c = r(5707);
                                function h(e, t) {
                                    var r = this._transformState;
                                    r.transforming = !1;
                                    var n = r.writecb;
                                    if (null === n) return this.emit("error", new s);
                                    r.writechunk = null, r.writecb = null, null != t && this.push(t), n(e);
                                    var i = this._readableState;
                                    i.reading = !1, (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
                                }
                                function u(e) {
                                    if (!(this instanceof u)) return new u(e);
                                    c.call(this, e), this._transformState = {
                                        afterTransform: h.bind(this),
                                        needTransform: !1,
                                        transforming: !1,
                                        writecb: null,
                                        writechunk: null,
                                        writeencoding: null
                                    }, this._readableState.needReadable = !0, this._readableState.sync = !1, e && ("function" == typeof e.transform && (this._transform = e.transform), "function" == typeof e.flush && (this._flush = e.flush)), this.on("prefinish", d);
                                }
                                function d() {
                                    var e = this;
                                    "function" != typeof this._flush || this._readableState.destroyed ? f(this, null, null) : this._flush(function(t, r) {
                                        f(e, t, r);
                                    });
                                }
                                function f(e, t, r) {
                                    if (t) return e.emit("error", t);
                                    if (null != r && e.push(r), e._writableState.length) throw new a;
                                    if (e._transformState.transforming) throw new o;
                                    return e.push(null);
                                }
                                r(1193)(u, c), u.prototype.push = function(e, t) {
                                    return this._transformState.needTransform = !1, c.prototype.push.call(this, e, t);
                                }, u.prototype._transform = function(e, t, r) {
                                    r(new i("_transform()"));
                                }, u.prototype._write = function(e, t, r) {
                                    var n = this._transformState;
                                    if (n.writecb = r, n.writechunk = e, n.writeencoding = t, !n.transforming) {
                                        var i = this._readableState;
                                        (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
                                    }
                                }, u.prototype._read = function(e) {
                                    var t = this._transformState;
                                    null === t.writechunk || t.transforming ? t.needTransform = !0 : (t.transforming = !0, this._transform(t.writechunk, t.writeencoding, t.afterTransform));
                                }, u.prototype._destroy = function(e, t) {
                                    c.prototype._destroy.call(this, e, function(e) {
                                        t(e);
                                    });
                                };
                            },
                            2553: (e, t, r)=>{
                                "use strict";
                                function n(e) {
                                    var t = this;
                                    this.next = null, this.entry = null, this.finish = function() {
                                        !function(e, t) {
                                            var r = e.entry;
                                            for(e.entry = null; r;){
                                                var n = r.callback;
                                                t.pendingcb--, n(void 0), r = r.next;
                                            }
                                            t.corkedRequestsFree.next = e;
                                        }(t, e);
                                    };
                                }
                                var i;
                                e.exports = A, A.WritableState = S;
                                var s, o = {
                                    deprecate: r(1947)
                                }, a = r(2534), c = r(6533).Buffer, h = (void 0 !== r.g ? r.g : "undefined" != typeof window ? window : "undefined" != typeof self ? self : {}).Uint8Array || function() {}, u = r(917), d = r(5750).getHighWaterMark, f = r(289).F, l = f.ERR_INVALID_ARG_TYPE, p = f.ERR_METHOD_NOT_IMPLEMENTED, b = f.ERR_MULTIPLE_CALLBACK, g = f.ERR_STREAM_CANNOT_PIPE, m = f.ERR_STREAM_DESTROYED, y = f.ERR_STREAM_NULL_VALUES, v = f.ERR_STREAM_WRITE_AFTER_END, w = f.ERR_UNKNOWN_ENCODING, _ = u.errorOrDestroy;
                                function E() {}
                                function S(e, t, s) {
                                    i = i || r(5707), e = e || {}, "boolean" != typeof s && (s = t instanceof i), this.objectMode = !!e.objectMode, s && (this.objectMode = this.objectMode || !!e.writableObjectMode), this.highWaterMark = d(this, e, "writableHighWaterMark", s), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
                                    var o = !1 === e.decodeStrings;
                                    this.decodeStrings = !o, this.defaultEncoding = e.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(e) {
                                        !function(e, t) {
                                            var r = e._writableState, n = r.sync, i = r.writecb;
                                            if ("function" != typeof i) throw new b;
                                            if (function(e) {
                                                e.writing = !1, e.writecb = null, e.length -= e.writelen, e.writelen = 0;
                                            }(r), t) !function(e, t, r, n, i) {
                                                --t.pendingcb, r ? (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(i, n), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(R, e, t), e._writableState.errorEmitted = !0, _(e, n)) : (i(n), e._writableState.errorEmitted = !0, _(e, n), R(e, t));
                                            }(e, r, n, t, i);
                                            else {
                                                var s = x(r) || e.destroyed;
                                                s || r.corked || r.bufferProcessing || !r.bufferedRequest || T(e, r), n ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(I, e, r, s, i) : I(e, r, s, i);
                                            }
                                        }(t, e);
                                    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = !1 !== e.emitClose, this.autoDestroy = !!e.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new n(this);
                                }
                                function A(e) {
                                    var t = this instanceof (i = i || r(5707));
                                    if (!t && !s.call(A, this)) return new A(e);
                                    this._writableState = new S(e, this, t), this.writable = !0, e && ("function" == typeof e.write && (this._write = e.write), "function" == typeof e.writev && (this._writev = e.writev), "function" == typeof e.destroy && (this._destroy = e.destroy), "function" == typeof e.final && (this._final = e.final)), a.call(this);
                                }
                                function M(e, t, r, n, i, s, o) {
                                    t.writelen = n, t.writecb = o, t.writing = !0, t.sync = !0, t.destroyed ? t.onwrite(new m("write")) : r ? e._writev(i, t.onwrite) : e._write(i, s, t.onwrite), t.sync = !1;
                                }
                                function I(e, t, r, n) {
                                    r || function(e, t) {
                                        0 === t.length && t.needDrain && (t.needDrain = !1, e.emit("drain"));
                                    }(e, t), t.pendingcb--, n(), R(e, t);
                                }
                                function T(e, t) {
                                    t.bufferProcessing = !0;
                                    var r = t.bufferedRequest;
                                    if (e._writev && r && r.next) {
                                        var i = t.bufferedRequestCount, s = new Array(i), o = t.corkedRequestsFree;
                                        o.entry = r;
                                        for(var a = 0, c = !0; r;)s[a] = r, r.isBuf || (c = !1), r = r.next, a += 1;
                                        s.allBuffers = c, M(e, t, !0, t.length, s, "", o.finish), t.pendingcb++, t.lastBufferedRequest = null, o.next ? (t.corkedRequestsFree = o.next, o.next = null) : t.corkedRequestsFree = new n(t), t.bufferedRequestCount = 0;
                                    } else {
                                        for(; r;){
                                            var h = r.chunk, u = r.encoding, d = r.callback;
                                            if (M(e, t, !1, t.objectMode ? 1 : h.length, h, u, d), r = r.next, t.bufferedRequestCount--, t.writing) break;
                                        }
                                        null === r && (t.lastBufferedRequest = null);
                                    }
                                    t.bufferedRequest = r, t.bufferProcessing = !1;
                                }
                                function x(e) {
                                    return e.ending && 0 === e.length && null === e.bufferedRequest && !e.finished && !e.writing;
                                }
                                function C(e, t) {
                                    e._final(function(r) {
                                        t.pendingcb--, r && _(e, r), t.prefinished = !0, e.emit("prefinish"), R(e, t);
                                    });
                                }
                                function R(e, t) {
                                    var r = x(t);
                                    if (r && (function(e, t) {
                                        t.prefinished || t.finalCalled || ("function" != typeof e._final || t.destroyed ? (t.prefinished = !0, e.emit("prefinish")) : (t.pendingcb++, t.finalCalled = !0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(C, e, t)));
                                    }(e, t), 0 === t.pendingcb && (t.finished = !0, e.emit("finish"), t.autoDestroy))) {
                                        var n = e._readableState;
                                        (!n || n.autoDestroy && n.endEmitted) && e.destroy();
                                    }
                                    return r;
                                }
                                r(1193)(A, a), S.prototype.getBuffer = function() {
                                    for(var e = this.bufferedRequest, t = []; e;)t.push(e), e = e.next;
                                    return t;
                                }, function() {
                                    try {
                                        Object.defineProperty(S.prototype, "buffer", {
                                            get: o.deprecate(function() {
                                                return this.getBuffer();
                                            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                                        });
                                    } catch (e) {}
                                }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (s = Function.prototype[Symbol.hasInstance], Object.defineProperty(A, Symbol.hasInstance, {
                                    value: function(e) {
                                        return !!s.call(this, e) || this === A && e && e._writableState instanceof S;
                                    }
                                })) : s = function(e) {
                                    return e instanceof this;
                                }, A.prototype.pipe = function() {
                                    _(this, new g);
                                }, A.prototype.write = function(e, t, r) {
                                    var n, i = this._writableState, s = !1, o = !i.objectMode && (n = e, c.isBuffer(n) || n instanceof h);
                                    return o && !c.isBuffer(e) && (e = function(e) {
                                        return c.from(e);
                                    }(e)), "function" == typeof t && (r = t, t = null), o ? t = "buffer" : t || (t = i.defaultEncoding), "function" != typeof r && (r = E), i.ending ? function(e, t) {
                                        var r = new v;
                                        _(e, r), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(t, r);
                                    }(this, r) : (o || function(e, t, r, n) {
                                        var i;
                                        return null === r ? i = new y : "string" == typeof r || t.objectMode || (i = new l("chunk", [
                                            "string",
                                            "Buffer"
                                        ], r)), !i || (_(e, i), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(n, i), !1);
                                    }(this, i, e, r)) && (i.pendingcb++, s = function(e, t, r, n, i, s) {
                                        if (!r) {
                                            var o = function(e, t, r) {
                                                return e.objectMode || !1 === e.decodeStrings || "string" != typeof t || (t = c.from(t, r)), t;
                                            }(t, n, i);
                                            n !== o && (r = !0, i = "buffer", n = o);
                                        }
                                        var a = t.objectMode ? 1 : n.length;
                                        t.length += a;
                                        var h = t.length < t.highWaterMark;
                                        if (h || (t.needDrain = !0), t.writing || t.corked) {
                                            var u = t.lastBufferedRequest;
                                            t.lastBufferedRequest = {
                                                chunk: n,
                                                encoding: i,
                                                isBuf: r,
                                                callback: s,
                                                next: null
                                            }, u ? u.next = t.lastBufferedRequest : t.bufferedRequest = t.lastBufferedRequest, t.bufferedRequestCount += 1;
                                        } else M(e, t, !1, a, n, i, s);
                                        return h;
                                    }(this, i, o, e, t, r)), s;
                                }, A.prototype.cork = function() {
                                    this._writableState.corked++;
                                }, A.prototype.uncork = function() {
                                    var e = this._writableState;
                                    e.corked && (e.corked--, e.writing || e.corked || e.bufferProcessing || !e.bufferedRequest || T(this, e));
                                }, A.prototype.setDefaultEncoding = function(e) {
                                    if ("string" == typeof e && (e = e.toLowerCase()), !([
                                        "hex",
                                        "utf8",
                                        "utf-8",
                                        "ascii",
                                        "binary",
                                        "base64",
                                        "ucs2",
                                        "ucs-2",
                                        "utf16le",
                                        "utf-16le",
                                        "raw"
                                    ].indexOf((e + "").toLowerCase()) > -1)) throw new w(e);
                                    return this._writableState.defaultEncoding = e, this;
                                }, Object.defineProperty(A.prototype, "writableBuffer", {
                                    enumerable: !1,
                                    get: function() {
                                        return this._writableState && this._writableState.getBuffer();
                                    }
                                }), Object.defineProperty(A.prototype, "writableHighWaterMark", {
                                    enumerable: !1,
                                    get: function() {
                                        return this._writableState.highWaterMark;
                                    }
                                }), A.prototype._write = function(e, t, r) {
                                    r(new p("_write()"));
                                }, A.prototype._writev = null, A.prototype.end = function(e, t, r) {
                                    var n = this._writableState;
                                    return "function" == typeof e ? (r = e, e = null, t = null) : "function" == typeof t && (r = t, t = null), null != e && this.write(e, t), n.corked && (n.corked = 1, this.uncork()), n.ending || function(e, t, r) {
                                        t.ending = !0, R(e, t), r && (t.finished ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(r) : e.once("finish", r)), t.ended = !0, e.writable = !1;
                                    }(this, n, r), this;
                                }, Object.defineProperty(A.prototype, "writableLength", {
                                    enumerable: !1,
                                    get: function() {
                                        return this._writableState.length;
                                    }
                                }), Object.defineProperty(A.prototype, "destroyed", {
                                    enumerable: !1,
                                    get: function() {
                                        return void 0 !== this._writableState && this._writableState.destroyed;
                                    },
                                    set: function(e) {
                                        this._writableState && (this._writableState.destroyed = e);
                                    }
                                }), A.prototype.destroy = u.destroy, A.prototype._undestroy = u.undestroy, A.prototype._destroy = function(e, t) {
                                    t(e);
                                };
                            },
                            9536: (e, t, r)=>{
                                "use strict";
                                var n;
                                function i(e, t, r) {
                                    return (t = function(e) {
                                        var t = function(e) {
                                            if ("object" != typeof e || null === e) return e;
                                            var t = e[Symbol.toPrimitive];
                                            if (void 0 !== t) {
                                                var r = t.call(e, "string");
                                                if ("object" != typeof r) return r;
                                                throw new TypeError("@@toPrimitive must return a primitive value.");
                                            }
                                            return String(e);
                                        }(e);
                                        return "symbol" == typeof t ? t : String(t);
                                    }(t)) in e ? Object.defineProperty(e, t, {
                                        value: r,
                                        enumerable: !0,
                                        configurable: !0,
                                        writable: !0
                                    }) : e[t] = r, e;
                                }
                                var s = r(2339), o = Symbol("lastResolve"), a = Symbol("lastReject"), c = Symbol("error"), h = Symbol("ended"), u = Symbol("lastPromise"), d = Symbol("handlePromise"), f = Symbol("stream");
                                function l(e, t) {
                                    return {
                                        value: e,
                                        done: t
                                    };
                                }
                                function p(e) {
                                    var t = e[o];
                                    if (null !== t) {
                                        var r = e[f].read();
                                        null !== r && (e[u] = null, e[o] = null, e[a] = null, t(l(r, !1)));
                                    }
                                }
                                function b(e) {
                                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(p, e);
                                }
                                var g = Object.getPrototypeOf(function() {}), m = Object.setPrototypeOf((i(n = {
                                    get stream () {
                                        return this[f];
                                    },
                                    next: function() {
                                        var e = this, t = this[c];
                                        if (null !== t) return Promise.reject(t);
                                        if (this[h]) return Promise.resolve(l(void 0, !0));
                                        if (this[f].destroyed) return new Promise(function(t, r) {
                                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(function() {
                                                e[c] ? r(e[c]) : t(l(void 0, !0));
                                            });
                                        });
                                        var r, n = this[u];
                                        if (n) r = new Promise(function(e, t) {
                                            return function(r, n) {
                                                e.then(function() {
                                                    t[h] ? r(l(void 0, !0)) : t[d](r, n);
                                                }, n);
                                            };
                                        }(n, this));
                                        else {
                                            var i = this[f].read();
                                            if (null !== i) return Promise.resolve(l(i, !1));
                                            r = new Promise(this[d]);
                                        }
                                        return this[u] = r, r;
                                    }
                                }, Symbol.asyncIterator, function() {
                                    return this;
                                }), i(n, "return", function() {
                                    var e = this;
                                    return new Promise(function(t, r) {
                                        e[f].destroy(null, function(e) {
                                            e ? r(e) : t(l(void 0, !0));
                                        });
                                    });
                                }), n), g);
                                e.exports = function(e) {
                                    var t, r = Object.create(m, (i(t = {}, f, {
                                        value: e,
                                        writable: !0
                                    }), i(t, o, {
                                        value: null,
                                        writable: !0
                                    }), i(t, a, {
                                        value: null,
                                        writable: !0
                                    }), i(t, c, {
                                        value: null,
                                        writable: !0
                                    }), i(t, h, {
                                        value: e._readableState.endEmitted,
                                        writable: !0
                                    }), i(t, d, {
                                        value: function(e, t) {
                                            var n = r[f].read();
                                            n ? (r[u] = null, r[o] = null, r[a] = null, e(l(n, !1))) : (r[o] = e, r[a] = t);
                                        },
                                        writable: !0
                                    }), t));
                                    return r[u] = null, s(e, function(e) {
                                        if (e && "ERR_STREAM_PREMATURE_CLOSE" !== e.code) {
                                            var t = r[a];
                                            return null !== t && (r[u] = null, r[o] = null, r[a] = null, t(e)), void (r[c] = e);
                                        }
                                        var n = r[o];
                                        null !== n && (r[u] = null, r[o] = null, r[a] = null, n(l(void 0, !0))), r[h] = !0;
                                    }), e.on("readable", b.bind(null, r)), r;
                                };
                            },
                            20: (e, t, r)=>{
                                "use strict";
                                function n(e, t) {
                                    var r = Object.keys(e);
                                    if (Object.getOwnPropertySymbols) {
                                        var n = Object.getOwnPropertySymbols(e);
                                        t && (n = n.filter(function(t) {
                                            return Object.getOwnPropertyDescriptor(e, t).enumerable;
                                        })), r.push.apply(r, n);
                                    }
                                    return r;
                                }
                                function i(e) {
                                    for(var t = 1; t < arguments.length; t++){
                                        var r = null != arguments[t] ? arguments[t] : {};
                                        t % 2 ? n(Object(r), !0).forEach(function(t) {
                                            s(e, t, r[t]);
                                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach(function(t) {
                                            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));
                                        });
                                    }
                                    return e;
                                }
                                function s(e, t, r) {
                                    return (t = o(t)) in e ? Object.defineProperty(e, t, {
                                        value: r,
                                        enumerable: !0,
                                        configurable: !0,
                                        writable: !0
                                    }) : e[t] = r, e;
                                }
                                function o(e) {
                                    var t = function(e) {
                                        if ("object" != typeof e || null === e) return e;
                                        var t = e[Symbol.toPrimitive];
                                        if (void 0 !== t) {
                                            var r = t.call(e, "string");
                                            if ("object" != typeof r) return r;
                                            throw new TypeError("@@toPrimitive must return a primitive value.");
                                        }
                                        return String(e);
                                    }(e);
                                    return "symbol" == typeof t ? t : String(t);
                                }
                                var a = r(6533).Buffer, c = r(3541).inspect, h = c && c.custom || "inspect";
                                e.exports = function() {
                                    function e() {
                                        !function(e, t) {
                                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
                                        }(this, e), this.head = null, this.tail = null, this.length = 0;
                                    }
                                    var t, r;
                                    return t = e, (r = [
                                        {
                                            key: "push",
                                            value: function(e) {
                                                var t = {
                                                    data: e,
                                                    next: null
                                                };
                                                this.length > 0 ? this.tail.next = t : this.head = t, this.tail = t, ++this.length;
                                            }
                                        },
                                        {
                                            key: "unshift",
                                            value: function(e) {
                                                var t = {
                                                    data: e,
                                                    next: this.head
                                                };
                                                0 === this.length && (this.tail = t), this.head = t, ++this.length;
                                            }
                                        },
                                        {
                                            key: "shift",
                                            value: function() {
                                                if (0 !== this.length) {
                                                    var e = this.head.data;
                                                    return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, e;
                                                }
                                            }
                                        },
                                        {
                                            key: "clear",
                                            value: function() {
                                                this.head = this.tail = null, this.length = 0;
                                            }
                                        },
                                        {
                                            key: "join",
                                            value: function(e) {
                                                if (0 === this.length) return "";
                                                for(var t = this.head, r = "" + t.data; t = t.next;)r += e + t.data;
                                                return r;
                                            }
                                        },
                                        {
                                            key: "concat",
                                            value: function(e) {
                                                if (0 === this.length) return a.alloc(0);
                                                for(var t, r, n, i = a.allocUnsafe(e >>> 0), s = this.head, o = 0; s;)t = s.data, r = i, n = o, a.prototype.copy.call(t, r, n), o += s.data.length, s = s.next;
                                                return i;
                                            }
                                        },
                                        {
                                            key: "consume",
                                            value: function(e, t) {
                                                var r;
                                                return e < this.head.data.length ? (r = this.head.data.slice(0, e), this.head.data = this.head.data.slice(e)) : r = e === this.head.data.length ? this.shift() : t ? this._getString(e) : this._getBuffer(e), r;
                                            }
                                        },
                                        {
                                            key: "first",
                                            value: function() {
                                                return this.head.data;
                                            }
                                        },
                                        {
                                            key: "_getString",
                                            value: function(e) {
                                                var t = this.head, r = 1, n = t.data;
                                                for(e -= n.length; t = t.next;){
                                                    var i = t.data, s = e > i.length ? i.length : e;
                                                    if (s === i.length ? n += i : n += i.slice(0, e), 0 == (e -= s)) {
                                                        s === i.length ? (++r, t.next ? this.head = t.next : this.head = this.tail = null) : (this.head = t, t.data = i.slice(s));
                                                        break;
                                                    }
                                                    ++r;
                                                }
                                                return this.length -= r, n;
                                            }
                                        },
                                        {
                                            key: "_getBuffer",
                                            value: function(e) {
                                                var t = a.allocUnsafe(e), r = this.head, n = 1;
                                                for(r.data.copy(t), e -= r.data.length; r = r.next;){
                                                    var i = r.data, s = e > i.length ? i.length : e;
                                                    if (i.copy(t, t.length - e, 0, s), 0 == (e -= s)) {
                                                        s === i.length ? (++n, r.next ? this.head = r.next : this.head = this.tail = null) : (this.head = r, r.data = i.slice(s));
                                                        break;
                                                    }
                                                    ++n;
                                                }
                                                return this.length -= n, t;
                                            }
                                        },
                                        {
                                            key: h,
                                            value: function(e, t) {
                                                return c(this, i(i({}, t), {}, {
                                                    depth: 0,
                                                    customInspect: !1
                                                }));
                                            }
                                        }
                                    ]) && function(e, t) {
                                        for(var r = 0; r < t.length; r++){
                                            var n = t[r];
                                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, o(n.key), n);
                                        }
                                    }(t.prototype, r), Object.defineProperty(t, "prototype", {
                                        writable: !1
                                    }), e;
                                }();
                            },
                            917: (e)=>{
                                "use strict";
                                function t(e, t) {
                                    n(e, t), r(e);
                                }
                                function r(e) {
                                    e._writableState && !e._writableState.emitClose || e._readableState && !e._readableState.emitClose || e.emit("close");
                                }
                                function n(e, t) {
                                    e.emit("error", t);
                                }
                                e.exports = {
                                    destroy: function(e, i) {
                                        var s = this, o = this._readableState && this._readableState.destroyed, a = this._writableState && this._writableState.destroyed;
                                        return o || a ? (i ? i(e) : e && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(n, this, e)) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(n, this, e)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(e || null, function(e) {
                                            !i && e ? s._writableState ? s._writableState.errorEmitted ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(r, s) : (s._writableState.errorEmitted = !0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(t, s, e)) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(t, s, e) : i ? (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(r, s), i(e)) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].nextTick(r, s);
                                        }), this);
                                    },
                                    undestroy: function() {
                                        this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
                                    },
                                    errorOrDestroy: function(e, t) {
                                        var r = e._readableState, n = e._writableState;
                                        r && r.autoDestroy || n && n.autoDestroy ? e.destroy(t) : e.emit("error", t);
                                    }
                                };
                            },
                            2339: (e, t, r)=>{
                                "use strict";
                                var n = r(289).F.ERR_STREAM_PREMATURE_CLOSE;
                                function i() {}
                                e.exports = function e(t, r, s) {
                                    if ("function" == typeof r) return e(t, null, r);
                                    r || (r = {}), s = function(e) {
                                        var t = !1;
                                        return function() {
                                            if (!t) {
                                                t = !0;
                                                for(var r = arguments.length, n = new Array(r), i = 0; i < r; i++)n[i] = arguments[i];
                                                e.apply(this, n);
                                            }
                                        };
                                    }(s || i);
                                    var o = r.readable || !1 !== r.readable && t.readable, a = r.writable || !1 !== r.writable && t.writable, c = function() {
                                        t.writable || u();
                                    }, h = t._writableState && t._writableState.finished, u = function() {
                                        a = !1, h = !0, o || s.call(t);
                                    }, d = t._readableState && t._readableState.endEmitted, f = function() {
                                        o = !1, d = !0, a || s.call(t);
                                    }, l = function(e) {
                                        s.call(t, e);
                                    }, p = function() {
                                        var e;
                                        return o && !d ? (t._readableState && t._readableState.ended || (e = new n), s.call(t, e)) : a && !h ? (t._writableState && t._writableState.ended || (e = new n), s.call(t, e)) : void 0;
                                    }, b = function() {
                                        t.req.on("finish", u);
                                    };
                                    return function(e) {
                                        return e.setHeader && "function" == typeof e.abort;
                                    }(t) ? (t.on("complete", u), t.on("abort", p), t.req ? b() : t.on("request", b)) : a && !t._writableState && (t.on("end", c), t.on("close", c)), t.on("end", f), t.on("finish", u), !1 !== r.error && t.on("error", l), t.on("close", p), function() {
                                        t.removeListener("complete", u), t.removeListener("abort", p), t.removeListener("request", b), t.req && t.req.removeListener("finish", u), t.removeListener("end", c), t.removeListener("close", c), t.removeListener("finish", u), t.removeListener("end", f), t.removeListener("error", l), t.removeListener("close", p);
                                    };
                                };
                            },
                            4918: (e)=>{
                                e.exports = function() {
                                    throw new Error("Readable.from is not available in the browser");
                                };
                            },
                            5481: (e, t, r)=>{
                                "use strict";
                                var n, i = r(289).F, s = i.ERR_MISSING_ARGS, o = i.ERR_STREAM_DESTROYED;
                                function a(e) {
                                    if (e) throw e;
                                }
                                function c(e) {
                                    e();
                                }
                                function h(e, t) {
                                    return e.pipe(t);
                                }
                                e.exports = function() {
                                    for(var e = arguments.length, t = new Array(e), i = 0; i < e; i++)t[i] = arguments[i];
                                    var u, d = function(e) {
                                        return e.length ? "function" != typeof e[e.length - 1] ? a : e.pop() : a;
                                    }(t);
                                    if (Array.isArray(t[0]) && (t = t[0]), t.length < 2) throw new s("streams");
                                    var f = t.map(function(e, i) {
                                        var s = i < t.length - 1;
                                        return function(e, t, i, s) {
                                            s = function(e) {
                                                var t = !1;
                                                return function() {
                                                    t || (t = !0, e.apply(void 0, arguments));
                                                };
                                            }(s);
                                            var a = !1;
                                            e.on("close", function() {
                                                a = !0;
                                            }), void 0 === n && (n = r(2339)), n(e, {
                                                readable: t,
                                                writable: i
                                            }, function(e) {
                                                if (e) return s(e);
                                                a = !0, s();
                                            });
                                            var c = !1;
                                            return function(t) {
                                                if (!a && !c) return c = !0, function(e) {
                                                    return e.setHeader && "function" == typeof e.abort;
                                                }(e) ? e.abort() : "function" == typeof e.destroy ? e.destroy() : void s(t || new o("pipe"));
                                            };
                                        }(e, s, i > 0, function(e) {
                                            u || (u = e), e && f.forEach(c), s || (f.forEach(c), d(u));
                                        });
                                    });
                                    return t.reduce(h);
                                };
                            },
                            5750: (e, t, r)=>{
                                "use strict";
                                var n = r(289).F.ERR_INVALID_OPT_VALUE;
                                e.exports = {
                                    getHighWaterMark: function(e, t, r, i) {
                                        var s = function(e, t, r) {
                                            return null != e.highWaterMark ? e.highWaterMark : t ? e[r] : null;
                                        }(t, i, r);
                                        if (null != s) {
                                            if (!isFinite(s) || Math.floor(s) !== s || s < 0) throw new n(i ? r : "highWaterMark", s);
                                            return Math.floor(s);
                                        }
                                        return e.objectMode ? 16 : 16384;
                                    }
                                };
                            },
                            2534: (e, t, r)=>{
                                e.exports = r(381).EventEmitter;
                            },
                            1094: (e, t, r)=>{
                                (t = e.exports = r(3033)).Stream = t, t.Readable = t, t.Writable = r(2553), t.Duplex = r(5707), t.Transform = r(141), t.PassThrough = r(5271), t.finished = r(2339), t.pipeline = r(5481);
                            },
                            3934: (e, t, r)=>{
                                "use strict";
                                var n = r(6533).Buffer, i = r(1193), s = r(800), o = new Array(16), a = [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9,
                                    10,
                                    11,
                                    12,
                                    13,
                                    14,
                                    15,
                                    7,
                                    4,
                                    13,
                                    1,
                                    10,
                                    6,
                                    15,
                                    3,
                                    12,
                                    0,
                                    9,
                                    5,
                                    2,
                                    14,
                                    11,
                                    8,
                                    3,
                                    10,
                                    14,
                                    4,
                                    9,
                                    15,
                                    8,
                                    1,
                                    2,
                                    7,
                                    0,
                                    6,
                                    13,
                                    11,
                                    5,
                                    12,
                                    1,
                                    9,
                                    11,
                                    10,
                                    0,
                                    8,
                                    12,
                                    4,
                                    13,
                                    3,
                                    7,
                                    15,
                                    14,
                                    5,
                                    6,
                                    2,
                                    4,
                                    0,
                                    5,
                                    9,
                                    7,
                                    12,
                                    2,
                                    10,
                                    14,
                                    1,
                                    3,
                                    8,
                                    11,
                                    6,
                                    15,
                                    13
                                ], c = [
                                    5,
                                    14,
                                    7,
                                    0,
                                    9,
                                    2,
                                    11,
                                    4,
                                    13,
                                    6,
                                    15,
                                    8,
                                    1,
                                    10,
                                    3,
                                    12,
                                    6,
                                    11,
                                    3,
                                    7,
                                    0,
                                    13,
                                    5,
                                    10,
                                    14,
                                    15,
                                    8,
                                    12,
                                    4,
                                    9,
                                    1,
                                    2,
                                    15,
                                    5,
                                    1,
                                    3,
                                    7,
                                    14,
                                    6,
                                    9,
                                    11,
                                    8,
                                    12,
                                    2,
                                    10,
                                    0,
                                    4,
                                    13,
                                    8,
                                    6,
                                    4,
                                    1,
                                    3,
                                    11,
                                    15,
                                    0,
                                    5,
                                    12,
                                    2,
                                    13,
                                    9,
                                    7,
                                    10,
                                    14,
                                    12,
                                    15,
                                    10,
                                    4,
                                    1,
                                    5,
                                    8,
                                    7,
                                    6,
                                    2,
                                    13,
                                    14,
                                    0,
                                    3,
                                    9,
                                    11
                                ], h = [
                                    11,
                                    14,
                                    15,
                                    12,
                                    5,
                                    8,
                                    7,
                                    9,
                                    11,
                                    13,
                                    14,
                                    15,
                                    6,
                                    7,
                                    9,
                                    8,
                                    7,
                                    6,
                                    8,
                                    13,
                                    11,
                                    9,
                                    7,
                                    15,
                                    7,
                                    12,
                                    15,
                                    9,
                                    11,
                                    7,
                                    13,
                                    12,
                                    11,
                                    13,
                                    6,
                                    7,
                                    14,
                                    9,
                                    13,
                                    15,
                                    14,
                                    8,
                                    13,
                                    6,
                                    5,
                                    12,
                                    7,
                                    5,
                                    11,
                                    12,
                                    14,
                                    15,
                                    14,
                                    15,
                                    9,
                                    8,
                                    9,
                                    14,
                                    5,
                                    6,
                                    8,
                                    6,
                                    5,
                                    12,
                                    9,
                                    15,
                                    5,
                                    11,
                                    6,
                                    8,
                                    13,
                                    12,
                                    5,
                                    12,
                                    13,
                                    14,
                                    11,
                                    8,
                                    5,
                                    6
                                ], u = [
                                    8,
                                    9,
                                    9,
                                    11,
                                    13,
                                    15,
                                    15,
                                    5,
                                    7,
                                    7,
                                    8,
                                    11,
                                    14,
                                    14,
                                    12,
                                    6,
                                    9,
                                    13,
                                    15,
                                    7,
                                    12,
                                    8,
                                    9,
                                    11,
                                    7,
                                    7,
                                    12,
                                    7,
                                    6,
                                    15,
                                    13,
                                    11,
                                    9,
                                    7,
                                    15,
                                    11,
                                    8,
                                    6,
                                    6,
                                    14,
                                    12,
                                    13,
                                    5,
                                    14,
                                    13,
                                    13,
                                    7,
                                    5,
                                    15,
                                    5,
                                    8,
                                    11,
                                    14,
                                    14,
                                    6,
                                    14,
                                    6,
                                    9,
                                    12,
                                    9,
                                    12,
                                    5,
                                    15,
                                    8,
                                    8,
                                    5,
                                    12,
                                    9,
                                    12,
                                    5,
                                    14,
                                    6,
                                    8,
                                    13,
                                    6,
                                    5,
                                    15,
                                    13,
                                    11,
                                    11
                                ], d = [
                                    0,
                                    1518500249,
                                    1859775393,
                                    2400959708,
                                    2840853838
                                ], f = [
                                    1352829926,
                                    1548603684,
                                    1836072691,
                                    2053994217,
                                    0
                                ];
                                function l() {
                                    s.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;
                                }
                                function p(e, t) {
                                    return e << t | e >>> 32 - t;
                                }
                                function b(e, t, r, n, i, s, o, a) {
                                    return p(e + (t ^ r ^ n) + s + o | 0, a) + i | 0;
                                }
                                function g(e, t, r, n, i, s, o, a) {
                                    return p(e + (t & r | ~t & n) + s + o | 0, a) + i | 0;
                                }
                                function m(e, t, r, n, i, s, o, a) {
                                    return p(e + ((t | ~r) ^ n) + s + o | 0, a) + i | 0;
                                }
                                function y(e, t, r, n, i, s, o, a) {
                                    return p(e + (t & n | r & ~n) + s + o | 0, a) + i | 0;
                                }
                                function v(e, t, r, n, i, s, o, a) {
                                    return p(e + (t ^ (r | ~n)) + s + o | 0, a) + i | 0;
                                }
                                i(l, s), l.prototype._update = function() {
                                    for(var e = o, t = 0; t < 16; ++t)e[t] = this._block.readInt32LE(4 * t);
                                    for(var r = 0 | this._a, n = 0 | this._b, i = 0 | this._c, s = 0 | this._d, l = 0 | this._e, w = 0 | this._a, _ = 0 | this._b, E = 0 | this._c, S = 0 | this._d, A = 0 | this._e, M = 0; M < 80; M += 1){
                                        var I, T;
                                        M < 16 ? (I = b(r, n, i, s, l, e[a[M]], d[0], h[M]), T = v(w, _, E, S, A, e[c[M]], f[0], u[M])) : M < 32 ? (I = g(r, n, i, s, l, e[a[M]], d[1], h[M]), T = y(w, _, E, S, A, e[c[M]], f[1], u[M])) : M < 48 ? (I = m(r, n, i, s, l, e[a[M]], d[2], h[M]), T = m(w, _, E, S, A, e[c[M]], f[2], u[M])) : M < 64 ? (I = y(r, n, i, s, l, e[a[M]], d[3], h[M]), T = g(w, _, E, S, A, e[c[M]], f[3], u[M])) : (I = v(r, n, i, s, l, e[a[M]], d[4], h[M]), T = b(w, _, E, S, A, e[c[M]], f[4], u[M])), r = l, l = s, s = p(i, 10), i = n, n = I, w = A, A = S, S = p(E, 10), E = _, _ = T;
                                    }
                                    var x = this._b + i + S | 0;
                                    this._b = this._c + s + A | 0, this._c = this._d + l + w | 0, this._d = this._e + r + _ | 0, this._e = this._a + n + E | 0, this._a = x;
                                }, l.prototype._digest = function() {
                                    this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
                                    var e = n.alloc ? n.alloc(20) : new n(20);
                                    return e.writeInt32LE(this._a, 0), e.writeInt32LE(this._b, 4), e.writeInt32LE(this._c, 8), e.writeInt32LE(this._d, 12), e.writeInt32LE(this._e, 16), e;
                                }, e.exports = l;
                            },
                            6608: (e, t, r)=>{
                                var n = r(6533), i = n.Buffer;
                                function s(e, t) {
                                    for(var r in e)t[r] = e[r];
                                }
                                function o(e, t, r) {
                                    return i(e, t, r);
                                }
                                i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? e.exports = n : (s(n, t), t.Buffer = o), o.prototype = Object.create(i.prototype), s(i, o), o.from = function(e, t, r) {
                                    if ("number" == typeof e) throw new TypeError("Argument must not be a number");
                                    return i(e, t, r);
                                }, o.alloc = function(e, t, r) {
                                    if ("number" != typeof e) throw new TypeError("Argument must be a number");
                                    var n = i(e);
                                    return void 0 !== t ? "string" == typeof r ? n.fill(t, r) : n.fill(t) : n.fill(0), n;
                                }, o.allocUnsafe = function(e) {
                                    if ("number" != typeof e) throw new TypeError("Argument must be a number");
                                    return i(e);
                                }, o.allocUnsafeSlow = function(e) {
                                    if ("number" != typeof e) throw new TypeError("Argument must be a number");
                                    return n.SlowBuffer(e);
                                };
                            },
                            1628: (e, t, r)=>{
                                "use strict";
                                var n, i = r(6533), s = i.Buffer, o = {};
                                for(n in i)i.hasOwnProperty(n) && "SlowBuffer" !== n && "Buffer" !== n && (o[n] = i[n]);
                                var a = o.Buffer = {};
                                for(n in s)s.hasOwnProperty(n) && "allocUnsafe" !== n && "allocUnsafeSlow" !== n && (a[n] = s[n]);
                                if (o.Buffer.prototype = s.prototype, a.from && a.from !== Uint8Array.from || (a.from = function(e, t, r) {
                                    if ("number" == typeof e) throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof e);
                                    if (e && void 0 === e.length) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
                                    return s(e, t, r);
                                }), a.alloc || (a.alloc = function(e, t, r) {
                                    if ("number" != typeof e) throw new TypeError('The "size" argument must be of type number. Received type ' + typeof e);
                                    if (e < 0 || e >= 2 * (1 << 30)) throw new RangeError('The value "' + e + '" is invalid for option "size"');
                                    var n = s(e);
                                    return t && 0 !== t.length ? "string" == typeof r ? n.fill(t, r) : n.fill(t) : n.fill(0), n;
                                }), !o.kStringMaxLength) try {
                                    o.kStringMaxLength = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].binding("buffer").kStringMaxLength;
                                } catch (e) {}
                                o.constants || (o.constants = {
                                    MAX_LENGTH: o.kMaxLength
                                }, o.kStringMaxLength && (o.constants.MAX_STRING_LENGTH = o.kStringMaxLength)), e.exports = o;
                            },
                            3366: (e, t, r)=>{
                                var n = r(6608).Buffer;
                                function i(e, t) {
                                    this._block = n.alloc(e), this._finalSize = t, this._blockSize = e, this._len = 0;
                                }
                                i.prototype.update = function(e, t) {
                                    "string" == typeof e && (t = t || "utf8", e = n.from(e, t));
                                    for(var r = this._block, i = this._blockSize, s = e.length, o = this._len, a = 0; a < s;){
                                        for(var c = o % i, h = Math.min(s - a, i - c), u = 0; u < h; u++)r[c + u] = e[a + u];
                                        a += h, (o += h) % i == 0 && this._update(r);
                                    }
                                    return this._len += s, this;
                                }, i.prototype.digest = function(e) {
                                    var t = this._len % this._blockSize;
                                    this._block[t] = 128, this._block.fill(0, t + 1), t >= this._finalSize && (this._update(this._block), this._block.fill(0));
                                    var r = 8 * this._len;
                                    if (r <= 4294967295) this._block.writeUInt32BE(r, this._blockSize - 4);
                                    else {
                                        var n = (4294967295 & r) >>> 0, i = (r - n) / 4294967296;
                                        this._block.writeUInt32BE(i, this._blockSize - 8), this._block.writeUInt32BE(n, this._blockSize - 4);
                                    }
                                    this._update(this._block);
                                    var s = this._hash();
                                    return e ? s.toString(e) : s;
                                }, i.prototype._update = function() {
                                    throw new Error("_update must be implemented by subclass");
                                }, e.exports = i;
                            },
                            5244: (e, t, r)=>{
                                var n = e.exports = function(e) {
                                    e = e.toLowerCase();
                                    var t = n[e];
                                    if (!t) throw new Error(e + " is not supported (we accept pull requests)");
                                    return new t;
                                };
                                n.sha = r(2954), n.sha1 = r(6375), n.sha224 = r(4012), n.sha256 = r(8729), n.sha384 = r(1453), n.sha512 = r(1756);
                            },
                            2954: (e, t, r)=>{
                                var n = r(1193), i = r(3366), s = r(6608).Buffer, o = [
                                    1518500249,
                                    1859775393,
                                    -1894007588,
                                    -899497514
                                ], a = new Array(80);
                                function c() {
                                    this.init(), this._w = a, i.call(this, 64, 56);
                                }
                                function h(e) {
                                    return e << 30 | e >>> 2;
                                }
                                function u(e, t, r, n) {
                                    return 0 === e ? t & r | ~t & n : 2 === e ? t & r | t & n | r & n : t ^ r ^ n;
                                }
                                n(c, i), c.prototype.init = function() {
                                    return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
                                }, c.prototype._update = function(e) {
                                    for(var t, r = this._w, n = 0 | this._a, i = 0 | this._b, s = 0 | this._c, a = 0 | this._d, c = 0 | this._e, d = 0; d < 16; ++d)r[d] = e.readInt32BE(4 * d);
                                    for(; d < 80; ++d)r[d] = r[d - 3] ^ r[d - 8] ^ r[d - 14] ^ r[d - 16];
                                    for(var f = 0; f < 80; ++f){
                                        var l = ~~(f / 20), p = 0 | ((t = n) << 5 | t >>> 27) + u(l, i, s, a) + c + r[f] + o[l];
                                        c = a, a = s, s = h(i), i = n, n = p;
                                    }
                                    this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = s + this._c | 0, this._d = a + this._d | 0, this._e = c + this._e | 0;
                                }, c.prototype._hash = function() {
                                    var e = s.allocUnsafe(20);
                                    return e.writeInt32BE(0 | this._a, 0), e.writeInt32BE(0 | this._b, 4), e.writeInt32BE(0 | this._c, 8), e.writeInt32BE(0 | this._d, 12), e.writeInt32BE(0 | this._e, 16), e;
                                }, e.exports = c;
                            },
                            6375: (e, t, r)=>{
                                var n = r(1193), i = r(3366), s = r(6608).Buffer, o = [
                                    1518500249,
                                    1859775393,
                                    -1894007588,
                                    -899497514
                                ], a = new Array(80);
                                function c() {
                                    this.init(), this._w = a, i.call(this, 64, 56);
                                }
                                function h(e) {
                                    return e << 5 | e >>> 27;
                                }
                                function u(e) {
                                    return e << 30 | e >>> 2;
                                }
                                function d(e, t, r, n) {
                                    return 0 === e ? t & r | ~t & n : 2 === e ? t & r | t & n | r & n : t ^ r ^ n;
                                }
                                n(c, i), c.prototype.init = function() {
                                    return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
                                }, c.prototype._update = function(e) {
                                    for(var t, r = this._w, n = 0 | this._a, i = 0 | this._b, s = 0 | this._c, a = 0 | this._d, c = 0 | this._e, f = 0; f < 16; ++f)r[f] = e.readInt32BE(4 * f);
                                    for(; f < 80; ++f)r[f] = (t = r[f - 3] ^ r[f - 8] ^ r[f - 14] ^ r[f - 16]) << 1 | t >>> 31;
                                    for(var l = 0; l < 80; ++l){
                                        var p = ~~(l / 20), b = h(n) + d(p, i, s, a) + c + r[l] + o[p] | 0;
                                        c = a, a = s, s = u(i), i = n, n = b;
                                    }
                                    this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = s + this._c | 0, this._d = a + this._d | 0, this._e = c + this._e | 0;
                                }, c.prototype._hash = function() {
                                    var e = s.allocUnsafe(20);
                                    return e.writeInt32BE(0 | this._a, 0), e.writeInt32BE(0 | this._b, 4), e.writeInt32BE(0 | this._c, 8), e.writeInt32BE(0 | this._d, 12), e.writeInt32BE(0 | this._e, 16), e;
                                }, e.exports = c;
                            },
                            4012: (e, t, r)=>{
                                var n = r(1193), i = r(8729), s = r(3366), o = r(6608).Buffer, a = new Array(64);
                                function c() {
                                    this.init(), this._w = a, s.call(this, 64, 56);
                                }
                                n(c, i), c.prototype.init = function() {
                                    return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
                                }, c.prototype._hash = function() {
                                    var e = o.allocUnsafe(28);
                                    return e.writeInt32BE(this._a, 0), e.writeInt32BE(this._b, 4), e.writeInt32BE(this._c, 8), e.writeInt32BE(this._d, 12), e.writeInt32BE(this._e, 16), e.writeInt32BE(this._f, 20), e.writeInt32BE(this._g, 24), e;
                                }, e.exports = c;
                            },
                            8729: (e, t, r)=>{
                                var n = r(1193), i = r(3366), s = r(6608).Buffer, o = [
                                    1116352408,
                                    1899447441,
                                    3049323471,
                                    3921009573,
                                    961987163,
                                    1508970993,
                                    2453635748,
                                    2870763221,
                                    3624381080,
                                    310598401,
                                    607225278,
                                    1426881987,
                                    1925078388,
                                    2162078206,
                                    2614888103,
                                    3248222580,
                                    3835390401,
                                    4022224774,
                                    264347078,
                                    604807628,
                                    770255983,
                                    1249150122,
                                    1555081692,
                                    1996064986,
                                    2554220882,
                                    2821834349,
                                    2952996808,
                                    3210313671,
                                    3336571891,
                                    3584528711,
                                    113926993,
                                    338241895,
                                    666307205,
                                    773529912,
                                    1294757372,
                                    1396182291,
                                    1695183700,
                                    1986661051,
                                    2177026350,
                                    2456956037,
                                    2730485921,
                                    2820302411,
                                    3259730800,
                                    3345764771,
                                    3516065817,
                                    3600352804,
                                    4094571909,
                                    275423344,
                                    430227734,
                                    506948616,
                                    659060556,
                                    883997877,
                                    958139571,
                                    1322822218,
                                    1537002063,
                                    1747873779,
                                    1955562222,
                                    2024104815,
                                    2227730452,
                                    2361852424,
                                    2428436474,
                                    2756734187,
                                    3204031479,
                                    3329325298
                                ], a = new Array(64);
                                function c() {
                                    this.init(), this._w = a, i.call(this, 64, 56);
                                }
                                function h(e, t, r) {
                                    return r ^ e & (t ^ r);
                                }
                                function u(e, t, r) {
                                    return e & t | r & (e | t);
                                }
                                function d(e) {
                                    return (e >>> 2 | e << 30) ^ (e >>> 13 | e << 19) ^ (e >>> 22 | e << 10);
                                }
                                function f(e) {
                                    return (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7);
                                }
                                function l(e) {
                                    return (e >>> 7 | e << 25) ^ (e >>> 18 | e << 14) ^ e >>> 3;
                                }
                                n(c, i), c.prototype.init = function() {
                                    return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
                                }, c.prototype._update = function(e) {
                                    for(var t, r = this._w, n = 0 | this._a, i = 0 | this._b, s = 0 | this._c, a = 0 | this._d, c = 0 | this._e, p = 0 | this._f, b = 0 | this._g, g = 0 | this._h, m = 0; m < 16; ++m)r[m] = e.readInt32BE(4 * m);
                                    for(; m < 64; ++m)r[m] = 0 | (((t = r[m - 2]) >>> 17 | t << 15) ^ (t >>> 19 | t << 13) ^ t >>> 10) + r[m - 7] + l(r[m - 15]) + r[m - 16];
                                    for(var y = 0; y < 64; ++y){
                                        var v = g + f(c) + h(c, p, b) + o[y] + r[y] | 0, w = d(n) + u(n, i, s) | 0;
                                        g = b, b = p, p = c, c = a + v | 0, a = s, s = i, i = n, n = v + w | 0;
                                    }
                                    this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = s + this._c | 0, this._d = a + this._d | 0, this._e = c + this._e | 0, this._f = p + this._f | 0, this._g = b + this._g | 0, this._h = g + this._h | 0;
                                }, c.prototype._hash = function() {
                                    var e = s.allocUnsafe(32);
                                    return e.writeInt32BE(this._a, 0), e.writeInt32BE(this._b, 4), e.writeInt32BE(this._c, 8), e.writeInt32BE(this._d, 12), e.writeInt32BE(this._e, 16), e.writeInt32BE(this._f, 20), e.writeInt32BE(this._g, 24), e.writeInt32BE(this._h, 28), e;
                                }, e.exports = c;
                            },
                            1453: (e, t, r)=>{
                                var n = r(1193), i = r(1756), s = r(3366), o = r(6608).Buffer, a = new Array(160);
                                function c() {
                                    this.init(), this._w = a, s.call(this, 128, 112);
                                }
                                n(c, i), c.prototype.init = function() {
                                    return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
                                }, c.prototype._hash = function() {
                                    var e = o.allocUnsafe(48);
                                    function t(t, r, n) {
                                        e.writeInt32BE(t, n), e.writeInt32BE(r, n + 4);
                                    }
                                    return t(this._ah, this._al, 0), t(this._bh, this._bl, 8), t(this._ch, this._cl, 16), t(this._dh, this._dl, 24), t(this._eh, this._el, 32), t(this._fh, this._fl, 40), e;
                                }, e.exports = c;
                            },
                            1756: (e, t, r)=>{
                                var n = r(1193), i = r(3366), s = r(6608).Buffer, o = [
                                    1116352408,
                                    3609767458,
                                    1899447441,
                                    602891725,
                                    3049323471,
                                    3964484399,
                                    3921009573,
                                    2173295548,
                                    961987163,
                                    4081628472,
                                    1508970993,
                                    3053834265,
                                    2453635748,
                                    2937671579,
                                    2870763221,
                                    3664609560,
                                    3624381080,
                                    2734883394,
                                    310598401,
                                    1164996542,
                                    607225278,
                                    1323610764,
                                    1426881987,
                                    3590304994,
                                    1925078388,
                                    4068182383,
                                    2162078206,
                                    991336113,
                                    2614888103,
                                    633803317,
                                    3248222580,
                                    3479774868,
                                    3835390401,
                                    2666613458,
                                    4022224774,
                                    944711139,
                                    264347078,
                                    2341262773,
                                    604807628,
                                    2007800933,
                                    770255983,
                                    1495990901,
                                    1249150122,
                                    1856431235,
                                    1555081692,
                                    3175218132,
                                    1996064986,
                                    2198950837,
                                    2554220882,
                                    3999719339,
                                    2821834349,
                                    766784016,
                                    2952996808,
                                    2566594879,
                                    3210313671,
                                    3203337956,
                                    3336571891,
                                    1034457026,
                                    3584528711,
                                    2466948901,
                                    113926993,
                                    3758326383,
                                    338241895,
                                    168717936,
                                    666307205,
                                    1188179964,
                                    773529912,
                                    1546045734,
                                    1294757372,
                                    1522805485,
                                    1396182291,
                                    2643833823,
                                    1695183700,
                                    2343527390,
                                    1986661051,
                                    1014477480,
                                    2177026350,
                                    1206759142,
                                    2456956037,
                                    344077627,
                                    2730485921,
                                    1290863460,
                                    2820302411,
                                    3158454273,
                                    3259730800,
                                    3505952657,
                                    3345764771,
                                    106217008,
                                    3516065817,
                                    3606008344,
                                    3600352804,
                                    1432725776,
                                    4094571909,
                                    1467031594,
                                    275423344,
                                    851169720,
                                    430227734,
                                    3100823752,
                                    506948616,
                                    1363258195,
                                    659060556,
                                    3750685593,
                                    883997877,
                                    3785050280,
                                    958139571,
                                    3318307427,
                                    1322822218,
                                    3812723403,
                                    1537002063,
                                    2003034995,
                                    1747873779,
                                    3602036899,
                                    1955562222,
                                    1575990012,
                                    2024104815,
                                    1125592928,
                                    2227730452,
                                    2716904306,
                                    2361852424,
                                    442776044,
                                    2428436474,
                                    593698344,
                                    2756734187,
                                    3733110249,
                                    3204031479,
                                    2999351573,
                                    3329325298,
                                    3815920427,
                                    3391569614,
                                    3928383900,
                                    3515267271,
                                    566280711,
                                    3940187606,
                                    3454069534,
                                    4118630271,
                                    4000239992,
                                    116418474,
                                    1914138554,
                                    174292421,
                                    2731055270,
                                    289380356,
                                    3203993006,
                                    460393269,
                                    320620315,
                                    685471733,
                                    587496836,
                                    852142971,
                                    1086792851,
                                    1017036298,
                                    365543100,
                                    1126000580,
                                    2618297676,
                                    1288033470,
                                    3409855158,
                                    1501505948,
                                    4234509866,
                                    1607167915,
                                    987167468,
                                    1816402316,
                                    1246189591
                                ], a = new Array(160);
                                function c() {
                                    this.init(), this._w = a, i.call(this, 128, 112);
                                }
                                function h(e, t, r) {
                                    return r ^ e & (t ^ r);
                                }
                                function u(e, t, r) {
                                    return e & t | r & (e | t);
                                }
                                function d(e, t) {
                                    return (e >>> 28 | t << 4) ^ (t >>> 2 | e << 30) ^ (t >>> 7 | e << 25);
                                }
                                function f(e, t) {
                                    return (e >>> 14 | t << 18) ^ (e >>> 18 | t << 14) ^ (t >>> 9 | e << 23);
                                }
                                function l(e, t) {
                                    return (e >>> 1 | t << 31) ^ (e >>> 8 | t << 24) ^ e >>> 7;
                                }
                                function p(e, t) {
                                    return (e >>> 1 | t << 31) ^ (e >>> 8 | t << 24) ^ (e >>> 7 | t << 25);
                                }
                                function b(e, t) {
                                    return (e >>> 19 | t << 13) ^ (t >>> 29 | e << 3) ^ e >>> 6;
                                }
                                function g(e, t) {
                                    return (e >>> 19 | t << 13) ^ (t >>> 29 | e << 3) ^ (e >>> 6 | t << 26);
                                }
                                function m(e, t) {
                                    return e >>> 0 < t >>> 0 ? 1 : 0;
                                }
                                n(c, i), c.prototype.init = function() {
                                    return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
                                }, c.prototype._update = function(e) {
                                    for(var t = this._w, r = 0 | this._ah, n = 0 | this._bh, i = 0 | this._ch, s = 0 | this._dh, a = 0 | this._eh, c = 0 | this._fh, y = 0 | this._gh, v = 0 | this._hh, w = 0 | this._al, _ = 0 | this._bl, E = 0 | this._cl, S = 0 | this._dl, A = 0 | this._el, M = 0 | this._fl, I = 0 | this._gl, T = 0 | this._hl, x = 0; x < 32; x += 2)t[x] = e.readInt32BE(4 * x), t[x + 1] = e.readInt32BE(4 * x + 4);
                                    for(; x < 160; x += 2){
                                        var C = t[x - 30], R = t[x - 30 + 1], k = l(C, R), P = p(R, C), O = b(C = t[x - 4], R = t[x - 4 + 1]), N = g(R, C), U = t[x - 14], B = t[x - 14 + 1], L = t[x - 32], j = t[x - 32 + 1], D = P + B | 0, q = k + U + m(D, P) | 0;
                                        q = (q = q + O + m(D = D + N | 0, N) | 0) + L + m(D = D + j | 0, j) | 0, t[x] = q, t[x + 1] = D;
                                    }
                                    for(var F = 0; F < 160; F += 2){
                                        q = t[F], D = t[F + 1];
                                        var H = u(r, n, i), z = u(w, _, E), V = d(r, w), $ = d(w, r), K = f(a, A), G = f(A, a), W = o[F], J = o[F + 1], Y = h(a, c, y), X = h(A, M, I), Z = T + G | 0, Q = v + K + m(Z, T) | 0;
                                        Q = (Q = (Q = Q + Y + m(Z = Z + X | 0, X) | 0) + W + m(Z = Z + J | 0, J) | 0) + q + m(Z = Z + D | 0, D) | 0;
                                        var ee = $ + z | 0, te = V + H + m(ee, $) | 0;
                                        v = y, T = I, y = c, I = M, c = a, M = A, a = s + Q + m(A = S + Z | 0, S) | 0, s = i, S = E, i = n, E = _, n = r, _ = w, r = Q + te + m(w = Z + ee | 0, Z) | 0;
                                    }
                                    this._al = this._al + w | 0, this._bl = this._bl + _ | 0, this._cl = this._cl + E | 0, this._dl = this._dl + S | 0, this._el = this._el + A | 0, this._fl = this._fl + M | 0, this._gl = this._gl + I | 0, this._hl = this._hl + T | 0, this._ah = this._ah + r + m(this._al, w) | 0, this._bh = this._bh + n + m(this._bl, _) | 0, this._ch = this._ch + i + m(this._cl, E) | 0, this._dh = this._dh + s + m(this._dl, S) | 0, this._eh = this._eh + a + m(this._el, A) | 0, this._fh = this._fh + c + m(this._fl, M) | 0, this._gh = this._gh + y + m(this._gl, I) | 0, this._hh = this._hh + v + m(this._hl, T) | 0;
                                }, c.prototype._hash = function() {
                                    var e = s.allocUnsafe(64);
                                    function t(t, r, n) {
                                        e.writeInt32BE(t, n), e.writeInt32BE(r, n + 4);
                                    }
                                    return t(this._ah, this._al, 0), t(this._bh, this._bl, 8), t(this._ch, this._cl, 16), t(this._dh, this._dl, 24), t(this._eh, this._el, 32), t(this._fh, this._fl, 40), t(this._gh, this._gl, 48), t(this._hh, this._hl, 56), e;
                                }, e.exports = c;
                            },
                            3803: (e, t, r)=>{
                                e.exports = i;
                                var n = r(381).EventEmitter;
                                function i() {
                                    n.call(this);
                                }
                                r(1193)(i, n), i.Readable = r(3033), i.Writable = r(2553), i.Duplex = r(5707), i.Transform = r(141), i.PassThrough = r(5271), i.finished = r(2339), i.pipeline = r(5481), i.Stream = i, i.prototype.pipe = function(e, t) {
                                    var r = this;
                                    function i(t) {
                                        e.writable && !1 === e.write(t) && r.pause && r.pause();
                                    }
                                    function s() {
                                        r.readable && r.resume && r.resume();
                                    }
                                    r.on("data", i), e.on("drain", s), e._isStdio || t && !1 === t.end || (r.on("end", a), r.on("close", c));
                                    var o = !1;
                                    function a() {
                                        o || (o = !0, e.end());
                                    }
                                    function c() {
                                        o || (o = !0, "function" == typeof e.destroy && e.destroy());
                                    }
                                    function h(e) {
                                        if (u(), 0 === n.listenerCount(this, "error")) throw e;
                                    }
                                    function u() {
                                        r.removeListener("data", i), e.removeListener("drain", s), r.removeListener("end", a), r.removeListener("close", c), r.removeListener("error", h), e.removeListener("error", h), r.removeListener("end", u), r.removeListener("close", u), e.removeListener("close", u);
                                    }
                                    return r.on("error", h), e.on("error", h), r.on("end", u), r.on("close", u), e.on("close", u), e.emit("pipe", r), e;
                                };
                            },
                            6704: (e, t, r)=>{
                                "use strict";
                                var n = r(6608).Buffer, i = n.isEncoding || function(e) {
                                    switch((e = "" + e) && e.toLowerCase()){
                                        case "hex":
                                        case "utf8":
                                        case "utf-8":
                                        case "ascii":
                                        case "binary":
                                        case "base64":
                                        case "ucs2":
                                        case "ucs-2":
                                        case "utf16le":
                                        case "utf-16le":
                                        case "raw":
                                            return !0;
                                        default:
                                            return !1;
                                    }
                                };
                                function s(e) {
                                    var t;
                                    switch(this.encoding = function(e) {
                                        var t = function(e) {
                                            if (!e) return "utf8";
                                            for(var t;;)switch(e){
                                                case "utf8":
                                                case "utf-8":
                                                    return "utf8";
                                                case "ucs2":
                                                case "ucs-2":
                                                case "utf16le":
                                                case "utf-16le":
                                                    return "utf16le";
                                                case "latin1":
                                                case "binary":
                                                    return "latin1";
                                                case "base64":
                                                case "ascii":
                                                case "hex":
                                                    return e;
                                                default:
                                                    if (t) return;
                                                    e = ("" + e).toLowerCase(), t = !0;
                                            }
                                        }(e);
                                        if ("string" != typeof t && (n.isEncoding === i || !i(e))) throw new Error("Unknown encoding: " + e);
                                        return t || e;
                                    }(e), this.encoding){
                                        case "utf16le":
                                            this.text = c, this.end = h, t = 4;
                                            break;
                                        case "utf8":
                                            this.fillLast = a, t = 4;
                                            break;
                                        case "base64":
                                            this.text = u, this.end = d, t = 3;
                                            break;
                                        default:
                                            return this.write = f, void (this.end = l);
                                    }
                                    this.lastNeed = 0, this.lastTotal = 0, this.lastChar = n.allocUnsafe(t);
                                }
                                function o(e) {
                                    return e <= 127 ? 0 : e >> 5 == 6 ? 2 : e >> 4 == 14 ? 3 : e >> 3 == 30 ? 4 : e >> 6 == 2 ? -1 : -2;
                                }
                                function a(e) {
                                    var t = this.lastTotal - this.lastNeed, r = function(e, t) {
                                        if (128 != (192 & t[0])) return e.lastNeed = 0, "�";
                                        if (e.lastNeed > 1 && t.length > 1) {
                                            if (128 != (192 & t[1])) return e.lastNeed = 1, "�";
                                            if (e.lastNeed > 2 && t.length > 2 && 128 != (192 & t[2])) return e.lastNeed = 2, "�";
                                        }
                                    }(this, e);
                                    return void 0 !== r ? r : this.lastNeed <= e.length ? (e.copy(this.lastChar, t, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (e.copy(this.lastChar, t, 0, e.length), void (this.lastNeed -= e.length));
                                }
                                function c(e, t) {
                                    if ((e.length - t) % 2 == 0) {
                                        var r = e.toString("utf16le", t);
                                        if (r) {
                                            var n = r.charCodeAt(r.length - 1);
                                            if (n >= 55296 && n <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1], r.slice(0, -1);
                                        }
                                        return r;
                                    }
                                    return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = e[e.length - 1], e.toString("utf16le", t, e.length - 1);
                                }
                                function h(e) {
                                    var t = e && e.length ? this.write(e) : "";
                                    if (this.lastNeed) {
                                        var r = this.lastTotal - this.lastNeed;
                                        return t + this.lastChar.toString("utf16le", 0, r);
                                    }
                                    return t;
                                }
                                function u(e, t) {
                                    var r = (e.length - t) % 3;
                                    return 0 === r ? e.toString("base64", t) : (this.lastNeed = 3 - r, this.lastTotal = 3, 1 === r ? this.lastChar[0] = e[e.length - 1] : (this.lastChar[0] = e[e.length - 2], this.lastChar[1] = e[e.length - 1]), e.toString("base64", t, e.length - r));
                                }
                                function d(e) {
                                    var t = e && e.length ? this.write(e) : "";
                                    return this.lastNeed ? t + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t;
                                }
                                function f(e) {
                                    return e.toString(this.encoding);
                                }
                                function l(e) {
                                    return e && e.length ? this.write(e) : "";
                                }
                                t.I = s, s.prototype.write = function(e) {
                                    if (0 === e.length) return "";
                                    var t, r;
                                    if (this.lastNeed) {
                                        if (void 0 === (t = this.fillLast(e))) return "";
                                        r = this.lastNeed, this.lastNeed = 0;
                                    } else r = 0;
                                    return r < e.length ? t ? t + this.text(e, r) : this.text(e, r) : t || "";
                                }, s.prototype.end = function(e) {
                                    var t = e && e.length ? this.write(e) : "";
                                    return this.lastNeed ? t + "�" : t;
                                }, s.prototype.text = function(e, t) {
                                    var r = function(e, t, r) {
                                        var n = t.length - 1;
                                        if (n < r) return 0;
                                        var i = o(t[n]);
                                        return i >= 0 ? (i > 0 && (e.lastNeed = i - 1), i) : --n < r || -2 === i ? 0 : (i = o(t[n])) >= 0 ? (i > 0 && (e.lastNeed = i - 2), i) : --n < r || -2 === i ? 0 : (i = o(t[n])) >= 0 ? (i > 0 && (2 === i ? i = 0 : e.lastNeed = i - 3), i) : 0;
                                    }(this, e, t);
                                    if (!this.lastNeed) return e.toString("utf8", t);
                                    this.lastTotal = r;
                                    var n = e.length - (r - this.lastNeed);
                                    return e.copy(this.lastChar, 0, n), e.toString("utf8", t, n);
                                }, s.prototype.fillLast = function(e) {
                                    if (this.lastNeed <= e.length) return e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                                    e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length), this.lastNeed -= e.length;
                                };
                            },
                            1947: (e, t, r)=>{
                                function n(e) {
                                    try {
                                        if (!r.g.localStorage) return !1;
                                    } catch (e) {
                                        return !1;
                                    }
                                    var t = r.g.localStorage[e];
                                    return null != t && "true" === String(t).toLowerCase();
                                }
                                e.exports = function(e, t) {
                                    if (n("noDeprecation")) return e;
                                    var r = !1;
                                    return function() {
                                        if (!r) {
                                            if (n("throwDeprecation")) throw new Error(t);
                                            n("traceDeprecation") ? console.trace(t) : console.warn(t), r = !0;
                                        }
                                        return e.apply(this, arguments);
                                    };
                                };
                            },
                            7998: ()=>{},
                            7175: ()=>{},
                            9322: ()=>{},
                            4507: ()=>{},
                            3541: ()=>{},
                            6429: ()=>{},
                            7077: ()=>{},
                            5569: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                                    Object.defineProperty(e, "default", {
                                        enumerable: !0,
                                        value: t
                                    });
                                } : function(e, t) {
                                    e.default = t;
                                }), s = this && this.__importStar || function(e) {
                                    if (e && e.__esModule) return e;
                                    var t = {};
                                    if (null != e) for(var r in e)"default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                                    return i(t, e), t;
                                }, o = this && this.__importDefault || function(e) {
                                    return e && e.__esModule ? e : {
                                        default: e
                                    };
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.groupOfLockupScript = t.subContractId = t.contractIdFromTx = t.addressFromTokenId = t.addressFromContractId = t.addressFromScript = t.addressFromPublicKey = t.publicKeyFromPrivateKey = t.groupOfPrivateKey = t.tokenIdFromAddress = t.contractIdFromAddress = t.groupOfAddress = t.isContractAddress = t.isAssetAddress = t.isValidAddress = t.validateAddress = t.AddressType = void 0;
                                const a = r(3071), c = o(r(3900)), h = r(7695), u = o(r(1540)), d = s(r(4468)), f = r(664), l = r(1678), p = r(3651), b = o(r(160)), g = r(4652), m = new a.ec("secp256k1"), y = 32;
                                var v;
                                function w(e) {
                                    _(e);
                                }
                                function _(e) {
                                    const t = (0, d.base58ToBytes)(e);
                                    if (0 === t.length) throw new Error("Address is empty");
                                    const r = t[0];
                                    if (r === v.P2MPKH) {
                                        let r;
                                        try {
                                            r = l.lockupScriptCodec.decode(t).value;
                                        } catch (t) {
                                            throw new g.TraceableError(`Invalid multisig address: ${e}`, t);
                                        }
                                        const n = r.publicKeyHashes.length, i = r.m;
                                        if (n < i || i <= 0) throw new Error(`Invalid multisig address, n: ${n}, m: ${i}`);
                                        const s = p.i32Codec.encode(n).length, o = p.i32Codec.encode(i).length, a = s + y * n + o + 1;
                                        if (t.length === a) return t;
                                    } else if ((r === v.P2PKH || r === v.P2SH || r === v.P2C) && 33 === t.length) return t;
                                    throw new Error(`Invalid address: ${e}`);
                                }
                                function E(e) {
                                    const t = _(e), r = t[0], n = t.slice(1);
                                    if (r == v.P2PKH) return function(e) {
                                        return C(e);
                                    }(n);
                                    if (r == v.P2MPKH) return function(e) {
                                        return C(e.slice(1, 33));
                                    }(n);
                                    if (r == v.P2SH) return function(e) {
                                        return C(e);
                                    }(n);
                                    {
                                        const t = S(e);
                                        return t["" + (t.length - 1)];
                                    }
                                }
                                function S(e) {
                                    return A(e);
                                }
                                function A(e) {
                                    const t = (0, d.base58ToBytes)(e);
                                    if (0 == t.length) throw new Error("Address string is empty");
                                    const r = t[0], n = t.slice(1);
                                    if (r == v.P2C) return n;
                                    throw new Error(`Invalid contract address type: ${r}`);
                                }
                                function M(e, t) {
                                    return "default" === (t ?? "default") ? m.keyFromPrivate(e).getPublic(!0, "hex") : m.g.mul(new c.default(e, 16)).encode("hex", !0).slice(2);
                                }
                                function I(e, t) {
                                    if ("default" === (t ?? "default")) {
                                        const t = u.default.blake2b((0, f.hexToBinUnsafe)(e), void 0, 32), r = new Uint8Array([
                                            v.P2PKH,
                                            ...t
                                        ]);
                                        return d.default.encode(r);
                                    }
                                    return T((0, f.hexToBinUnsafe)(`0101000000000458144020${e}8685`));
                                }
                                function T(e) {
                                    const t = u.default.blake2b(e, void 0, 32);
                                    return d.default.encode(new Uint8Array([
                                        v.P2SH,
                                        ...t
                                    ]));
                                }
                                function x(e) {
                                    const t = (0, f.hexToBinUnsafe)(e), r = new Uint8Array([
                                        v.P2C,
                                        ...t
                                    ]);
                                    return d.default.encode(r);
                                }
                                function C(e) {
                                    const t = 1 | (0, b.default)(e);
                                    return (0, f.xorByte)(t) % h.TOTAL_NUMBER_OF_GROUPS;
                                }
                                !function(e) {
                                    e[e.P2PKH = 0] = "P2PKH", e[e.P2MPKH = 1] = "P2MPKH", e[e.P2SH = 2] = "P2SH", e[e.P2C = 3] = "P2C";
                                }(v = t.AddressType || (t.AddressType = {})), t.validateAddress = w, t.isValidAddress = function(e) {
                                    try {
                                        return w(e), !0;
                                    } catch  {
                                        return !1;
                                    }
                                }, t.isAssetAddress = function(e) {
                                    const t = _(e)[0];
                                    return t === v.P2PKH || t === v.P2MPKH || t === v.P2SH;
                                }, t.isContractAddress = function(e) {
                                    return _(e)[0] === v.P2C;
                                }, t.groupOfAddress = E, t.contractIdFromAddress = S, t.tokenIdFromAddress = function(e) {
                                    return A(e);
                                }, t.groupOfPrivateKey = function(e, t) {
                                    return E(I(M(e, t), t));
                                }, t.publicKeyFromPrivateKey = M, t.addressFromPublicKey = I, t.addressFromScript = T, t.addressFromContractId = x, t.addressFromTokenId = function(e) {
                                    return x(e);
                                }, t.contractIdFromTx = function(e, t) {
                                    const r = (0, f.hexToBinUnsafe)(e), n = new Uint8Array([
                                        ...r,
                                        t
                                    ]), i = u.default.blake2b(n, void 0, 32);
                                    return (0, f.binToHex)(i);
                                }, t.subContractId = function(e, t, r) {
                                    if (r < 0 || r >= h.TOTAL_NUMBER_OF_GROUPS) throw new Error(`Invalid group ${r}`);
                                    if (!(0, f.isHexString)(e)) throw new Error(`Invalid parent contract ID: ${e}, expected hex string`);
                                    if (!(0, f.isHexString)(t)) throw new Error(`Invalid path: ${t}, expected hex string`);
                                    const n = (0, f.concatBytes)([
                                        (0, f.hexToBinUnsafe)(e),
                                        (0, f.hexToBinUnsafe)(t)
                                    ]), i = new Uint8Array([
                                        ...u.default.blake2b(u.default.blake2b(n, void 0, 32), void 0, 32).slice(0, -1),
                                        r
                                    ]);
                                    return (0, f.binToHex)(i);
                                }, t.groupOfLockupScript = function(e) {
                                    if ("P2PKH" === e.kind) return C(e.value);
                                    if ("P2MPKH" === e.kind) return C(e.value.publicKeyHashes[0]);
                                    if ("P2SH" === e.kind) return C(e.value);
                                    {
                                        const t = e.value;
                                        return t["" + (t.length - 1)];
                                    }
                                };
                            },
                            2581: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__exportStar || function(e, t) {
                                    for(var r in e)"default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r);
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), i(r(5569), t);
                            },
                            127: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.Api = t.HttpClient = t.ContentType = void 0, r(9114);
                                const n = r(3760);
                                var i;
                                !function(e) {
                                    e.Json = "application/json", e.FormData = "multipart/form-data", e.UrlEncoded = "application/x-www-form-urlencoded", e.Text = "text/plain";
                                }(i = t.ContentType || (t.ContentType = {}));
                                class s {
                                    constructor(e = {}){
                                        this.baseUrl = "../", this.securityData = null, this.abortControllers = new Map, this.customFetch = (...e)=>fetch(...e), this.baseApiParams = {
                                            credentials: "same-origin",
                                            headers: {},
                                            redirect: "follow",
                                            referrerPolicy: "no-referrer"
                                        }, this.setSecurityData = (e)=>{
                                            this.securityData = e;
                                        }, this.contentFormatters = {
                                            [i.Json]: (e)=>null === e || "object" != typeof e && "string" != typeof e ? e : JSON.stringify(e),
                                            [i.Text]: (e)=>null !== e && "string" != typeof e ? JSON.stringify(e) : e,
                                            [i.FormData]: (e)=>Object.keys(e || {}).reduce((t, r)=>{
                                                    const n = e[r];
                                                    return t.append(r, n instanceof Blob ? n : "object" == typeof n && null !== n ? JSON.stringify(n) : `${n}`), t;
                                                }, new FormData),
                                            [i.UrlEncoded]: (e)=>this.toQueryString(e)
                                        }, this.createAbortSignal = (e)=>{
                                            if (this.abortControllers.has(e)) {
                                                const t = this.abortControllers.get(e);
                                                return t ? t.signal : void 0;
                                            }
                                            const t = new AbortController;
                                            return this.abortControllers.set(e, t), t.signal;
                                        }, this.abortRequest = (e)=>{
                                            const t = this.abortControllers.get(e);
                                            t && (t.abort(), this.abortControllers.delete(e));
                                        }, this.request = async ({ body: e, secure: t, path: r, type: n, query: s, format: o, baseUrl: a, cancelToken: c, ...h })=>{
                                            const u = ("boolean" == typeof t ? t : this.baseApiParams.secure) && this.securityWorker && await this.securityWorker(this.securityData) || {}, d = this.mergeRequestParams(h, u), f = s && this.toQueryString(s), l = this.contentFormatters[n || i.Json], p = o || d.format;
                                            return this.customFetch(`${a || this.baseUrl || ""}${r}${f ? `?${f}` : ""}`, {
                                                ...d,
                                                headers: {
                                                    ...d.headers || {},
                                                    ...n && n !== i.FormData ? {
                                                        "Content-Type": n
                                                    } : {}
                                                },
                                                signal: c ? this.createAbortSignal(c) : d.signal,
                                                body: null == e ? null : l(e)
                                            }).then(async (e)=>{
                                                const t = e;
                                                t.data = null, t.error = null;
                                                const r = p ? await e[p]().then((e)=>(t.ok ? t.data = e : t.error = e, t)).catch((e)=>(t.error = e, t)) : t;
                                                return c && this.abortControllers.delete(c), r;
                                            });
                                        }, Object.assign(this, e);
                                    }
                                    encodeQueryParam(e, t) {
                                        return `${encodeURIComponent(e)}=${encodeURIComponent("number" == typeof t ? t : `${t}`)}`;
                                    }
                                    addQueryParam(e, t) {
                                        return this.encodeQueryParam(t, e[t]);
                                    }
                                    addArrayQueryParam(e, t) {
                                        return e[t].map((e)=>this.encodeQueryParam(t, e)).join("&");
                                    }
                                    toQueryString(e) {
                                        const t = e || {};
                                        return Object.keys(t).filter((e)=>void 0 !== t[e]).map((e)=>Array.isArray(t[e]) ? this.addArrayQueryParam(t, e) : this.addQueryParam(t, e)).join("&");
                                    }
                                    addQueryParams(e) {
                                        const t = this.toQueryString(e);
                                        return t ? `?${t}` : "";
                                    }
                                    mergeRequestParams(e, t) {
                                        return {
                                            ...this.baseApiParams,
                                            ...e,
                                            ...t || {},
                                            headers: {
                                                ...this.baseApiParams.headers || {},
                                                ...e.headers || {},
                                                ...t && t.headers || {}
                                            }
                                        };
                                    }
                                }
                                t.HttpClient = s, t.Api = class extends s {
                                    constructor(){
                                        super(...arguments), this.wallets = {
                                            getWallets: (e = {})=>this.request({
                                                    path: "/wallets",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(n.convertHttpResponse),
                                            putWallets: (e, t = {})=>this.request({
                                                    path: "/wallets",
                                                    method: "PUT",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postWallets: (e, t = {})=>this.request({
                                                    path: "/wallets",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getWalletsWalletName: (e, t = {})=>this.request({
                                                    path: `/wallets/${e}`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            deleteWalletsWalletName: (e, t, r = {})=>this.request({
                                                    path: `/wallets/${e}`,
                                                    method: "DELETE",
                                                    query: t,
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            postWalletsWalletNameLock: (e, t = {})=>this.request({
                                                    path: `/wallets/${e}/lock`,
                                                    method: "POST",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postWalletsWalletNameUnlock: (e, t, r = {})=>this.request({
                                                    path: `/wallets/${e}/unlock`,
                                                    method: "POST",
                                                    body: t,
                                                    type: i.Json,
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            getWalletsWalletNameBalances: (e, t = {})=>this.request({
                                                    path: `/wallets/${e}/balances`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postWalletsWalletNameRevealMnemonic: (e, t, r = {})=>this.request({
                                                    path: `/wallets/${e}/reveal-mnemonic`,
                                                    method: "POST",
                                                    body: t,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            postWalletsWalletNameTransfer: (e, t, r = {})=>this.request({
                                                    path: `/wallets/${e}/transfer`,
                                                    method: "POST",
                                                    body: t,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            postWalletsWalletNameSweepActiveAddress: (e, t, r = {})=>this.request({
                                                    path: `/wallets/${e}/sweep-active-address`,
                                                    method: "POST",
                                                    body: t,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            postWalletsWalletNameSweepAllAddresses: (e, t, r = {})=>this.request({
                                                    path: `/wallets/${e}/sweep-all-addresses`,
                                                    method: "POST",
                                                    body: t,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            postWalletsWalletNameSign: (e, t, r = {})=>this.request({
                                                    path: `/wallets/${e}/sign`,
                                                    method: "POST",
                                                    body: t,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            getWalletsWalletNameAddresses: (e, t = {})=>this.request({
                                                    path: `/wallets/${e}/addresses`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getWalletsWalletNameAddressesAddress: (e, t, r = {})=>this.request({
                                                    path: `/wallets/${e}/addresses/${t}`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            getWalletsWalletNameMinerAddresses: (e, t = {})=>this.request({
                                                    path: `/wallets/${e}/miner-addresses`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postWalletsWalletNameDeriveNextAddress: (e, t, r = {})=>this.request({
                                                    path: `/wallets/${e}/derive-next-address`,
                                                    method: "POST",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            postWalletsWalletNameDeriveNextMinerAddresses: (e, t = {})=>this.request({
                                                    path: `/wallets/${e}/derive-next-miner-addresses`,
                                                    method: "POST",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postWalletsWalletNameChangeActiveAddress: (e, t, r = {})=>this.request({
                                                    path: `/wallets/${e}/change-active-address`,
                                                    method: "POST",
                                                    body: t,
                                                    type: i.Json,
                                                    ...r
                                                }).then(n.convertHttpResponse)
                                        }, this.infos = {
                                            getInfosNode: (e = {})=>this.request({
                                                    path: "/infos/node",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(n.convertHttpResponse),
                                            getInfosVersion: (e = {})=>this.request({
                                                    path: "/infos/version",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(n.convertHttpResponse),
                                            getInfosChainParams: (e = {})=>this.request({
                                                    path: "/infos/chain-params",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(n.convertHttpResponse),
                                            getInfosSelfClique: (e = {})=>this.request({
                                                    path: "/infos/self-clique",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(n.convertHttpResponse),
                                            getInfosInterCliquePeerInfo: (e = {})=>this.request({
                                                    path: "/infos/inter-clique-peer-info",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(n.convertHttpResponse),
                                            getInfosDiscoveredNeighbors: (e = {})=>this.request({
                                                    path: "/infos/discovered-neighbors",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(n.convertHttpResponse),
                                            getInfosMisbehaviors: (e = {})=>this.request({
                                                    path: "/infos/misbehaviors",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(n.convertHttpResponse),
                                            postInfosMisbehaviors: (e, t = {})=>this.request({
                                                    path: "/infos/misbehaviors",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getInfosUnreachable: (e = {})=>this.request({
                                                    path: "/infos/unreachable",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(n.convertHttpResponse),
                                            postInfosDiscovery: (e, t = {})=>this.request({
                                                    path: "/infos/discovery",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getInfosHistoryHashrate: (e, t = {})=>this.request({
                                                    path: "/infos/history-hashrate",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getInfosCurrentHashrate: (e, t = {})=>this.request({
                                                    path: "/infos/current-hashrate",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getInfosCurrentDifficulty: (e = {})=>this.request({
                                                    path: "/infos/current-difficulty",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(n.convertHttpResponse)
                                        }, this.blockflow = {
                                            getBlockflowBlocks: (e, t = {})=>this.request({
                                                    path: "/blockflow/blocks",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getBlockflowBlocksWithEvents: (e, t = {})=>this.request({
                                                    path: "/blockflow/blocks-with-events",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getBlockflowRichBlocks: (e, t = {})=>this.request({
                                                    path: "/blockflow/rich-blocks",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getBlockflowBlocksBlockHash: (e, t = {})=>this.request({
                                                    path: `/blockflow/blocks/${e}`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getBlockflowMainChainBlockByGhostUncleGhostUncleHash: (e, t = {})=>this.request({
                                                    path: `/blockflow/main-chain-block-by-ghost-uncle/${e}`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getBlockflowBlocksWithEventsBlockHash: (e, t = {})=>this.request({
                                                    path: `/blockflow/blocks-with-events/${e}`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getBlockflowRichBlocksBlockHash: (e, t = {})=>this.request({
                                                    path: `/blockflow/rich-blocks/${e}`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getBlockflowIsBlockInMainChain: (e, t = {})=>this.request({
                                                    path: "/blockflow/is-block-in-main-chain",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getBlockflowHashes: (e, t = {})=>this.request({
                                                    path: "/blockflow/hashes",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getBlockflowChainInfo: (e, t = {})=>this.request({
                                                    path: "/blockflow/chain-info",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getBlockflowHeadersBlockHash: (e, t = {})=>this.request({
                                                    path: `/blockflow/headers/${e}`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getBlockflowRawBlocksBlockHash: (e, t = {})=>this.request({
                                                    path: `/blockflow/raw-blocks/${e}`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse)
                                        }, this.addresses = {
                                            getAddressesAddressBalance: (e, t, r = {})=>this.request({
                                                    path: `/addresses/${e}/balance`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            getAddressesAddressUtxos: (e, t = {})=>this.request({
                                                    path: `/addresses/${e}/utxos`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getAddressesAddressGroup: (e, t = {})=>this.request({
                                                    path: `/addresses/${e}/group`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse)
                                        }, this.transactions = {
                                            postTransactionsBuild: (e, t = {})=>this.request({
                                                    path: "/transactions/build",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postTransactionsBuildTransferFromOneToManyGroups: (e, t = {})=>this.request({
                                                    path: "/transactions/build-transfer-from-one-to-many-groups",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postTransactionsBuildMultiAddresses: (e, t = {})=>this.request({
                                                    path: "/transactions/build-multi-addresses",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postTransactionsSweepAddressBuild: (e, t = {})=>this.request({
                                                    path: "/transactions/sweep-address/build",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postTransactionsSubmit: (e, t = {})=>this.request({
                                                    path: "/transactions/submit",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postTransactionsDecodeUnsignedTx: (e, t = {})=>this.request({
                                                    path: "/transactions/decode-unsigned-tx",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getTransactionsDetailsTxid: (e, t, r = {})=>this.request({
                                                    path: `/transactions/details/${e}`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            getTransactionsRichDetailsTxid: (e, t, r = {})=>this.request({
                                                    path: `/transactions/rich-details/${e}`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            getTransactionsRawTxid: (e, t, r = {})=>this.request({
                                                    path: `/transactions/raw/${e}`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            getTransactionsStatus: (e, t = {})=>this.request({
                                                    path: "/transactions/status",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getTransactionsTxIdFromOutputref: (e, t = {})=>this.request({
                                                    path: "/transactions/tx-id-from-outputref",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postTransactionsBuildChained: (e, t = {})=>this.request({
                                                    path: "/transactions/build-chained",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse)
                                        }, this.mempool = {
                                            getMempoolTransactions: (e = {})=>this.request({
                                                    path: "/mempool/transactions",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(n.convertHttpResponse),
                                            deleteMempoolTransactions: (e = {})=>this.request({
                                                    path: "/mempool/transactions",
                                                    method: "DELETE",
                                                    ...e
                                                }).then(n.convertHttpResponse),
                                            putMempoolTransactionsRebroadcast: (e, t = {})=>this.request({
                                                    path: "/mempool/transactions/rebroadcast",
                                                    method: "PUT",
                                                    query: e,
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            putMempoolTransactionsValidate: (e = {})=>this.request({
                                                    path: "/mempool/transactions/validate",
                                                    method: "PUT",
                                                    ...e
                                                }).then(n.convertHttpResponse)
                                        }, this.contracts = {
                                            postContractsCompileScript: (e, t = {})=>this.request({
                                                    path: "/contracts/compile-script",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postContractsUnsignedTxExecuteScript: (e, t = {})=>this.request({
                                                    path: "/contracts/unsigned-tx/execute-script",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postContractsCompileContract: (e, t = {})=>this.request({
                                                    path: "/contracts/compile-contract",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postContractsCompileProject: (e, t = {})=>this.request({
                                                    path: "/contracts/compile-project",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postContractsUnsignedTxDeployContract: (e, t = {})=>this.request({
                                                    path: "/contracts/unsigned-tx/deploy-contract",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getContractsAddressState: (e, t = {})=>this.request({
                                                    path: `/contracts/${e}/state`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getContractsCodehashCode: (e, t = {})=>this.request({
                                                    path: `/contracts/${e}/code`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postContractsTestContract: (e, t = {})=>this.request({
                                                    path: "/contracts/test-contract",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postContractsCallContract: (e, t = {})=>this.request({
                                                    path: "/contracts/call-contract",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postContractsMulticallContract: (e, t = {})=>this.request({
                                                    path: "/contracts/multicall-contract",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getContractsAddressParent: (e, t = {})=>this.request({
                                                    path: `/contracts/${e}/parent`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getContractsAddressSubContracts: (e, t, r = {})=>this.request({
                                                    path: `/contracts/${e}/sub-contracts`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            getContractsAddressSubContractsCurrentCount: (e, t = {})=>this.request({
                                                    path: `/contracts/${e}/sub-contracts/current-count`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postContractsCallTxScript: (e, t = {})=>this.request({
                                                    path: "/contracts/call-tx-script",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse)
                                        }, this.multisig = {
                                            postMultisigAddress: (e, t = {})=>this.request({
                                                    path: "/multisig/address",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postMultisigBuild: (e, t = {})=>this.request({
                                                    path: "/multisig/build",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postMultisigSweep: (e, t = {})=>this.request({
                                                    path: "/multisig/sweep",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postMultisigSubmit: (e, t = {})=>this.request({
                                                    path: "/multisig/submit",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse)
                                        }, this.miners = {
                                            postMinersCpuMining: (e, t = {})=>this.request({
                                                    path: "/miners/cpu-mining",
                                                    method: "POST",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postMinersCpuMiningMineOneBlock: (e, t = {})=>this.request({
                                                    path: "/miners/cpu-mining/mine-one-block",
                                                    method: "POST",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getMinersAddresses: (e = {})=>this.request({
                                                    path: "/miners/addresses",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(n.convertHttpResponse),
                                            putMinersAddresses: (e, t = {})=>this.request({
                                                    path: "/miners/addresses",
                                                    method: "PUT",
                                                    body: e,
                                                    type: i.Json,
                                                    ...t
                                                }).then(n.convertHttpResponse)
                                        }, this.events = {
                                            getEventsContractContractaddress: (e, t, r = {})=>this.request({
                                                    path: `/events/contract/${e}`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            getEventsContractContractaddressCurrentCount: (e, t = {})=>this.request({
                                                    path: `/events/contract/${e}/current-count`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            getEventsTxIdTxid: (e, t, r = {})=>this.request({
                                                    path: `/events/tx-id/${e}`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse),
                                            getEventsBlockHashBlockhash: (e, t, r = {})=>this.request({
                                                    path: `/events/block-hash/${e}`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(n.convertHttpResponse)
                                        }, this.utils = {
                                            postUtilsVerifySignature: (e, t = {})=>this.request({
                                                    path: "/utils/verify-signature",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            postUtilsTargetToHashrate: (e, t = {})=>this.request({
                                                    path: "/utils/target-to-hashrate",
                                                    method: "POST",
                                                    body: e,
                                                    type: i.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(n.convertHttpResponse),
                                            putUtilsCheckHashIndexing: (e = {})=>this.request({
                                                    path: "/utils/check-hash-indexing",
                                                    method: "PUT",
                                                    ...e
                                                }).then(n.convertHttpResponse)
                                        };
                                    }
                                };
                            },
                            3877: (e, t, r)=>{
                                "use strict";
                                var n, i, s, o, a, c, h, u, d;
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.Api = t.HttpClient = t.ContentType = t.Currencies = t.MaxSizeAddresses = t.MaxSizeAddressesForTokens = t.MaxSizeTokens = t.PaginationPageDefault = t.PaginationLimitMax = t.PaginationLimitDefault = t.TokenStdInterfaceId = t.IntervalType = void 0, (d = t.IntervalType || (t.IntervalType = {})).Daily = "daily", d.Hourly = "hourly", d.Weekly = "weekly", (u = t.TokenStdInterfaceId || (t.TokenStdInterfaceId = {})).Fungible = "fungible", u.NonFungible = "non-fungible", u.NonStandard = "non-standard", (h = t.PaginationLimitDefault || (t.PaginationLimitDefault = {}))[h.Value20 = 20] = "Value20", h[h.Value10 = 10] = "Value10", (c = t.PaginationLimitMax || (t.PaginationLimitMax = {}))[c.Value100 = 100] = "Value100", c[c.Value20 = 20] = "Value20", (a = t.PaginationPageDefault || (t.PaginationPageDefault = {}))[a.Value1 = 1] = "Value1", (o = t.MaxSizeTokens || (t.MaxSizeTokens = {}))[o.Value80 = 80] = "Value80", (s = t.MaxSizeAddressesForTokens || (t.MaxSizeAddressesForTokens = {}))[s.Value80 = 80] = "Value80", (i = t.MaxSizeAddresses || (t.MaxSizeAddresses = {}))[i.Value80 = 80] = "Value80", (n = t.Currencies || (t.Currencies = {})).Btc = "btc", n.Eth = "eth", n.Usd = "usd", n.Eur = "eur", n.Chf = "chf", n.Gbp = "gbp", n.Idr = "idr", n.Vnd = "vnd", n.Rub = "rub", n.Try = "try", n.Cad = "cad", n.Aud = "aud", r(9114);
                                const f = r(3760);
                                var l;
                                !function(e) {
                                    e.Json = "application/json", e.FormData = "multipart/form-data", e.UrlEncoded = "application/x-www-form-urlencoded", e.Text = "text/plain";
                                }(l = t.ContentType || (t.ContentType = {}));
                                class p {
                                    constructor(e = {}){
                                        this.baseUrl = "", this.securityData = null, this.abortControllers = new Map, this.customFetch = (...e)=>fetch(...e), this.baseApiParams = {
                                            credentials: "same-origin",
                                            headers: {},
                                            redirect: "follow",
                                            referrerPolicy: "no-referrer"
                                        }, this.setSecurityData = (e)=>{
                                            this.securityData = e;
                                        }, this.contentFormatters = {
                                            [l.Json]: (e)=>null === e || "object" != typeof e && "string" != typeof e ? e : JSON.stringify(e),
                                            [l.Text]: (e)=>null !== e && "string" != typeof e ? JSON.stringify(e) : e,
                                            [l.FormData]: (e)=>Object.keys(e || {}).reduce((t, r)=>{
                                                    const n = e[r];
                                                    return t.append(r, n instanceof Blob ? n : "object" == typeof n && null !== n ? JSON.stringify(n) : `${n}`), t;
                                                }, new FormData),
                                            [l.UrlEncoded]: (e)=>this.toQueryString(e)
                                        }, this.createAbortSignal = (e)=>{
                                            if (this.abortControllers.has(e)) {
                                                const t = this.abortControllers.get(e);
                                                return t ? t.signal : void 0;
                                            }
                                            const t = new AbortController;
                                            return this.abortControllers.set(e, t), t.signal;
                                        }, this.abortRequest = (e)=>{
                                            const t = this.abortControllers.get(e);
                                            t && (t.abort(), this.abortControllers.delete(e));
                                        }, this.request = async ({ body: e, secure: t, path: r, type: n, query: i, format: s, baseUrl: o, cancelToken: a, ...c })=>{
                                            const h = ("boolean" == typeof t ? t : this.baseApiParams.secure) && this.securityWorker && await this.securityWorker(this.securityData) || {}, u = this.mergeRequestParams(c, h), d = i && this.toQueryString(i), f = this.contentFormatters[n || l.Json], p = s || u.format;
                                            return this.customFetch(`${o || this.baseUrl || ""}${r}${d ? `?${d}` : ""}`, {
                                                ...u,
                                                headers: {
                                                    ...u.headers || {},
                                                    ...n && n !== l.FormData ? {
                                                        "Content-Type": n
                                                    } : {}
                                                },
                                                signal: a ? this.createAbortSignal(a) : u.signal,
                                                body: null == e ? null : f(e)
                                            }).then(async (e)=>{
                                                const t = e;
                                                t.data = null, t.error = null;
                                                const r = p ? await e[p]().then((e)=>(t.ok ? t.data = e : t.error = e, t)).catch((e)=>(t.error = e, t)) : t;
                                                return a && this.abortControllers.delete(a), r;
                                            });
                                        }, Object.assign(this, e);
                                    }
                                    encodeQueryParam(e, t) {
                                        return `${encodeURIComponent(e)}=${encodeURIComponent("number" == typeof t ? t : `${t}`)}`;
                                    }
                                    addQueryParam(e, t) {
                                        return this.encodeQueryParam(t, e[t]);
                                    }
                                    addArrayQueryParam(e, t) {
                                        return e[t].map((e)=>this.encodeQueryParam(t, e)).join("&");
                                    }
                                    toQueryString(e) {
                                        const t = e || {};
                                        return Object.keys(t).filter((e)=>void 0 !== t[e]).map((e)=>Array.isArray(t[e]) ? this.addArrayQueryParam(t, e) : this.addQueryParam(t, e)).join("&");
                                    }
                                    addQueryParams(e) {
                                        const t = this.toQueryString(e);
                                        return t ? `?${t}` : "";
                                    }
                                    mergeRequestParams(e, t) {
                                        return {
                                            ...this.baseApiParams,
                                            ...e,
                                            ...t || {},
                                            headers: {
                                                ...this.baseApiParams.headers || {},
                                                ...e.headers || {},
                                                ...t && t.headers || {}
                                            }
                                        };
                                    }
                                }
                                t.HttpClient = p, t.Api = class extends p {
                                    constructor(){
                                        super(...arguments), this.blocks = {
                                            getBlocks: (e, t = {})=>this.request({
                                                    path: "/blocks",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getBlocksBlockHash: (e, t = {})=>this.request({
                                                    path: `/blocks/${e}`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getBlocksBlockHashTransactions: (e, t, r = {})=>this.request({
                                                    path: `/blocks/${e}/transactions`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse)
                                        }, this.transactions = {
                                            getTransactionsTransactionHash: (e, t = {})=>this.request({
                                                    path: `/transactions/${e}`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse)
                                        }, this.addresses = {
                                            getAddressesAddress: (e, t = {})=>this.request({
                                                    path: `/addresses/${e}`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getAddressesAddressTransactions: (e, t, r = {})=>this.request({
                                                    path: `/addresses/${e}/transactions`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse),
                                            postAddressesTransactions: (e, t, r = {})=>this.request({
                                                    path: "/addresses/transactions",
                                                    method: "POST",
                                                    query: e,
                                                    body: t,
                                                    type: l.Json,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse),
                                            getAddressesAddressTimerangedTransactions: (e, t, r = {})=>this.request({
                                                    path: `/addresses/${e}/timeranged-transactions`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse),
                                            getAddressesAddressTotalTransactions: (e, t = {})=>this.request({
                                                    path: `/addresses/${e}/total-transactions`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getAddressesAddressLatestTransaction: (e, t = {})=>this.request({
                                                    path: `/addresses/${e}/latest-transaction`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getAddressesAddressMempoolTransactions: (e, t = {})=>this.request({
                                                    path: `/addresses/${e}/mempool/transactions`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getAddressesAddressBalance: (e, t = {})=>this.request({
                                                    path: `/addresses/${e}/balance`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getAddressesAddressTokens: (e, t, r = {})=>this.request({
                                                    path: `/addresses/${e}/tokens`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse),
                                            getAddressesAddressTokensTokenIdTransactions: (e, t, r, n = {})=>this.request({
                                                    path: `/addresses/${e}/tokens/${t}/transactions`,
                                                    method: "GET",
                                                    query: r,
                                                    format: "json",
                                                    ...n
                                                }).then(f.convertHttpResponse),
                                            getAddressesAddressTokensTokenIdBalance: (e, t, r = {})=>this.request({
                                                    path: `/addresses/${e}/tokens/${t}/balance`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse),
                                            getAddressesAddressPublicKey: (e, t = {})=>this.request({
                                                    path: `/addresses/${e}/public-key`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getAddressesAddressTokensBalance: (e, t, r = {})=>this.request({
                                                    path: `/addresses/${e}/tokens-balance`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse),
                                            postAddressesUsed: (e, t = {})=>this.request({
                                                    path: "/addresses/used",
                                                    method: "POST",
                                                    body: e,
                                                    type: l.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getAddressesAddressExportTransactionsCsv: (e, t, r = {})=>this.request({
                                                    path: `/addresses/${e}/export-transactions/csv`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "text",
                                                    ...r
                                                }).then(f.convertHttpResponse),
                                            getAddressesAddressAmountHistoryDeprecated: (e, t, r = {})=>this.request({
                                                    path: `/addresses/${e}/amount-history-DEPRECATED`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse),
                                            getAddressesAddressAmountHistory: (e, t, r = {})=>this.request({
                                                    path: `/addresses/${e}/amount-history`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse)
                                        }, this.infos = {
                                            getInfos: (e = {})=>this.request({
                                                    path: "/infos",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(f.convertHttpResponse),
                                            getInfosHeights: (e = {})=>this.request({
                                                    path: "/infos/heights",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(f.convertHttpResponse),
                                            getInfosSupply: (e, t = {})=>this.request({
                                                    path: "/infos/supply",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getInfosSupplyTotalAlph: (e = {})=>this.request({
                                                    path: "/infos/supply/total-alph",
                                                    method: "GET",
                                                    format: "text",
                                                    ...e
                                                }).then(f.convertHttpResponse),
                                            getInfosSupplyCirculatingAlph: (e = {})=>this.request({
                                                    path: "/infos/supply/circulating-alph",
                                                    method: "GET",
                                                    format: "text",
                                                    ...e
                                                }).then(f.convertHttpResponse),
                                            getInfosSupplyReservedAlph: (e = {})=>this.request({
                                                    path: "/infos/supply/reserved-alph",
                                                    method: "GET",
                                                    format: "text",
                                                    ...e
                                                }).then(f.convertHttpResponse),
                                            getInfosSupplyLockedAlph: (e = {})=>this.request({
                                                    path: "/infos/supply/locked-alph",
                                                    method: "GET",
                                                    format: "text",
                                                    ...e
                                                }).then(f.convertHttpResponse),
                                            getInfosTotalTransactions: (e = {})=>this.request({
                                                    path: "/infos/total-transactions",
                                                    method: "GET",
                                                    format: "text",
                                                    ...e
                                                }).then(f.convertHttpResponse),
                                            getInfosAverageBlockTimes: (e = {})=>this.request({
                                                    path: "/infos/average-block-times",
                                                    method: "GET",
                                                    format: "json",
                                                    ...e
                                                }).then(f.convertHttpResponse)
                                        }, this.mempool = {
                                            getMempoolTransactions: (e, t = {})=>this.request({
                                                    path: "/mempool/transactions",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse)
                                        }, this.tokens = {
                                            getTokens: (e, t = {})=>this.request({
                                                    path: "/tokens",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            postTokens: (e, t = {})=>this.request({
                                                    path: "/tokens",
                                                    method: "POST",
                                                    body: e,
                                                    type: l.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getTokensTokenIdTransactions: (e, t, r = {})=>this.request({
                                                    path: `/tokens/${e}/transactions`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse),
                                            getTokensTokenIdAddresses: (e, t, r = {})=>this.request({
                                                    path: `/tokens/${e}/addresses`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse),
                                            postTokensFungibleMetadata: (e, t = {})=>this.request({
                                                    path: "/tokens/fungible-metadata",
                                                    method: "POST",
                                                    body: e,
                                                    type: l.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            postTokensNftMetadata: (e, t = {})=>this.request({
                                                    path: "/tokens/nft-metadata",
                                                    method: "POST",
                                                    body: e,
                                                    type: l.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            postTokensNftCollectionMetadata: (e, t = {})=>this.request({
                                                    path: "/tokens/nft-collection-metadata",
                                                    method: "POST",
                                                    body: e,
                                                    type: l.Json,
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getTokensHoldersAlph: (e, t = {})=>this.request({
                                                    path: "/tokens/holders/alph",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getTokensHoldersTokenTokenId: (e, t, r = {})=>this.request({
                                                    path: `/tokens/holders/token/${e}`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse)
                                        }, this.charts = {
                                            getChartsHashrates: (e, t = {})=>this.request({
                                                    path: "/charts/hashrates",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getChartsTransactionsCount: (e, t = {})=>this.request({
                                                    path: "/charts/transactions-count",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getChartsTransactionsCountPerChain: (e, t = {})=>this.request({
                                                    path: "/charts/transactions-count-per-chain",
                                                    method: "GET",
                                                    query: e,
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse)
                                        }, this.contractEvents = {
                                            getContractEventsTransactionIdTransactionId: (e, t = {})=>this.request({
                                                    path: `/contract-events/transaction-id/${e}`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getContractEventsContractAddressContractAddress: (e, t, r = {})=>this.request({
                                                    path: `/contract-events/contract-address/${e}`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse),
                                            getContractEventsContractAddressContractAddressInputAddressInputAddress: (e, t, r, n = {})=>this.request({
                                                    path: `/contract-events/contract-address/${e}/input-address/${t}`,
                                                    method: "GET",
                                                    query: r,
                                                    format: "json",
                                                    ...n
                                                }).then(f.convertHttpResponse)
                                        }, this.contracts = {
                                            getContractsContractAddressCurrentLiveness: (e, t = {})=>this.request({
                                                    path: `/contracts/${e}/current-liveness`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getContractsContractAddressParent: (e, t = {})=>this.request({
                                                    path: `/contracts/${e}/parent`,
                                                    method: "GET",
                                                    format: "json",
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            getContractsContractAddressSubContracts: (e, t, r = {})=>this.request({
                                                    path: `/contracts/${e}/sub-contracts`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse)
                                        }, this.market = {
                                            postMarketPrices: (e, t, r = {})=>this.request({
                                                    path: "/market/prices",
                                                    method: "POST",
                                                    query: e,
                                                    body: t,
                                                    type: l.Json,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse),
                                            getMarketPricesSymbolCharts: (e, t, r = {})=>this.request({
                                                    path: `/market/prices/${e}/charts`,
                                                    method: "GET",
                                                    query: t,
                                                    format: "json",
                                                    ...r
                                                }).then(f.convertHttpResponse)
                                        }, this.utils = {
                                            putUtilsSanityCheck: (e = {})=>this.request({
                                                    path: "/utils/sanity-check",
                                                    method: "PUT",
                                                    ...e
                                                }).then(f.convertHttpResponse),
                                            putUtilsUpdateGlobalLoglevel: (e, t = {})=>this.request({
                                                    path: "/utils/update-global-loglevel",
                                                    method: "PUT",
                                                    body: e,
                                                    ...t
                                                }).then(f.convertHttpResponse),
                                            putUtilsUpdateLogConfig: (e, t = {})=>this.request({
                                                    path: "/utils/update-log-config",
                                                    method: "PUT",
                                                    body: e,
                                                    type: l.Json,
                                                    ...t
                                                }).then(f.convertHttpResponse)
                                        };
                                    }
                                };
                            },
                            1442: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.ExplorerProvider = void 0;
                                const n = r(4156), i = r(3877);
                                class s {
                                    constructor(e, t, r){
                                        let o;
                                        this.request = (e)=>(0, n.request)(this, e), "string" == typeof e ? o = function(e, t, r) {
                                            const n = new i.Api({
                                                baseUrl: e,
                                                baseApiParams: {
                                                    secure: !0
                                                },
                                                securityWorker: (e)=>null !== e ? {
                                                        headers: {
                                                            "X-API-KEY": `${e}`
                                                        }
                                                    } : {},
                                                customFetch: r ?? ((...e)=>fetch(...e))
                                            });
                                            return n.setSecurityData(t ?? null), n;
                                        }(e, t, r) : "function" == typeof e ? (o = new s("https://1.2.3.4:0"), (0, n.forwardRequests)(o, e)) : o = e, this.blocks = {
                                            ...o.blocks
                                        }, this.transactions = {
                                            ...o.transactions
                                        }, this.addresses = {
                                            ...o.addresses
                                        }, this.infos = {
                                            ...o.infos
                                        }, this.mempool = {
                                            ...o.mempool
                                        }, this.tokens = {
                                            ...o.tokens
                                        }, this.charts = {
                                            ...o.charts
                                        }, this.utils = {
                                            ...o.utils
                                        }, this.contracts = {
                                            ...o.contracts
                                        }, this.market = {
                                            ...o.market
                                        }, this.contractEvents = {
                                            ...o.contractEvents
                                        };
                                    }
                                    static Proxy(e) {
                                        return new s(e);
                                    }
                                    static Remote(e) {
                                        return new s(e);
                                    }
                                }
                                t.ExplorerProvider = s;
                            },
                            3749: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                                    Object.defineProperty(e, "default", {
                                        enumerable: !0,
                                        value: t
                                    });
                                } : function(e, t) {
                                    e.default = t;
                                }), s = this && this.__exportStar || function(e, t) {
                                    for(var r in e)"default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r);
                                }, o = this && this.__importStar || function(e) {
                                    if (e && e.__esModule) return e;
                                    var t = {};
                                    if (null != e) for(var r in e)"default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                                    return i(t, e), t;
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.explorer = t.node = void 0, s(r(2707), t), s(r(1442), t), t.node = o(r(127)), t.explorer = o(r(3877)), s(r(4156), t), s(r(3760), t);
                            },
                            2707: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.tryGetCallResult = t.NodeProvider = void 0;
                                const n = r(4156), i = r(127), s = r(664), o = r(2581);
                                class a {
                                    constructor(e, t, r){
                                        let h;
                                        this.request = (e)=>(0, n.request)(this, e), this.fetchFungibleTokenMetaData = async (e)=>{
                                            const t = (0, o.addressFromTokenId)(e), r = (0, o.groupOfAddress)(t), n = Array.from([
                                                0,
                                                1,
                                                2,
                                                3
                                            ], (e)=>({
                                                    methodIndex: e,
                                                    group: r,
                                                    address: t
                                                })), i = (await this.contracts.postContractsMulticallContract({
                                                calls: n
                                            })).results.map((e)=>c(e));
                                            return {
                                                symbol: i[0].returns[0].value,
                                                name: i[1].returns[0].value,
                                                decimals: Number(i[2].returns[0].value),
                                                totalSupply: BigInt(i[3].returns[0].value)
                                            };
                                        }, this.fetchNFTMetaData = async (e)=>{
                                            const t = (0, o.addressFromTokenId)(e), r = (0, o.groupOfAddress)(t), n = Array.from([
                                                0,
                                                1
                                            ], (e)=>({
                                                    methodIndex: e,
                                                    group: r,
                                                    address: t
                                                })), i = await this.contracts.postContractsMulticallContract({
                                                calls: n
                                            }), a = (0, s.hexToString)(c(i.results[0]).returns[0].value);
                                            if ("CallContractSucceeded" === i.results[1].type) {
                                                const e = i.results[1];
                                                if (void 0 === e.returns[0]) throw new Error("Deprecated NFT contract");
                                                const t = e.returns[0].value;
                                                if (void 0 === t || !(0, s.isHexString)(t) || 64 !== t.length) throw new Error("Deprecated NFT contract");
                                                const r = e.returns[1];
                                                if (void 0 === r) throw new Error("Deprecated NFT contract");
                                                const n = (0, s.toNonNegativeBigInt)(r.value);
                                                if (void 0 === n) throw new Error("Deprecated NFT contract");
                                                if (void 0 !== e.returns[2]) throw new Error("Deprecated NFT contract");
                                                return {
                                                    tokenUri: a,
                                                    collectionId: t,
                                                    nftIndex: n
                                                };
                                            }
                                            {
                                                const e = i.results[1];
                                                throw e.error.startsWith("VM execution error: Invalid method index") ? new Error("Deprecated NFT contract") : new Error(`Failed to call contract, error: ${e.error}`);
                                            }
                                        }, this.fetchNFTCollectionMetaData = async (e)=>{
                                            const t = (0, o.addressFromContractId)(e), r = (0, o.groupOfAddress)(t), n = Array.from([
                                                0,
                                                1
                                            ], (e)=>({
                                                    methodIndex: e,
                                                    group: r,
                                                    address: t
                                                })), i = (await this.contracts.postContractsMulticallContract({
                                                calls: n
                                            })).results.map((e)=>c(e));
                                            return {
                                                collectionUri: (0, s.hexToString)(i[0].returns[0].value),
                                                totalSupply: BigInt(i[1].returns[0].value)
                                            };
                                        }, this.fetchNFTRoyaltyAmount = async (e, t, r)=>{
                                            const n = (0, o.addressFromContractId)(e), i = (0, o.groupOfAddress)(n), s = c(await this.contracts.postContractsCallContract({
                                                address: n,
                                                group: i,
                                                methodIndex: 4,
                                                args: [
                                                    {
                                                        type: "ByteVec",
                                                        value: t
                                                    },
                                                    {
                                                        type: "U256",
                                                        value: r.toString()
                                                    }
                                                ]
                                            }));
                                            return BigInt(s.returns[0].value);
                                        }, this.guessStdInterfaceId = async (e)=>{
                                            const t = (0, o.addressFromTokenId)(e), r = await this.contracts.getContractsAddressState(t), n = r.immFields.slice(-1).pop()?.value;
                                            return "string" == typeof n && n.startsWith("414c5048") ? n.slice(8) : void 0;
                                        }, this.guessFollowsNFTCollectionStd = async (e)=>{
                                            const t = await this.guessStdInterfaceId(e);
                                            return !!t && t.startsWith(n.StdInterfaceIds.NFTCollection);
                                        }, this.guessFollowsNFTCollectionWithRoyaltyStd = async (e)=>await this.guessStdInterfaceId(e) === n.StdInterfaceIds.NFTCollectionWithRoyalty, this.guessStdTokenType = async (e)=>{
                                            const t = await this.guessStdInterfaceId(e);
                                            switch(!0){
                                                case t?.startsWith(n.StdInterfaceIds.FungibleToken):
                                                    return "fungible";
                                                case t?.startsWith(n.StdInterfaceIds.NFT):
                                                    return "non-fungible";
                                                default:
                                                    return;
                                            }
                                        }, "string" == typeof e ? h = function(e, t, r) {
                                            const n = new i.Api({
                                                baseUrl: e,
                                                baseApiParams: {
                                                    secure: !0
                                                },
                                                securityWorker: (e)=>null !== e ? {
                                                        headers: {
                                                            "X-API-KEY": `${e}`
                                                        }
                                                    } : {},
                                                customFetch: r ?? ((...e)=>fetch(...e))
                                            });
                                            return n.setSecurityData(t ?? null), n;
                                        }(e, t, r) : "function" == typeof e ? (h = new a("https://1.2.3.4:0"), (0, n.forwardRequests)(h, e)) : h = e, this.wallets = {
                                            ...h.wallets
                                        }, this.infos = {
                                            ...h.infos
                                        }, this.blockflow = {
                                            ...h.blockflow
                                        }, this.addresses = {
                                            ...h.addresses
                                        }, this.transactions = {
                                            ...h.transactions
                                        }, this.mempool = {
                                            ...h.mempool
                                        }, this.contracts = {
                                            ...h.contracts
                                        }, this.multisig = {
                                            ...h.multisig
                                        }, this.utils = {
                                            ...h.utils
                                        }, this.miners = {
                                            ...h.miners
                                        }, this.events = {
                                            ...h.events
                                        }, (0, n.requestWithLog)(this);
                                    }
                                    static Proxy(e) {
                                        return new a(e);
                                    }
                                    static Remote(e) {
                                        return new a(e);
                                    }
                                }
                                function c(e) {
                                    if ("CallContractFailed" === e.type) throw new Error(`Failed to call contract, error: ${e.error}`);
                                    return e;
                                }
                                t.NodeProvider = a, t.tryGetCallResult = c;
                            },
                            4156: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.StdInterfaceIds = t.request = t.requestWithLog = t.forwardRequests = t.getDefaultPrimitiveValue = t.decodeArrayType = t.fromApiPrimitiveVal = t.toApiVal = t.toApiArray = t.toApiAddress = t.toApiByteVec = t.fromApiNumber256 = t.toApiNumber256Optional = t.toApiNumber256 = t.toApiBoolean = t.fromApiTokens = t.fromApiToken = t.toApiTokens = t.toApiToken = t.PrimitiveTypes = void 0;
                                const n = r(7695), i = r(2505), s = r(4652), o = r(664);
                                function a(e) {
                                    return {
                                        id: e.id,
                                        amount: u(e.amount)
                                    };
                                }
                                function c(e) {
                                    return {
                                        id: e.id,
                                        amount: d(e.amount)
                                    };
                                }
                                function h(e) {
                                    if ("boolean" == typeof e) return e;
                                    throw new Error(`Invalid boolean value: ${e}`);
                                }
                                function u(e) {
                                    if ("number" == typeof e && Number.isInteger(e) || "bigint" == typeof e) return e.toString();
                                    if ("string" == typeof e) try {
                                        if (BigInt(e).toString() === e) return e;
                                    } catch (t) {
                                        throw new s.TraceableError(`Invalid value: ${e}, expected a 256 bit number`, t);
                                    }
                                    throw new Error(`Invalid value: ${e}, expected a 256 bit number`);
                                }
                                function d(e) {
                                    return BigInt(e);
                                }
                                function f(e) {
                                    if ("string" != typeof e) throw new Error(`Invalid value: ${e}, expected a hex-string`);
                                    if ((0, o.isHexString)(e)) return e;
                                    if ((0, o.isBase58)(e)) {
                                        const t = (0, o.base58ToBytes)(e);
                                        if (33 === t.length && 3 === t[0]) return (0, o.binToHex)(t.slice(1));
                                    }
                                    throw new Error(`Invalid hex-string: ${e}`);
                                }
                                function l(e) {
                                    if ("string" == typeof e) {
                                        if ((0, o.isBase58)(e)) return e;
                                        throw new Error(`Invalid base58 string: ${e}`);
                                    }
                                    throw new Error(`Invalid value: ${e}, expected a base58 string`);
                                }
                                function p(e, t) {
                                    if (!Array.isArray(t)) throw new Error(`Expected array, got ${t}`);
                                    const r = e.lastIndexOf(";");
                                    if (-1 == r) throw new Error(`Invalid Val type: ${e}`);
                                    const n = e.slice(1, r), i = parseInt(e.slice(r + 1, -1));
                                    if (t.length != i) throw new Error(`Invalid val dimension: ${t}`);
                                    return {
                                        value: t.map((e)=>b(e, n)),
                                        type: "Array"
                                    };
                                }
                                function b(e, t) {
                                    return "Bool" === t ? {
                                        value: h(e),
                                        type: t
                                    } : "U256" === t || "I256" === t ? {
                                        value: u(e),
                                        type: t
                                    } : "ByteVec" === t ? {
                                        value: f(e),
                                        type: t
                                    } : "Address" === t ? {
                                        value: l(e),
                                        type: t
                                    } : p(t, e);
                                }
                                async function g(e, t) {
                                    const r = (0, i.isDebugModeEnabled)(), { path: n, method: o, params: a } = e;
                                    r && console.log(`[REQUEST] ${n} ${o} ${JSON.stringify(a)}`);
                                    try {
                                        const i = await t(e);
                                        return r && console.log(`[RESPONSE] ${n} ${o} ${JSON.stringify(i)}`), i;
                                    } catch (e) {
                                        throw r && console.error(`[ERROR] ${n} ${o} `, e), new s.TraceableError(`Failed to request ${o}`, e);
                                    }
                                }
                                var m;
                                t.PrimitiveTypes = [
                                    "U256",
                                    "I256",
                                    "Bool",
                                    "ByteVec",
                                    "Address"
                                ], o.assertType, t.toApiToken = a, t.toApiTokens = function(e) {
                                    return e?.map(a);
                                }, t.fromApiToken = c, t.fromApiTokens = function(e) {
                                    return e?.map(c);
                                }, t.toApiBoolean = h, t.toApiNumber256 = u, t.toApiNumber256Optional = function(e) {
                                    return void 0 === e ? void 0 : u(e);
                                }, t.fromApiNumber256 = d, t.toApiByteVec = f, t.toApiAddress = l, t.toApiArray = p, t.toApiVal = b, t.fromApiPrimitiveVal = function(e, t, r = !1) {
                                    if ("Bool" === t && e.type === t) return e.value;
                                    if ("U256" !== t && "I256" !== t || e.type !== t) {
                                        if ("ByteVec" !== t && "Address" !== t || e.type !== t && !r) throw new Error(`Expected primitive type, got ${t}`);
                                        return e.value;
                                    }
                                    return d(e.value);
                                }, t.decodeArrayType = function(e) {
                                    const t = e.lastIndexOf(";");
                                    if (-1 === t) throw new Error(`Invalid array type: ${e}`);
                                    return [
                                        e.slice(1, t),
                                        parseInt(e.slice(t + 1, -1))
                                    ];
                                }, t.getDefaultPrimitiveValue = function(e) {
                                    if ("U256" === e || "I256" === e) return 0n;
                                    if ("Bool" === e) return !1;
                                    if ("ByteVec" === e) return "";
                                    if ("Address" === e) return n.ZERO_ADDRESS;
                                    throw Error(`Expected primitive type, got ${e}`);
                                }, t.forwardRequests = function(e, t) {
                                    for (const [r, n] of Object.entries(e))for (const e of Object.keys(n))n[`${e}`] = async (...n)=>g({
                                            path: r,
                                            method: e,
                                            params: n
                                        }, t);
                                }, t.requestWithLog = function(e) {
                                    for (const [t, r] of Object.entries(e))for (const [e, n] of Object.entries(r))r[`${e}`] = async (...r)=>g({
                                            path: t,
                                            method: e,
                                            params: r
                                        }, ()=>n(...r));
                                }, t.request = async function(e, t) {
                                    return (0, e[`${t.path}`][`${t.method}`])(...t.params);
                                }, (m = t.StdInterfaceIds || (t.StdInterfaceIds = {})).FungibleToken = "0001", m.NFTCollection = "0002", m.NFT = "0003", m.NFTCollectionWithRoyalty = "000201";
                            },
                            3760: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.isBalanceEqual = t.convertHttpResponse = void 0, r(9114), t.convertHttpResponse = function(e) {
                                    if (e.error) {
                                        const t = e.error.detail ?? "Unknown error";
                                        throw new Error(`[API Error] - ${t} - Status code: ${e.status}`);
                                    }
                                    return e.data;
                                }, t.isBalanceEqual = function(e, t) {
                                    const r = (e, t)=>{
                                        const r = e?.length ?? 0;
                                        if (r !== (t?.length ?? 0)) return !1;
                                        if (0 === r) return !0;
                                        const n = t.map((e)=>({
                                                ...e,
                                                used: !1
                                            }));
                                        return e.every((e)=>{
                                            const t = n.find((t)=>!t.used && e.id === t.id && e.amount === t.amount);
                                            return void 0 !== t && (t.used = !0, !0);
                                        });
                                    }, n = e.balance === t.balance && e.lockedBalance === t.lockedBalance;
                                    return e.utxoNum === t.utxoNum && n && r(e.tokenBalances, t.tokenBalances) && r(e.lockedTokenBalances, t.lockedTokenBalances);
                                };
                            },
                            645: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                                    Object.defineProperty(e, "default", {
                                        enumerable: !0,
                                        value: t
                                    });
                                } : function(e, t) {
                                    e.default = t;
                                }), s = this && this.__importStar || function(e) {
                                    if (e && e.__esModule) return e;
                                    var t = {};
                                    if (null != e) for(var r in e)"default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                                    return i(t, e), t;
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.BlockSubscription = t.BlockSubscriptionBase = void 0;
                                const o = r(531), a = s(r(307)), c = r(7695), h = 2e4;
                                class u extends o.Subscription {
                                    getParentHash(e) {
                                        const t = Math.floor(e.deps.length / 2) + e.chainTo;
                                        return e.deps[t];
                                    }
                                    async handleReorg(e, t, r, n) {
                                        if (console.info(`reorg occur in chain ${e} -> ${t}, orphan hash: ${r}, new hash: ${n}`), void 0 === this.reorgCallback) return;
                                        const i = [];
                                        let s, o = r;
                                        for(;;){
                                            const r = await this.getBlockByHash(o);
                                            i.push(r);
                                            const n = await this.getHashesAtHeight(e, t, r.height - 1), a = this.getParentHash(r);
                                            if (n[0] === a) {
                                                s = n[0];
                                                break;
                                            }
                                            o = a;
                                        }
                                        const a = [];
                                        for(o = n; o !== s;){
                                            const e = await this.getBlockByHash(o);
                                            a.push(e), o = this.getParentHash(e);
                                        }
                                        const c = i.reverse(), h = a.reverse();
                                        console.info(`orphan hashes: ${c.map((e)=>e.hash)}, new hashes: ${h.map((e)=>e.hash)}`), await this.reorgCallback(e, t, c, h);
                                    }
                                }
                                t.BlockSubscriptionBase = u, t.BlockSubscription = class extends u {
                                    constructor(e, t, r = void 0){
                                        super(e), this.nodeProvider = r ?? a.getCurrentNodeProvider(), this.reorgCallback = e.reorgCallback, this.fromTimeStamp = t, this.parents = new Array(c.TOTAL_NUMBER_OF_CHAINS).fill(void 0), this.cache = new Map;
                                    }
                                    async getHashesAtHeight(e, t, r) {
                                        return (await this.nodeProvider.blockflow.getBlockflowHashes({
                                            fromGroup: e,
                                            toGroup: t,
                                            height: r
                                        })).headers;
                                    }
                                    async getBlockByHash(e) {
                                        return await this.nodeProvider.blockflow.getBlockflowBlocksBlockHash(e);
                                    }
                                    async getMissingBlocksAndHandleReorg(e, t, r) {
                                        const n = [];
                                        let i = r;
                                        for(; i.height - 1 > t;){
                                            const e = this.getParentHash(i), t = await this.getBlockByHash(e);
                                            n.push(t), i = t;
                                        }
                                        const s = this.getParentHash(i);
                                        return s !== e && await this.handleReorg(r.chainFrom, r.chainTo, e, s), n.reverse();
                                    }
                                    async handleBlocks(e, t) {
                                        const r = [];
                                        for(let t = 0; t < e.length; t += 1){
                                            const n = e[t].filter((e)=>!this.cache.has(e.hash));
                                            if (0 === n.length) continue;
                                            r.push(...n);
                                            const i = this.parents[t];
                                            if (void 0 !== i) {
                                                const e = await this.getMissingBlocksAndHandleReorg(i.hash, i.height, n[0]);
                                                r.push(...e);
                                            }
                                            const s = n[n.length - 1];
                                            this.parents[t] = {
                                                hash: s.hash,
                                                height: s.height
                                            };
                                        }
                                        const n = r.sort((e, t)=>e.timestamp - t.timestamp);
                                        try {
                                            await this.messageCallback(n);
                                        } finally{
                                            const e = t - h;
                                            Array.from(this.cache.entries()).forEach(([t, r])=>{
                                                r < e && this.cache.delete(t);
                                            });
                                            const r = n.findIndex((t)=>t.timestamp >= e);
                                            -1 !== r && n.slice(r).forEach((e)=>this.cache.set(e.hash, e.timestamp));
                                        }
                                    }
                                    async polling() {
                                        const e = Date.now();
                                        if (!(this.fromTimeStamp >= e)) for(; this.fromTimeStamp < e;){
                                            if (this.isCancelled()) return;
                                            const t = Math.min(this.fromTimeStamp + 6e4, e);
                                            try {
                                                const r = await this.nodeProvider.blockflow.getBlockflowBlocks({
                                                    fromTs: this.fromTimeStamp,
                                                    toTs: t
                                                });
                                                await this.handleBlocks(r.blocks, e);
                                            } catch (e) {
                                                await this.errorCallback(e, this);
                                            }
                                            if (!(this.fromTimeStamp + h < e)) return;
                                            this.fromTimeStamp = Math.min(t + 1, e - h);
                                        }
                                    }
                                };
                            },
                            4648: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.BlockSubscription = void 0;
                                var n = r(645);
                                Object.defineProperty(t, "BlockSubscription", {
                                    enumerable: !0,
                                    get: function() {
                                        return n.BlockSubscription;
                                    }
                                });
                            },
                            2205: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.ArrayCodec = void 0;
                                const n = r(5617), i = r(2709), s = r(664);
                                class o extends i.Codec {
                                    constructor(e){
                                        super(), this.childCodec = e;
                                    }
                                    encode(e) {
                                        const t = [
                                            n.i32Codec.encode(e.length)
                                        ];
                                        for (const r of e)t.push(this.childCodec.encode(r));
                                        return (0, s.concatBytes)(t);
                                    }
                                    _decode(e) {
                                        const t = n.i32Codec._decode(e), r = [];
                                        for(let n = 0; n < t; n += 1)r.push(this.childCodec._decode(e));
                                        return r;
                                    }
                                }
                                t.ArrayCodec = o;
                            },
                            406: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.assetOutputsCodec = t.assetOutputCodec = t.AssetOutputCodec = void 0;
                                const n = r(2205), i = r(5617), s = r(2768), o = r(7500), a = r(5675), c = r(1678), h = r(7007), u = r(664), d = r(2709), f = r(6341);
                                class l extends d.ObjectCodec {
                                    static toFixedAssetOutputs(e, t) {
                                        return t.map((t, r)=>l.toFixedAssetOutput(e, t, r));
                                    }
                                    static toFixedAssetOutput(e, t, r) {
                                        const n = t.amount.toString(), i = Number(t.lockTime), o = t.tokens.map((e)=>({
                                                id: (0, u.binToHex)(e.tokenId),
                                                amount: e.amount.toString()
                                            })), a = (0, u.binToHex)(t.additionalData), d = t.lockupScript.kind, f = (0, u.binToHex)((0, h.blakeHash)((0, u.concatBytes)([
                                            e,
                                            s.intAs4BytesCodec.encode(r)
                                        ]))), l = t.lockupScript.value, p = u.bs58.encode(c.lockupScriptCodec.encode(t.lockupScript));
                                        let b;
                                        if ("P2PKH" === d) b = (0, h.createHint)(l);
                                        else if ("P2MPKH" === d) b = (0, h.createHint)(l.publicKeyHashes[0]);
                                        else {
                                            if ("P2SH" !== d) throw "P2C" === d ? new Error("P2C script type not allowed for asset output") : new Error(`Unexpected output script type: ${d}`);
                                            b = (0, h.createHint)(l);
                                        }
                                        return {
                                            hint: b,
                                            key: f,
                                            attoAlphAmount: n,
                                            lockTime: i,
                                            tokens: o,
                                            address: p,
                                            message: a
                                        };
                                    }
                                    static fromFixedAssetOutputs(e) {
                                        return e.map((e)=>l.fromFixedAssetOutput(e));
                                    }
                                    static fromFixedAssetOutput(e) {
                                        const t = BigInt(e.attoAlphAmount), r = BigInt(e.lockTime);
                                        return {
                                            amount: t,
                                            lockupScript: c.lockupScriptCodec.decode(u.bs58.decode(e.address)),
                                            lockTime: r,
                                            tokens: e.tokens.map((e)=>({
                                                    tokenId: (0, u.hexToBinUnsafe)(e.id),
                                                    amount: BigInt(e.amount)
                                                })),
                                            additionalData: (0, u.hexToBinUnsafe)(e.message)
                                        };
                                    }
                                }
                                t.AssetOutputCodec = l, t.assetOutputCodec = new l({
                                    amount: i.u256Codec,
                                    lockupScript: c.lockupScriptCodec,
                                    lockTime: o.timestampCodec,
                                    tokens: f.tokensCodec,
                                    additionalData: a.byteStringCodec
                                }), t.assetOutputsCodec = new n.ArrayCodec(t.assetOutputCodec);
                            },
                            3567: (e, t)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.BigIntCodec = void 0, t.BigIntCodec = class {
                                    static encode(e) {
                                        if (0n === e) return new Uint8Array([
                                            0
                                        ]);
                                        const t = e < 0n;
                                        let r = t ? -e : e;
                                        const n = [];
                                        for(; r > 0n;)n.push(Number(0xffn & r)), r >>= 8n;
                                        if (!t && 128 & n[n.length - 1] && n.push(0), t) {
                                            let e = !0;
                                            for(let t = 0; t < n.length; t++)n[t] = 255 & ~n[t], e && (255 === n[t] ? n[t] = 0 : (n[t] += 1, e = !1));
                                            !e && 0 !== n.length && 128 & n[n.length - 1] || n.push(255);
                                        }
                                        return new Uint8Array(n.reverse());
                                    }
                                    static decodeUnsigned(e) {
                                        if (1 === e.length && 0 === e[0]) return 0n;
                                        let t = 0n;
                                        for (const r of e)t = t << 8n | BigInt(r);
                                        return t;
                                    }
                                    static decodeSigned(e) {
                                        if (1 === e.length && 0 === e[0]) return 0n;
                                        const t = !!(128 & e[0]);
                                        let r = 0n;
                                        for (const t of e)r = r << 8n | BigInt(t);
                                        return t && (r = -(~r & (1n << 8n * BigInt(e.length)) - 1n) - 1n), r;
                                    }
                                };
                            },
                            5675: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.byteStringsCodec = t.byteStringCodec = t.ByteStringCodec = void 0;
                                const n = r(5617), i = r(2709), s = r(664), o = r(2205);
                                class a extends i.Codec {
                                    encode(e) {
                                        return (0, s.concatBytes)([
                                            n.i32Codec.encode(e.length),
                                            e
                                        ]);
                                    }
                                    _decode(e) {
                                        const t = n.i32Codec._decode(e);
                                        return e.consumeBytes(t);
                                    }
                                }
                                t.ByteStringCodec = a, t.byteStringCodec = new a, t.byteStringsCodec = new o.ArrayCodec(t.byteStringCodec);
                            },
                            2709: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.boolCodec = t.byteCodec = t.byte32Codec = t.EnumCodec = t.ObjectCodec = t.FixedSizeCodec = t.assert = t.Codec = void 0;
                                const n = r(664), i = r(7248);
                                class s {
                                    decode(e) {
                                        const t = new i.Reader(e);
                                        return this._decode(t);
                                    }
                                    bimap(e, t) {
                                        return new class extends s {
                                            constructor(e){
                                                super(), this.codecT = e;
                                            }
                                            encode(e) {
                                                return this.codecT.encode(t(e));
                                            }
                                            _decode(t) {
                                                return e(this.codecT._decode(t));
                                            }
                                        }(this);
                                    }
                                }
                                function o(e, t) {
                                    if (!e) throw new Error(t);
                                }
                                t.Codec = s, t.assert = o;
                                class a extends s {
                                    constructor(e){
                                        super(), this.size = e;
                                    }
                                    encode(e) {
                                        return o(e.length === this.size, `Invalid length, expected ${this.size}, got ${e.length}`), e;
                                    }
                                    _decode(e) {
                                        return e.consumeBytes(this.size);
                                    }
                                }
                                t.FixedSizeCodec = a, t.ObjectCodec = class extends s {
                                    constructor(e){
                                        super(), this.codecs = e, this.keys = Object.keys(e);
                                    }
                                    encode(e) {
                                        const t = [];
                                        for (const r of this.keys)t.push(this.codecs[r].encode(e[r]));
                                        return (0, n.concatBytes)(t);
                                    }
                                    _decode(e) {
                                        const t = {};
                                        for (const r of this.keys)t[r] = this.codecs[r]._decode(e);
                                        return t;
                                    }
                                }, t.EnumCodec = class extends s {
                                    constructor(e, t){
                                        super(), this.name = e, this.codecs = t, this.kinds = Object.keys(t);
                                    }
                                    encode(e) {
                                        const t = this.kinds.findIndex((t)=>t === e.kind);
                                        if (-1 === t) throw new Error(`Invalid ${this.name} kind ${e.kind}, expected one of ${this.kinds}`);
                                        const r = this.codecs[e.kind];
                                        return new Uint8Array([
                                            t,
                                            ...r.encode(e.value)
                                        ]);
                                    }
                                    _decode(e) {
                                        const t = e.consumeByte();
                                        if (t >= 0 && t < this.kinds.length) {
                                            const r = this.kinds[`${t}`];
                                            return {
                                                kind: r,
                                                value: this.codecs[r]._decode(e)
                                            };
                                        }
                                        throw new Error(`Invalid encoded ${this.name} kind: ${t}`);
                                    }
                                }, t.byte32Codec = new a(32), t.byteCodec = new class extends s {
                                    encode(e) {
                                        return o(e >= 0 && e < 256, `Invalid byte: ${e}`), new Uint8Array([
                                            e
                                        ]);
                                    }
                                    _decode(e) {
                                        return e.consumeByte();
                                    }
                                }, t.boolCodec = new class extends s {
                                    encode(e) {
                                        return new Uint8Array([
                                            e ? 1 : 0
                                        ]);
                                    }
                                    _decode(e) {
                                        const t = e.consumeByte();
                                        if (1 === t) return !0;
                                        if (0 === t) return !1;
                                        throw new Error(`Invalid encoded bool value ${t}, expected 0 or 1`);
                                    }
                                };
                            },
                            5617: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.i32Codec = t.i256Codec = t.Signed = t.u32Codec = t.u256Codec = t.UnSigned = void 0;
                                const n = r(2709), i = r(3567), s = 4294967232, o = {
                                    type: "SingleByte",
                                    prefix: 0,
                                    negPrefix: 192
                                }, a = {
                                    type: "TwoByte",
                                    prefix: 64,
                                    negPrefix: 128
                                }, c = {
                                    type: "FourByte",
                                    prefix: 128,
                                    negPrefix: 64
                                }, h = {
                                    type: "MultiByte",
                                    prefix: 192
                                };
                                function u(e) {
                                    const t = e.consumeByte();
                                    switch(192 & t){
                                        case o.prefix:
                                            return {
                                                mode: o,
                                                body: new Uint8Array([
                                                    t
                                                ])
                                            };
                                        case a.prefix:
                                            return {
                                                mode: a,
                                                body: new Uint8Array([
                                                    t,
                                                    ...e.consumeBytes(1)
                                                ])
                                            };
                                        case c.prefix:
                                            return {
                                                mode: c,
                                                body: new Uint8Array([
                                                    t,
                                                    ...e.consumeBytes(3)
                                                ])
                                            };
                                        default:
                                            {
                                                const r = 4 + (63 & t);
                                                return {
                                                    mode: h,
                                                    body: new Uint8Array([
                                                        t,
                                                        ...e.consumeBytes(r)
                                                    ])
                                                };
                                            }
                                    }
                                }
                                class d {
                                    static encodeU32(e) {
                                        return (0, n.assert)(e >= 0 && e < d.u32UpperBound, `Invalid u32 value: ${e}`), e < d.oneByteBound ? new Uint8Array([
                                            o.prefix + e & 255
                                        ]) : e < d.twoByteBound ? new Uint8Array([
                                            a.prefix + (e >> 8) & 255,
                                            255 & e
                                        ]) : e < d.fourByteBound ? new Uint8Array([
                                            c.prefix + (e >> 24) & 255,
                                            e >> 16 & 255,
                                            e >> 8 & 255,
                                            255 & e
                                        ]) : new Uint8Array([
                                            h.prefix,
                                            e >> 24 & 255,
                                            e >> 16 & 255,
                                            e >> 8 & 255,
                                            255 & e
                                        ]);
                                    }
                                    static encodeU256(e) {
                                        if ((0, n.assert)(e >= 0n && e < d.u256UpperBound, `Invalid u256 value: ${e}`), e < d.fourByteBound) return d.encodeU32(Number(e));
                                        {
                                            let t = i.BigIntCodec.encode(e);
                                            0 === t[0] && (t = t.slice(1));
                                            const r = t.length - 4 + h.prefix & 255;
                                            return new Uint8Array([
                                                r,
                                                ...t
                                            ]);
                                        }
                                    }
                                    static decodeInt(e, t) {
                                        switch(e.type){
                                            case "SingleByte":
                                                return (0, n.assert)(1 === t.length, "Length should be 2"), t[0];
                                            case "TwoByte":
                                                return (0, n.assert)(2 === t.length, "Length should be 2"), (63 & t[0]) << 8 | 255 & t[1];
                                            case "FourByte":
                                                return (0, n.assert)(4 === t.length, "Length should be 4"), ((63 & t[0]) << 24 | (255 & t[1]) << 16 | (255 & t[2]) << 8 | 255 & t[3]) >>> 0;
                                        }
                                    }
                                    static decodeU32(e, t) {
                                        switch(e.type){
                                            case "SingleByte":
                                            case "TwoByte":
                                            case "FourByte":
                                                return d.decodeInt(e, t);
                                            case "MultiByte":
                                                if ((0, n.assert)(t.length >= 5, "Length should be greater than 5"), 5 === t.length) return (t[1] << 24 | (255 & t[2]) << 16 | (255 & t[3]) << 8 | 255 & t[4]) >>> 0;
                                                throw new Error(`Expect 4 bytes int, but get ${t.length - 1} bytes int`);
                                        }
                                    }
                                    static decodeU256(e, t) {
                                        switch(e.type){
                                            case "SingleByte":
                                            case "TwoByte":
                                            case "FourByte":
                                                return BigInt(d.decodeInt(e, t));
                                            case "MultiByte":
                                                return i.BigIntCodec.decodeUnsigned(t.slice(1, t.length));
                                        }
                                    }
                                }
                                t.UnSigned = d, d.oneByteBound = BigInt(64), d.twoByteBound = d.oneByteBound << BigInt(8), d.fourByteBound = d.oneByteBound << BigInt(24), d.u256UpperBound = BigInt(1) << BigInt(256), d.u32UpperBound = 2 ** 32, t.u256Codec = new class extends n.Codec {
                                    encode(e) {
                                        return d.encodeU256(e);
                                    }
                                    _decode(e) {
                                        const { mode: t, body: r } = u(e);
                                        return d.decodeU256(t, r);
                                    }
                                }, t.u32Codec = new class extends n.Codec {
                                    encode(e) {
                                        return d.encodeU32(e);
                                    }
                                    _decode(e) {
                                        const { mode: t, body: r } = u(e);
                                        return d.decodeU32(t, r);
                                    }
                                };
                                class f {
                                    static encodeI32(e) {
                                        return (0, n.assert)(e >= f.i32LowerBound && e < f.i32UpperBound, `Invalid i32 value: ${e}`), e >= 0 ? f.encodePositiveI32(e) : f.encodeNegativeI32(e);
                                    }
                                    static encodePositiveI32(e) {
                                        return e < this.oneByteBound ? new Uint8Array([
                                            o.prefix + e & 255
                                        ]) : e < this.twoByteBound ? new Uint8Array([
                                            a.prefix + (e >> 8) & 255,
                                            255 & e
                                        ]) : e < this.fourByteBound ? new Uint8Array([
                                            c.prefix + (e >> 24) & 255,
                                            e >> 16 & 255,
                                            e >> 8 & 255,
                                            255 & e
                                        ]) : new Uint8Array([
                                            h.prefix,
                                            e >> 24 & 255,
                                            e >> 16 & 255,
                                            e >> 8 & 255,
                                            255 & e
                                        ]);
                                    }
                                    static encodeNegativeI32(e) {
                                        return e >= -this.oneByteBound ? new Uint8Array([
                                            255 & (e ^ o.negPrefix)
                                        ]) : e >= -this.twoByteBound ? new Uint8Array([
                                            255 & (e >> 8 ^ a.negPrefix),
                                            255 & e
                                        ]) : e >= -this.fourByteBound ? new Uint8Array([
                                            255 & (e >> 24 ^ c.negPrefix),
                                            e >> 16 & 255,
                                            e >> 8 & 255,
                                            255 & e
                                        ]) : new Uint8Array([
                                            h.prefix,
                                            e >> 24 & 255,
                                            e >> 16 & 255,
                                            e >> 8 & 255,
                                            255 & e
                                        ]);
                                    }
                                    static encodeI256(e) {
                                        if ((0, n.assert)(e >= f.i256LowerBound && e < f.i256UpperBound, `Invalid i256 value: ${e}`), e >= -536870912 && e < 536870912) return this.encodeI32(Number(e));
                                        {
                                            const t = i.BigIntCodec.encode(e), r = t.length - 4 + h.prefix & 255;
                                            return new Uint8Array([
                                                r,
                                                ...t
                                            ]);
                                        }
                                    }
                                    static decodeInt(e, t) {
                                        return t[0] & f.signFlag ? f.decodeNegativeInt(e, t) : f.decodePositiveInt(e, t);
                                    }
                                    static decodePositiveInt(e, t) {
                                        switch(e.type){
                                            case "SingleByte":
                                                return t[0];
                                            case "TwoByte":
                                                return (0, n.assert)(2 === t.length, "Length should be 2"), (63 & t[0]) << 8 | 255 & t[1];
                                            case "FourByte":
                                                return (0, n.assert)(4 === t.length, "Length should be 4"), (63 & t[0]) << 24 | (255 & t[1]) << 16 | (255 & t[2]) << 8 | 255 & t[3];
                                        }
                                    }
                                    static decodeNegativeInt(e, t) {
                                        switch(e.type){
                                            case "SingleByte":
                                                return t[0] | s;
                                            case "TwoByte":
                                                return (0, n.assert)(2 === t.length, "Length should be 2"), (t[0] | s) << 8 | 255 & t[1];
                                            case "FourByte":
                                                return (0, n.assert)(4 === t.length, "Length should be 4"), (t[0] | s) << 24 | (255 & t[1]) << 16 | (255 & t[2]) << 8 | 255 & t[3];
                                        }
                                    }
                                    static decodeI32(e, t) {
                                        switch(e.type){
                                            case "SingleByte":
                                            case "TwoByte":
                                            case "FourByte":
                                                return f.decodeInt(e, t);
                                            case "MultiByte":
                                                if (5 === t.length) return t[1] << 24 | (255 & t[2]) << 16 | (255 & t[3]) << 8 | 255 & t[4];
                                                throw new Error(`Expect 4 bytes int, but get ${t.length - 1} bytes int`);
                                        }
                                    }
                                    static decodeI256(e, t) {
                                        switch(e.type){
                                            case "SingleByte":
                                            case "TwoByte":
                                            case "FourByte":
                                                return BigInt(f.decodeInt(e, t));
                                            case "MultiByte":
                                                const r = t.slice(1, t.length);
                                                return (0, n.assert)(r.length <= 32, "Expect <= 32 bytes for I256"), i.BigIntCodec.decodeSigned(r);
                                        }
                                    }
                                }
                                t.Signed = f, f.signFlag = 32, f.oneByteBound = BigInt(32), f.twoByteBound = f.oneByteBound << BigInt(8), f.fourByteBound = f.oneByteBound << BigInt(24), f.i256UpperBound = BigInt(1) << BigInt(255), f.i256LowerBound = -f.i256UpperBound, f.i32UpperBound = 2 ** 31, f.i32LowerBound = -f.i32UpperBound, t.i256Codec = new class extends n.Codec {
                                    encode(e) {
                                        return f.encodeI256(e);
                                    }
                                    _decode(e) {
                                        const { mode: t, body: r } = u(e);
                                        return f.decodeI256(t, r);
                                    }
                                }, t.i32Codec = new class extends n.Codec {
                                    encode(e) {
                                        return f.encodeI32(e);
                                    }
                                    _decode(e) {
                                        const { mode: t, body: r } = u(e);
                                        return f.decodeI32(t, r);
                                    }
                                };
                            },
                            1486: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.contractCodec = t.ContractCodec = void 0;
                                const n = r(2205), i = r(2709), s = r(5617), o = r(3049), a = r(664), c = new n.ArrayCodec(s.i32Codec);
                                class h extends i.Codec {
                                    encode(e) {
                                        return (0, a.concatBytes)([
                                            s.i32Codec.encode(e.fieldLength),
                                            c.encode(e.methodIndexes),
                                            e.methods
                                        ]);
                                    }
                                    _decode(e) {
                                        return {
                                            fieldLength: s.i32Codec._decode(e),
                                            methodIndexes: c._decode(e),
                                            methods: e.consumeAll()
                                        };
                                    }
                                    decodeContract(e) {
                                        const t = this.decode(e), r = t.fieldLength, n = t.methodIndexes, i = [];
                                        for(let e = 0, r = 0; e < n.length; e++){
                                            const s = n[e], a = o.methodCodec.decode(t.methods.slice(r, s));
                                            i.push(a), r = s;
                                        }
                                        return {
                                            fieldLength: r,
                                            methods: i
                                        };
                                    }
                                    encodeContract(e) {
                                        const t = e.fieldLength, r = e.methods.map((e)=>o.methodCodec.encode(e));
                                        let n = 0;
                                        const i = {
                                            fieldLength: t,
                                            methodIndexes: Array.from(Array(r.length).keys()).map((e)=>(n += r[`${e}`].length, n)),
                                            methods: (0, a.concatBytes)(r)
                                        };
                                        return this.encode(i);
                                    }
                                }
                                t.ContractCodec = h, t.contractCodec = new h;
                            },
                            1672: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.contractOutputCodec = t.ContractOutputCodec = void 0;
                                const n = r(5617), i = r(1678), s = r(2709), o = r(6341), a = r(7007), c = r(664), h = r(2768), u = r(1678);
                                class d extends s.ObjectCodec {
                                    static convertToApiContractOutput(e, t, r) {
                                        return {
                                            hint: (0, a.createHint)(t.lockupScript),
                                            key: (0, c.binToHex)((0, a.blakeHash)((0, c.concatBytes)([
                                                e,
                                                h.intAs4BytesCodec.encode(r)
                                            ]))),
                                            attoAlphAmount: t.amount.toString(),
                                            address: c.bs58.encode(new Uint8Array([
                                                3,
                                                ...t.lockupScript
                                            ])),
                                            tokens: t.tokens.map((e)=>({
                                                    id: (0, c.binToHex)(e.tokenId),
                                                    amount: e.amount.toString()
                                                })),
                                            type: "ContractOutput"
                                        };
                                    }
                                    static convertToOutput(e) {
                                        return {
                                            amount: BigInt(e.attoAlphAmount),
                                            lockupScript: u.lockupScriptCodec.decode(c.bs58.decode(e.address)).value,
                                            tokens: e.tokens.map((e)=>({
                                                    tokenId: (0, c.hexToBinUnsafe)(e.id),
                                                    amount: BigInt(e.amount)
                                                }))
                                        };
                                    }
                                }
                                t.ContractOutputCodec = d, t.contractOutputCodec = new d({
                                    amount: n.u256Codec,
                                    lockupScript: i.p2cCodec,
                                    tokens: o.tokensCodec
                                });
                            },
                            4464: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.contractOutputRefsCodec = t.contractOutputRefCodec = void 0;
                                const n = r(2205), i = r(2709), s = r(2768);
                                t.contractOutputRefCodec = new i.ObjectCodec({
                                    hint: s.intAs4BytesCodec,
                                    key: i.byte32Codec
                                }), t.contractOutputRefsCodec = new n.ArrayCodec(t.contractOutputRefCodec);
                            },
                            2577: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.either = void 0;
                                const n = r(2709);
                                t.either = function(e, t, r) {
                                    return new n.EnumCodec(e, {
                                        Left: t,
                                        Right: r
                                    });
                                };
                            },
                            7007: function(e, t, r) {
                                "use strict";
                                var n = this && this.__importDefault || function(e) {
                                    return e && e.__esModule ? e : {
                                        default: e
                                    };
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.createHint = t.djbIntHash = t.blakeHash = void 0;
                                const i = n(r(1540));
                                function s(e) {
                                    let t = 5381;
                                    return e.forEach((e)=>{
                                        t = (t << 5) + t + (255 & e);
                                    }), t;
                                }
                                t.blakeHash = function(e) {
                                    return i.default.blake2b(e, void 0, 32);
                                }, t.djbIntHash = s, t.createHint = function(e) {
                                    return 1 | s(e);
                                };
                            },
                            3651: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                                    Object.defineProperty(e, "default", {
                                        enumerable: !0,
                                        value: t
                                    });
                                } : function(e, t) {
                                    e.default = t;
                                }), s = this && this.__exportStar || function(e, t) {
                                    for(var r in e)"default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r);
                                }, o = this && this.__importStar || function(e) {
                                    if (e && e.__esModule) return e;
                                    var t = {};
                                    if (null != e) for(var r in e)"default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                                    return i(t, e), t;
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.contract = t.token = t.script = t.val = t.unlockScript = t.lockupScript = t.contractOutput = t.boolCodec = t.Codec = t.assetOutput = void 0, s(r(2205), t), t.assetOutput = o(r(406)), s(r(3567), t), s(r(5675), t);
                                var a = r(2709);
                                Object.defineProperty(t, "Codec", {
                                    enumerable: !0,
                                    get: function() {
                                        return a.Codec;
                                    }
                                }), Object.defineProperty(t, "boolCodec", {
                                    enumerable: !0,
                                    get: function() {
                                        return a.boolCodec;
                                    }
                                }), s(r(5617), t), t.contractOutput = o(r(1672)), s(r(4464), t), s(r(2577), t), s(r(7544), t), s(r(6210), t), t.lockupScript = o(r(1678)), t.unlockScript = o(r(2976)), t.val = o(r(1924)), s(r(7500), t), s(r(3049), t), s(r(6633), t), t.script = o(r(4459)), s(r(9510), t), s(r(2768), t), t.token = o(r(6341)), s(r(1092), t), s(r(2190), t), t.contract = o(r(1486));
                            },
                            7544: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.inputsCodec = t.inputCodec = t.InputCodec = void 0;
                                const n = r(664), i = r(2976), s = r(2709), o = r(2205), a = r(2768);
                                class c extends s.ObjectCodec {
                                    static toAssetInputs(e) {
                                        return e.map((e)=>{
                                            const t = e.hint, r = (0, n.binToHex)(e.key), s = i.unlockScriptCodec.encode(e.unlockScript);
                                            return {
                                                outputRef: {
                                                    hint: t,
                                                    key: r
                                                },
                                                unlockScript: (0, n.binToHex)(s)
                                            };
                                        });
                                    }
                                    static fromAssetInputs(e) {
                                        return e.map((e)=>({
                                                hint: e.outputRef.hint,
                                                key: (0, n.hexToBinUnsafe)(e.outputRef.key),
                                                unlockScript: i.unlockScriptCodec.decode((0, n.hexToBinUnsafe)(e.unlockScript))
                                            }));
                                    }
                                }
                                t.InputCodec = c, t.inputCodec = new c({
                                    hint: a.intAs4BytesCodec,
                                    key: s.byte32Codec,
                                    unlockScript: i.unlockScriptCodec
                                }), t.inputsCodec = new o.ArrayCodec(t.inputCodec);
                            },
                            6210: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.I256Add = t.BoolToByteVec = t.BoolNeq = t.BoolEq = t.BoolOr = t.BoolAnd = t.BoolNot = t.Pop = t.StoreLocal = t.LoadLocal = t.AddressConst = t.BytesConst = t.U256Const = t.I256Const = t.U256Const5 = t.U256Const4 = t.U256Const3 = t.U256Const2 = t.U256Const1 = t.U256Const0 = t.I256ConstN1 = t.I256Const5 = t.I256Const4 = t.I256Const3 = t.I256Const2 = t.I256Const1 = t.I256Const0 = t.ConstFalse = t.ConstTrue = t.Return = t.CallExternal = t.CallLocal = t.CallExternalBySelectorCode = t.MethodSelectorCode = t.CreateMapEntryCode = t.LoadImmFieldCode = t.StoreMutFieldCode = t.LoadMutFieldCode = t.DEBUGCode = t.IfFalseCode = t.IfTrueCode = t.JumpCode = t.StoreLocalCode = t.LoadLocalCode = t.AddressConstCode = t.BytesConstCode = t.U256ConstCode = t.I256ConstCode = t.CallExternalCode = t.CallLocalCode = void 0, t.Sha3 = t.Sha256 = t.Keccak256 = t.Blake2b = t.Assert = t.IfFalse = t.IfTrue = t.Jump = t.IsContractAddress = t.IsAssetAddress = t.AddressToByteVec = t.AddressNeq = t.AddressEq = t.ByteVecConcat = t.ByteVecSize = t.ByteVecNeq = t.ByteVecEq = t.U256ToByteVec = t.U256ToI256 = t.I256ToByteVec = t.I256ToU256 = t.U256SHR = t.U256SHL = t.U256Xor = t.U256BitOr = t.U256BitAnd = t.U256ModMul = t.U256ModSub = t.U256ModAdd = t.U256Ge = t.U256Gt = t.U256Le = t.U256Lt = t.U256Neq = t.U256Eq = t.U256Mod = t.U256Div = t.U256Mul = t.U256Sub = t.U256Add = t.I256Ge = t.I256Gt = t.I256Le = t.I256Lt = t.I256Neq = t.I256Eq = t.I256Mod = t.I256Div = t.I256Mul = t.I256Sub = void 0, t.U256Exp = t.I256Exp = t.TxGasFee = t.TxGasAmount = t.TxGasPrice = t.DEBUG = t.BlockHash = t.Swap = t.AssertWithErrorCode = t.Dup = t.StoreLocalByIndex = t.LoadLocalByIndex = t.ContractIdToAddress = t.Log9 = t.Log8 = t.Log7 = t.Log6 = t.EthEcRecover = t.U256From32Byte = t.U256From16Byte = t.U256From8Byte = t.U256From4Byte = t.U256From2Byte = t.U256From1Byte = t.U256To32Byte = t.U256To16Byte = t.U256To8Byte = t.U256To4Byte = t.U256To2Byte = t.U256To1Byte = t.Zeros = t.Encode = t.ByteVecToAddress = t.ByteVecSlice = t.Log5 = t.Log4 = t.Log3 = t.Log2 = t.Log1 = t.VerifyRelativeLocktime = t.VerifyAbsoluteLocktime = t.TxInputsSize = t.TxInputAddressAt = t.TxId = t.BlockTarget = t.BlockTimeStamp = t.NetworkId = t.VerifyED25519 = t.VerifySecP256K1 = t.VerifyTxSignature = void 0, t.CreateSubContractAndTransferToken = t.CopyCreateContractAndTransferToken = t.CreateContractAndTransferToken = t.ContractExists = t.StoreMutFieldByIndex = t.LoadMutFieldByIndex = t.CopyCreateSubContractWithToken = t.CopyCreateSubContract = t.CreateSubContractWithToken = t.CreateSubContract = t.LockApprovedAssets = t.BurnToken = t.CopyCreateContractWithToken = t.MigrateWithFields = t.MigrateSimple = t.ContractCodeHash = t.ContractInitialStateHash = t.CallerCodeHash = t.CallerInitialStateHash = t.IsCalledFromTxScript = t.CallerAddress = t.CallerContractId = t.SelfAddress = t.SelfContractId = t.DestroySelf = t.CopyCreateContract = t.CreateContractWithToken = t.CreateContract = t.TransferTokenToSelf = t.TransferTokenFromSelf = t.TransferToken = t.TransferAlphToSelf = t.TransferAlphFromSelf = t.TransferAlph = t.IsPaying = t.TokenRemaining = t.AlphRemaining = t.ApproveToken = t.ApproveAlph = t.StoreMutField = t.LoadMutField = t.GroupOfAddress = t.BoolToString = t.I256ToString = t.U256ToString = t.AddModN = t.MulModN = t.GetSegregatedSignature = t.VerifyBIP340Schnorr = t.U256ModExp = void 0, t.toI256 = t.toU256 = t.instrsCodec = t.instrCodec = t.InstrCodec = t.CallExternalBySelector = t.MethodSelector = t.CreateMapEntry = t.MinimalContractDeposit = t.PayGasFee = t.LoadImmFieldByIndex = t.LoadImmField = t.ALPHTokenId = t.SubContractIdOf = t.SubContractId = t.NullContractAddress = t.CopyCreateSubContractAndTransferToken = void 0;
                                const n = r(2205), i = r(5617), s = r(5675), o = r(1678), a = r(2709), c = r(2768);
                                t.CallLocalCode = 0, t.CallExternalCode = 1, t.I256ConstCode = 18, t.U256ConstCode = 19, t.BytesConstCode = 20, t.AddressConstCode = 21, t.LoadLocalCode = 22, t.StoreLocalCode = 23, t.JumpCode = 74, t.IfTrueCode = 75, t.IfFalseCode = 76, t.DEBUGCode = 126, t.LoadMutFieldCode = 160, t.StoreMutFieldCode = 161, t.LoadImmFieldCode = 206, t.CreateMapEntryCode = 210, t.MethodSelectorCode = 211, t.CallExternalBySelectorCode = 212, t.CallLocal = (e)=>({
                                        name: "CallLocal",
                                        code: 0,
                                        index: e
                                    }), t.CallExternal = (e)=>({
                                        name: "CallExternal",
                                        code: 1,
                                        index: e
                                    }), t.Return = {
                                    name: "Return",
                                    code: 2
                                }, t.ConstTrue = {
                                    name: "ConstTrue",
                                    code: 3
                                }, t.ConstFalse = {
                                    name: "ConstFalse",
                                    code: 4
                                }, t.I256Const0 = {
                                    name: "I256Const0",
                                    code: 5
                                }, t.I256Const1 = {
                                    name: "I256Const1",
                                    code: 6
                                }, t.I256Const2 = {
                                    name: "I256Const2",
                                    code: 7
                                }, t.I256Const3 = {
                                    name: "I256Const3",
                                    code: 8
                                }, t.I256Const4 = {
                                    name: "I256Const4",
                                    code: 9
                                }, t.I256Const5 = {
                                    name: "I256Const5",
                                    code: 10
                                }, t.I256ConstN1 = {
                                    name: "I256ConstN1",
                                    code: 11
                                }, t.U256Const0 = {
                                    name: "U256Const0",
                                    code: 12
                                }, t.U256Const1 = {
                                    name: "U256Const1",
                                    code: 13
                                }, t.U256Const2 = {
                                    name: "U256Const2",
                                    code: 14
                                }, t.U256Const3 = {
                                    name: "U256Const3",
                                    code: 15
                                }, t.U256Const4 = {
                                    name: "U256Const4",
                                    code: 16
                                }, t.U256Const5 = {
                                    name: "U256Const5",
                                    code: 17
                                }, t.I256Const = (e)=>({
                                        name: "I256Const",
                                        code: 18,
                                        value: e
                                    }), t.U256Const = (e)=>({
                                        name: "U256Const",
                                        code: 19,
                                        value: e
                                    }), t.BytesConst = (e)=>({
                                        name: "BytesConst",
                                        code: 20,
                                        value: e
                                    }), t.AddressConst = (e)=>({
                                        name: "AddressConst",
                                        code: 21,
                                        value: e
                                    }), t.LoadLocal = (e)=>({
                                        name: "LoadLocal",
                                        code: 22,
                                        index: e
                                    }), t.StoreLocal = (e)=>({
                                        name: "StoreLocal",
                                        code: 23,
                                        index: e
                                    }), t.Pop = {
                                    name: "Pop",
                                    code: 24
                                }, t.BoolNot = {
                                    name: "BoolNot",
                                    code: 25
                                }, t.BoolAnd = {
                                    name: "BoolAnd",
                                    code: 26
                                }, t.BoolOr = {
                                    name: "BoolOr",
                                    code: 27
                                }, t.BoolEq = {
                                    name: "BoolEq",
                                    code: 28
                                }, t.BoolNeq = {
                                    name: "BoolNeq",
                                    code: 29
                                }, t.BoolToByteVec = {
                                    name: "BoolToByteVec",
                                    code: 30
                                }, t.I256Add = {
                                    name: "I256Add",
                                    code: 31
                                }, t.I256Sub = {
                                    name: "I256Sub",
                                    code: 32
                                }, t.I256Mul = {
                                    name: "I256Mul",
                                    code: 33
                                }, t.I256Div = {
                                    name: "I256Div",
                                    code: 34
                                }, t.I256Mod = {
                                    name: "I256Mod",
                                    code: 35
                                }, t.I256Eq = {
                                    name: "I256Eq",
                                    code: 36
                                }, t.I256Neq = {
                                    name: "I256Neq",
                                    code: 37
                                }, t.I256Lt = {
                                    name: "I256Lt",
                                    code: 38
                                }, t.I256Le = {
                                    name: "I256Le",
                                    code: 39
                                }, t.I256Gt = {
                                    name: "I256Gt",
                                    code: 40
                                }, t.I256Ge = {
                                    name: "I256Ge",
                                    code: 41
                                }, t.U256Add = {
                                    name: "U256Add",
                                    code: 42
                                }, t.U256Sub = {
                                    name: "U256Sub",
                                    code: 43
                                }, t.U256Mul = {
                                    name: "U256Mul",
                                    code: 44
                                }, t.U256Div = {
                                    name: "U256Div",
                                    code: 45
                                }, t.U256Mod = {
                                    name: "U256Mod",
                                    code: 46
                                }, t.U256Eq = {
                                    name: "U256Eq",
                                    code: 47
                                }, t.U256Neq = {
                                    name: "U256Neq",
                                    code: 48
                                }, t.U256Lt = {
                                    name: "U256Lt",
                                    code: 49
                                }, t.U256Le = {
                                    name: "U256Le",
                                    code: 50
                                }, t.U256Gt = {
                                    name: "U256Gt",
                                    code: 51
                                }, t.U256Ge = {
                                    name: "U256Ge",
                                    code: 52
                                }, t.U256ModAdd = {
                                    name: "U256ModAdd",
                                    code: 53
                                }, t.U256ModSub = {
                                    name: "U256ModSub",
                                    code: 54
                                }, t.U256ModMul = {
                                    name: "U256ModMul",
                                    code: 55
                                }, t.U256BitAnd = {
                                    name: "U256BitAnd",
                                    code: 56
                                }, t.U256BitOr = {
                                    name: "U256BitOr",
                                    code: 57
                                }, t.U256Xor = {
                                    name: "U256Xor",
                                    code: 58
                                }, t.U256SHL = {
                                    name: "U256SHL",
                                    code: 59
                                }, t.U256SHR = {
                                    name: "U256SHR",
                                    code: 60
                                }, t.I256ToU256 = {
                                    name: "I256ToU256",
                                    code: 61
                                }, t.I256ToByteVec = {
                                    name: "I256ToByteVec",
                                    code: 62
                                }, t.U256ToI256 = {
                                    name: "U256ToI256",
                                    code: 63
                                }, t.U256ToByteVec = {
                                    name: "U256ToByteVec",
                                    code: 64
                                }, t.ByteVecEq = {
                                    name: "ByteVecEq",
                                    code: 65
                                }, t.ByteVecNeq = {
                                    name: "ByteVecNeq",
                                    code: 66
                                }, t.ByteVecSize = {
                                    name: "ByteVecSize",
                                    code: 67
                                }, t.ByteVecConcat = {
                                    name: "ByteVecConcat",
                                    code: 68
                                }, t.AddressEq = {
                                    name: "AddressEq",
                                    code: 69
                                }, t.AddressNeq = {
                                    name: "AddressNeq",
                                    code: 70
                                }, t.AddressToByteVec = {
                                    name: "AddressToByteVec",
                                    code: 71
                                }, t.IsAssetAddress = {
                                    name: "IsAssetAddress",
                                    code: 72
                                }, t.IsContractAddress = {
                                    name: "IsContractAddress",
                                    code: 73
                                }, t.Jump = (e)=>({
                                        name: "Jump",
                                        code: 74,
                                        offset: e
                                    }), t.IfTrue = (e)=>({
                                        name: "IfTrue",
                                        code: 75,
                                        offset: e
                                    }), t.IfFalse = (e)=>({
                                        name: "IfFalse",
                                        code: 76,
                                        offset: e
                                    }), t.Assert = {
                                    name: "Assert",
                                    code: 77
                                }, t.Blake2b = {
                                    name: "Blake2b",
                                    code: 78
                                }, t.Keccak256 = {
                                    name: "Keccak256",
                                    code: 79
                                }, t.Sha256 = {
                                    name: "Sha256",
                                    code: 80
                                }, t.Sha3 = {
                                    name: "Sha3",
                                    code: 81
                                }, t.VerifyTxSignature = {
                                    name: "VerifyTxSignature",
                                    code: 82
                                }, t.VerifySecP256K1 = {
                                    name: "VerifySecP256K1",
                                    code: 83
                                }, t.VerifyED25519 = {
                                    name: "VerifyED25519",
                                    code: 84
                                }, t.NetworkId = {
                                    name: "NetworkId",
                                    code: 85
                                }, t.BlockTimeStamp = {
                                    name: "BlockTimeStamp",
                                    code: 86
                                }, t.BlockTarget = {
                                    name: "BlockTarget",
                                    code: 87
                                }, t.TxId = {
                                    name: "TxId",
                                    code: 88
                                }, t.TxInputAddressAt = {
                                    name: "TxInputAddressAt",
                                    code: 89
                                }, t.TxInputsSize = {
                                    name: "TxInputsSize",
                                    code: 90
                                }, t.VerifyAbsoluteLocktime = {
                                    name: "VerifyAbsoluteLocktime",
                                    code: 91
                                }, t.VerifyRelativeLocktime = {
                                    name: "VerifyRelativeLocktime",
                                    code: 92
                                }, t.Log1 = {
                                    name: "Log1",
                                    code: 93
                                }, t.Log2 = {
                                    name: "Log2",
                                    code: 94
                                }, t.Log3 = {
                                    name: "Log3",
                                    code: 95
                                }, t.Log4 = {
                                    name: "Log4",
                                    code: 96
                                }, t.Log5 = {
                                    name: "Log5",
                                    code: 97
                                }, t.ByteVecSlice = {
                                    name: "ByteVecSlice",
                                    code: 98
                                }, t.ByteVecToAddress = {
                                    name: "ByteVecToAddress",
                                    code: 99
                                }, t.Encode = {
                                    name: "Encode",
                                    code: 100
                                }, t.Zeros = {
                                    name: "Zeros",
                                    code: 101
                                }, t.U256To1Byte = {
                                    name: "U256To1Byte",
                                    code: 102
                                }, t.U256To2Byte = {
                                    name: "U256To2Byte",
                                    code: 103
                                }, t.U256To4Byte = {
                                    name: "U256To4Byte",
                                    code: 104
                                }, t.U256To8Byte = {
                                    name: "U256To8Byte",
                                    code: 105
                                }, t.U256To16Byte = {
                                    name: "U256To16Byte",
                                    code: 106
                                }, t.U256To32Byte = {
                                    name: "U256To32Byte",
                                    code: 107
                                }, t.U256From1Byte = {
                                    name: "U256From1Byte",
                                    code: 108
                                }, t.U256From2Byte = {
                                    name: "U256From2Byte",
                                    code: 109
                                }, t.U256From4Byte = {
                                    name: "U256From4Byte",
                                    code: 110
                                }, t.U256From8Byte = {
                                    name: "U256From8Byte",
                                    code: 111
                                }, t.U256From16Byte = {
                                    name: "U256From16Byte",
                                    code: 112
                                }, t.U256From32Byte = {
                                    name: "U256From32Byte",
                                    code: 113
                                }, t.EthEcRecover = {
                                    name: "EthEcRecover",
                                    code: 114
                                }, t.Log6 = {
                                    name: "Log6",
                                    code: 115
                                }, t.Log7 = {
                                    name: "Log7",
                                    code: 116
                                }, t.Log8 = {
                                    name: "Log8",
                                    code: 117
                                }, t.Log9 = {
                                    name: "Log9",
                                    code: 118
                                }, t.ContractIdToAddress = {
                                    name: "ContractIdToAddress",
                                    code: 119
                                }, t.LoadLocalByIndex = {
                                    name: "LoadLocalByIndex",
                                    code: 120
                                }, t.StoreLocalByIndex = {
                                    name: "StoreLocalByIndex",
                                    code: 121
                                }, t.Dup = {
                                    name: "Dup",
                                    code: 122
                                }, t.AssertWithErrorCode = {
                                    name: "AssertWithErrorCode",
                                    code: 123
                                }, t.Swap = {
                                    name: "Swap",
                                    code: 124
                                }, t.BlockHash = {
                                    name: "BlockHash",
                                    code: 125
                                }, t.DEBUG = (e)=>({
                                        name: "DEBUG",
                                        code: 126,
                                        stringParts: e
                                    }), t.TxGasPrice = {
                                    name: "TxGasPrice",
                                    code: 127
                                }, t.TxGasAmount = {
                                    name: "TxGasAmount",
                                    code: 128
                                }, t.TxGasFee = {
                                    name: "TxGasFee",
                                    code: 129
                                }, t.I256Exp = {
                                    name: "I256Exp",
                                    code: 130
                                }, t.U256Exp = {
                                    name: "U256Exp",
                                    code: 131
                                }, t.U256ModExp = {
                                    name: "U256ModExp",
                                    code: 132
                                }, t.VerifyBIP340Schnorr = {
                                    name: "VerifyBIP340Schnorr",
                                    code: 133
                                }, t.GetSegregatedSignature = {
                                    name: "GetSegregatedSignature",
                                    code: 134
                                }, t.MulModN = {
                                    name: "MulModN",
                                    code: 135
                                }, t.AddModN = {
                                    name: "AddModN",
                                    code: 136
                                }, t.U256ToString = {
                                    name: "U256ToString",
                                    code: 137
                                }, t.I256ToString = {
                                    name: "I256ToString",
                                    code: 138
                                }, t.BoolToString = {
                                    name: "BoolToString",
                                    code: 139
                                }, t.GroupOfAddress = {
                                    name: "GroupOfAddress",
                                    code: 140
                                }, t.LoadMutField = (e)=>({
                                        name: "LoadMutField",
                                        code: 160,
                                        index: e
                                    }), t.StoreMutField = (e)=>({
                                        name: "StoreMutField",
                                        code: 161,
                                        index: e
                                    }), t.ApproveAlph = {
                                    name: "ApproveAlph",
                                    code: 162
                                }, t.ApproveToken = {
                                    name: "ApproveToken",
                                    code: 163
                                }, t.AlphRemaining = {
                                    name: "AlphRemaining",
                                    code: 164
                                }, t.TokenRemaining = {
                                    name: "TokenRemaining",
                                    code: 165
                                }, t.IsPaying = {
                                    name: "IsPaying",
                                    code: 166
                                }, t.TransferAlph = {
                                    name: "TransferAlph",
                                    code: 167
                                }, t.TransferAlphFromSelf = {
                                    name: "TransferAlphFromSelf",
                                    code: 168
                                }, t.TransferAlphToSelf = {
                                    name: "TransferAlphToSelf",
                                    code: 169
                                }, t.TransferToken = {
                                    name: "TransferToken",
                                    code: 170
                                }, t.TransferTokenFromSelf = {
                                    name: "TransferTokenFromSelf",
                                    code: 171
                                }, t.TransferTokenToSelf = {
                                    name: "TransferTokenToSelf",
                                    code: 172
                                }, t.CreateContract = {
                                    name: "CreateContract",
                                    code: 173
                                }, t.CreateContractWithToken = {
                                    name: "CreateContractWithToken",
                                    code: 174
                                }, t.CopyCreateContract = {
                                    name: "CopyCreateContract",
                                    code: 175
                                }, t.DestroySelf = {
                                    name: "DestroySelf",
                                    code: 176
                                }, t.SelfContractId = {
                                    name: "SelfContractId",
                                    code: 177
                                }, t.SelfAddress = {
                                    name: "SelfAddress",
                                    code: 178
                                }, t.CallerContractId = {
                                    name: "CallerContractId",
                                    code: 179
                                }, t.CallerAddress = {
                                    name: "CallerAddress",
                                    code: 180
                                }, t.IsCalledFromTxScript = {
                                    name: "IsCalledFromTxScript",
                                    code: 181
                                }, t.CallerInitialStateHash = {
                                    name: "CallerInitialStateHash",
                                    code: 182
                                }, t.CallerCodeHash = {
                                    name: "CallerCodeHash",
                                    code: 183
                                }, t.ContractInitialStateHash = {
                                    name: "ContractInitialStateHash",
                                    code: 184
                                }, t.ContractCodeHash = {
                                    name: "ContractCodeHash",
                                    code: 185
                                }, t.MigrateSimple = {
                                    name: "MigrateSimple",
                                    code: 186
                                }, t.MigrateWithFields = {
                                    name: "MigrateWithFields",
                                    code: 187
                                }, t.CopyCreateContractWithToken = {
                                    name: "CopyCreateContractWithToken",
                                    code: 188
                                }, t.BurnToken = {
                                    name: "BurnToken",
                                    code: 189
                                }, t.LockApprovedAssets = {
                                    name: "LockApprovedAssets",
                                    code: 190
                                }, t.CreateSubContract = {
                                    name: "CreateSubContract",
                                    code: 191
                                }, t.CreateSubContractWithToken = {
                                    name: "CreateSubContractWithToken",
                                    code: 192
                                }, t.CopyCreateSubContract = {
                                    name: "CopyCreateSubContract",
                                    code: 193
                                }, t.CopyCreateSubContractWithToken = {
                                    name: "CopyCreateSubContractWithToken",
                                    code: 194
                                }, t.LoadMutFieldByIndex = {
                                    name: "LoadMutFieldByIndex",
                                    code: 195
                                }, t.StoreMutFieldByIndex = {
                                    name: "StoreMutFieldByIndex",
                                    code: 196
                                }, t.ContractExists = {
                                    name: "ContractExists",
                                    code: 197
                                }, t.CreateContractAndTransferToken = {
                                    name: "CreateContractAndTransferToken",
                                    code: 198
                                }, t.CopyCreateContractAndTransferToken = {
                                    name: "CopyCreateContractAndTransferToken",
                                    code: 199
                                }, t.CreateSubContractAndTransferToken = {
                                    name: "CreateSubContractAndTransferToken",
                                    code: 200
                                }, t.CopyCreateSubContractAndTransferToken = {
                                    name: "CopyCreateSubContractAndTransferToken",
                                    code: 201
                                }, t.NullContractAddress = {
                                    name: "NullContractAddress",
                                    code: 202
                                }, t.SubContractId = {
                                    name: "SubContractId",
                                    code: 203
                                }, t.SubContractIdOf = {
                                    name: "SubContractIdOf",
                                    code: 204
                                }, t.ALPHTokenId = {
                                    name: "ALPHTokenId",
                                    code: 205
                                }, t.LoadImmField = (e)=>({
                                        name: "LoadImmField",
                                        code: 206,
                                        index: e
                                    }), t.LoadImmFieldByIndex = {
                                    name: "LoadImmFieldByIndex",
                                    code: 207
                                }, t.PayGasFee = {
                                    name: "PayGasFee",
                                    code: 208
                                }, t.MinimalContractDeposit = {
                                    name: "MinimalContractDeposit",
                                    code: 209
                                }, t.CreateMapEntry = (e, t)=>({
                                        name: "CreateMapEntry",
                                        code: 210,
                                        immFieldsNum: e,
                                        mutFieldsNum: t
                                    }), t.MethodSelector = (e)=>({
                                        name: "MethodSelector",
                                        code: 211,
                                        selector: e
                                    }), t.CallExternalBySelector = (e)=>({
                                        name: "CallExternalBySelector",
                                        code: 212,
                                        selector: e
                                    });
                                class h extends a.Codec {
                                    encode(e) {
                                        switch(e.name){
                                            case "CallLocal":
                                                return new Uint8Array([
                                                    0,
                                                    ...a.byteCodec.encode(e.index)
                                                ]);
                                            case "CallExternal":
                                                return new Uint8Array([
                                                    1,
                                                    ...a.byteCodec.encode(e.index)
                                                ]);
                                            case "Return":
                                                return new Uint8Array([
                                                    2
                                                ]);
                                            case "ConstTrue":
                                                return new Uint8Array([
                                                    3
                                                ]);
                                            case "ConstFalse":
                                                return new Uint8Array([
                                                    4
                                                ]);
                                            case "I256Const0":
                                                return new Uint8Array([
                                                    5
                                                ]);
                                            case "I256Const1":
                                                return new Uint8Array([
                                                    6
                                                ]);
                                            case "I256Const2":
                                                return new Uint8Array([
                                                    7
                                                ]);
                                            case "I256Const3":
                                                return new Uint8Array([
                                                    8
                                                ]);
                                            case "I256Const4":
                                                return new Uint8Array([
                                                    9
                                                ]);
                                            case "I256Const5":
                                                return new Uint8Array([
                                                    10
                                                ]);
                                            case "I256ConstN1":
                                                return new Uint8Array([
                                                    11
                                                ]);
                                            case "U256Const0":
                                                return new Uint8Array([
                                                    12
                                                ]);
                                            case "U256Const1":
                                                return new Uint8Array([
                                                    13
                                                ]);
                                            case "U256Const2":
                                                return new Uint8Array([
                                                    14
                                                ]);
                                            case "U256Const3":
                                                return new Uint8Array([
                                                    15
                                                ]);
                                            case "U256Const4":
                                                return new Uint8Array([
                                                    16
                                                ]);
                                            case "U256Const5":
                                                return new Uint8Array([
                                                    17
                                                ]);
                                            case "I256Const":
                                                return new Uint8Array([
                                                    18,
                                                    ...i.i256Codec.encode(e.value)
                                                ]);
                                            case "U256Const":
                                                return new Uint8Array([
                                                    19,
                                                    ...i.u256Codec.encode(e.value)
                                                ]);
                                            case "BytesConst":
                                                return new Uint8Array([
                                                    20,
                                                    ...s.byteStringCodec.encode(e.value)
                                                ]);
                                            case "AddressConst":
                                                return new Uint8Array([
                                                    21,
                                                    ...o.lockupScriptCodec.encode(e.value)
                                                ]);
                                            case "LoadLocal":
                                                return new Uint8Array([
                                                    22,
                                                    ...a.byteCodec.encode(e.index)
                                                ]);
                                            case "StoreLocal":
                                                return new Uint8Array([
                                                    23,
                                                    ...a.byteCodec.encode(e.index)
                                                ]);
                                            case "Pop":
                                                return new Uint8Array([
                                                    24
                                                ]);
                                            case "BoolNot":
                                                return new Uint8Array([
                                                    25
                                                ]);
                                            case "BoolAnd":
                                                return new Uint8Array([
                                                    26
                                                ]);
                                            case "BoolOr":
                                                return new Uint8Array([
                                                    27
                                                ]);
                                            case "BoolEq":
                                                return new Uint8Array([
                                                    28
                                                ]);
                                            case "BoolNeq":
                                                return new Uint8Array([
                                                    29
                                                ]);
                                            case "BoolToByteVec":
                                                return new Uint8Array([
                                                    30
                                                ]);
                                            case "I256Add":
                                                return new Uint8Array([
                                                    31
                                                ]);
                                            case "I256Sub":
                                                return new Uint8Array([
                                                    32
                                                ]);
                                            case "I256Mul":
                                                return new Uint8Array([
                                                    33
                                                ]);
                                            case "I256Div":
                                                return new Uint8Array([
                                                    34
                                                ]);
                                            case "I256Mod":
                                                return new Uint8Array([
                                                    35
                                                ]);
                                            case "I256Eq":
                                                return new Uint8Array([
                                                    36
                                                ]);
                                            case "I256Neq":
                                                return new Uint8Array([
                                                    37
                                                ]);
                                            case "I256Lt":
                                                return new Uint8Array([
                                                    38
                                                ]);
                                            case "I256Le":
                                                return new Uint8Array([
                                                    39
                                                ]);
                                            case "I256Gt":
                                                return new Uint8Array([
                                                    40
                                                ]);
                                            case "I256Ge":
                                                return new Uint8Array([
                                                    41
                                                ]);
                                            case "U256Add":
                                                return new Uint8Array([
                                                    42
                                                ]);
                                            case "U256Sub":
                                                return new Uint8Array([
                                                    43
                                                ]);
                                            case "U256Mul":
                                                return new Uint8Array([
                                                    44
                                                ]);
                                            case "U256Div":
                                                return new Uint8Array([
                                                    45
                                                ]);
                                            case "U256Mod":
                                                return new Uint8Array([
                                                    46
                                                ]);
                                            case "U256Eq":
                                                return new Uint8Array([
                                                    47
                                                ]);
                                            case "U256Neq":
                                                return new Uint8Array([
                                                    48
                                                ]);
                                            case "U256Lt":
                                                return new Uint8Array([
                                                    49
                                                ]);
                                            case "U256Le":
                                                return new Uint8Array([
                                                    50
                                                ]);
                                            case "U256Gt":
                                                return new Uint8Array([
                                                    51
                                                ]);
                                            case "U256Ge":
                                                return new Uint8Array([
                                                    52
                                                ]);
                                            case "U256ModAdd":
                                                return new Uint8Array([
                                                    53
                                                ]);
                                            case "U256ModSub":
                                                return new Uint8Array([
                                                    54
                                                ]);
                                            case "U256ModMul":
                                                return new Uint8Array([
                                                    55
                                                ]);
                                            case "U256BitAnd":
                                                return new Uint8Array([
                                                    56
                                                ]);
                                            case "U256BitOr":
                                                return new Uint8Array([
                                                    57
                                                ]);
                                            case "U256Xor":
                                                return new Uint8Array([
                                                    58
                                                ]);
                                            case "U256SHL":
                                                return new Uint8Array([
                                                    59
                                                ]);
                                            case "U256SHR":
                                                return new Uint8Array([
                                                    60
                                                ]);
                                            case "I256ToU256":
                                                return new Uint8Array([
                                                    61
                                                ]);
                                            case "I256ToByteVec":
                                                return new Uint8Array([
                                                    62
                                                ]);
                                            case "U256ToI256":
                                                return new Uint8Array([
                                                    63
                                                ]);
                                            case "U256ToByteVec":
                                                return new Uint8Array([
                                                    64
                                                ]);
                                            case "ByteVecEq":
                                                return new Uint8Array([
                                                    65
                                                ]);
                                            case "ByteVecNeq":
                                                return new Uint8Array([
                                                    66
                                                ]);
                                            case "ByteVecSize":
                                                return new Uint8Array([
                                                    67
                                                ]);
                                            case "ByteVecConcat":
                                                return new Uint8Array([
                                                    68
                                                ]);
                                            case "AddressEq":
                                                return new Uint8Array([
                                                    69
                                                ]);
                                            case "AddressNeq":
                                                return new Uint8Array([
                                                    70
                                                ]);
                                            case "AddressToByteVec":
                                                return new Uint8Array([
                                                    71
                                                ]);
                                            case "IsAssetAddress":
                                                return new Uint8Array([
                                                    72
                                                ]);
                                            case "IsContractAddress":
                                                return new Uint8Array([
                                                    73
                                                ]);
                                            case "Jump":
                                                return new Uint8Array([
                                                    74,
                                                    ...i.i32Codec.encode(e.offset)
                                                ]);
                                            case "IfTrue":
                                                return new Uint8Array([
                                                    75,
                                                    ...i.i32Codec.encode(e.offset)
                                                ]);
                                            case "IfFalse":
                                                return new Uint8Array([
                                                    76,
                                                    ...i.i32Codec.encode(e.offset)
                                                ]);
                                            case "Assert":
                                                return new Uint8Array([
                                                    77
                                                ]);
                                            case "Blake2b":
                                                return new Uint8Array([
                                                    78
                                                ]);
                                            case "Keccak256":
                                                return new Uint8Array([
                                                    79
                                                ]);
                                            case "Sha256":
                                                return new Uint8Array([
                                                    80
                                                ]);
                                            case "Sha3":
                                                return new Uint8Array([
                                                    81
                                                ]);
                                            case "VerifyTxSignature":
                                                return new Uint8Array([
                                                    82
                                                ]);
                                            case "VerifySecP256K1":
                                                return new Uint8Array([
                                                    83
                                                ]);
                                            case "VerifyED25519":
                                                return new Uint8Array([
                                                    84
                                                ]);
                                            case "NetworkId":
                                                return new Uint8Array([
                                                    85
                                                ]);
                                            case "BlockTimeStamp":
                                                return new Uint8Array([
                                                    86
                                                ]);
                                            case "BlockTarget":
                                                return new Uint8Array([
                                                    87
                                                ]);
                                            case "TxId":
                                                return new Uint8Array([
                                                    88
                                                ]);
                                            case "TxInputAddressAt":
                                                return new Uint8Array([
                                                    89
                                                ]);
                                            case "TxInputsSize":
                                                return new Uint8Array([
                                                    90
                                                ]);
                                            case "VerifyAbsoluteLocktime":
                                                return new Uint8Array([
                                                    91
                                                ]);
                                            case "VerifyRelativeLocktime":
                                                return new Uint8Array([
                                                    92
                                                ]);
                                            case "Log1":
                                                return new Uint8Array([
                                                    93
                                                ]);
                                            case "Log2":
                                                return new Uint8Array([
                                                    94
                                                ]);
                                            case "Log3":
                                                return new Uint8Array([
                                                    95
                                                ]);
                                            case "Log4":
                                                return new Uint8Array([
                                                    96
                                                ]);
                                            case "Log5":
                                                return new Uint8Array([
                                                    97
                                                ]);
                                            case "ByteVecSlice":
                                                return new Uint8Array([
                                                    98
                                                ]);
                                            case "ByteVecToAddress":
                                                return new Uint8Array([
                                                    99
                                                ]);
                                            case "Encode":
                                                return new Uint8Array([
                                                    100
                                                ]);
                                            case "Zeros":
                                                return new Uint8Array([
                                                    101
                                                ]);
                                            case "U256To1Byte":
                                                return new Uint8Array([
                                                    102
                                                ]);
                                            case "U256To2Byte":
                                                return new Uint8Array([
                                                    103
                                                ]);
                                            case "U256To4Byte":
                                                return new Uint8Array([
                                                    104
                                                ]);
                                            case "U256To8Byte":
                                                return new Uint8Array([
                                                    105
                                                ]);
                                            case "U256To16Byte":
                                                return new Uint8Array([
                                                    106
                                                ]);
                                            case "U256To32Byte":
                                                return new Uint8Array([
                                                    107
                                                ]);
                                            case "U256From1Byte":
                                                return new Uint8Array([
                                                    108
                                                ]);
                                            case "U256From2Byte":
                                                return new Uint8Array([
                                                    109
                                                ]);
                                            case "U256From4Byte":
                                                return new Uint8Array([
                                                    110
                                                ]);
                                            case "U256From8Byte":
                                                return new Uint8Array([
                                                    111
                                                ]);
                                            case "U256From16Byte":
                                                return new Uint8Array([
                                                    112
                                                ]);
                                            case "U256From32Byte":
                                                return new Uint8Array([
                                                    113
                                                ]);
                                            case "EthEcRecover":
                                                return new Uint8Array([
                                                    114
                                                ]);
                                            case "Log6":
                                                return new Uint8Array([
                                                    115
                                                ]);
                                            case "Log7":
                                                return new Uint8Array([
                                                    116
                                                ]);
                                            case "Log8":
                                                return new Uint8Array([
                                                    117
                                                ]);
                                            case "Log9":
                                                return new Uint8Array([
                                                    118
                                                ]);
                                            case "ContractIdToAddress":
                                                return new Uint8Array([
                                                    119
                                                ]);
                                            case "LoadLocalByIndex":
                                                return new Uint8Array([
                                                    120
                                                ]);
                                            case "StoreLocalByIndex":
                                                return new Uint8Array([
                                                    121
                                                ]);
                                            case "Dup":
                                                return new Uint8Array([
                                                    122
                                                ]);
                                            case "AssertWithErrorCode":
                                                return new Uint8Array([
                                                    123
                                                ]);
                                            case "Swap":
                                                return new Uint8Array([
                                                    124
                                                ]);
                                            case "BlockHash":
                                                return new Uint8Array([
                                                    125
                                                ]);
                                            case "DEBUG":
                                                return new Uint8Array([
                                                    126,
                                                    ...s.byteStringsCodec.encode(e.stringParts)
                                                ]);
                                            case "TxGasPrice":
                                                return new Uint8Array([
                                                    127
                                                ]);
                                            case "TxGasAmount":
                                                return new Uint8Array([
                                                    128
                                                ]);
                                            case "TxGasFee":
                                                return new Uint8Array([
                                                    129
                                                ]);
                                            case "I256Exp":
                                                return new Uint8Array([
                                                    130
                                                ]);
                                            case "U256Exp":
                                                return new Uint8Array([
                                                    131
                                                ]);
                                            case "U256ModExp":
                                                return new Uint8Array([
                                                    132
                                                ]);
                                            case "VerifyBIP340Schnorr":
                                                return new Uint8Array([
                                                    133
                                                ]);
                                            case "GetSegregatedSignature":
                                                return new Uint8Array([
                                                    134
                                                ]);
                                            case "MulModN":
                                                return new Uint8Array([
                                                    135
                                                ]);
                                            case "AddModN":
                                                return new Uint8Array([
                                                    136
                                                ]);
                                            case "U256ToString":
                                                return new Uint8Array([
                                                    137
                                                ]);
                                            case "I256ToString":
                                                return new Uint8Array([
                                                    138
                                                ]);
                                            case "BoolToString":
                                                return new Uint8Array([
                                                    139
                                                ]);
                                            case "GroupOfAddress":
                                                return new Uint8Array([
                                                    140
                                                ]);
                                            case "LoadMutField":
                                                return new Uint8Array([
                                                    160,
                                                    ...a.byteCodec.encode(e.index)
                                                ]);
                                            case "StoreMutField":
                                                return new Uint8Array([
                                                    161,
                                                    ...a.byteCodec.encode(e.index)
                                                ]);
                                            case "ApproveAlph":
                                                return new Uint8Array([
                                                    162
                                                ]);
                                            case "ApproveToken":
                                                return new Uint8Array([
                                                    163
                                                ]);
                                            case "AlphRemaining":
                                                return new Uint8Array([
                                                    164
                                                ]);
                                            case "TokenRemaining":
                                                return new Uint8Array([
                                                    165
                                                ]);
                                            case "IsPaying":
                                                return new Uint8Array([
                                                    166
                                                ]);
                                            case "TransferAlph":
                                                return new Uint8Array([
                                                    167
                                                ]);
                                            case "TransferAlphFromSelf":
                                                return new Uint8Array([
                                                    168
                                                ]);
                                            case "TransferAlphToSelf":
                                                return new Uint8Array([
                                                    169
                                                ]);
                                            case "TransferToken":
                                                return new Uint8Array([
                                                    170
                                                ]);
                                            case "TransferTokenFromSelf":
                                                return new Uint8Array([
                                                    171
                                                ]);
                                            case "TransferTokenToSelf":
                                                return new Uint8Array([
                                                    172
                                                ]);
                                            case "CreateContract":
                                                return new Uint8Array([
                                                    173
                                                ]);
                                            case "CreateContractWithToken":
                                                return new Uint8Array([
                                                    174
                                                ]);
                                            case "CopyCreateContract":
                                                return new Uint8Array([
                                                    175
                                                ]);
                                            case "DestroySelf":
                                                return new Uint8Array([
                                                    176
                                                ]);
                                            case "SelfContractId":
                                                return new Uint8Array([
                                                    177
                                                ]);
                                            case "SelfAddress":
                                                return new Uint8Array([
                                                    178
                                                ]);
                                            case "CallerContractId":
                                                return new Uint8Array([
                                                    179
                                                ]);
                                            case "CallerAddress":
                                                return new Uint8Array([
                                                    180
                                                ]);
                                            case "IsCalledFromTxScript":
                                                return new Uint8Array([
                                                    181
                                                ]);
                                            case "CallerInitialStateHash":
                                                return new Uint8Array([
                                                    182
                                                ]);
                                            case "CallerCodeHash":
                                                return new Uint8Array([
                                                    183
                                                ]);
                                            case "ContractInitialStateHash":
                                                return new Uint8Array([
                                                    184
                                                ]);
                                            case "ContractCodeHash":
                                                return new Uint8Array([
                                                    185
                                                ]);
                                            case "MigrateSimple":
                                                return new Uint8Array([
                                                    186
                                                ]);
                                            case "MigrateWithFields":
                                                return new Uint8Array([
                                                    187
                                                ]);
                                            case "CopyCreateContractWithToken":
                                                return new Uint8Array([
                                                    188
                                                ]);
                                            case "BurnToken":
                                                return new Uint8Array([
                                                    189
                                                ]);
                                            case "LockApprovedAssets":
                                                return new Uint8Array([
                                                    190
                                                ]);
                                            case "CreateSubContract":
                                                return new Uint8Array([
                                                    191
                                                ]);
                                            case "CreateSubContractWithToken":
                                                return new Uint8Array([
                                                    192
                                                ]);
                                            case "CopyCreateSubContract":
                                                return new Uint8Array([
                                                    193
                                                ]);
                                            case "CopyCreateSubContractWithToken":
                                                return new Uint8Array([
                                                    194
                                                ]);
                                            case "LoadMutFieldByIndex":
                                                return new Uint8Array([
                                                    195
                                                ]);
                                            case "StoreMutFieldByIndex":
                                                return new Uint8Array([
                                                    196
                                                ]);
                                            case "ContractExists":
                                                return new Uint8Array([
                                                    197
                                                ]);
                                            case "CreateContractAndTransferToken":
                                                return new Uint8Array([
                                                    198
                                                ]);
                                            case "CopyCreateContractAndTransferToken":
                                                return new Uint8Array([
                                                    199
                                                ]);
                                            case "CreateSubContractAndTransferToken":
                                                return new Uint8Array([
                                                    200
                                                ]);
                                            case "CopyCreateSubContractAndTransferToken":
                                                return new Uint8Array([
                                                    201
                                                ]);
                                            case "NullContractAddress":
                                                return new Uint8Array([
                                                    202
                                                ]);
                                            case "SubContractId":
                                                return new Uint8Array([
                                                    203
                                                ]);
                                            case "SubContractIdOf":
                                                return new Uint8Array([
                                                    204
                                                ]);
                                            case "ALPHTokenId":
                                                return new Uint8Array([
                                                    205
                                                ]);
                                            case "LoadImmField":
                                                return new Uint8Array([
                                                    206,
                                                    ...a.byteCodec.encode(e.index)
                                                ]);
                                            case "LoadImmFieldByIndex":
                                                return new Uint8Array([
                                                    207
                                                ]);
                                            case "PayGasFee":
                                                return new Uint8Array([
                                                    208
                                                ]);
                                            case "MinimalContractDeposit":
                                                return new Uint8Array([
                                                    209
                                                ]);
                                            case "CreateMapEntry":
                                                return new Uint8Array([
                                                    210,
                                                    ...a.byteCodec.encode(e.immFieldsNum),
                                                    ...a.byteCodec.encode(e.mutFieldsNum)
                                                ]);
                                            case "MethodSelector":
                                                return new Uint8Array([
                                                    211,
                                                    ...c.intAs4BytesCodec.encode(e.selector)
                                                ]);
                                            case "CallExternalBySelector":
                                                return new Uint8Array([
                                                    212,
                                                    ...c.intAs4BytesCodec.encode(e.selector)
                                                ]);
                                        }
                                    }
                                    _decode(e) {
                                        const r = e.consumeByte();
                                        switch(r){
                                            case 0:
                                                return (0, t.CallLocal)(a.byteCodec._decode(e));
                                            case 1:
                                                return (0, t.CallExternal)(a.byteCodec._decode(e));
                                            case 2:
                                                return t.Return;
                                            case 3:
                                                return t.ConstTrue;
                                            case 4:
                                                return t.ConstFalse;
                                            case 5:
                                                return t.I256Const0;
                                            case 6:
                                                return t.I256Const1;
                                            case 7:
                                                return t.I256Const2;
                                            case 8:
                                                return t.I256Const3;
                                            case 9:
                                                return t.I256Const4;
                                            case 10:
                                                return t.I256Const5;
                                            case 11:
                                                return t.I256ConstN1;
                                            case 12:
                                                return t.U256Const0;
                                            case 13:
                                                return t.U256Const1;
                                            case 14:
                                                return t.U256Const2;
                                            case 15:
                                                return t.U256Const3;
                                            case 16:
                                                return t.U256Const4;
                                            case 17:
                                                return t.U256Const5;
                                            case 18:
                                                return (0, t.I256Const)(i.i256Codec._decode(e));
                                            case 19:
                                                return (0, t.U256Const)(i.u256Codec._decode(e));
                                            case 20:
                                                return (0, t.BytesConst)(s.byteStringCodec._decode(e));
                                            case 21:
                                                return (0, t.AddressConst)(o.lockupScriptCodec._decode(e));
                                            case 22:
                                                return (0, t.LoadLocal)(a.byteCodec._decode(e));
                                            case 23:
                                                return (0, t.StoreLocal)(a.byteCodec._decode(e));
                                            case 24:
                                                return t.Pop;
                                            case 25:
                                                return t.BoolNot;
                                            case 26:
                                                return t.BoolAnd;
                                            case 27:
                                                return t.BoolOr;
                                            case 28:
                                                return t.BoolEq;
                                            case 29:
                                                return t.BoolNeq;
                                            case 30:
                                                return t.BoolToByteVec;
                                            case 31:
                                                return t.I256Add;
                                            case 32:
                                                return t.I256Sub;
                                            case 33:
                                                return t.I256Mul;
                                            case 34:
                                                return t.I256Div;
                                            case 35:
                                                return t.I256Mod;
                                            case 36:
                                                return t.I256Eq;
                                            case 37:
                                                return t.I256Neq;
                                            case 38:
                                                return t.I256Lt;
                                            case 39:
                                                return t.I256Le;
                                            case 40:
                                                return t.I256Gt;
                                            case 41:
                                                return t.I256Ge;
                                            case 42:
                                                return t.U256Add;
                                            case 43:
                                                return t.U256Sub;
                                            case 44:
                                                return t.U256Mul;
                                            case 45:
                                                return t.U256Div;
                                            case 46:
                                                return t.U256Mod;
                                            case 47:
                                                return t.U256Eq;
                                            case 48:
                                                return t.U256Neq;
                                            case 49:
                                                return t.U256Lt;
                                            case 50:
                                                return t.U256Le;
                                            case 51:
                                                return t.U256Gt;
                                            case 52:
                                                return t.U256Ge;
                                            case 53:
                                                return t.U256ModAdd;
                                            case 54:
                                                return t.U256ModSub;
                                            case 55:
                                                return t.U256ModMul;
                                            case 56:
                                                return t.U256BitAnd;
                                            case 57:
                                                return t.U256BitOr;
                                            case 58:
                                                return t.U256Xor;
                                            case 59:
                                                return t.U256SHL;
                                            case 60:
                                                return t.U256SHR;
                                            case 61:
                                                return t.I256ToU256;
                                            case 62:
                                                return t.I256ToByteVec;
                                            case 63:
                                                return t.U256ToI256;
                                            case 64:
                                                return t.U256ToByteVec;
                                            case 65:
                                                return t.ByteVecEq;
                                            case 66:
                                                return t.ByteVecNeq;
                                            case 67:
                                                return t.ByteVecSize;
                                            case 68:
                                                return t.ByteVecConcat;
                                            case 69:
                                                return t.AddressEq;
                                            case 70:
                                                return t.AddressNeq;
                                            case 71:
                                                return t.AddressToByteVec;
                                            case 72:
                                                return t.IsAssetAddress;
                                            case 73:
                                                return t.IsContractAddress;
                                            case 74:
                                                return (0, t.Jump)(i.i32Codec._decode(e));
                                            case 75:
                                                return (0, t.IfTrue)(i.i32Codec._decode(e));
                                            case 76:
                                                return (0, t.IfFalse)(i.i32Codec._decode(e));
                                            case 77:
                                                return t.Assert;
                                            case 78:
                                                return t.Blake2b;
                                            case 79:
                                                return t.Keccak256;
                                            case 80:
                                                return t.Sha256;
                                            case 81:
                                                return t.Sha3;
                                            case 82:
                                                return t.VerifyTxSignature;
                                            case 83:
                                                return t.VerifySecP256K1;
                                            case 84:
                                                return t.VerifyED25519;
                                            case 85:
                                                return t.NetworkId;
                                            case 86:
                                                return t.BlockTimeStamp;
                                            case 87:
                                                return t.BlockTarget;
                                            case 88:
                                                return t.TxId;
                                            case 89:
                                                return t.TxInputAddressAt;
                                            case 90:
                                                return t.TxInputsSize;
                                            case 91:
                                                return t.VerifyAbsoluteLocktime;
                                            case 92:
                                                return t.VerifyRelativeLocktime;
                                            case 93:
                                                return t.Log1;
                                            case 94:
                                                return t.Log2;
                                            case 95:
                                                return t.Log3;
                                            case 96:
                                                return t.Log4;
                                            case 97:
                                                return t.Log5;
                                            case 98:
                                                return t.ByteVecSlice;
                                            case 99:
                                                return t.ByteVecToAddress;
                                            case 100:
                                                return t.Encode;
                                            case 101:
                                                return t.Zeros;
                                            case 102:
                                                return t.U256To1Byte;
                                            case 103:
                                                return t.U256To2Byte;
                                            case 104:
                                                return t.U256To4Byte;
                                            case 105:
                                                return t.U256To8Byte;
                                            case 106:
                                                return t.U256To16Byte;
                                            case 107:
                                                return t.U256To32Byte;
                                            case 108:
                                                return t.U256From1Byte;
                                            case 109:
                                                return t.U256From2Byte;
                                            case 110:
                                                return t.U256From4Byte;
                                            case 111:
                                                return t.U256From8Byte;
                                            case 112:
                                                return t.U256From16Byte;
                                            case 113:
                                                return t.U256From32Byte;
                                            case 114:
                                                return t.EthEcRecover;
                                            case 115:
                                                return t.Log6;
                                            case 116:
                                                return t.Log7;
                                            case 117:
                                                return t.Log8;
                                            case 118:
                                                return t.Log9;
                                            case 119:
                                                return t.ContractIdToAddress;
                                            case 120:
                                                return t.LoadLocalByIndex;
                                            case 121:
                                                return t.StoreLocalByIndex;
                                            case 122:
                                                return t.Dup;
                                            case 123:
                                                return t.AssertWithErrorCode;
                                            case 124:
                                                return t.Swap;
                                            case 125:
                                                return t.BlockHash;
                                            case 126:
                                                return (0, t.DEBUG)(s.byteStringsCodec._decode(e));
                                            case 127:
                                                return t.TxGasPrice;
                                            case 128:
                                                return t.TxGasAmount;
                                            case 129:
                                                return t.TxGasFee;
                                            case 130:
                                                return t.I256Exp;
                                            case 131:
                                                return t.U256Exp;
                                            case 132:
                                                return t.U256ModExp;
                                            case 133:
                                                return t.VerifyBIP340Schnorr;
                                            case 134:
                                                return t.GetSegregatedSignature;
                                            case 135:
                                                return t.MulModN;
                                            case 136:
                                                return t.AddModN;
                                            case 137:
                                                return t.U256ToString;
                                            case 138:
                                                return t.I256ToString;
                                            case 139:
                                                return t.BoolToString;
                                            case 140:
                                                return t.GroupOfAddress;
                                            case 160:
                                                return (0, t.LoadMutField)(a.byteCodec._decode(e));
                                            case 161:
                                                return (0, t.StoreMutField)(a.byteCodec._decode(e));
                                            case 162:
                                                return t.ApproveAlph;
                                            case 163:
                                                return t.ApproveToken;
                                            case 164:
                                                return t.AlphRemaining;
                                            case 165:
                                                return t.TokenRemaining;
                                            case 166:
                                                return t.IsPaying;
                                            case 167:
                                                return t.TransferAlph;
                                            case 168:
                                                return t.TransferAlphFromSelf;
                                            case 169:
                                                return t.TransferAlphToSelf;
                                            case 170:
                                                return t.TransferToken;
                                            case 171:
                                                return t.TransferTokenFromSelf;
                                            case 172:
                                                return t.TransferTokenToSelf;
                                            case 173:
                                                return t.CreateContract;
                                            case 174:
                                                return t.CreateContractWithToken;
                                            case 175:
                                                return t.CopyCreateContract;
                                            case 176:
                                                return t.DestroySelf;
                                            case 177:
                                                return t.SelfContractId;
                                            case 178:
                                                return t.SelfAddress;
                                            case 179:
                                                return t.CallerContractId;
                                            case 180:
                                                return t.CallerAddress;
                                            case 181:
                                                return t.IsCalledFromTxScript;
                                            case 182:
                                                return t.CallerInitialStateHash;
                                            case 183:
                                                return t.CallerCodeHash;
                                            case 184:
                                                return t.ContractInitialStateHash;
                                            case 185:
                                                return t.ContractCodeHash;
                                            case 186:
                                                return t.MigrateSimple;
                                            case 187:
                                                return t.MigrateWithFields;
                                            case 188:
                                                return t.CopyCreateContractWithToken;
                                            case 189:
                                                return t.BurnToken;
                                            case 190:
                                                return t.LockApprovedAssets;
                                            case 191:
                                                return t.CreateSubContract;
                                            case 192:
                                                return t.CreateSubContractWithToken;
                                            case 193:
                                                return t.CopyCreateSubContract;
                                            case 194:
                                                return t.CopyCreateSubContractWithToken;
                                            case 195:
                                                return t.LoadMutFieldByIndex;
                                            case 196:
                                                return t.StoreMutFieldByIndex;
                                            case 197:
                                                return t.ContractExists;
                                            case 198:
                                                return t.CreateContractAndTransferToken;
                                            case 199:
                                                return t.CopyCreateContractAndTransferToken;
                                            case 200:
                                                return t.CreateSubContractAndTransferToken;
                                            case 201:
                                                return t.CopyCreateSubContractAndTransferToken;
                                            case 202:
                                                return t.NullContractAddress;
                                            case 203:
                                                return t.SubContractId;
                                            case 204:
                                                return t.SubContractIdOf;
                                            case 205:
                                                return t.ALPHTokenId;
                                            case 206:
                                                return (0, t.LoadImmField)(a.byteCodec._decode(e));
                                            case 207:
                                                return t.LoadImmFieldByIndex;
                                            case 208:
                                                return t.PayGasFee;
                                            case 209:
                                                return t.MinimalContractDeposit;
                                            case 210:
                                                return (0, t.CreateMapEntry)(a.byteCodec._decode(e), a.byteCodec._decode(e));
                                            case 211:
                                                return (0, t.MethodSelector)(c.intAs4BytesCodec._decode(e));
                                            case 212:
                                                return (0, t.CallExternalBySelector)(c.intAs4BytesCodec._decode(e));
                                            default:
                                                throw new Error(`Unknown instr code: ${r}`);
                                        }
                                    }
                                }
                                t.InstrCodec = h, t.instrCodec = new h, t.instrsCodec = new n.ArrayCodec(t.instrCodec), t.toU256 = function(e) {
                                    switch(function(e) {
                                        if (e < 0n || e >= 2n ** 256n) throw new Error(`Invalid u256 number: ${e}`);
                                    }(e), e){
                                        case 0n:
                                            return t.U256Const0;
                                        case 1n:
                                            return t.U256Const1;
                                        case 2n:
                                            return t.U256Const2;
                                        case 3n:
                                            return t.U256Const3;
                                        case 4n:
                                            return t.U256Const4;
                                        case 5n:
                                            return t.U256Const5;
                                        default:
                                            return (0, t.U256Const)(e);
                                    }
                                }, t.toI256 = function(e) {
                                    switch(function(e) {
                                        const t = 2n ** 255n;
                                        if (e < -t || e >= t) throw new Error(`Invalid i256 number: ${e}`);
                                    }(e), e){
                                        case 0n:
                                            return t.I256Const0;
                                        case 1n:
                                            return t.I256Const1;
                                        case 2n:
                                            return t.I256Const2;
                                        case 3n:
                                            return t.I256Const3;
                                        case 4n:
                                            return t.I256Const4;
                                        case 5n:
                                            return t.I256Const5;
                                        case -1n:
                                            return t.I256ConstN1;
                                        default:
                                            return (0, t.I256Const)(e);
                                    }
                                };
                            },
                            2768: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.intAs4BytesCodec = t.IntAs4BytesCodec = void 0;
                                const n = r(2709);
                                class i extends n.Codec {
                                    encode(e) {
                                        return new Uint8Array([
                                            e >> 24 & 255,
                                            e >> 16 & 255,
                                            e >> 8 & 255,
                                            255 & e
                                        ]);
                                    }
                                    _decode(e) {
                                        const t = e.consumeBytes(4);
                                        return (255 & t[0]) << 24 | (255 & t[1]) << 16 | (255 & t[2]) << 8 | 255 & t[3];
                                    }
                                }
                                t.IntAs4BytesCodec = i, t.intAs4BytesCodec = new i;
                            },
                            1678: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.lockupScriptCodec = t.p2cCodec = void 0;
                                const n = r(5617), i = r(2709), s = r(2205);
                                t.p2cCodec = i.byte32Codec;
                                const o = new i.ObjectCodec({
                                    publicKeyHashes: new s.ArrayCodec(i.byte32Codec),
                                    m: n.i32Codec
                                });
                                t.lockupScriptCodec = new i.EnumCodec("lockup script", {
                                    P2PKH: i.byte32Codec,
                                    P2MPKH: o,
                                    P2SH: i.byte32Codec,
                                    P2C: i.byte32Codec
                                });
                            },
                            3049: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.methodsCodec = t.methodCodec = t.MethodCodec = void 0;
                                const n = r(2205), i = r(5617), s = r(2709), o = r(6210), a = r(664);
                                class c extends s.Codec {
                                    encode(e) {
                                        const t = [];
                                        var r;
                                        return t.push(s.boolCodec.encode(e.isPublic)), t.push(new Uint8Array([
                                            (r = e, (r.usePreapprovedAssets || r.useContractAssets ? r.usePreapprovedAssets && r.useContractAssets ? 1 : !r.usePreapprovedAssets && r.useContractAssets ? 2 : 3 : 0) | (r.usePayToContractOnly ? 4 : 0))
                                        ])), t.push(i.i32Codec.encode(e.argsLength)), t.push(i.i32Codec.encode(e.localsLength)), t.push(i.i32Codec.encode(e.returnLength)), t.push(o.instrsCodec.encode(e.instrs)), (0, a.concatBytes)(t);
                                    }
                                    _decode(e) {
                                        const t = s.boolCodec._decode(e);
                                        return {
                                            ...function(e) {
                                                const t = !!(4 & e);
                                                switch(3 & e){
                                                    case 0:
                                                        return {
                                                            usePayToContractOnly: t,
                                                            usePreapprovedAssets: !1,
                                                            useContractAssets: !1
                                                        };
                                                    case 1:
                                                        return {
                                                            usePayToContractOnly: t,
                                                            usePreapprovedAssets: !0,
                                                            useContractAssets: !0
                                                        };
                                                    case 2:
                                                        return {
                                                            usePayToContractOnly: t,
                                                            usePreapprovedAssets: !1,
                                                            useContractAssets: !0
                                                        };
                                                    case 3:
                                                        return {
                                                            usePayToContractOnly: t,
                                                            usePreapprovedAssets: !0,
                                                            useContractAssets: !1
                                                        };
                                                    default:
                                                        throw new Error(`Invalid asset modifier: ${e}`);
                                                }
                                            }(s.byteCodec._decode(e)),
                                            isPublic: t,
                                            argsLength: i.i32Codec._decode(e),
                                            localsLength: i.i32Codec._decode(e),
                                            returnLength: i.i32Codec._decode(e),
                                            instrs: o.instrsCodec._decode(e)
                                        };
                                    }
                                }
                                t.MethodCodec = c, t.methodCodec = new c, t.methodsCodec = new n.ArrayCodec(t.methodCodec);
                            },
                            6633: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.option = void 0;
                                const n = r(2709), i = new class extends n.Codec {
                                    encode() {
                                        return new Uint8Array([]);
                                    }
                                    _decode() {}
                                };
                                t.option = function(e) {
                                    return new n.EnumCodec("option", {
                                        None: i,
                                        Some: e
                                    });
                                };
                            },
                            7421: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.outputsCodec = t.outputCodec = void 0;
                                const n = r(2205), i = r(2577), s = r(406), o = r(1672);
                                t.outputCodec = (0, i.either)("output", s.assetOutputCodec, o.contractOutputCodec), t.outputsCodec = new n.ArrayCodec(t.outputCodec);
                            },
                            7248: (e, t)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.Reader = void 0, t.Reader = class {
                                    constructor(e){
                                        this.index = 0, this.bytes = e;
                                    }
                                    consumeByte() {
                                        if (this.index >= this.bytes.length) throw new Error(`Index out of range: unable to consume byte at index ${this.index}, data length: ${this.bytes.length}`);
                                        const e = this.bytes[`${this.index}`];
                                        return this.index += 1, e;
                                    }
                                    consumeBytes(e) {
                                        const t = this.index, r = this.index + e;
                                        if (t > r || r > this.bytes.length) throw new Error(`Index out of range: unable to consume bytes from index ${t} to ${r}, data length: ${this.bytes.length}`);
                                        const n = this.bytes.slice(t, r);
                                        return this.index = r, n;
                                    }
                                    consumeAll() {
                                        return this.consumeBytes(this.bytes.length - this.index);
                                    }
                                };
                            },
                            4459: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.statefulScriptCodecOpt = t.scriptCodec = t.ScriptCodec = void 0;
                                const n = r(2709), i = r(3049), s = r(6633);
                                class o extends n.Codec {
                                    encode(e) {
                                        return i.methodsCodec.encode(e.methods);
                                    }
                                    _decode(e) {
                                        return {
                                            methods: i.methodsCodec._decode(e)
                                        };
                                    }
                                }
                                t.ScriptCodec = o, t.scriptCodec = new o, t.statefulScriptCodecOpt = (0, s.option)(t.scriptCodec);
                            },
                            9510: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.signaturesCodec = t.signatureCodec = void 0;
                                const n = r(2205), i = r(2709);
                                t.signatureCodec = new i.FixedSizeCodec(64), t.signaturesCodec = new n.ArrayCodec(t.signatureCodec);
                            },
                            7500: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.timestampCodec = t.TimestampCodec = void 0;
                                const n = r(664), i = r(2709);
                                class s extends i.Codec {
                                    encode(e) {
                                        (0, i.assert)(e >= 0n && e < s.max, `Invalid timestamp: ${e}`);
                                        const t = new Uint8Array(8);
                                        for(let r = 0; r < 8; r += 1)t[`${r}`] = Number(e >> BigInt(8 * (7 - r)) & BigInt(255));
                                        return t;
                                    }
                                    _decode(e) {
                                        const t = e.consumeBytes(8);
                                        return BigInt(`0x${(0, n.binToHex)(t)}`);
                                    }
                                }
                                t.TimestampCodec = s, s.max = 1n << 64n, t.timestampCodec = new s;
                            },
                            6341: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.tokensCodec = t.tokenCodec = void 0;
                                const n = r(5617), i = r(2709), s = r(2205);
                                t.tokenCodec = new i.ObjectCodec({
                                    tokenId: i.byte32Codec,
                                    amount: n.u256Codec
                                }), t.tokensCodec = new s.ArrayCodec(t.tokenCodec);
                            },
                            1092: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.transactionCodec = t.TransactionCodec = void 0;
                                const n = r(2190), i = r(9510), s = r(4464), o = r(406), a = r(1672), c = r(664), h = r(2709), u = r(7421);
                                class d extends h.ObjectCodec {
                                    encodeApiTransaction(e) {
                                        const t = d.fromApiTransaction(e);
                                        return this.encode(t);
                                    }
                                    decodeApiTransaction(e) {
                                        const t = this.decode(e);
                                        return d.toApiTransaction(t);
                                    }
                                    static toApiTransaction(e) {
                                        const t = n.UnsignedTxCodec.txId(e.unsigned), r = n.UnsignedTxCodec.toApiUnsignedTx(e.unsigned), i = !!e.scriptExecutionOk, s = e.contractInputs.map((e)=>({
                                                hint: e.hint,
                                                key: (0, c.binToHex)(e.key)
                                            })), h = (0, c.hexToBinUnsafe)(t);
                                        return {
                                            unsigned: r,
                                            scriptExecutionOk: i,
                                            contractInputs: s,
                                            generatedOutputs: e.generatedOutputs.map((e, t)=>"Left" === e.kind ? {
                                                    ...o.AssetOutputCodec.toFixedAssetOutput(h, e.value, t),
                                                    type: "AssetOutput"
                                                } : a.ContractOutputCodec.convertToApiContractOutput(h, e.value, t)),
                                            inputSignatures: e.inputSignatures.map((e)=>(0, c.binToHex)(e)),
                                            scriptSignatures: e.scriptSignatures.map((e)=>(0, c.binToHex)(e))
                                        };
                                    }
                                    static fromApiTransaction(e) {
                                        return {
                                            unsigned: n.UnsignedTxCodec.fromApiUnsignedTx(e.unsigned),
                                            scriptExecutionOk: e.scriptExecutionOk ? 1 : 0,
                                            contractInputs: e.contractInputs.map((e)=>({
                                                    hint: e.hint,
                                                    key: (0, c.hexToBinUnsafe)(e.key)
                                                })),
                                            generatedOutputs: e.generatedOutputs.map((e)=>{
                                                if ("AssetOutput" === e.type) return {
                                                    kind: "Left",
                                                    value: o.AssetOutputCodec.fromFixedAssetOutput(e)
                                                };
                                                if ("ContractOutput" === e.type) return {
                                                    kind: "Right",
                                                    value: a.ContractOutputCodec.convertToOutput(e)
                                                };
                                                throw new Error("Invalid output type");
                                            }),
                                            inputSignatures: e.inputSignatures.map((e)=>(0, c.hexToBinUnsafe)(e)),
                                            scriptSignatures: e.scriptSignatures.map((e)=>(0, c.hexToBinUnsafe)(e))
                                        };
                                    }
                                }
                                t.TransactionCodec = d, t.transactionCodec = new d({
                                    unsigned: n.unsignedTxCodec,
                                    scriptExecutionOk: h.byteCodec,
                                    contractInputs: s.contractOutputRefsCodec,
                                    generatedOutputs: u.outputsCodec,
                                    inputSignatures: i.signaturesCodec,
                                    scriptSignatures: i.signaturesCodec
                                });
                            },
                            2976: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.encodedSameAsPrevious = t.unlockScriptCodec = void 0;
                                const n = r(2205), i = r(5617), s = r(2709), o = r(4459), a = r(1924), c = new s.FixedSizeCodec(33), h = new s.ObjectCodec({
                                    publicKey: c,
                                    index: i.i32Codec
                                }), u = new n.ArrayCodec(h), d = new s.ObjectCodec({
                                    script: o.scriptCodec,
                                    params: a.valsCodec
                                }), f = new class extends s.Codec {
                                    encode() {
                                        return new Uint8Array([]);
                                    }
                                    _decode() {
                                        return "SameAsPrevious";
                                    }
                                };
                                t.unlockScriptCodec = new s.EnumCodec("unlock script", {
                                    P2PKH: c,
                                    P2MPKH: u,
                                    P2SH: d,
                                    SameAsPrevious: f
                                }), t.encodedSameAsPrevious = t.unlockScriptCodec.encode({
                                    kind: "SameAsPrevious",
                                    value: "SameAsPrevious"
                                });
                            },
                            2190: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.unsignedTxCodec = t.UnsignedTxCodec = void 0;
                                const n = r(664), i = r(4459), s = r(5617), o = r(7544), a = r(406), c = r(7007), h = r(2709);
                                class u extends h.ObjectCodec {
                                    encodeApiUnsignedTx(e) {
                                        const t = u.fromApiUnsignedTx(e);
                                        return this.encode(t);
                                    }
                                    decodeApiUnsignedTx(e) {
                                        const t = this.decode(e);
                                        return u.toApiUnsignedTx(t);
                                    }
                                    static txId(e) {
                                        return (0, n.binToHex)((0, c.blakeHash)(t.unsignedTxCodec.encode(e)));
                                    }
                                    static toApiUnsignedTx(e) {
                                        const t = u.txId(e), r = (0, n.hexToBinUnsafe)(t), s = e.version, c = e.networkId, h = e.gasAmount, d = e.gasPrice.toString(), f = o.InputCodec.toAssetInputs(e.inputs), l = a.AssetOutputCodec.toFixedAssetOutputs(r, e.fixedOutputs);
                                        let p;
                                        return "Some" === e.statefulScript.kind && (p = (0, n.binToHex)(i.scriptCodec.encode(e.statefulScript.value))), {
                                            txId: t,
                                            version: s,
                                            networkId: c,
                                            gasAmount: h,
                                            scriptOpt: p,
                                            gasPrice: d,
                                            inputs: f,
                                            fixedOutputs: l
                                        };
                                    }
                                    static fromApiUnsignedTx(e) {
                                        return {
                                            version: e.version,
                                            networkId: e.networkId,
                                            gasAmount: e.gasAmount,
                                            gasPrice: BigInt(e.gasPrice),
                                            inputs: o.InputCodec.fromAssetInputs(e.inputs),
                                            fixedOutputs: a.AssetOutputCodec.fromFixedAssetOutputs(e.fixedOutputs),
                                            statefulScript: void 0 !== e.scriptOpt ? {
                                                kind: "Some",
                                                value: i.scriptCodec.decode((0, n.hexToBinUnsafe)(e.scriptOpt))
                                            } : {
                                                kind: "None",
                                                value: void 0
                                            }
                                        };
                                    }
                                }
                                t.UnsignedTxCodec = u, t.unsignedTxCodec = new u({
                                    version: h.byteCodec,
                                    networkId: h.byteCodec,
                                    statefulScript: i.statefulScriptCodecOpt,
                                    gasAmount: s.i32Codec,
                                    gasPrice: s.u256Codec,
                                    inputs: o.inputsCodec,
                                    fixedOutputs: a.assetOutputsCodec
                                });
                            },
                            1924: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.valsCodec = t.valCodec = void 0;
                                const n = r(5617), i = r(5675), s = r(2709), o = r(1678), a = r(2205);
                                t.valCodec = new s.EnumCodec("val", {
                                    Bool: s.boolCodec,
                                    I256: n.i256Codec,
                                    U256: n.u256Codec,
                                    ByteVec: i.byteStringCodec,
                                    Address: o.lockupScriptCodec
                                }), t.valsCodec = new a.ArrayCodec(t.valCodec);
                            },
                            7695: (e, t)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.MAP_ENTRY_DEPOSIT = t.MINIMAL_CONTRACT_DEPOSIT = t.DEFAULT_GAS_ALPH_AMOUNT = t.DEFAULT_GAS_ATTOALPH_AMOUNT = t.DEFAULT_GAS_PRICE = t.DEFAULT_GAS_AMOUNT = t.NULL_CONTRACT_ADDRESS = t.ZERO_ADDRESS = t.DUST_AMOUNT = t.ONE_ALPH = t.ALPH_TOKEN_ID = t.MIN_UTXO_SET_AMOUNT = t.TOTAL_NUMBER_OF_CHAINS = t.TOTAL_NUMBER_OF_GROUPS = void 0, t.TOTAL_NUMBER_OF_GROUPS = 4, t.TOTAL_NUMBER_OF_CHAINS = t.TOTAL_NUMBER_OF_GROUPS * t.TOTAL_NUMBER_OF_GROUPS, t.MIN_UTXO_SET_AMOUNT = BigInt(1e12), t.ALPH_TOKEN_ID = "".padStart(64, "0"), t.ONE_ALPH = 10n ** 18n, t.DUST_AMOUNT = 10n ** 15n, t.ZERO_ADDRESS = "tgx7VNFoP9DJiFMFgXXtafQZkUvyEdDHT9ryamHJYrjq", t.NULL_CONTRACT_ADDRESS = "tgx7VNFoP9DJiFMFgXXtafQZkUvyEdDHT9ryamHJYrjq", t.DEFAULT_GAS_AMOUNT = 2e4, t.DEFAULT_GAS_PRICE = 10n ** 11n, t.DEFAULT_GAS_ATTOALPH_AMOUNT = BigInt(t.DEFAULT_GAS_AMOUNT) * t.DEFAULT_GAS_PRICE, t.DEFAULT_GAS_ALPH_AMOUNT = .002, t.MINIMAL_CONTRACT_DEPOSIT = t.ONE_ALPH / 10n, t.MAP_ENTRY_DEPOSIT = t.ONE_ALPH / 10n;
                            },
                            5143: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                                    Object.defineProperty(e, "default", {
                                        enumerable: !0,
                                        value: t
                                    });
                                } : function(e, t) {
                                    e.default = t;
                                }), s = this && this.__importStar || function(e) {
                                    if (e && e.__esModule) return e;
                                    var t = {};
                                    if (null != e) for(var r in e)"default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                                    return i(t, e), t;
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.getContractCodeByCodeHash = t.getTokenIdFromUnsignedTx = t.getContractIdFromUnsignedTx = t.getContractEventsCurrentCount = t.multicallMethods = t.signExecuteMethod = t.callMethod = t.subscribeContractEvents = t.subscribeContractEvent = t.decodeEvent = t.subscribeContractDestroyedEvent = t.subscribeContractCreatedEvent = t.fetchContractState = t.ContractInstance = t.getMapItem = t.RalphMap = t.printDebugMessagesFromTx = t.getDebugMessagesFromTx = t.testMethod = t.extractMapsFromApiResult = t.addStdIdToFields = t.subscribeEventsFromContract = t.decodeContractDestroyedEvent = t.decodeContractCreatedEvent = t.DestroyContractEventAddresses = t.CreateContractEventAddresses = t.ExecutableScript = t.ContractFactory = t.randomTxId = t.fromApiEventFields = t.fromApiArray = t.getDefaultValue = t.fromApiFields = t.Script = t.Contract = t.Artifact = t.Struct = t.DEFAULT_COMPILER_OPTIONS = t.DEFAULT_NODE_COMPILER_OPTIONS = t.StdIdFieldName = void 0;
                                const o = r(7077), a = r(3749), c = s(r(8486)), h = r(664), u = r(2581), d = r(307), f = r(4964), l = r(7695), p = s(r(1540)), b = r(2505), g = r(3651), m = r(4652), y = new h.WebCrypto;
                                t.StdIdFieldName = "__stdInterfaceId", t.DEFAULT_NODE_COMPILER_OPTIONS = {
                                    ignoreUnusedConstantsWarnings: !1,
                                    ignoreUnusedVariablesWarnings: !1,
                                    ignoreUnusedFieldsWarnings: !1,
                                    ignoreUnusedPrivateFunctionsWarnings: !1,
                                    ignoreUpdateFieldsCheckWarnings: !1,
                                    ignoreCheckExternalCallerWarnings: !1,
                                    ignoreUnusedFunctionReturnWarnings: !1,
                                    skipAbstractContractCheck: !1
                                }, t.DEFAULT_COMPILER_OPTIONS = {
                                    errorOnWarnings: !0,
                                    ...t.DEFAULT_NODE_COMPILER_OPTIONS
                                };
                                class v {
                                    constructor(e, t, r, n){
                                        this.name = e, this.fieldNames = t, this.fieldTypes = r, this.isMutable = n;
                                    }
                                    static fromJson(e) {
                                        if (null === e.name || null === e.fieldNames || null === e.fieldTypes || null === e.isMutable) throw Error("The JSON for struct is incomplete");
                                        return new v(e.name, e.fieldNames, e.fieldTypes, e.isMutable);
                                    }
                                    static fromStructSig(e) {
                                        return new v(e.name, e.fieldNames, e.fieldTypes, e.isMutable);
                                    }
                                    toJson() {
                                        return {
                                            name: this.name,
                                            fieldNames: this.fieldNames,
                                            fieldTypes: this.fieldTypes,
                                            isMutable: this.isMutable
                                        };
                                    }
                                }
                                t.Struct = v;
                                class w {
                                    constructor(e, t, r){
                                        this.version = e, this.name = t, this.functions = r;
                                    }
                                    async isDevnet(e) {
                                        if (!e.nodeProvider) return !1;
                                        const t = await e.nodeProvider.infos.getInfosChainParams();
                                        return (0, h.isDevnet)(t.networkId);
                                    }
                                }
                                function _(e) {
                                    return {
                                        name: e.name,
                                        paramNames: e.paramNames,
                                        paramTypes: e.paramTypes,
                                        paramIsMutable: e.paramIsMutable,
                                        returnTypes: e.returnTypes
                                    };
                                }
                                t.Artifact = w;
                                class E extends w {
                                    constructor(e, t, r, n, i, s, o, a, u, d, f, l, p, b){
                                        super(e, t, u), this.bytecode = r, this.bytecodeDebugPatch = n, this.codeHash = i, this.fieldsSig = o, this.eventsSig = a, this.constants = d, this.enums = f, this.structs = l, this.mapsSig = p, this.stdInterfaceId = b, this.bytecodeDebug = c.buildDebugBytecode(this.bytecode, this.bytecodeDebugPatch), this.codeHashDebug = s, this.decodedContract = g.contract.contractCodec.decodeContract((0, h.hexToBinUnsafe)(this.bytecode)), this.bytecodeForTesting = void 0, this.decodedTestingContract = void 0, this.codeHashForTesting = void 0;
                                    }
                                    isInlineFunc(e) {
                                        if (e >= this.functions.length) throw new Error(`Invalid function index ${e}, function size: ${this.functions.length}`);
                                        return e >= this.decodedContract.methods.length;
                                    }
                                    getByteCodeForTesting() {
                                        if (void 0 !== this.bytecodeForTesting) return this.bytecodeForTesting;
                                        if (!(this.functions.length > this.decodedContract.methods.length) && this.publicFunctions().length == this.functions.length) return this.bytecodeForTesting = this.bytecodeDebug, this.codeHashForTesting = this.codeHashDebug, this.bytecodeForTesting;
                                        const e = g.contract.contractCodec.decodeContract((0, h.hexToBinUnsafe)(this.bytecodeDebug)), t = e.methods.map((e)=>({
                                                ...e,
                                                isPublic: !0
                                            })), r = g.contract.contractCodec.encodeContract({
                                            fieldLength: e.fieldLength,
                                            methods: t
                                        }), n = p.blake2b(r, void 0, 32);
                                        return this.bytecodeForTesting = (0, h.binToHex)(r), this.codeHashForTesting = (0, h.binToHex)(n), this.bytecodeForTesting;
                                    }
                                    getDecodedTestingContract() {
                                        if (void 0 !== this.decodedTestingContract) return this.decodedTestingContract;
                                        const e = (0, h.hexToBinUnsafe)(this.getByteCodeForTesting());
                                        return this.decodedTestingContract = g.contract.contractCodec.decodeContract(e), this.decodedTestingContract;
                                    }
                                    hasCodeHash(e) {
                                        return this.codeHash === e || this.codeHashDebug === e || this.codeHashForTesting === e;
                                    }
                                    getDecodedMethod(e) {
                                        return this.decodedContract.methods[`${e}`];
                                    }
                                    publicFunctions() {
                                        return this.functions.filter((e, t)=>this.getDecodedMethod(t).isPublic);
                                    }
                                    usingPreapprovedAssetsFunctions() {
                                        return this.functions.filter((e, t)=>this.getDecodedMethod(t).usePreapprovedAssets);
                                    }
                                    usingAssetsInContractFunctions() {
                                        return this.functions.filter((e, t)=>this.getDecodedMethod(t).useContractAssets);
                                    }
                                    isMethodUsePreapprovedAssets(e, t) {
                                        return e && this.isInlineFunc(t) ? this.getDecodedTestingContract().methods[`${t}`].usePreapprovedAssets : this.getDecodedMethod(t).usePreapprovedAssets;
                                    }
                                    static fromJson(e, t = "", r = "", n = []) {
                                        if (null == e.version || null == e.name || null == e.bytecode || null == e.codeHash || null == e.fieldsSig || null == e.eventsSig || null == e.constants || null == e.enums || null == e.functions) throw Error("The artifact JSON for contract is incomplete");
                                        return new E(e.version, e.name, e.bytecode, t, e.codeHash, r || e.codeHash, e.fieldsSig, e.eventsSig, e.functions, e.constants, e.enums, n, null === e.mapsSig ? void 0 : e.mapsSig, null === e.stdInterfaceId ? void 0 : e.stdInterfaceId);
                                    }
                                    static fromCompileResult(e, t = []) {
                                        return new E(e.version, e.name, e.bytecode, e.bytecodeDebugPatch, e.codeHash, e.codeHashDebug, e.fields, e.events, e.functions.map(_), e.constants, e.enums, t, e.maps, e.stdInterfaceId);
                                    }
                                    static async fromArtifactFile(e, t, r, n = []) {
                                        const i = await o.promises.readFile(e), s = JSON.parse(i.toString());
                                        return E.fromJson(s, t, r, n);
                                    }
                                    toString() {
                                        const e = {
                                            version: this.version,
                                            name: this.name,
                                            bytecode: this.bytecode,
                                            codeHash: this.codeHash,
                                            fieldsSig: this.fieldsSig,
                                            eventsSig: this.eventsSig,
                                            functions: this.functions,
                                            constants: this.constants,
                                            enums: this.enums
                                        };
                                        return void 0 !== this.mapsSig && (e.mapsSig = this.mapsSig), void 0 !== this.stdInterfaceId && (e.stdInterfaceId = this.stdInterfaceId), JSON.stringify(e, null, 2);
                                    }
                                    getInitialFieldsWithDefaultValues() {
                                        return T(void 0 === this.stdInterfaceId ? this.fieldsSig : {
                                            names: this.fieldsSig.names.slice(0, -1),
                                            types: this.fieldsSig.types.slice(0, -1),
                                            isMutable: this.fieldsSig.isMutable.slice(0, -1)
                                        }, this.structs);
                                    }
                                    toState(e, t, r) {
                                        const n = void 0 !== r ? r : E.randomAddress();
                                        return {
                                            address: n,
                                            contractId: (0, h.binToHex)((0, u.contractIdFromAddress)(n)),
                                            bytecode: this.bytecode,
                                            codeHash: this.codeHash,
                                            fields: e,
                                            fieldsSig: this.fieldsSig,
                                            asset: t
                                        };
                                    }
                                    static randomAddress() {
                                        const e = new Uint8Array(33);
                                        return y.getRandomValues(e), e[0] = 3, h.bs58.encode(e);
                                    }
                                    printDebugMessages(e, t) {
                                        (0, b.isContractDebugMessageEnabled)() && 0 != t.length && (console.log(`Testing ${this.name}.${e}:`), t.forEach((e)=>W(e)));
                                    }
                                    toApiFields(e) {
                                        return void 0 === e ? [] : function(e, t, r) {
                                            return c.flattenFields(e, t.names, t.types, t.isMutable, r).map((e)=>(0, a.toApiVal)(e.value, e.type));
                                        }(e, this.fieldsSig, this.structs);
                                    }
                                    toApiArgs(e, t) {
                                        if (t) {
                                            const r = this.functions.find((t)=>t.name == e);
                                            if (null == r) throw new Error(`Invalid function name: ${e}`);
                                            return P(t, r, this.structs);
                                        }
                                        return [];
                                    }
                                    getMethodIndex(e) {
                                        return this.functions.findIndex((t)=>t.name === e);
                                    }
                                    toApiContractStates(e) {
                                        return void 0 !== e ? e.map((e)=>(function(e, t) {
                                                const r = e.fields ?? {}, n = e.fieldsSig, i = c.flattenFields(r, n.names, n.types, n.isMutable, t), s = i.filter((e)=>!e.isMutable).map((e)=>(0, a.toApiVal)(e.value, e.type)), o = i.filter((e)=>e.isMutable).map((e)=>(0, a.toApiVal)(e.value, e.type));
                                                return {
                                                    address: e.address,
                                                    bytecode: e.bytecode,
                                                    codeHash: e.codeHash,
                                                    initialStateHash: e.initialStateHash,
                                                    immFields: s,
                                                    mutFields: o,
                                                    asset: k(e.asset)
                                                };
                                            })(e, this.structs)) : void 0;
                                    }
                                    toApiTestContractParams(e, t) {
                                        const r = void 0 === t.initialFields ? [] : c.flattenFields(t.initialFields, this.fieldsSig.names, this.fieldsSig.types, this.fieldsSig.isMutable, this.structs), n = r.filter((e)=>!e.isMutable).map((e)=>(0, a.toApiVal)(e.value, e.type)), i = r.filter((e)=>e.isMutable).map((e)=>(0, a.toApiVal)(e.value, e.type)), s = this.getMethodIndex(e);
                                        return {
                                            group: t.group,
                                            blockHash: t.blockHash,
                                            blockTimeStamp: t.blockTimeStamp,
                                            txId: t.txId,
                                            address: t.address,
                                            callerContractAddress: t.callerAddress,
                                            bytecode: this.isInlineFunc(s) ? this.getByteCodeForTesting() : this.bytecodeDebug,
                                            initialImmFields: n,
                                            initialMutFields: i,
                                            initialAsset: void 0 !== t.initialAsset ? k(t.initialAsset) : void 0,
                                            methodIndex: s,
                                            args: this.toApiArgs(e, t.testArgs),
                                            existingContracts: this.toApiContractStates(t.existingContracts),
                                            inputAssets: N(t.inputAssets)
                                        };
                                    }
                                    fromApiContractState(e) {
                                        return {
                                            address: e.address,
                                            contractId: (0, h.binToHex)((0, u.contractIdFromAddress)(e.address)),
                                            bytecode: e.bytecode,
                                            initialStateHash: e.initialStateHash,
                                            codeHash: e.codeHash,
                                            fields: M(e.immFields, e.mutFields, this.fieldsSig, this.structs),
                                            fieldsSig: this.fieldsSig,
                                            asset: (t = e.asset, {
                                                alphAmount: (0, a.fromApiNumber256)(t.attoAlphAmount),
                                                tokens: (0, a.fromApiTokens)(t.tokens)
                                            })
                                        };
                                        "TURBOPACK unreachable";
                                        var t;
                                    }
                                    static fromApiContractState(e, t) {
                                        return t(e.codeHash).fromApiContractState(e);
                                    }
                                    static fromApiEvent(e, t, r, n) {
                                        let i, s;
                                        if (e.eventIndex == E.ContractCreatedEventIndex) i = D(R(e.fields, E.ContractCreatedEvent, !0)), s = E.ContractCreatedEvent.name;
                                        else if (e.eventIndex == E.ContractDestroyedEventIndex) i = R(e.fields, E.ContractDestroyedEvent, !0), s = E.ContractDestroyedEvent.name;
                                        else {
                                            const r = n(t).eventsSig[e.eventIndex];
                                            i = R(e.fields, r), s = r.name;
                                        }
                                        return {
                                            txId: r,
                                            blockHash: e.blockHash,
                                            contractAddress: e.contractAddress,
                                            name: s,
                                            eventIndex: e.eventIndex,
                                            fields: i
                                        };
                                    }
                                    fromApiTestContractResult(e, t, r, n) {
                                        const i = this.functions.findIndex((t)=>t.name === e), s = this.functions[`${i}`].returnTypes, o = C(t.returns, s, this.structs), a = 0 === o.length ? null : 1 === o.length ? o[0] : o, c = new Map;
                                        return c.set(t.address, t.codeHash), t.contracts.forEach((e)=>c.set(e.address, e.codeHash)), {
                                            contractId: (0, h.binToHex)((0, u.contractIdFromAddress)(t.address)),
                                            contractAddress: t.address,
                                            returns: a,
                                            gasUsed: t.gasUsed,
                                            contracts: t.contracts.map((e)=>E.fromApiContractState(e, n)),
                                            txOutputs: t.txOutputs.map(U),
                                            events: E.fromApiEvents(t.events, c, r, n),
                                            debugMessages: t.debugMessages
                                        };
                                    }
                                    async txParamsForDeployment(e, t) {
                                        const r = await this.isDevnet(e), n = t.initialFields ?? {}, i = this.buildByteCodeToDeploy(z(this, n), r, t.exposePrivateFunctions ?? !1), s = await e.getSelectedAccount();
                                        return {
                                            signerAddress: s.address,
                                            signerKeyType: s.keyType,
                                            bytecode: i,
                                            initialAttoAlphAmount: t?.initialAttoAlphAmount,
                                            issueTokenAmount: t?.issueTokenAmount,
                                            issueTokenTo: t?.issueTokenTo,
                                            initialTokenAmounts: t?.initialTokenAmounts,
                                            gasAmount: t?.gasAmount,
                                            gasPrice: t?.gasPrice
                                        };
                                    }
                                    buildByteCodeToDeploy(e, t, r = !1) {
                                        if (r && !t) throw new Error("Cannot expose private functions in non-devnet environment");
                                        try {
                                            const n = r && t ? this.getByteCodeForTesting() : t ? this.bytecodeDebug : this.bytecode;
                                            return c.buildContractByteCode(n, e, this.fieldsSig, this.structs);
                                        } catch (e) {
                                            throw new m.TraceableError(`Failed to build bytecode for contract ${this.name}`, e);
                                        }
                                    }
                                    static fromApiEvents(e, t, r, n) {
                                        return e.map((e)=>{
                                            const i = e.contractAddress, s = t.get(i);
                                            if (void 0 !== s || e.eventIndex < 0) return E.fromApiEvent(e, s, r, n);
                                            throw Error(`Cannot find codeHash for the contract address: ${i}`);
                                        });
                                    }
                                    toApiCallContract(e, t, r, n) {
                                        const i = this.functions[`${n}`], s = P(e.args ?? {}, i, this.structs);
                                        return {
                                            ...e,
                                            group: t,
                                            address: r,
                                            methodIndex: n,
                                            args: s,
                                            inputAssets: N(e.inputAssets)
                                        };
                                    }
                                    fromApiCallContractResult(e, t, r, n) {
                                        const i = this.functions[`${r}`].returnTypes;
                                        return S((0, a.tryGetCallResult)(e), t, i, this.structs, n);
                                    }
                                }
                                function S(e, t, r, n, i) {
                                    const s = C(e.returns, r, n), o = 0 === s.length ? null : 1 === s.length ? s[0] : s, a = new Map;
                                    return e.contracts.forEach((e)=>a.set(e.address, e.codeHash)), {
                                        returns: o,
                                        gasUsed: e.gasUsed,
                                        contracts: e.contracts.map((e)=>E.fromApiContractState(e, i)),
                                        txInputs: e.txInputs,
                                        txOutputs: e.txOutputs.map((e)=>U(e)),
                                        events: E.fromApiEvents(e.events, a, t, i),
                                        debugMessages: e.debugMessages
                                    };
                                }
                                t.Contract = E, E.ContractCreatedEventIndex = -1, E.ContractCreatedEvent = {
                                    name: "ContractCreated",
                                    fieldNames: [
                                        "address",
                                        "parentAddress",
                                        "stdInterfaceId"
                                    ],
                                    fieldTypes: [
                                        "Address",
                                        "Address",
                                        "ByteVec"
                                    ]
                                }, E.ContractDestroyedEventIndex = -2, E.ContractDestroyedEvent = {
                                    name: "ContractDestroyed",
                                    fieldNames: [
                                        "address"
                                    ],
                                    fieldTypes: [
                                        "Address"
                                    ]
                                }, E.DebugEventIndex = -3;
                                class A extends w {
                                    constructor(e, t, r, n, i, s, o){
                                        super(e, t, s), this.bytecodeTemplate = r, this.bytecodeDebugPatch = n, this.fieldsSig = i, this.structs = o;
                                    }
                                    static fromCompileResult(e, t = []) {
                                        return new A(e.version, e.name, e.bytecodeTemplate, e.bytecodeDebugPatch, e.fields, e.functions.map(_), t);
                                    }
                                    static fromJson(e, t = "", r = []) {
                                        if (null == e.version || null == e.name || null == e.bytecodeTemplate || null == e.fieldsSig || null == e.functions) throw Error("The artifact JSON for script is incomplete");
                                        return new A(e.version, e.name, e.bytecodeTemplate, t, e.fieldsSig, e.functions, r);
                                    }
                                    static async fromArtifactFile(e, t, r = []) {
                                        const n = await o.promises.readFile(e), i = JSON.parse(n.toString());
                                        return this.fromJson(i, t, r);
                                    }
                                    toString() {
                                        const e = {
                                            version: this.version,
                                            name: this.name,
                                            bytecodeTemplate: this.bytecodeTemplate,
                                            fieldsSig: this.fieldsSig,
                                            functions: this.functions
                                        };
                                        return JSON.stringify(e, null, 2);
                                    }
                                    async txParamsForExecution(e, t) {
                                        const r = await e.getSelectedAccount();
                                        return {
                                            signerAddress: r.address,
                                            signerKeyType: r.keyType,
                                            bytecode: this.buildByteCodeToDeploy(t.initialFields ?? {}),
                                            attoAlphAmount: t.attoAlphAmount,
                                            tokens: t.tokens,
                                            gasAmount: t.gasAmount,
                                            gasPrice: t.gasPrice
                                        };
                                    }
                                    buildByteCodeToDeploy(e) {
                                        try {
                                            return c.buildScriptByteCode(this.bytecodeTemplate, e, this.fieldsSig, this.structs);
                                        } catch (e) {
                                            throw new m.TraceableError(`Failed to build bytecode for script ${this.name}`, e);
                                        }
                                    }
                                }
                                function M(e, t, r, n) {
                                    let [i, s] = [
                                        0,
                                        0
                                    ];
                                    const o = (r, n)=>{
                                        const o = n ? t[s++] : e[i++];
                                        return (0, a.fromApiPrimitiveVal)(o, r);
                                    };
                                    return r.names.reduce((e, t, i)=>{
                                        const s = r.types[`${i}`], a = r.isMutable[`${i}`];
                                        return e[`${t}`] = I(a, s, n, o), e;
                                    }, {});
                                }
                                function I(e, t, r, n) {
                                    if (t.startsWith("[")) {
                                        const [i, s] = (0, a.decodeArrayType)(t);
                                        return Array.from(Array(s).keys()).map(()=>I(e, i, r, n));
                                    }
                                    const i = r.find((e)=>e.name === t);
                                    if (void 0 !== i) return i.fieldNames.reduce((t, s, o)=>{
                                        const a = i.fieldTypes[`${o}`], c = e && i.isMutable[`${o}`];
                                        return t[`${s}`] = I(c, a, r, n), t;
                                    }, {});
                                    const s = a.PrimitiveTypes.includes(t) ? t : "ByteVec";
                                    return n(s, e);
                                }
                                function T(e, t) {
                                    return e.names.reduce((r, n, i)=>{
                                        const s = e.types[`${i}`];
                                        return r[`${n}`] = I(!1, s, t, a.getDefaultPrimitiveValue), r;
                                    }, {});
                                }
                                function x(e, t, r, n = !1) {
                                    return I(!1, t, r, (t)=>{
                                        const r = e.next();
                                        if (r.done) throw Error("Not enough vals");
                                        return (0, a.fromApiPrimitiveVal)(r.value, t, n);
                                    });
                                }
                                function C(e, t, r) {
                                    const n = e.values();
                                    return t.map((e)=>x(n, e, r));
                                }
                                function R(e, t, r = !1) {
                                    const n = e.values();
                                    return t.fieldNames.reduce((e, i, s)=>{
                                        const o = t.fieldTypes[`${s}`];
                                        return e[`${i}`] = x(n, o, [], r), e;
                                    }, {});
                                }
                                function k(e) {
                                    return {
                                        attoAlphAmount: (0, a.toApiNumber256)(e.alphAmount),
                                        tokens: void 0 !== e.tokens ? e.tokens.map(a.toApiToken) : []
                                    };
                                }
                                function P(e, t, r) {
                                    return c.flattenFields(e, t.paramNames, t.paramTypes, t.paramIsMutable, r).map((e)=>(0, a.toApiVal)(e.value, e.type));
                                }
                                function O(e) {
                                    return {
                                        address: e.address,
                                        asset: k(e.asset)
                                    };
                                }
                                function N(e) {
                                    return void 0 !== e ? e.map(O) : void 0;
                                }
                                function U(e) {
                                    if ("AssetOutput" === e.type) {
                                        const t = e;
                                        return {
                                            type: "AssetOutput",
                                            address: t.address,
                                            alphAmount: (0, a.fromApiNumber256)(t.attoAlphAmount),
                                            tokens: (0, a.fromApiTokens)(t.tokens),
                                            lockTime: t.lockTime,
                                            message: t.message
                                        };
                                    }
                                    if ("ContractOutput" === e.type) {
                                        const t = e;
                                        return {
                                            type: "ContractOutput",
                                            address: t.address,
                                            alphAmount: (0, a.fromApiNumber256)(t.attoAlphAmount),
                                            tokens: (0, a.fromApiTokens)(t.tokens)
                                        };
                                    }
                                    throw new Error(`Unknown output type: ${e}`);
                                }
                                function B() {
                                    const e = new Uint8Array(32);
                                    return y.getRandomValues(e), (0, h.binToHex)(e);
                                }
                                function L(e, t) {
                                    const r = new Uint8Array(32).fill(0);
                                    return r[30] = e, r[31] = t, (0, u.addressFromContractId)((0, h.binToHex)(r));
                                }
                                function j(e, t, r) {
                                    if (e.eventIndex !== r) throw new Error(`Invalid event index: ${e.eventIndex}, expected: ${r}`);
                                    return R(e.fields, t, !0);
                                }
                                function D(e) {
                                    const t = e.parentAddress, r = e.stdInterfaceId;
                                    return {
                                        address: e.address,
                                        parentAddress: "" === t ? void 0 : t,
                                        stdInterfaceIdGuessed: "" === r ? void 0 : r
                                    };
                                }
                                function q(e) {
                                    const t = j(e, E.ContractCreatedEvent, E.ContractCreatedEventIndex);
                                    return {
                                        blockHash: e.blockHash,
                                        txId: e.txId,
                                        eventIndex: e.eventIndex,
                                        name: E.ContractCreatedEvent.name,
                                        fields: D(t)
                                    };
                                }
                                function F(e) {
                                    const t = j(e, E.ContractDestroyedEvent, E.ContractDestroyedEventIndex);
                                    return {
                                        blockHash: e.blockHash,
                                        txId: e.txId,
                                        eventIndex: e.eventIndex,
                                        name: E.ContractDestroyedEvent.name,
                                        fields: {
                                            address: t.address
                                        }
                                    };
                                }
                                function H(e, t, r, n, i) {
                                    const s = {
                                        pollingInterval: e.pollingInterval,
                                        messageCallback: (t)=>t.eventIndex !== r ? Promise.resolve() : e.messageCallback(n(t)),
                                        errorCallback: (t, r)=>e.errorCallback(t, r),
                                        onEventCountChanged: e.onEventCountChanged
                                    };
                                    return (0, f.subscribeToEvents)(s, t, i);
                                }
                                function z(e, t) {
                                    return void 0 === e.stdInterfaceId ? t : {
                                        ...t,
                                        __stdInterfaceId: "414c5048" + e.stdInterfaceId
                                    };
                                }
                                function V(e, t, r, n, i) {
                                    const s = c.encodeMapPrefix(t), o = c.encodeMapKey(r, n), a = (0, h.binToHex)(s) + (0, h.binToHex)(o);
                                    return (0, u.subContractId)(e, a, i);
                                }
                                function $(e) {
                                    return {
                                        names: [
                                            "value",
                                            "parentContractId"
                                        ],
                                        types: [
                                            e,
                                            "ByteVec"
                                        ],
                                        isMutable: [
                                            !0,
                                            !1
                                        ]
                                    };
                                }
                                function K(e, t, r, n) {
                                    const i = e.mapsSig;
                                    if (void 0 === i) return [];
                                    const s = [];
                                    return Object.keys(n).forEach((o)=>{
                                        const a = i.names.findIndex((e)=>e === o);
                                        if (-1 === a) throw new Error(`Map var ${o} does not exist in contract ${e.name}`);
                                        const d = i.types[`${a}`], f = function(e, t, r, n, i, s) {
                                            const [o, a] = c.parseMapType(s), d = function(e, t) {
                                                const { immFields: r, mutFields: n } = c.calcFieldSize(e, !0, t), i = {
                                                    isPublic: !0,
                                                    usePreapprovedAssets: !1,
                                                    useContractAssets: !1,
                                                    usePayToContractOnly: !1,
                                                    argsLength: 1,
                                                    localsLength: 1,
                                                    returnLength: 1,
                                                    instrs: [
                                                        (0, g.LoadLocal)(0),
                                                        g.LoadImmFieldByIndex
                                                    ]
                                                }, s = r, o = {
                                                    fieldLength: r + n + 1,
                                                    methods: [
                                                        i,
                                                        {
                                                            ...i,
                                                            instrs: [
                                                                (0, g.LoadLocal)(0),
                                                                g.LoadMutFieldByIndex
                                                            ]
                                                        },
                                                        {
                                                            ...i,
                                                            argsLength: 2,
                                                            localsLength: 2,
                                                            returnLength: 0,
                                                            instrs: [
                                                                g.CallerContractId,
                                                                (0, g.LoadImmField)(s),
                                                                g.ByteVecEq,
                                                                g.Assert,
                                                                (0, g.LoadLocal)(0),
                                                                (0, g.LoadLocal)(1),
                                                                g.StoreMutFieldByIndex
                                                            ]
                                                        },
                                                        {
                                                            isPublic: !0,
                                                            usePreapprovedAssets: !1,
                                                            useContractAssets: !0,
                                                            usePayToContractOnly: !1,
                                                            argsLength: 1,
                                                            localsLength: 1,
                                                            returnLength: 0,
                                                            instrs: [
                                                                g.CallerContractId,
                                                                (0, g.LoadImmField)(s),
                                                                g.ByteVecEq,
                                                                g.Assert,
                                                                (0, g.LoadLocal)(0),
                                                                g.DestroySelf
                                                            ]
                                                        }
                                                    ]
                                                }, a = g.contract.contractCodec.encodeContract(o), u = p.blake2b(a, void 0, 32);
                                                return {
                                                    bytecode: (0, h.binToHex)(a),
                                                    codeHash: (0, h.binToHex)(u)
                                                };
                                            }(a, e.structs);
                                            return Array.from(n.entries()).map(([e, n])=>{
                                                const s = {
                                                    value: n,
                                                    parentContractId: t
                                                }, c = V(t, i, e, o, r);
                                                return {
                                                    ...d,
                                                    address: (0, u.addressFromContractId)(c),
                                                    contractId: c,
                                                    fieldsSig: $(a),
                                                    fields: s,
                                                    asset: {
                                                        alphAmount: l.ONE_ALPH
                                                    }
                                                };
                                            });
                                        }(e, t, r, n[`${o}`], a, d);
                                        s.push(...f);
                                    }), s;
                                }
                                function G(e, t, r, n, i) {
                                    const s = t.initialMaps ?? {}, o = t.existingContracts ?? [], a = n.contracts.filter((t)=>t.address === e || void 0 !== o.find((e)=>e.address === t.address)), d = function(e, t) {
                                        const r = [];
                                        return e.events.forEach((n)=>{
                                            if (n.eventIndex === E.ContractCreatedEventIndex) {
                                                const i = n.fields[0].value, s = e.contracts.find((e)=>e.address === i);
                                                void 0 === s || ((e)=>{
                                                    try {
                                                        return t(e), !1;
                                                    } catch (e) {
                                                        if (e instanceof Error && e.message.includes("Unknown code with code hash")) return !0;
                                                        throw e;
                                                    }
                                                })(s.codeHash) || r.push(s);
                                            }
                                        }), r;
                                    }(n, i), f = [];
                                    return a.concat(d).forEach((t)=>{
                                        const a = i(t.codeHash);
                                        if (void 0 !== a.mapsSig) {
                                            const i = t.address === e ? s : o.find((e)=>e.address === t.address)?.maps, d = function(e, t, r, n, i) {
                                                const s = function(e, t) {
                                                    const r = e.mapsSig;
                                                    return void 0 === r ? [] : r.names.map((e, n)=>{
                                                        const i = r.types[`${n}`], s = t[`${e}`] ?? new Map, [o, a] = c.parseMapType(i);
                                                        return {
                                                            name: e,
                                                            value: s,
                                                            keyType: o,
                                                            valueType: a,
                                                            index: n
                                                        };
                                                    });
                                                }(e, i), o = function(e, t, r, n, i) {
                                                    const s = (0, h.binToHex)((0, u.contractIdFromAddress)(n)), o = [];
                                                    return r.forEach((r)=>{
                                                        Array.from(r.value.keys()).forEach((n)=>{
                                                            const a = V(s, r.index, n, r.keyType, i), c = t.contracts.find((e)=>e.address === (0, u.addressFromContractId)(a));
                                                            if (void 0 === c) return;
                                                            o.push(c.address);
                                                            const h = $(r.valueType), d = M(c.immFields, c.mutFields, h, e.structs);
                                                            r.value.set(n, d.value);
                                                        });
                                                    }), o;
                                                }(e, n, s, t, r), a = function(e, t, r, n, i) {
                                                    const s = (0, h.binToHex)((0, u.contractIdFromAddress)(n)), o = [];
                                                    return t.debugMessages.forEach((a)=>{
                                                        if (a.contractAddress !== n) return;
                                                        const h = c.tryDecodeMapDebugLog(a.message);
                                                        if (void 0 === h) return;
                                                        const d = r[`${h.mapIndex}`], f = c.decodePrimitive(h.encodedKey, d.keyType), l = (0, u.subContractId)(s, h.path, i);
                                                        if (!h.isInsert) return void d.value.delete(f);
                                                        const p = t.contracts.find((e)=>e.address === (0, u.addressFromContractId)(l));
                                                        if (void 0 === p) throw new Error(`Cannot find contract state for map value, map field: ${d.name}, value type: ${d.valueType}`);
                                                        o.push(p.address);
                                                        const b = $(d.valueType), g = M(p.immFields, p.mutFields, b, e.structs);
                                                        d.value.set(f, g.value);
                                                    }), o;
                                                }(e, n, s, t, r), d = o.concat(a), f = n.contracts.filter((e)=>void 0 === d.find((t)=>e.address === t));
                                                return n.contracts = f, s.reduce((e, t)=>(e[`${t.name}`] = t.value, e), {});
                                            }(a, t.address, r, n, i ?? {});
                                            f.push({
                                                address: t.address,
                                                maps: d
                                            });
                                        }
                                    }), f;
                                }
                                function W(e) {
                                    console.log(`> Contract @ ${e.contractAddress} - ${e.message}`);
                                }
                                async function J(e, t) {
                                    if ((0, h.isHexString)(e) && 64 === e.length) {
                                        const r = t ?? (0, d.getCurrentNodeProvider)();
                                        return (await r.events.getEventsTxIdTxid(e)).events.filter((e)=>e.eventIndex === E.DebugEventIndex).map((e)=>{
                                            if (1 === e.fields.length && "ByteVec" === e.fields[0].type) return {
                                                contractAddress: e.contractAddress,
                                                message: (0, h.hexToString)(e.fields[0].value)
                                            };
                                            throw new Error(`Invalid debug log: ${JSON.stringify(e.fields)}`);
                                        });
                                    }
                                    throw new Error(`Invalid tx id: ${e}`);
                                }
                                async function Y(e, t) {
                                    const r = await J(e, t);
                                    r.length > 0 && r.forEach((e)=>W(e));
                                }
                                async function X(e, t, r, n, i) {
                                    const s = e.mapsSig?.names.findIndex((e)=>e === n), o = void 0 === s ? void 0 : e.mapsSig?.types[`${s}`];
                                    if (void 0 === o) throw new Error(`Map ${n} does not exist in contract ${e.name}`);
                                    const [a, h] = c.parseMapType(o), f = V(t, s, i, a, r), l = (0, u.addressFromContractId)(f);
                                    try {
                                        const t = await (0, d.getCurrentNodeProvider)().contracts.getContractsAddressState(l), r = $(h);
                                        return M(t.immFields, t.mutFields, r, e.structs).value;
                                    } catch (e) {
                                        if (e instanceof Error && e.message.includes("KeyNotFound")) return;
                                        throw new m.TraceableError(`Failed to get value from map ${n}, key: ${i}, parent contract id: ${t}`, e);
                                    }
                                }
                                function Z(e) {
                                    if (e < 0 || e >= l.TOTAL_NUMBER_OF_GROUPS) throw new Error(`Invalid group index ${e}, expected a value within the range [0, ${l.TOTAL_NUMBER_OF_GROUPS})`);
                                }
                                function Q(e, t, r, n) {
                                    if (r.eventIndex !== n && !(n >= 0 && n < e.eventsSig.length)) throw new Error("Invalid event index: " + r.eventIndex + ", expected: " + n);
                                    const i = e.eventsSig[`${n}`], s = R(r.fields, i);
                                    return {
                                        contractAddress: t.address,
                                        blockHash: r.blockHash,
                                        txId: r.txId,
                                        eventIndex: r.eventIndex,
                                        name: i.name,
                                        fields: s
                                    };
                                }
                                function ee(e) {
                                    if (e < 0 || e > 255) throw new Error(`StoreLocal index ${e} must be between 0 and 255 inclusive`);
                                    return ie((0, g.StoreLocal)(e));
                                }
                                function te(e) {
                                    if (e < 0 || e > 255) throw new Error(`LoadLocal index ${e} must be between 0 and 255 inclusive`);
                                    return ie((0, g.LoadLocal)(e));
                                }
                                function re(e) {
                                    return (0, h.binToHex)(g.i32Codec.encode(e));
                                }
                                function ne(e) {
                                    if (e < 0) throw new Error(`value ${e} must be non-negative`);
                                    return e < 6 ? (BigInt(12) + e).toString(16).padStart(2, "0") : ie((0, g.U256Const)(e));
                                }
                                function ie(e) {
                                    return (0, h.binToHex)(g.instrCodec.encode(e));
                                }
                                t.Script = A, t.fromApiFields = M, t.getDefaultValue = T, t.fromApiArray = C, t.fromApiEventFields = R, t.randomTxId = B, h.assertType, t.ContractFactory = class {
                                    constructor(e){
                                        this.contract = e;
                                    }
                                    async deploy(e, t) {
                                        const r = await this.contract.txParamsForDeployment(e, {
                                            ...t,
                                            initialFields: z(this.contract, t.initialFields)
                                        }), n = await e.signAndSubmitDeployContractTx(r);
                                        return {
                                            ...n,
                                            contractInstance: this.at(n.contractAddress)
                                        };
                                    }
                                    async deployTemplate(e) {
                                        return this.deploy(e, {
                                            initialFields: this.contract.getInitialFieldsWithDefaultValues()
                                        });
                                    }
                                    stateForTest_(e, t, r, n) {
                                        const i = {
                                            alphAmount: t?.alphAmount ?? l.MINIMAL_CONTRACT_DEPOSIT,
                                            tokens: t?.tokens
                                        };
                                        return {
                                            ...this.contract.toState(z(this.contract, e), i, r),
                                            bytecode: this.contract.bytecodeDebug,
                                            codeHash: this.contract.codeHash,
                                            maps: n
                                        };
                                    }
                                }, t.ExecutableScript = class {
                                    constructor(e, t){
                                        this.script = e, this.getContractByCodeHash = t;
                                    }
                                    async execute(e, t) {
                                        const r = await this.script.txParamsForExecution(e, t);
                                        return await e.signAndSubmitExecuteScriptTx(r);
                                    }
                                    async call(e) {
                                        const t = this.script.functions.find((e)=>"main" === e.name);
                                        if (void 0 === t) throw new Error(`There is no main function in script ${this.script.name}`);
                                        const r = this.script.buildByteCodeToDeploy(e.initialFields), n = e.txId ?? B(), i = (0, d.getCurrentNodeProvider)();
                                        return S(await i.contracts.postContractsCallTxScript({
                                            ...e,
                                            group: e.groupIndex ?? 0,
                                            bytecode: r,
                                            inputAssets: N(e.inputAssets)
                                        }), n, t.returnTypes, this.script.structs, this.getContractByCodeHash);
                                    }
                                }, t.CreateContractEventAddresses = Array.from(Array(l.TOTAL_NUMBER_OF_GROUPS).keys()).map((e)=>L(E.ContractCreatedEventIndex, e)), t.DestroyContractEventAddresses = Array.from(Array(l.TOTAL_NUMBER_OF_GROUPS).keys()).map((e)=>L(E.ContractDestroyedEventIndex, e)), t.decodeContractCreatedEvent = q, t.decodeContractDestroyedEvent = F, t.subscribeEventsFromContract = H, t.addStdIdToFields = z, t.extractMapsFromApiResult = G, t.testMethod = async function(e, t, r, n) {
                                    const i = r?.txId ?? B(), s = e.contract, o = r.address ?? (0, u.addressFromContractId)((0, h.binToHex)(y.getRandomValues(new Uint8Array(32)))), a = (0, h.binToHex)((0, u.contractIdFromAddress)(o)), c = r.group ?? 0, f = function(e, t, r, n, i) {
                                        const s = n.initialMaps ?? {}, o = K(e, t, r, s), a = n.existingContracts ?? [], c = a.flatMap((e)=>void 0 !== e.maps ? K(i(e.codeHash), e.contractId, r, e.maps ?? {}) : []);
                                        return a.concat(o, c);
                                    }(s, a, c, r, n), l = s.toApiTestContractParams(t, {
                                        ...r,
                                        address: o,
                                        txId: i,
                                        initialFields: z(s, r.initialFields ?? {}),
                                        testArgs: void 0 === r.testArgs ? {} : r.testArgs,
                                        existingContracts: f
                                    }), p = await (0, d.getCurrentNodeProvider)().contracts.postContractsTestContract(l), b = G(o, r, c, p, n), g = s.fromApiTestContractResult(t, p, i, n);
                                    return g.contracts.forEach((e)=>{
                                        const t = b.find((t)=>t.address === e.address)?.maps;
                                        void 0 !== t && (e.maps = t);
                                    }), s.printDebugMessages(t, g.debugMessages), {
                                        ...g,
                                        maps: b.find((e)=>e.address === o)?.maps
                                    };
                                }, t.getDebugMessagesFromTx = J, t.printDebugMessagesFromTx = Y, t.RalphMap = class {
                                    constructor(e, t, r){
                                        this.parentContract = e, this.parentContractId = t, this.mapName = r, this.groupIndex = (0, u.groupOfAddress)((0, u.addressFromContractId)(t));
                                    }
                                    async get(e) {
                                        return X(this.parentContract, this.parentContractId, this.groupIndex, this.mapName, e);
                                    }
                                    async contains(e) {
                                        return this.get(e).then((e)=>void 0 !== e);
                                    }
                                    toJSON() {
                                        return {
                                            parentContractId: this.parentContractId,
                                            mapName: this.mapName,
                                            groupIndex: this.groupIndex
                                        };
                                    }
                                }, t.getMapItem = X, t.ContractInstance = class {
                                    constructor(e){
                                        this.address = e, this.contractId = (0, h.binToHex)((0, u.contractIdFromAddress)(e)), this.groupIndex = (0, u.groupOfAddress)(e);
                                    }
                                }, t.fetchContractState = async function(e, t) {
                                    const r = await (0, d.getCurrentNodeProvider)().contracts.getContractsAddressState(t.address), n = e.contract.fromApiContractState(r);
                                    return {
                                        ...n,
                                        fields: n.fields
                                    };
                                }, t.subscribeContractCreatedEvent = function(e, r, n) {
                                    Z(r);
                                    const i = t.CreateContractEventAddresses[`${r}`];
                                    return H(e, i, E.ContractCreatedEventIndex, (e)=>({
                                            ...q(e),
                                            contractAddress: i
                                        }), n);
                                }, t.subscribeContractDestroyedEvent = function(e, r, n) {
                                    Z(r);
                                    const i = t.DestroyContractEventAddresses[`${r}`];
                                    return H(e, i, E.ContractDestroyedEventIndex, (e)=>({
                                            ...F(e),
                                            contractAddress: i
                                        }), n);
                                }, t.decodeEvent = Q, t.subscribeContractEvent = function(e, t, r, n, i) {
                                    const s = e.eventsSig.findIndex((e)=>e.name === n);
                                    return H(r, t.address, s, (r)=>Q(e, t, r, s), i);
                                }, t.subscribeContractEvents = function(e, t, r, n) {
                                    const i = {
                                        pollingInterval: r.pollingInterval,
                                        messageCallback: (n)=>r.messageCallback({
                                                ...Q(e, t, n, n.eventIndex),
                                                contractAddress: t.address
                                            }),
                                        errorCallback: (e, t)=>r.errorCallback(e, t),
                                        onEventCountChanged: r.onEventCountChanged
                                    };
                                    return (0, f.subscribeToEvents)(i, t.address, n);
                                }, t.callMethod = async function(e, t, r, n, i) {
                                    const s = e.contract.getMethodIndex(r), o = n?.txId ?? B(), a = e.contract.toApiCallContract({
                                        ...n,
                                        txId: o,
                                        args: void 0 === n.args ? {} : n.args
                                    }, t.groupIndex, t.address, s), c = await (0, d.getCurrentNodeProvider)().contracts.postContractsCallContract(a), h = e.contract.fromApiCallContractResult(c, o, s, i);
                                    return e.contract.printDebugMessages(r, h.debugMessages), h;
                                }, t.signExecuteMethod = async function(e, t, r, n) {
                                    const i = e.contract.getMethodIndex(r), s = e.contract.functions[i], o = await e.contract.isDevnet(n.signer), a = function(e, t, r, n, i, s) {
                                        const o = void 0 !== i || void 0 !== s, a = o ? "03" : "00";
                                        if (t && !o) throw new Error("The contract call requires preapproved assets but none are provided");
                                        const [u, d] = function(e, t) {
                                            let r = 1, n = 0;
                                            const i = [];
                                            return e.paramTypes.forEach((e)=>{
                                                const s = c.typeLength(e, t);
                                                if (s > 1) {
                                                    for(let e = 0; e < s; e++)i.push(`{${r + e}}`);
                                                    for(let e = 0; e < s; e++)i.push(ee(n + (s - e - 1)));
                                                    n += s;
                                                }
                                                r += s;
                                            }), [
                                                i,
                                                r
                                            ];
                                        }(r, n), f = function(e) {
                                            const t = [];
                                            if (e) {
                                                const r = ne(BigInt(e));
                                                t.push(r), t.push(ie(g.ApproveAlph));
                                            }
                                            return t;
                                        }(t ? i : void 0), l = function(e) {
                                            const t = [];
                                            return e && e.forEach((e)=>{
                                                const r = (0, h.hexToBinUnsafe)(e.id);
                                                t.push(ie((0, g.BytesConst)(r))), t.push(ne(BigInt(e.amount))), t.push(ie(g.ApproveToken));
                                            }), t;
                                        }(t ? s : void 0), p = function(e) {
                                            const t = [];
                                            if (e > 0) {
                                                t.push(ie(g.CallerAddress));
                                                const r = ie(g.Dup);
                                                e > 1 && t.push(...new Array(e - 1).fill(r));
                                            }
                                            return t;
                                        }(f.length / 2 + l.length / 3), b = ne(BigInt(d - 1)), m = re(u.length / 2), y = function(e, t) {
                                            let r = 1, n = 0;
                                            const i = [];
                                            return e.paramTypes.forEach((e)=>{
                                                const s = c.typeLength(e, t);
                                                if (1 === s && i.push(`{${r}}`), s > 1) {
                                                    for(let e = 0; e < s; e++)i.push(te(n + e));
                                                    n += s;
                                                }
                                                r += s;
                                            }), i;
                                        }(r, n), v = r.returnTypes.reduce((e, t)=>e + c.typeLength(t, n), 0), w = ie(g.Pop).repeat(v), _ = ne(BigInt(v)), E = ie((0, g.CallExternal)(e));
                                        return "0101" + a + "00" + m + "00" + re(p.length + f.length + l.length + u.length + y.length + v + 4) + p.join("") + f.join("") + l.join("") + u.join("") + y.join("") + b + _ + "{0}" + E + w;
                                    }(i, e.contract.isMethodUsePreapprovedAssets(o, i), s, e.contract.structs, n.attoAlphAmount, n.tokens), u = function(e, t) {
                                        return {
                                            names: [
                                                "__contract__"
                                            ].concat(t.paramNames),
                                            types: [
                                                e
                                            ].concat(t.paramTypes),
                                            isMutable: [
                                                !1
                                            ].concat(t.paramIsMutable)
                                        };
                                    }(e.contract.name, s), d = c.buildScriptByteCode(a, {
                                        __contract__: t.contractId,
                                        ...n.args
                                    }, u, e.contract.structs), f = n.signer, l = await f.getSelectedAccount(), p = {
                                        signerAddress: l.address,
                                        signerKeyType: l.keyType,
                                        bytecode: d,
                                        attoAlphAmount: n.attoAlphAmount,
                                        tokens: n.tokens,
                                        gasAmount: n.gasAmount,
                                        gasPrice: n.gasPrice
                                    }, m = await f.signAndSubmitExecuteScriptTx(p);
                                    return (0, b.isContractDebugMessageEnabled)() && o && await Y(m.txId, f.nodeProvider), m;
                                }, t.multicallMethods = async function(e, t, r, n) {
                                    const i = (Array.isArray(r) ? r : [
                                        r
                                    ]).map((e)=>Object.entries(e)), s = i.map((r)=>r.map((r)=>{
                                            const [n, i] = r, s = e.contract.getMethodIndex(n), o = i?.txId ?? B();
                                            return e.contract.toApiCallContract({
                                                ...i,
                                                txId: o,
                                                args: void 0 === i.args ? {} : i.args
                                            }, t.groupIndex, t.address, s);
                                        })), o = await (0, d.getCurrentNodeProvider)().contracts.postContractsMulticallContract({
                                        calls: s.flat()
                                    });
                                    let a = 0;
                                    const c = s.map((t, r)=>{
                                        const s = {}, c = i[`${r}`];
                                        return t.forEach((t, r)=>{
                                            const i = t.methodIndex, h = o.results[`${a}`], u = c[`${r}`][0];
                                            s[`${u}`] = e.contract.fromApiCallContractResult(h, t.txId, i, n), a += 1;
                                        }), s;
                                    });
                                    return Array.isArray(r) ? c : c[0];
                                }, t.getContractEventsCurrentCount = async function(e) {
                                    return (0, d.getCurrentNodeProvider)().events.getEventsContractContractaddressCurrentCount(e).catch((t)=>{
                                        if (t instanceof Error && t.message.includes(`${e} not found`)) return 0;
                                        throw new m.TraceableError(`Failed to get the event count for the contract ${e}`, t);
                                    });
                                }, t.getContractIdFromUnsignedTx = async (e, t)=>{
                                    const r = await e.transactions.postTransactionsDecodeUnsignedTx({
                                        unsignedTx: t
                                    }), n = r.unsignedTx.fixedOutputs.length, i = r.unsignedTx.txId + n.toString(16).padStart(8, "0");
                                    return (0, h.binToHex)(p.blake2b((0, h.hexToBinUnsafe)(i), void 0, 32)).slice(0, 62) + r.fromGroup.toString(16).padStart(2, "0");
                                }, t.getTokenIdFromUnsignedTx = t.getContractIdFromUnsignedTx, t.getContractCodeByCodeHash = async function(e, t) {
                                    if ((0, h.isHexString)(t) && 64 === t.length) try {
                                        return await e.contracts.getContractsCodehashCode(t);
                                    } catch (e) {
                                        if (e instanceof Error && e.message.includes("not found")) return;
                                        throw new m.TraceableError(`Failed to get contract by code hash ${t}`, e);
                                    }
                                    throw new Error(`Invalid code hash: ${t}`);
                                };
                            },
                            2897: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.genArgs = t.DappTransactionBuilder = void 0;
                                const n = r(2581), i = r(3651), s = r(1678), o = r(4459), a = r(7695), c = r(4652), h = r(664);
                                function u(e, t) {
                                    if (0 === t.length) return [];
                                    const r = t.flatMap((e)=>e.id === a.ALPH_TOKEN_ID ? [
                                            (0, i.U256Const)(e.amount),
                                            i.ApproveAlph
                                        ] : [
                                            (0, i.BytesConst)((0, h.hexToBinUnsafe)(e.id)),
                                            (0, i.U256Const)(e.amount),
                                            i.ApproveToken
                                        ]);
                                    return [
                                        (0, i.AddressConst)(e),
                                        ...Array.from(Array(t.length - 1).keys()).map(()=>i.Dup),
                                        ...r
                                    ];
                                }
                                function d(e) {
                                    return e >= 0 ? (0, i.toU256)(e) : (0, i.toI256)(e);
                                }
                                function f(e) {
                                    return e.flatMap((e)=>{
                                        if ("boolean" == typeof e) return e ? [
                                            i.ConstTrue
                                        ] : [
                                            i.ConstFalse
                                        ];
                                        if ("bigint" == typeof e) return d(e);
                                        if ("string" == typeof e) {
                                            if ((0, h.isHexString)(e)) return [
                                                (0, i.BytesConst)((0, h.hexToBinUnsafe)(e))
                                            ];
                                            const t = function(e) {
                                                if ((0, h.isBase58)(e)) try {
                                                    return s.lockupScriptCodec.decode((0, h.base58ToBytes)(e));
                                                } catch (e) {
                                                    return;
                                                }
                                            }(e);
                                            return void 0 !== t ? (0, i.AddressConst)(t) : function(e) {
                                                if (/^-?\d+[ui]?$/.test(e)) return e.endsWith("i") ? (0, i.toI256)(BigInt(e.slice(0, e.length - 1))) : e.endsWith("u") ? (0, i.toU256)(BigInt(e.slice(0, e.length - 1))) : d(BigInt(e));
                                                throw new Error(`Invalid number: ${e}`);
                                            }(e);
                                        }
                                        if (Array.isArray(e)) return f(e);
                                        if (e instanceof Map) throw new Error("Map cannot be used as a function argument");
                                        if ("object" == typeof e) return f(Object.values(e));
                                        throw new Error(`Unknown argument type: ${typeof e}, arg: ${e}`);
                                    });
                                }
                                function l(e, t, r, s) {
                                    const o = f(r);
                                    return [
                                        ...o,
                                        (0, i.toU256)(BigInt(o.length)),
                                        (0, i.toU256)(BigInt(s)),
                                        (0, i.BytesConst)((0, n.contractIdFromAddress)(e)),
                                        (0, i.CallExternal)(t),
                                        ...Array.from(Array(s).keys()).map(()=>i.Pop)
                                    ];
                                }
                                t.DappTransactionBuilder = class {
                                    constructor(e){
                                        this.callerAddress = e;
                                        try {
                                            if (this.callerLockupScript = s.lockupScriptCodec.decode((0, h.base58ToBytes)(this.callerAddress)), "P2PKH" !== this.callerLockupScript.kind && "P2SH" !== this.callerLockupScript.kind) throw new Error("Expected a P2PKH address or P2SH address");
                                        } catch (t) {
                                            throw new c.TraceableError(`Invalid caller address: ${e}`, t);
                                        }
                                        this.approvedAssets = new Map, this.instrs = [];
                                    }
                                    callContract(e) {
                                        if (!(0, h.isBase58)(e.contractAddress)) throw new Error(`Invalid contract address: ${e.contractAddress}, expected a base58 string`);
                                        if (!(0, n.isContractAddress)(e.contractAddress)) throw new Error(`Invalid contract address: ${e.contractAddress}, expected a P2C address`);
                                        if (e.methodIndex < 0) throw new Error(`Invalid method index: ${e.methodIndex}`);
                                        const t = (e.tokens ?? []).concat([
                                            {
                                                id: a.ALPH_TOKEN_ID,
                                                amount: e.attoAlphAmount ?? 0n
                                            }
                                        ]), r = [
                                            ...u(this.callerLockupScript, this.approveTokens(t)),
                                            ...l(e.contractAddress, e.methodIndex, e.args, e.retLength ?? 0)
                                        ];
                                        return this.instrs.push(...r), this;
                                    }
                                    getResult() {
                                        const e = {
                                            methods: [
                                                {
                                                    isPublic: !0,
                                                    usePreapprovedAssets: this.approvedAssets.size > 0,
                                                    useContractAssets: !1,
                                                    usePayToContractOnly: !1,
                                                    argsLength: 0,
                                                    localsLength: 0,
                                                    returnLength: 0,
                                                    instrs: this.instrs
                                                }
                                            ]
                                        }, t = o.scriptCodec.encode(e), r = Array.from(this.approvedAssets.entries()).map(([e, t])=>({
                                                id: e,
                                                amount: t
                                            }));
                                        return this.approvedAssets.clear(), this.instrs = [], {
                                            signerAddress: this.callerAddress,
                                            signerKeyType: "P2PKH" === this.callerLockupScript.kind ? "default" : "bip340-schnorr",
                                            bytecode: (0, h.binToHex)(t),
                                            attoAlphAmount: r.find((e)=>e.id === a.ALPH_TOKEN_ID)?.amount,
                                            tokens: r.filter((e)=>e.id !== a.ALPH_TOKEN_ID)
                                        };
                                    }
                                    addTokenToMap(e, t, r) {
                                        const n = r.get(e);
                                        void 0 !== n ? r.set(e, n + t) : t > 0n && r.set(e, t);
                                    }
                                    approveTokens(e) {
                                        const t = new Map;
                                        return e.forEach((e)=>{
                                            if (!(0, h.isHexString)(e.id) || 64 !== e.id.length) throw new Error(`Invalid token id: ${e.id}`);
                                            if (e.amount < 0n) throw new Error(`Invalid token amount: ${e.amount}`);
                                            this.addTokenToMap(e.id, e.amount, t), this.addTokenToMap(e.id, e.amount, this.approvedAssets);
                                        }), Array.from(t.entries()).map(([e, t])=>({
                                                id: e,
                                                amount: t
                                            }));
                                    }
                                }, t.genArgs = f;
                            },
                            2282: (e, t)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                });
                            },
                            4964: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                                    Object.defineProperty(e, "default", {
                                        enumerable: !0,
                                        value: t
                                    });
                                } : function(e, t) {
                                    e.default = t;
                                }), s = this && this.__importStar || function(e) {
                                    if (e && e.__esModule) return e;
                                    var t = {};
                                    if (null != e) for(var r in e)"default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                                    return i(t, e), t;
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.subscribeToEvents = t.EventSubscription = void 0;
                                const o = s(r(307)), a = r(664);
                                class c extends a.Subscription {
                                    constructor(e, t, r){
                                        super(e), this.contractAddress = t, this.fromCount = void 0 === r ? 0 : r, this.onEventCountChanged = e.onEventCountChanged;
                                    }
                                    currentEventCount() {
                                        return this.fromCount;
                                    }
                                    async getEvents(e) {
                                        try {
                                            return await o.getCurrentNodeProvider().events.getEventsContractContractaddress(this.contractAddress, {
                                                start: e
                                            });
                                        } catch (t) {
                                            if (t instanceof Error && t.message.includes(`Contract events of ${this.contractAddress} not found`)) return {
                                                events: [],
                                                nextStart: e
                                            };
                                            throw t;
                                        }
                                    }
                                    async polling() {
                                        try {
                                            const e = await this.getEvents(this.fromCount);
                                            if (this.fromCount === e.nextStart) return;
                                            const t = e.events.map((e)=>this.messageCallback(e));
                                            await Promise.all(t), this.fromCount = e.nextStart, void 0 !== this.onEventCountChanged && await this.onEventCountChanged(this.fromCount), await this.polling();
                                        } catch (e) {
                                            await this.errorCallback(e, this);
                                        }
                                    }
                                }
                                t.EventSubscription = c, t.subscribeToEvents = function(e, t, r) {
                                    const n = new c(e, t, r);
                                    return n.subscribe(), n;
                                };
                            },
                            5033: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__exportStar || function(e, t) {
                                    for(var r in e)"default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r);
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.DappTransactionBuilder = void 0, i(r(8486), t), i(r(5143), t), i(r(4964), t), i(r(4529), t), i(r(2282), t);
                                var s = r(2897);
                                Object.defineProperty(t, "DappTransactionBuilder", {
                                    enumerable: !0,
                                    get: function() {
                                        return s.DappTransactionBuilder;
                                    }
                                });
                            },
                            8486: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.buildDebugBytecode = t.encodeContractField = t.buildContractByteCode = t.encodeContractFields = t.buildScriptByteCode = t.flattenFields = t.typeLength = t.encodeMapKey = t.decodePrimitive = t.tryDecodeMapDebugLog = t.calcFieldSize = t.encodeMapPrefix = t.parseMapType = t.splitFields = t.encodeScriptField = t.encodeScriptFieldAsString = t.encodePrimitiveValues = t.addressVal = t.byteVecVal = t.u256Val = t.i256Val = t.boolVal = t.encodeVmAddress = t.encodeVmByteVec = t.encodeVmU256 = t.encodeVmI256 = t.encodeVmBool = t.VmValType = t.encodeAddress = t.encodeByteVec = void 0;
                                const n = r(3749), i = r(664), s = r(3651), o = r(2709), a = r(4652);
                                function c(e) {
                                    if (!(0, i.isHexString)(e)) throw Error(`Given value ${e} is not a valid hex string`);
                                    const t = (0, i.hexToBinUnsafe)(e);
                                    return s.byteStringCodec.encode(t);
                                }
                                function h(e) {
                                    return i.bs58.decode(e);
                                }
                                var u;
                                function d(e) {
                                    return new Uint8Array([
                                        u.Bool,
                                        ...o.boolCodec.encode(e)
                                    ]);
                                }
                                function f(e) {
                                    return new Uint8Array([
                                        u.I256,
                                        ...s.i256Codec.encode(e)
                                    ]);
                                }
                                function l(e) {
                                    return new Uint8Array([
                                        u.U256,
                                        ...s.u256Codec.encode(e)
                                    ]);
                                }
                                function p(e) {
                                    return new Uint8Array([
                                        u.ByteVec,
                                        ...c(e)
                                    ]);
                                }
                                function b(e) {
                                    return new Uint8Array([
                                        u.Address,
                                        ...h(e)
                                    ]);
                                }
                                function g(e, t) {
                                    return (0, i.binToHex)(m(e, t));
                                }
                                function m(e, t) {
                                    switch(e){
                                        case "Bool":
                                            const e1 = (0, n.toApiBoolean)(t) ? s.ConstTrue.code : s.ConstFalse.code;
                                            return new Uint8Array([
                                                e1
                                            ]);
                                        case "I256":
                                            const r = (0, n.toApiNumber256)(t);
                                            return function(e) {
                                                return s.instrCodec.encode((0, s.toI256)(e));
                                            }(BigInt(r));
                                        case "U256":
                                            const i = (0, n.toApiNumber256)(t);
                                            return function(e) {
                                                return s.instrCodec.encode((0, s.toU256)(e));
                                            }(BigInt(i));
                                        case "Address":
                                            const o = (0, n.toApiAddress)(t);
                                            return new Uint8Array([
                                                s.AddressConstCode,
                                                ...h(o)
                                            ]);
                                        default:
                                            const a = (0, n.toApiByteVec)(t);
                                            return new Uint8Array([
                                                s.BytesConstCode,
                                                ...c(a)
                                            ]);
                                    }
                                    throw function(e, t) {
                                        return Error(`Invalid script field ${t} for type ${e}`);
                                    }(e, t);
                                }
                                function y(e, t, r, n, i) {
                                    return t.flatMap((t, s)=>{
                                        if (!(t in e)) throw new Error(`The value of field ${t} is not provided`);
                                        return v(n[`${s}`], t, r[`${s}`], e[`${t}`], i);
                                    });
                                }
                                function v(e, t, r, i, s) {
                                    if (Array.isArray(i) && r.startsWith("[")) {
                                        const [o, a] = (0, n.decodeArrayType)(r);
                                        if (i.length !== a) throw Error(`Invalid array length, expected ${a}, got ${i.length}`);
                                        return i.flatMap((r, n)=>v(e, `${t}[${n}]`, o, r, s));
                                    }
                                    const o = s.find((e)=>e.name === r);
                                    if (void 0 !== o) {
                                        if ("object" != typeof i) throw Error("Expected an object, but got " + typeof i);
                                        return o.fieldNames.flatMap((r, n)=>{
                                            if (!(r in i)) throw new Error(`The value of field ${r} is not provided`);
                                            const a = o.isMutable[`${n}`], c = o.fieldTypes[`${n}`], h = i[`${r}`];
                                            return v(e && a, `${t}.${r}`, c, h, s);
                                        });
                                    }
                                    const a = function(e, t, r) {
                                        const n = typeof r;
                                        if ("Bool" === t && "boolean" === n) return t;
                                        if (!("U256" !== t && "I256" !== t || "string" !== n && "number" !== n && "bigint" !== n)) return t;
                                        if (("Address" === t || "ByteVec" === t) && "string" === n) return t;
                                        if (!t.startsWith("[") && "string" === n) return "ByteVec";
                                        throw Error(`Invalid value ${r} for ${e}, expected a value of type ${t}`);
                                    }(t, r, i);
                                    return [
                                        {
                                            name: t,
                                            type: a,
                                            value: i,
                                            isMutable: e
                                        }
                                    ];
                                }
                                t.encodeByteVec = c, t.encodeAddress = h, function(e) {
                                    e[e.Bool = 0] = "Bool", e[e.I256 = 1] = "I256", e[e.U256 = 2] = "U256", e[e.ByteVec = 3] = "ByteVec", e[e.Address = 4] = "Address";
                                }(u = t.VmValType || (t.VmValType = {})), t.encodeVmBool = d, t.encodeVmI256 = f, t.encodeVmU256 = l, t.encodeVmByteVec = p, t.encodeVmAddress = b, t.boolVal = function(e) {
                                    return {
                                        type: "Bool",
                                        value: e
                                    };
                                }, t.i256Val = function(e) {
                                    return {
                                        type: "I256",
                                        value: BigInt(e)
                                    };
                                }, t.u256Val = function(e) {
                                    return {
                                        type: "U256",
                                        value: BigInt(e)
                                    };
                                }, t.byteVecVal = function(e) {
                                    return {
                                        type: "ByteVec",
                                        value: e
                                    };
                                }, t.addressVal = function(e) {
                                    return {
                                        type: "Address",
                                        value: e
                                    };
                                }, t.encodePrimitiveValues = function(e) {
                                    return E(e.map(({ type: e, value: t })=>({
                                            name: `${t}`,
                                            type: e,
                                            value: t
                                        })));
                                }, t.encodeScriptFieldAsString = g, t.encodeScriptField = m, t.splitFields = function(e) {
                                    return e.types.reduce(([t, r], n, i)=>{
                                        const s = n.startsWith("Map[") ? t : r;
                                        return s.names.push(e.names[`${i}`]), s.types.push(n), s.isMutable.push(e.isMutable[`${i}`]), [
                                            t,
                                            r
                                        ];
                                    }, [
                                        {
                                            names: [],
                                            types: [],
                                            isMutable: []
                                        },
                                        {
                                            names: [],
                                            types: [],
                                            isMutable: []
                                        }
                                    ]);
                                }, t.parseMapType = function(e) {
                                    if (!e.startsWith("Map[")) throw new Error(`Expected map type, got ${e}`);
                                    const t = e.indexOf("["), r = e.indexOf(",");
                                    return [
                                        e.slice(t + 1, r),
                                        e.slice(r + 1, e.length - 1)
                                    ];
                                }, t.encodeMapPrefix = function(e) {
                                    const t = `__map__${e}__`, r = new Uint8Array(t.length);
                                    for(let e = 0; e < t.length; e += 1)r[e] = t.charCodeAt(e);
                                    return r;
                                }, t.calcFieldSize = function e(t, r, i) {
                                    const s = i.find((e)=>e.name === t);
                                    if (void 0 !== s) return s.fieldTypes.reduce((t, n, o)=>{
                                        const a = e(n, r && s.isMutable[`${o}`], i);
                                        return {
                                            immFields: t.immFields + a.immFields,
                                            mutFields: t.mutFields + a.mutFields
                                        };
                                    }, {
                                        immFields: 0,
                                        mutFields: 0
                                    });
                                    if (t.startsWith("[")) {
                                        const [s, o] = (0, n.decodeArrayType)(t), a = e(s, r, i);
                                        return {
                                            immFields: a.immFields * o,
                                            mutFields: a.mutFields * o
                                        };
                                    }
                                    return r ? {
                                        immFields: 0,
                                        mutFields: 1
                                    } : {
                                        immFields: 1,
                                        mutFields: 0
                                    };
                                }, t.tryDecodeMapDebugLog = function(e) {
                                    if (!e.startsWith("insert at map path: ") && !e.startsWith("remove at map path: ")) return;
                                    const t = e.split(":");
                                    if (2 !== t.length) return;
                                    const r = t[1].slice(1);
                                    if (!(0, i.isHexString)(r)) return;
                                    const n = r.slice(14), s = n.indexOf("5f5f");
                                    if (-1 === s) return;
                                    const o = n.slice(0, s);
                                    return {
                                        path: r,
                                        mapIndex: parseInt(function(e) {
                                            let t = "";
                                            for(let r = 0; r < e.length; r += 2){
                                                const n = parseInt(e.slice(r, r + 2), 16);
                                                t += String.fromCharCode(n);
                                            }
                                            return t;
                                        }(o)),
                                        encodedKey: (0, i.hexToBinUnsafe)(n.slice(s + 4)),
                                        isInsert: e.startsWith("insert")
                                    };
                                }, t.decodePrimitive = function(e, t) {
                                    switch(t){
                                        case "Bool":
                                            return o.boolCodec.decode(e);
                                        case "I256":
                                            return s.i256Codec.decode(e);
                                        case "U256":
                                            return s.u256Codec.decode(e);
                                        case "ByteVec":
                                            return (0, i.binToHex)(e);
                                        case "Address":
                                            return i.bs58.encode(e);
                                        default:
                                            throw Error(`Expected primitive type, got ${t}`);
                                    }
                                }, t.encodeMapKey = function(e, t) {
                                    switch(t){
                                        case "Bool":
                                            const r = (0, n.toApiBoolean)(e) ? 1 : 0;
                                            return new Uint8Array([
                                                r
                                            ]);
                                        case "I256":
                                            const o = (0, n.toApiNumber256)(e);
                                            return s.i256Codec.encode(BigInt(o));
                                        case "U256":
                                            const a = (0, n.toApiNumber256)(e);
                                            return s.u256Codec.encode(BigInt(a));
                                        case "ByteVec":
                                            const c = (0, n.toApiByteVec)(e);
                                            return (0, i.hexToBinUnsafe)(c);
                                        case "Address":
                                            return h((0, n.toApiAddress)(e));
                                        default:
                                            throw Error(`Expected primitive type, got ${t}`);
                                    }
                                }, t.typeLength = function e(t, r) {
                                    if (n.PrimitiveTypes.includes(t)) return 1;
                                    if (t.startsWith("[")) {
                                        const [i, s] = (0, n.decodeArrayType)(t);
                                        return s * e(i, r);
                                    }
                                    const i = r.find((e)=>e.name === t);
                                    return void 0 !== i ? i.fieldTypes.reduce((t, n)=>t + e(n, r), 0) : 1;
                                }, t.flattenFields = y;
                                const w = /\{([0-9]*)\}/g;
                                function _(e, t) {
                                    try {
                                        return t();
                                    } catch (t) {
                                        throw new a.TraceableError(`Failed to encode the field ${e}`, t);
                                    }
                                }
                                function E(e) {
                                    const t = s.i32Codec.encode(e.length);
                                    return e.reduce((e, t)=>{
                                        const r = _(t.name, ()=>A(t.type, t.value)), n = new Uint8Array(e.byteLength + r.byteLength);
                                        return n.set(e, 0), n.set(r, e.byteLength), n;
                                    }, t);
                                }
                                function S(e, t, r) {
                                    const n = y(e, t.names, t.types, t.isMutable, r);
                                    return {
                                        encodedImmFields: E(n.filter((e)=>!e.isMutable)),
                                        encodedMutFields: E(n.filter((e)=>e.isMutable))
                                    };
                                }
                                function A(e, t) {
                                    switch(e){
                                        case "Bool":
                                            return d((0, n.toApiBoolean)(t));
                                        case "I256":
                                            return f(BigInt((0, n.toApiNumber256)(t)));
                                        case "U256":
                                            return l(BigInt((0, n.toApiNumber256)(t)));
                                        case "ByteVec":
                                            return p((0, n.toApiByteVec)(t));
                                        case "Address":
                                            return b((0, n.toApiAddress)(t));
                                        default:
                                            throw Error(`Expected primitive type, got ${e}`);
                                    }
                                }
                                t.buildScriptByteCode = function(e, t, r, n) {
                                    const i = y(t, r.names, r.types, r.isMutable, n);
                                    return e.replace(w, (e, t)=>{
                                        const r = i[`${t}`];
                                        return _(r.name, ()=>g(r.type, r.value));
                                    });
                                }, t.encodeContractFields = S, t.buildContractByteCode = function(e, t, r, n) {
                                    const { encodedImmFields: s, encodedMutFields: o } = S(t, r, n);
                                    return e + (0, i.binToHex)(s) + (0, i.binToHex)(o);
                                }, t.encodeContractField = A, t.buildDebugBytecode = function(e, t) {
                                    if ("" === t) return e;
                                    const r = /[=+-][0-9a-f]*/g;
                                    let n = "", i = 0;
                                    for (const s of t.matchAll(r)){
                                        const t = s[0], r = t[0];
                                        if ("=" === r) {
                                            const r = parseInt(t.substring(1));
                                            n += e.slice(i, i + r), i += r;
                                        } else "+" === r ? n += t.substring(1) : i += parseInt(t.substring(1));
                                    }
                                    return n;
                                };
                            },
                            4529: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.ScriptSimulator = void 0;
                                const n = r(2581), i = r(3651), s = r(1678), o = r(7695), a = r(664);
                                function c(e, t, r, n) {
                                    n(e.kind.startsWith("Symbol") ? e : t.kind.startsWith("Symbol") ? t : {
                                        kind: e.kind,
                                        value: r(e.value, t.value)
                                    });
                                }
                                function h(e, t, r, n) {
                                    n(e.kind.startsWith("Symbol") || t.kind.startsWith("Symbol") ? {
                                        kind: "Symbol-Bool",
                                        value: void 0
                                    } : {
                                        kind: "Bool",
                                        value: r(e.value, t.value)
                                    });
                                }
                                function u(e, t) {
                                    return e.length === t.length && e.every((e, r)=>e === t[`${r}`]);
                                }
                                function d() {
                                    const e = new Uint8Array(32);
                                    for(let t = 0; t < 32; t++)e[`${t}`] = Math.floor(256 * Math.random());
                                    return e;
                                }
                                t.ScriptSimulator = class {
                                    static extractContractCalls(e) {
                                        try {
                                            return this.extractContractCallsWithErrors(e);
                                        } catch (e) {
                                            return console.debug("Error extracting contract calls from script", e), [];
                                        }
                                    }
                                    static extractContractCallsWithErrors(e) {
                                        const t = (0, a.hexToBinUnsafe)(e), r = i.unsignedTxCodec.decode(t).statefulScript;
                                        switch(r.kind){
                                            case "Some":
                                                return this.extractContractCallsFromScript(r.value);
                                            case "None":
                                                return [];
                                        }
                                    }
                                    static extractContractCallsFromScript(e) {
                                        const t = e.methods;
                                        if (0 === t.length) return [];
                                        const r = t[0];
                                        return this.extractContractCallsFromMainMethod(r);
                                    }
                                    static extractContractCallsFromMainMethod(e) {
                                        const t = new f, r = new l, o = [], m = {
                                            kind: "Address",
                                            value: {
                                                kind: "P2PKH",
                                                value: d()
                                            }
                                        }, y = new g;
                                        for (const d of e.instrs)switch(d.name){
                                            case "ConstTrue":
                                                t.push({
                                                    kind: "Bool",
                                                    value: !0
                                                });
                                                break;
                                            case "ConstFalse":
                                                t.push({
                                                    kind: "Bool",
                                                    value: !1
                                                });
                                                break;
                                            case "I256Const0":
                                                t.push({
                                                    kind: "I256",
                                                    value: 0n
                                                });
                                                break;
                                            case "I256Const1":
                                                t.push({
                                                    kind: "I256",
                                                    value: 1n
                                                });
                                                break;
                                            case "I256Const2":
                                                t.push({
                                                    kind: "I256",
                                                    value: 2n
                                                });
                                                break;
                                            case "I256Const3":
                                                t.push({
                                                    kind: "I256",
                                                    value: 3n
                                                });
                                                break;
                                            case "I256Const4":
                                                t.push({
                                                    kind: "I256",
                                                    value: 4n
                                                });
                                                break;
                                            case "I256Const5":
                                                t.push({
                                                    kind: "I256",
                                                    value: 5n
                                                });
                                                break;
                                            case "I256ConstN1":
                                                t.push({
                                                    kind: "I256",
                                                    value: -1n
                                                });
                                                break;
                                            case "I256Const":
                                                t.push({
                                                    kind: "I256",
                                                    value: d.value
                                                });
                                                break;
                                            case "U256Const0":
                                                t.push({
                                                    kind: "U256",
                                                    value: 0n
                                                });
                                                break;
                                            case "U256Const1":
                                                t.push({
                                                    kind: "U256",
                                                    value: 1n
                                                });
                                                break;
                                            case "U256Const2":
                                                t.push({
                                                    kind: "U256",
                                                    value: 2n
                                                });
                                                break;
                                            case "U256Const3":
                                                t.push({
                                                    kind: "U256",
                                                    value: 3n
                                                });
                                                break;
                                            case "U256Const4":
                                                t.push({
                                                    kind: "U256",
                                                    value: 4n
                                                });
                                                break;
                                            case "U256Const5":
                                                t.push({
                                                    kind: "U256",
                                                    value: 5n
                                                });
                                                break;
                                            case "U256Const":
                                                t.push({
                                                    kind: "U256",
                                                    value: d.value
                                                });
                                                break;
                                            case "BytesConst":
                                                t.push({
                                                    kind: "ByteVec",
                                                    value: d.value
                                                });
                                                break;
                                            case "AddressConst":
                                                t.push({
                                                    kind: "Address",
                                                    value: d.value
                                                });
                                                break;
                                            case "LoadLocal":
                                                t.push(r.get(d.index));
                                                break;
                                            case "StoreLocal":
                                                r.set(d.index, t.pop());
                                                break;
                                            case "Pop":
                                                t.pop();
                                                break;
                                            case "Dup":
                                                const e = t.pop();
                                                t.push(e), t.push(e);
                                                break;
                                            case "Swap":
                                                const f = t.pop(), l = t.pop();
                                                t.push(f), t.push(l);
                                                break;
                                            case "BoolNot":
                                                const g = (w = (e)=>!e, (v = t.popBool()).kind.startsWith("Symbol") ? v : {
                                                    kind: v.kind,
                                                    value: w(v.value)
                                                });
                                                t.push(g);
                                            case "BoolAnd":
                                                c(t.popBool(), t.popBool(), (e, t)=>e && t, t.push);
                                                break;
                                            case "BoolOr":
                                                c(t.popBool(), t.popBool(), (e, t)=>e || t, t.push);
                                                break;
                                            case "BoolEq":
                                                c(t.popBool(), t.popBool(), (e, t)=>e === t, t.push);
                                                break;
                                            case "BoolNeq":
                                                c(t.popBool(), t.popBool(), (e, t)=>e !== t, t.push);
                                                break;
                                            case "BoolToByteVec":
                                                {
                                                    const e = t.popBool();
                                                    "Symbol-Bool" === e.kind ? t.push(e) : t.push({
                                                        kind: "ByteVec",
                                                        value: i.boolCodec.encode(e.value)
                                                    });
                                                    break;
                                                }
                                            case "I256Add":
                                                {
                                                    const e = t.popI256();
                                                    c(t.popI256(), e, (e, t)=>e + t, t.push);
                                                    break;
                                                }
                                            case "I256Sub":
                                                {
                                                    const e = t.popI256();
                                                    c(t.popI256(), e, (e, t)=>e - t, t.push);
                                                    break;
                                                }
                                            case "I256Mul":
                                                {
                                                    const e = t.popI256();
                                                    c(t.popI256(), e, (e, t)=>e * t, t.push);
                                                    break;
                                                }
                                            case "I256Div":
                                                {
                                                    const e = t.popI256();
                                                    c(t.popI256(), e, (e, t)=>e / t, t.push);
                                                    break;
                                                }
                                            case "I256Eq":
                                                {
                                                    const e = t.popI256();
                                                    h(t.popI256(), e, (e, t)=>e === t, t.push);
                                                    break;
                                                }
                                            case "I256Neq":
                                                {
                                                    const e = t.popI256();
                                                    h(t.popI256(), e, (e, t)=>e !== t, t.push);
                                                    break;
                                                }
                                            case "I256Lt":
                                                {
                                                    const e = t.popI256();
                                                    h(t.popI256(), e, (e, t)=>e < t, t.push);
                                                    break;
                                                }
                                            case "I256Le":
                                                {
                                                    const e = t.popI256();
                                                    h(t.popI256(), e, (e, t)=>e <= t, t.push);
                                                    break;
                                                }
                                            case "I256Gt":
                                                {
                                                    const e = t.popI256();
                                                    h(t.popI256(), e, (e, t)=>e > t, t.push);
                                                    break;
                                                }
                                            case "I256Ge":
                                                {
                                                    const e = t.popI256();
                                                    h(t.popI256(), e, (e, t)=>e >= t, t.push);
                                                    break;
                                                }
                                            case "U256Add":
                                                {
                                                    const e = t.popU256();
                                                    c(t.popU256(), e, (e, t)=>e + t, t.push);
                                                    break;
                                                }
                                            case "U256Sub":
                                                {
                                                    const e = t.popU256();
                                                    c(t.popU256(), e, (e, t)=>e - t, t.push);
                                                    break;
                                                }
                                            case "U256Mul":
                                                {
                                                    const e = t.popU256();
                                                    c(t.popU256(), e, (e, t)=>e * t, t.push);
                                                    break;
                                                }
                                            case "U256Div":
                                                {
                                                    const e = t.popU256();
                                                    c(t.popU256(), e, (e, t)=>e / t, t.push);
                                                    break;
                                                }
                                            case "U256Eq":
                                                {
                                                    const e = t.popU256();
                                                    h(t.popU256(), e, (e, t)=>e === t, t.push);
                                                    break;
                                                }
                                            case "U256Neq":
                                                {
                                                    const e = t.popU256();
                                                    h(t.popU256(), e, (e, t)=>e !== t, t.push);
                                                    break;
                                                }
                                            case "U256Lt":
                                                {
                                                    const e = t.popU256();
                                                    h(t.popU256(), e, (e, t)=>e < t, t.push);
                                                    break;
                                                }
                                            case "U256Le":
                                                {
                                                    const e = t.popU256();
                                                    h(t.popU256(), e, (e, t)=>e <= t, t.push);
                                                    break;
                                                }
                                            case "U256Gt":
                                                {
                                                    const e = t.popU256();
                                                    h(t.popU256(), e, (e, t)=>e > t, t.push);
                                                    break;
                                                }
                                            case "U256Ge":
                                                {
                                                    const e = t.popU256();
                                                    h(t.popU256(), e, (e, t)=>e >= t, t.push);
                                                    break;
                                                }
                                            case "ByteVecEq":
                                                h(t.popByteVec(), t.popByteVec(), (e, t)=>u(e, t), t.push);
                                                break;
                                            case "ByteVecNeq":
                                                h(t.popByteVec(), t.popByteVec(), (e, t)=>!u(e, t), t.push);
                                                break;
                                            case "ByteVecSize":
                                                {
                                                    const e = t.popByteVec();
                                                    "Symbol-ByteVec" === e.kind ? t.push({
                                                        kind: "Symbol-U256",
                                                        value: void 0
                                                    }) : t.push({
                                                        kind: "U256",
                                                        value: BigInt(e.value.length)
                                                    });
                                                    break;
                                                }
                                            case "ByteVecConcat":
                                                {
                                                    const e = t.popByteVec();
                                                    c(t.popByteVec(), e, (e, t)=>new Uint8Array([
                                                            ...e,
                                                            ...t
                                                        ]), t.push);
                                                    break;
                                                }
                                            case "ByteVecSlice":
                                                {
                                                    const e = t.popU256(), r = t.popU256(), n = t.popByteVec();
                                                    "Symbol-ByteVec" === n.kind || "Symbol-U256" === r.kind || "Symbol-U256" === e.kind ? t.push({
                                                        kind: "Symbol-ByteVec",
                                                        value: void 0
                                                    }) : t.push({
                                                        kind: "ByteVec",
                                                        value: n.value.slice(Number(r.value), Number(e.value))
                                                    });
                                                    break;
                                                }
                                            case "AddressEq":
                                                h(t.popAddress(), t.popAddress(), (e, t)=>u(s.lockupScriptCodec.encode(e), s.lockupScriptCodec.encode(t)), t.push);
                                                break;
                                            case "AddressNeq":
                                                h(t.popAddress(), t.popAddress(), (e, t)=>!u(s.lockupScriptCodec.encode(e), s.lockupScriptCodec.encode(t)), t.push);
                                                break;
                                            case "AddressToByteVec":
                                                {
                                                    const e = t.popAddress();
                                                    "Symbol-Address" === e.kind ? t.push({
                                                        kind: "Symbol-ByteVec",
                                                        value: void 0
                                                    }) : t.push({
                                                        kind: "ByteVec",
                                                        value: s.lockupScriptCodec.encode(e.value)
                                                    });
                                                    break;
                                                }
                                            case "Assert":
                                                if (!t.popBool()) throw new Error("Assertion failed");
                                                break;
                                            case "Blake2b":
                                            case "Sha256":
                                            case "Sha3":
                                            case "Keccak256":
                                                b(d.name), t.popByteVec(), t.push({
                                                    kind: "ByteVec",
                                                    value: new Uint8Array(32)
                                                });
                                                break;
                                            case "ByteVecToAddress":
                                                {
                                                    const e = t.popByteVec();
                                                    "Symbol-ByteVec" === e.kind ? t.push({
                                                        kind: "Symbol-Address",
                                                        value: void 0
                                                    }) : t.push({
                                                        kind: "Address",
                                                        value: s.lockupScriptCodec.decode(e.value)
                                                    });
                                                    break;
                                                }
                                            case "Zeros":
                                                {
                                                    const e = t.popU256();
                                                    if ("Symbol-U256" === e.kind) t.push({
                                                        kind: "Symbol-ByteVec",
                                                        value: void 0
                                                    });
                                                    else {
                                                        if (e.value > 4096) throw new Error("Zeros size is too large");
                                                        t.push({
                                                            kind: "ByteVec",
                                                            value: new Uint8Array(Number(e.value))
                                                        });
                                                    }
                                                    break;
                                                }
                                            case "U256To1Byte":
                                            case "U256To2Byte":
                                            case "U256To4Byte":
                                            case "U256To8Byte":
                                            case "U256To16Byte":
                                            case "U256To32Byte":
                                                b(d.name), t.popU256(), t.push({
                                                    kind: "Symbol-ByteVec",
                                                    value: void 0
                                                });
                                                break;
                                            case "U256From1Byte":
                                            case "U256From2Byte":
                                            case "U256From4Byte":
                                            case "U256From8Byte":
                                            case "U256From16Byte":
                                            case "U256From32Byte":
                                                b(d.name), t.popByteVec(), t.push({
                                                    kind: "Symbol-U256",
                                                    value: void 0
                                                });
                                                break;
                                            case "CallExternal":
                                            case "CallExternalBySelector":
                                                {
                                                    const e = t.popByteVec(), r = t.popU256();
                                                    if (t.popU256(), "Symbol-ByteVec" !== e.kind && o.push({
                                                        contractAddress: (0, n.addressFromContractId)((0, a.binToHex)(e.value)),
                                                        approvedAttoAlphAmount: y.getApprovedAttoAlph(),
                                                        approvedTokens: y.getApprovedTokens()
                                                    }), y.reset(), "Symbol-U256" !== r.kind) for(let e = 0; e < r.value; e++)t.push({
                                                        kind: "Symbol-Any",
                                                        value: void 0
                                                    });
                                                    break;
                                                }
                                            case "ContractIdToAddress":
                                                {
                                                    const e = t.popByteVec();
                                                    "Symbol-ByteVec" === e.kind ? t.push({
                                                        kind: "Symbol-Address",
                                                        value: void 0
                                                    }) : t.push({
                                                        kind: "Address",
                                                        value: {
                                                            kind: "P2C",
                                                            value: e.value
                                                        }
                                                    });
                                                    break;
                                                }
                                            case "LoadLocalByIndex":
                                                {
                                                    const e = t.popU256();
                                                    if ("Symbol-U256" === e.kind) throw new Error("LoadLocalByIndex index is a symbol");
                                                    t.push(r.get(Number(e.value)));
                                                    break;
                                                }
                                            case "StoreLocalByIndex":
                                                {
                                                    const e = t.popU256();
                                                    if ("Symbol-U256" === e.kind) throw new Error("StoreLocalByIndex index is a symbol");
                                                    r.set(Number(e.value), t.pop());
                                                    break;
                                                }
                                            case "CallerAddress":
                                                t.push(m);
                                                break;
                                            case "ApproveAlph":
                                                {
                                                    const e = t.popU256(), r = t.popAddress();
                                                    r.kind.startsWith("Symbol") ? y.setUnknown() : r === m && y.addApprovedAttoAlph(e);
                                                    break;
                                                }
                                            case "ApproveToken":
                                                {
                                                    const e = t.popU256(), r = t.popByteVec(), n = t.popAddress();
                                                    n.kind.startsWith("Symbol") ? y.setUnknown() : n === m && y.addApprovedToken(r, e);
                                                    break;
                                                }
                                            case "CreateContractAndTransferToken":
                                                t.popAddress();
                                            case "CreateContractWithToken":
                                                t.popU256();
                                            case "CreateContract":
                                                t.popByteVec(), t.popByteVec(), t.popByteVec(), t.push({
                                                    kind: "Symbol-ByteVec",
                                                    value: void 0
                                                });
                                                break;
                                            case "TransferAlph":
                                                t.popU256(), t.popAddress(), t.popAddress();
                                                break;
                                            case "TransferToken":
                                                t.popU256(), t.popByteVec(), t.popAddress(), t.popAddress();
                                                break;
                                            default:
                                                p(d.name);
                                        }
                                        var v, w;
                                        return o;
                                    }
                                };
                                class f {
                                    constructor(){
                                        this.stack = [], this.push = (e)=>{
                                            this.stack.push(e);
                                        };
                                    }
                                    pop() {
                                        const e = this.stack.pop();
                                        if (void 0 === e) throw new Error("Stack is empty");
                                        return e;
                                    }
                                    size() {
                                        return this.stack.length;
                                    }
                                    checkedResult(e, t) {
                                        if (e.kind.startsWith("Symbol")) {
                                            if (e.kind !== `Symbol-${t}`) throw new Error(`Expected a ${t} value on the stack`);
                                            return e;
                                        }
                                        if (e.kind !== t) throw new Error(`Expected a ${t} value on the stack`);
                                        return e;
                                    }
                                    popBool() {
                                        const e = this.pop();
                                        return this.checkedResult(e, "Bool");
                                    }
                                    popI256() {
                                        const e = this.pop();
                                        return this.checkedResult(e, "I256");
                                    }
                                    popU256() {
                                        const e = this.pop();
                                        return this.checkedResult(e, "U256");
                                    }
                                    popByteVec() {
                                        const e = this.pop();
                                        return this.checkedResult(e, "ByteVec");
                                    }
                                    popAddress() {
                                        const e = this.pop();
                                        return this.checkedResult(e, "Address");
                                    }
                                }
                                class l {
                                    constructor(){
                                        this.locals = [];
                                    }
                                    get(e) {
                                        const t = this.locals[`${e}`];
                                        if (void 0 === t) throw new Error(`Local variable at index ${e} is not set`);
                                        return t;
                                    }
                                    set(e, t) {
                                        this.locals[`${e}`] = t;
                                    }
                                    checkedResult(e, t, r) {
                                        if (e.kind.startsWith("Symbol")) {
                                            if (e.kind !== `Symbol-${r}`) throw new Error(`Local variable at index ${t} is not a ${r}`);
                                            return e;
                                        }
                                        if (e.kind !== r) throw new Error(`Local variable at index ${t} is not a ${r}`);
                                        return e;
                                    }
                                    getBool(e) {
                                        const t = this.get(e);
                                        return this.checkedResult(t, e, "Bool");
                                    }
                                    getI256(e) {
                                        const t = this.get(e);
                                        return this.checkedResult(t, e, "I256");
                                    }
                                    getU256(e) {
                                        const t = this.get(e);
                                        return this.checkedResult(t, e, "U256");
                                    }
                                    getByteVec(e) {
                                        const t = this.get(e);
                                        return this.checkedResult(t, e, "ByteVec");
                                    }
                                    getAddress(e) {
                                        const t = this.get(e);
                                        return this.checkedResult(t, e, "Address");
                                    }
                                }
                                function p(e) {
                                    throw new Error(`Unimplemented instruction: ${e}`);
                                }
                                function b(e) {
                                    console.debug(`Dummy implementation for instruction: ${e}`);
                                }
                                class g {
                                    constructor(){
                                        this.approvedTokens = [], this.reset();
                                    }
                                    reset() {
                                        this.approvedTokens = [
                                            {
                                                id: o.ALPH_TOKEN_ID,
                                                amount: 0n
                                            }
                                        ];
                                    }
                                    setUnknown() {
                                        this.approvedTokens = "unknown";
                                    }
                                    getApprovedAttoAlph() {
                                        if ("unknown" === this.approvedTokens) return "unknown";
                                        const e = this.approvedTokens[0].amount;
                                        return "unknown" === e ? "unknown" : 0n === e ? void 0 : e;
                                    }
                                    getApprovedTokens() {
                                        if ("unknown" === this.approvedTokens) return "unknown";
                                        const e = this.approvedTokens.slice(1);
                                        return 0 === e.length ? void 0 : e;
                                    }
                                    addApprovedAttoAlph(e) {
                                        this.addApprovedToken({
                                            kind: "ByteVec",
                                            value: (0, a.hexToBinUnsafe)(o.ALPH_TOKEN_ID)
                                        }, e);
                                    }
                                    addApprovedToken(e, t) {
                                        if ("unknown" === this.approvedTokens) return;
                                        if ("Symbol-ByteVec" === e.kind) return void (this.approvedTokens = "unknown");
                                        const r = this.approvedTokens.findIndex((t)=>u((0, a.hexToBinUnsafe)(t.id), e.value));
                                        if (-1 === r) this.approvedTokens.push({
                                            id: (0, a.binToHex)(e.value),
                                            amount: "Symbol-U256" === t.kind ? "unknown" : t.value
                                        });
                                        else {
                                            const e = this.approvedTokens[`${r}`];
                                            if ("unknown" === e.amount) return;
                                            "Symbol-U256" === t.kind ? e.amount = "unknown" : e.amount += t.value;
                                        }
                                    }
                                }
                            },
                            2505: (e, t)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.disableContractDebugMessage = t.enableContractDebugMessage = t.isContractDebugMessageEnabled = t.disableDebugMode = t.enableDebugMode = t.isDebugModeEnabled = void 0;
                                let r = !1;
                                t.isDebugModeEnabled = function() {
                                    return r;
                                }, t.enableDebugMode = function() {
                                    r = !0;
                                }, t.disableDebugMode = function() {
                                    r = !1;
                                };
                                let n = !0;
                                t.isContractDebugMessageEnabled = function() {
                                    return n;
                                }, t.enableContractDebugMessage = function() {
                                    n = !0;
                                }, t.disableContractDebugMessage = function() {
                                    n = !1;
                                };
                            },
                            4652: (e, t)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.TraceableError = void 0;
                                class r extends Error {
                                    constructor(e, t){
                                        const r = void 0 === t ? void 0 : t instanceof Error ? t.message : `${t}`;
                                        super(r ? `${e}, error: ${r}` : e), this.trace = t;
                                        const n = new.target.prototype;
                                        Object.setPrototypeOf ? Object.setPrototypeOf(this, n) : this.__proto__ = n;
                                    }
                                }
                                t.TraceableError = r;
                            },
                            3869: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.isTransferTx = t.getAddressFromUnlockScript = t.getSenderAddress = t.getDepositInfo = t.getALPHDepositInfo = t.isALPHTransferTx = t.validateExchangeAddress = void 0;
                                const n = r(2581), i = r(664), s = r(2976), o = r(4459), a = r(4652);
                                function c(e) {
                                    return f(e) && function(e) {
                                        return e.unsigned.fixedOutputs.every((e)=>0 === e.tokens.length);
                                    }(e);
                                }
                                function h(e) {
                                    const t = [];
                                    for (const r of e.unsigned.inputs)try {
                                        if (r.unlockScript === (0, i.binToHex)(s.encodedSameAsPrevious)) continue;
                                        const e = d(r.unlockScript);
                                        t.includes(e) || t.push(e);
                                    } catch (e) {
                                        throw new a.TraceableError("Failed to decode address from unlock script", e);
                                    }
                                    return t;
                                }
                                var u;
                                function d(e) {
                                    if (!(0, i.isHexString)(e)) throw new Error(`Invalid unlock script ${e}, expected a hex string`);
                                    const t = (0, i.hexToBinUnsafe)(e);
                                    if (0 === t.length) throw new Error("UnlockScript is empty");
                                    const r = t[0], c = t.slice(1);
                                    if (r === u.P2PKH) {
                                        if (33 !== c.length) throw new Error(`Invalid p2pkh unlock script: ${e}`);
                                        return (0, n.addressFromPublicKey)((0, i.binToHex)(c));
                                    }
                                    if (r === u.P2MPKH) throw new Error("Naive multi-sig address is not supported for exchanges as it will be replaced by P2SH");
                                    if (r === u.P2SH) {
                                        let r;
                                        try {
                                            r = s.unlockScriptCodec.decode(t).value;
                                        } catch (t) {
                                            throw new a.TraceableError(`Invalid p2sh unlock script: ${e}`, t);
                                        }
                                        return (0, n.addressFromScript)(o.scriptCodec.encode(r.script));
                                    }
                                    throw new Error("Invalid unlock script type");
                                }
                                function f(e) {
                                    return 0 === e.contractInputs.length && 0 === e.generatedOutputs.length && 0 !== e.unsigned.inputs.length && void 0 === e.unsigned.scriptOpt;
                                }
                                t.validateExchangeAddress = function(e) {
                                    const t = (0, i.base58ToBytes)(e);
                                    if (0 === t.length) throw new Error("Address is empty");
                                    const r = t[0];
                                    if (r !== n.AddressType.P2PKH && r !== n.AddressType.P2SH) throw new Error("Invalid address type");
                                    if (33 !== t.length) throw new Error("Invalid address length");
                                }, t.isALPHTransferTx = c, t.getALPHDepositInfo = function(e) {
                                    if (!c(e)) return [];
                                    const t = h(e), r = new Map;
                                    return e.unsigned.fixedOutputs.forEach((e)=>{
                                        if (!t.includes(e.address)) {
                                            const t = r.get(e.address);
                                            void 0 === t ? r.set(e.address, BigInt(e.attoAlphAmount)) : r.set(e.address, BigInt(e.attoAlphAmount) + t);
                                        }
                                    }), Array.from(r.entries()).map(([e, t])=>({
                                            targetAddress: e,
                                            depositAmount: t
                                        }));
                                }, t.getDepositInfo = function(e) {
                                    if (!f(e)) return {
                                        alph: [],
                                        tokens: []
                                    };
                                    const t = h(e), r = new Map, n = new Map;
                                    return e.unsigned.fixedOutputs.forEach((e)=>{
                                        if (!t.includes(e.address)) {
                                            const t = r.get(e.address) ?? 0n;
                                            r.set(e.address, t + BigInt(e.attoAlphAmount)), e.tokens.forEach((t)=>{
                                                const r = n.get(t.id) ?? new Map, i = r.get(e.address) ?? 0n;
                                                r.set(e.address, i + BigInt(t.amount)), n.set(t.id, r);
                                            });
                                        }
                                    }), {
                                        alph: Array.from(r.entries()).map(([e, t])=>({
                                                targetAddress: e,
                                                depositAmount: t
                                            })),
                                        tokens: Array.from(n.entries()).flatMap(([e, t])=>Array.from(t.entries()).map(([t, r])=>({
                                                    tokenId: e,
                                                    targetAddress: t,
                                                    depositAmount: r
                                                })))
                                    };
                                }, t.getSenderAddress = function(e) {
                                    return d(e.unsigned.inputs[0].unlockScript);
                                }, function(e) {
                                    e[e.P2PKH = 0] = "P2PKH", e[e.P2MPKH = 1] = "P2MPKH", e[e.P2SH = 2] = "P2SH";
                                }(u || (u = {})), t.getAddressFromUnlockScript = d, t.isTransferTx = f;
                            },
                            3285: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.getDepositInfo = t.getALPHDepositInfo = t.isALPHTransferTx = t.getSenderAddress = t.validateExchangeAddress = void 0;
                                var n = r(3869);
                                Object.defineProperty(t, "validateExchangeAddress", {
                                    enumerable: !0,
                                    get: function() {
                                        return n.validateExchangeAddress;
                                    }
                                }), Object.defineProperty(t, "getSenderAddress", {
                                    enumerable: !0,
                                    get: function() {
                                        return n.getSenderAddress;
                                    }
                                }), Object.defineProperty(t, "isALPHTransferTx", {
                                    enumerable: !0,
                                    get: function() {
                                        return n.isALPHTransferTx;
                                    }
                                }), Object.defineProperty(t, "getALPHDepositInfo", {
                                    enumerable: !0,
                                    get: function() {
                                        return n.getALPHDepositInfo;
                                    }
                                }), Object.defineProperty(t, "getDepositInfo", {
                                    enumerable: !0,
                                    get: function() {
                                        return n.getDepositInfo;
                                    }
                                });
                            },
                            307: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.getCurrentExplorerProvider = t.setCurrentExplorerProvider = t.getCurrentNodeProvider = t.setCurrentNodeProvider = void 0;
                                const n = r(3749);
                                let i, s;
                                t.setCurrentNodeProvider = function(e, t, r) {
                                    i = "string" == typeof e ? new n.NodeProvider(e, t, r) : e;
                                }, t.getCurrentNodeProvider = function() {
                                    if (void 0 === i) throw Error("No node provider is set.");
                                    return i;
                                }, t.setCurrentExplorerProvider = function(e, t, r) {
                                    s = "string" == typeof e ? new n.ExplorerProvider(e, t, r) : e;
                                }, t.getCurrentExplorerProvider = function() {
                                    return s;
                                };
                            },
                            2126: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                                    Object.defineProperty(e, "default", {
                                        enumerable: !0,
                                        value: t
                                    });
                                } : function(e, t) {
                                    e.default = t;
                                }), s = this && this.__exportStar || function(e, t) {
                                    for(var r in e)"default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r);
                                }, o = this && this.__importStar || function(e) {
                                    if (e && e.__esModule) return e;
                                    var t = {};
                                    if (null != e) for(var r in e)"default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                                    return i(t, e), t;
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.utils = t.codec = t.web3 = void 0, BigInt.prototype.toJSON = function() {
                                    return this.toString();
                                }, s(r(3749), t), s(r(5033), t), s(r(3693), t), s(r(664), t), s(r(6705), t), s(r(3652), t), s(r(7695), t), t.web3 = o(r(307)), t.codec = o(r(3651)), t.utils = o(r(664)), s(r(2505), t), s(r(4648), t), s(r(2581), t), s(r(3285), t), s(r(4652), t);
                            },
                            3693: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__exportStar || function(e, t) {
                                    for(var r in e)"default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r);
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), i(r(9191), t), i(r(2644), t), i(r(7375), t);
                            },
                            9191: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                                    Object.defineProperty(e, "default", {
                                        enumerable: !0,
                                        value: t
                                    });
                                } : function(e, t) {
                                    e.default = t;
                                }), s = this && this.__importStar || function(e) {
                                    if (e && e.__esModule) return e;
                                    var t = {};
                                    if (null != e) for(var r in e)"default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                                    return i(t, e), t;
                                }, o = this && this.__importDefault || function(e) {
                                    return e && e.__esModule ? e : {
                                        default: e
                                    };
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.fromApiDestination = t.toApiDestinations = t.toApiDestination = t.verifySignedMessage = t.hashMessage = t.extendMessage = t.SignerProviderWithCachedAccounts = t.SignerProviderWithMultipleAccounts = t.SignerProviderSimple = t.InteractiveSignerProvider = t.SignerProvider = void 0;
                                const a = r(4062), c = r(3749), h = s(r(664)), u = o(r(1540)), d = r(7375), f = r(2581);
                                class l {
                                    async getSelectedAccount() {
                                        const e = await this.unsafeGetSelectedAccount();
                                        return l.validateAccount(e), e;
                                    }
                                    static validateAccount(e) {
                                        const t = (0, f.addressFromPublicKey)(e.publicKey, e.keyType), r = (0, f.groupOfAddress)(t);
                                        if (t !== e.address || r !== e.group) throw Error(`Invalid accounot data: ${JSON.stringify(e)}`);
                                    }
                                }
                                t.SignerProvider = l, t.InteractiveSignerProvider = class extends l {
                                    async enable(e) {
                                        const t = await this.unsafeEnable(e);
                                        return l.validateAccount(t), t;
                                    }
                                };
                                class p extends l {
                                    async submitTransaction(e) {
                                        const t = {
                                            unsignedTx: e.unsignedTx,
                                            signature: e.signature
                                        };
                                        return this.nodeProvider.transactions.postTransactionsSubmit(t);
                                    }
                                    async signAndSubmitTransferTx(e) {
                                        const t = await this.signTransferTx(e);
                                        return await this.submitTransaction(t), t;
                                    }
                                    async signAndSubmitDeployContractTx(e) {
                                        const t = await this.signDeployContractTx(e);
                                        return await this.submitTransaction(t), t;
                                    }
                                    async signAndSubmitExecuteScriptTx(e) {
                                        const t = await this.signExecuteScriptTx(e);
                                        return await this.submitTransaction(t), t;
                                    }
                                    async signAndSubmitUnsignedTx(e) {
                                        const t = await this.signUnsignedTx(e);
                                        return await this.submitTransaction(t), t;
                                    }
                                    async signAndSubmitChainedTx(e) {
                                        const t = await this.signChainedTx(e);
                                        for (const e of t)await this.submitTransaction(e);
                                        return t;
                                    }
                                    async signTransferTx(e) {
                                        const t = await this.buildTransferTx(e);
                                        return {
                                            signature: await this.signRaw(e.signerAddress, t.txId),
                                            ...t
                                        };
                                    }
                                    async buildTransferTx(e) {
                                        return d.TransactionBuilder.from(this.nodeProvider).buildTransferTx(e, await this.getPublicKey(e.signerAddress));
                                    }
                                    async signDeployContractTx(e) {
                                        const t = await this.buildDeployContractTx(e);
                                        return {
                                            signature: await this.signRaw(e.signerAddress, t.txId),
                                            ...t
                                        };
                                    }
                                    async buildDeployContractTx(e) {
                                        return d.TransactionBuilder.from(this.nodeProvider).buildDeployContractTx(e, await this.getPublicKey(e.signerAddress));
                                    }
                                    async signExecuteScriptTx(e) {
                                        const t = await this.buildExecuteScriptTx(e);
                                        return {
                                            signature: await this.signRaw(e.signerAddress, t.txId),
                                            ...t
                                        };
                                    }
                                    async buildExecuteScriptTx(e) {
                                        return d.TransactionBuilder.from(this.nodeProvider).buildExecuteScriptTx(e, await this.getPublicKey(e.signerAddress));
                                    }
                                    async signChainedTx(e) {
                                        const t = await this.buildChainedTx(e), r = await Promise.all(t.map((t, r)=>this.signRaw(e[`${r}`].signerAddress, t.txId)));
                                        return t.map((e, t)=>({
                                                ...e,
                                                signature: r[`${t}`]
                                            }));
                                    }
                                    async buildChainedTx(e) {
                                        return d.TransactionBuilder.from(this.nodeProvider).buildChainedTx(e, await Promise.all(e.map((e)=>this.getPublicKey(e.signerAddress))));
                                    }
                                    async signUnsignedTx(e) {
                                        const t = d.TransactionBuilder.buildUnsignedTx(e);
                                        return {
                                            signature: await this.signRaw(e.signerAddress, t.txId),
                                            ...t
                                        };
                                    }
                                    async signMessage(e) {
                                        const t = m(e.message, e.messageHasher);
                                        return {
                                            signature: await this.signRaw(e.signerAddress, t)
                                        };
                                    }
                                }
                                t.SignerProviderSimple = p;
                                class b extends p {
                                    async getAccount(e) {
                                        const t = (await this.getAccounts()).find((t)=>t.address === e);
                                        if (void 0 === t) throw new Error("Unmatched signerAddress");
                                        return t;
                                    }
                                    async getPublicKey(e) {
                                        return (await this.getAccount(e)).publicKey;
                                    }
                                }
                                function g(e) {
                                    return "Alephium Signed Message: " + e;
                                }
                                function m(e, t) {
                                    switch(t){
                                        case "alephium":
                                            return h.binToHex(u.default.blake2b(g(e), void 0, 32));
                                        case "sha256":
                                            const r = (0, a.createHash)("sha256");
                                            return r.update((new TextEncoder).encode(e)), h.binToHex(r.digest());
                                        case "blake2b":
                                            return h.binToHex(u.default.blake2b(e, void 0, 32));
                                        case "identity":
                                            return e;
                                        default:
                                            throw Error(`Invalid message hasher: ${t}`);
                                    }
                                }
                                function y(e) {
                                    return {
                                        ...e,
                                        attoAlphAmount: (0, c.toApiNumber256)(e.attoAlphAmount),
                                        tokens: (0, c.toApiTokens)(e.tokens)
                                    };
                                }
                                t.SignerProviderWithMultipleAccounts = b, t.SignerProviderWithCachedAccounts = class extends b {
                                    constructor(){
                                        super(...arguments), this._selectedAccount = void 0, this._accounts = new Map;
                                    }
                                    unsafeGetSelectedAccount() {
                                        if (void 0 === this._selectedAccount) throw Error("No account is selected yet");
                                        return Promise.resolve(this._selectedAccount);
                                    }
                                    setSelectedAccount(e) {
                                        const t = this._accounts.get(e);
                                        if (void 0 === t) throw Error("The address is not in the accounts");
                                        return this._selectedAccount = t, Promise.resolve();
                                    }
                                    getAccounts() {
                                        return Promise.resolve(Array.from(this._accounts.values()));
                                    }
                                    async getAccount(e) {
                                        const t = this._accounts.get(e);
                                        if (void 0 === t) throw Error("The address is not in the accounts");
                                        return Promise.resolve(t);
                                    }
                                }, t.extendMessage = g, t.hashMessage = m, t.verifySignedMessage = function(e, t, r, n, i) {
                                    const s = m(e, t);
                                    return h.verifySignature(s, r, n, i);
                                }, t.toApiDestination = y, t.toApiDestinations = function(e) {
                                    return e.map(y);
                                }, t.fromApiDestination = function(e) {
                                    return {
                                        ...e,
                                        attoAlphAmount: (0, c.fromApiNumber256)(e.attoAlphAmount ?? "0"),
                                        tokens: (0, c.fromApiTokens)(e.tokens)
                                    };
                                };
                            },
                            7375: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.TransactionBuilder = void 0;
                                const n = r(664), i = r(3749), s = r(2581), o = r(9191), a = r(3651), c = r(6705), h = r(7007);
                                class u {
                                    static from(e, t, r) {
                                        const n = "string" == typeof e ? new i.NodeProvider(e, t, r) : e;
                                        return new class extends u {
                                            get nodeProvider() {
                                                return n;
                                            }
                                        };
                                    }
                                    static validatePublicKey(e, t, r) {
                                        if ((0, s.addressFromPublicKey)(t, r) !== e.signerAddress) throw new Error("Unmatched public key");
                                    }
                                    async buildTransferTx(e, t) {
                                        const r = this.buildTransferTxParams(e, t), n = await this.nodeProvider.transactions.postTransactionsBuild(r);
                                        return this.convertTransferTxResult(n);
                                    }
                                    async buildDeployContractTx(e, t) {
                                        const r = this.buildDeployContractTxParams(e, t), n = await this.nodeProvider.contracts.postContractsUnsignedTxDeployContract(r);
                                        return this.convertDeployContractTxResult(n);
                                    }
                                    async buildExecuteScriptTx(e, t) {
                                        const r = this.buildExecuteScriptTxParams(e, t), n = await this.nodeProvider.contracts.postContractsUnsignedTxExecuteScript(r);
                                        return this.convertExecuteScriptTxResult(n);
                                    }
                                    async buildChainedTx(e, t) {
                                        if (e.length !== t.length) throw new Error("The number of build chained transaction parameters must match the number of public keys provided");
                                        const r = e.map((e, r)=>{
                                            const n = e.type;
                                            switch(n){
                                                case "Transfer":
                                                    return {
                                                        type: n,
                                                        value: this.buildTransferTxParams(e, t[r])
                                                    };
                                                case "DeployContract":
                                                    return {
                                                        type: n,
                                                        value: this.buildDeployContractTxParams(e, t[r])
                                                    };
                                                case "ExecuteScript":
                                                    return {
                                                        type: n,
                                                        value: this.buildExecuteScriptTxParams(e, t[r])
                                                    };
                                                default:
                                                    throw new Error(`Unsupported transaction type: ${n}`);
                                            }
                                        });
                                        return (await this.nodeProvider.transactions.postTransactionsBuildChained(r)).map((e)=>{
                                            const t = e.type;
                                            switch(t){
                                                case "Transfer":
                                                    {
                                                        const r = e.value;
                                                        return {
                                                            ...this.convertTransferTxResult(r),
                                                            type: t
                                                        };
                                                    }
                                                case "DeployContract":
                                                    {
                                                        const r = e.value;
                                                        return {
                                                            ...this.convertDeployContractTxResult(r),
                                                            type: t
                                                        };
                                                    }
                                                case "ExecuteScript":
                                                    {
                                                        const r = e.value;
                                                        return {
                                                            ...this.convertExecuteScriptTxResult(r),
                                                            type: t
                                                        };
                                                    }
                                                default:
                                                    throw new Error(`Unexpected transaction type: ${t} for ${e.value.txId}`);
                                            }
                                        });
                                    }
                                    static buildUnsignedTx(e) {
                                        const t = (0, n.hexToBinUnsafe)(e.unsignedTx), r = a.unsignedTxCodec.decode(t), i = (0, n.binToHex)((0, h.blakeHash)(t)), [s, o] = (0, c.groupIndexOfTransaction)(r);
                                        return {
                                            fromGroup: s,
                                            toGroup: o,
                                            unsignedTx: e.unsignedTx,
                                            txId: i,
                                            gasAmount: r.gasAmount,
                                            gasPrice: r.gasPrice
                                        };
                                    }
                                    buildTransferTxParams(e, t) {
                                        u.validatePublicKey(e, t, e.signerKeyType);
                                        const { destinations: r, gasPrice: n, ...s } = e;
                                        return {
                                            fromPublicKey: t,
                                            fromPublicKeyType: e.signerKeyType,
                                            destinations: (0, o.toApiDestinations)(r),
                                            gasPrice: (0, i.toApiNumber256Optional)(n),
                                            ...s
                                        };
                                    }
                                    buildDeployContractTxParams(e, t) {
                                        u.validatePublicKey(e, t, e.signerKeyType);
                                        const { initialAttoAlphAmount: r, initialTokenAmounts: n, issueTokenAmount: s, gasPrice: o, ...a } = e;
                                        return {
                                            fromPublicKey: t,
                                            fromPublicKeyType: e.signerKeyType,
                                            initialAttoAlphAmount: (0, i.toApiNumber256Optional)(r),
                                            initialTokenAmounts: (0, i.toApiTokens)(n),
                                            issueTokenAmount: (0, i.toApiNumber256Optional)(s),
                                            gasPrice: (0, i.toApiNumber256Optional)(o),
                                            ...a
                                        };
                                    }
                                    buildExecuteScriptTxParams(e, t) {
                                        u.validatePublicKey(e, t, e.signerKeyType);
                                        const { attoAlphAmount: r, tokens: n, gasPrice: s, ...o } = e;
                                        return {
                                            fromPublicKey: t,
                                            fromPublicKeyType: e.signerKeyType,
                                            attoAlphAmount: (0, i.toApiNumber256Optional)(r),
                                            tokens: (0, i.toApiTokens)(n),
                                            gasPrice: (0, i.toApiNumber256Optional)(s),
                                            ...o
                                        };
                                    }
                                    convertTransferTxResult(e) {
                                        return {
                                            ...e,
                                            gasPrice: (0, i.fromApiNumber256)(e.gasPrice)
                                        };
                                    }
                                    convertDeployContractTxResult(e) {
                                        const t = (0, n.binToHex)((0, s.contractIdFromAddress)(e.contractAddress));
                                        return {
                                            ...e,
                                            groupIndex: e.fromGroup,
                                            contractId: t,
                                            gasPrice: (0, i.fromApiNumber256)(e.gasPrice)
                                        };
                                    }
                                    convertExecuteScriptTxResult(e) {
                                        return {
                                            ...e,
                                            groupIndex: e.fromGroup,
                                            gasPrice: (0, i.fromApiNumber256)(e.gasPrice)
                                        };
                                    }
                                }
                                t.TransactionBuilder = u;
                            },
                            2644: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                });
                                const n = r(664);
                                n.assertType, (0, n.assertType)(), (0, n.assertType)(), (0, n.assertType)(), (0, n.assertType)(), (0, n.assertType)(), (0, n.assertType)(), (0, n.assertType)(), n.assertType, (0, n.assertType)();
                            },
                            3652: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__exportStar || function(e, t) {
                                    for(var r in e)"default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r);
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), i(r(716), t);
                            },
                            716: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.validateNFTBaseUri = t.validateNFTCollectionUriMetaData = t.validateNFTTokenUriMetaData = t.validNFTCollectionUriMetaDataFields = t.validNFTUriMetaDataAttributeTypes = t.validNFTTokenUriMetaDataAttributesFields = t.validNFTTokenUriMetaDataFields = void 0, r(9114);
                                const n = r(4652);
                                function i(e) {
                                    return Object.keys(e).forEach((e)=>{
                                        if (!t.validNFTTokenUriMetaDataFields.includes(e)) throw new Error(`Invalid field ${e}, only ${t.validNFTTokenUriMetaDataFields} are allowed`);
                                    }), {
                                        name: s(e, "name"),
                                        description: function(e, t) {
                                            const r = e[`${t}`];
                                            if (void 0 !== r && ("string" != typeof r || "" === r)) throw new Error(`JSON field '${t}' is not a non empty string`);
                                            return r;
                                        }(e, "description"),
                                        image: s(e, "image"),
                                        attributes: function(e) {
                                            if (e) {
                                                if (!Array.isArray(e)) throw new Error("Field 'attributes' should be an array");
                                                e.forEach((e)=>{
                                                    if ("object" != typeof e) throw new Error("Field 'attributes' should be an array of objects");
                                                    Object.keys(e).forEach((e)=>{
                                                        if (!t.validNFTTokenUriMetaDataAttributesFields.includes(e)) throw new Error(`Invalid field ${e} for attributes, only ${t.validNFTTokenUriMetaDataAttributesFields} are allowed`);
                                                    }), s(e, "trait_type"), function(e) {
                                                        const t = e.value;
                                                        if (("string" != typeof t || "" === t) && "number" != typeof t && "boolean" != typeof t) throw new Error("Attribute value should be a non empty string, number or boolean");
                                                    }(e);
                                                });
                                            }
                                            return e;
                                        }(e.attributes)
                                    };
                                }
                                function s(e, t) {
                                    const r = e[`${t}`];
                                    if ("string" != typeof r || "" === r) throw new Error(`JSON field '${t}' is not a non empty string`);
                                    return r;
                                }
                                async function o(e, t) {
                                    try {
                                        return await (await fetch(`${e}${t}`)).json();
                                    } catch (r) {
                                        throw new n.TraceableError(`Error fetching NFT metadata from ${e}${t}`, r);
                                    }
                                }
                                t.validNFTTokenUriMetaDataFields = [
                                    "name",
                                    "description",
                                    "image",
                                    "attributes"
                                ], t.validNFTTokenUriMetaDataAttributesFields = [
                                    "trait_type",
                                    "value"
                                ], t.validNFTUriMetaDataAttributeTypes = [
                                    "string",
                                    "number",
                                    "boolean"
                                ], t.validNFTCollectionUriMetaDataFields = [
                                    "name",
                                    "description",
                                    "image"
                                ], t.validateNFTTokenUriMetaData = i, t.validateNFTCollectionUriMetaData = function(e) {
                                    return Object.keys(e).forEach((e)=>{
                                        if (!t.validNFTCollectionUriMetaDataFields.includes(e)) throw new Error(`Invalid field ${e}, only ${t.validNFTCollectionUriMetaDataFields} are allowed`);
                                    }), {
                                        name: s(e, "name"),
                                        description: s(e, "description"),
                                        image: s(e, "image")
                                    };
                                }, t.validateNFTBaseUri = async function(e, t) {
                                    if ((r = t) === parseInt(r.toString(), 10) && t > 0) {
                                        const r = [];
                                        for(let n = 0; n < t; n++){
                                            const t = i(await o(e, n));
                                            r.push(t);
                                        }
                                        return r;
                                    }
                                    throw new Error("maxSupply should be a positive integer");
                                    var r;
                                };
                            },
                            6705: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__exportStar || function(e, t) {
                                    for(var r in e)"default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r);
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), i(r(8715), t), i(r(6284), t), i(r(8156), t);
                            },
                            6284: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                                    Object.defineProperty(e, "default", {
                                        enumerable: !0,
                                        value: t
                                    });
                                } : function(e, t) {
                                    e.default = t;
                                }), s = this && this.__importStar || function(e) {
                                    if (e && e.__esModule) return e;
                                    var t = {};
                                    if (null != e) for(var r in e)"default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                                    return i(t, e), t;
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.transactionVerifySignature = t.transactionSign = void 0;
                                const o = s(r(664));
                                t.transactionSign = function(e, t, r) {
                                    return o.sign(e, t, r);
                                }, t.transactionVerifySignature = function(e, t, r, n) {
                                    return o.verifySignature(e, t, r, n);
                                };
                            },
                            8715: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                                    Object.defineProperty(e, "default", {
                                        enumerable: !0,
                                        value: t
                                    });
                                } : function(e, t) {
                                    e.default = t;
                                }), s = this && this.__importStar || function(e) {
                                    if (e && e.__esModule) return e;
                                    var t = {};
                                    if (null != e) for(var r in e)"default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                                    return i(t, e), t;
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.subscribeToTxStatus = t.TxStatusSubscription = void 0;
                                const o = s(r(307)), a = r(664);
                                class c extends a.Subscription {
                                    constructor(e, t, r, n, i){
                                        super(e), this.txId = t, this.fromGroup = r, this.toGroup = n, this.confirmations = i ?? 1;
                                    }
                                    async polling() {
                                        try {
                                            const e = await o.getCurrentNodeProvider().transactions.getTransactionsStatus({
                                                txId: this.txId,
                                                fromGroup: this.fromGroup,
                                                toGroup: this.toGroup
                                            });
                                            await this.messageCallback(e), "Confirmed" === e.type && e.chainConfirmations >= this.confirmations && this.unsubscribe();
                                        } catch (e) {
                                            await this.errorCallback(e, this);
                                        }
                                    }
                                }
                                t.TxStatusSubscription = c, t.subscribeToTxStatus = function(e, t, r, n, i) {
                                    const s = new c(e, t, r, n, i);
                                    return s.subscribe(), s;
                                };
                            },
                            8156: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.groupIndexOfTransaction = t.waitForTxConfirmation = void 0;
                                const n = r(2581), i = r(7695), s = r(307), o = r(664);
                                t.waitForTxConfirmation = async function e(t, r, n) {
                                    const i = (0, s.getCurrentNodeProvider)(), o = await i.transactions.getTransactionsStatus({
                                        txId: t
                                    });
                                    return "Confirmed" === o.type && o.chainConfirmations >= r ? o : (await new Promise((e)=>setTimeout(e, n)), e(t, r, n));
                                }, t.groupIndexOfTransaction = function(e) {
                                    if (0 === e.inputs.length) throw new Error("Empty inputs for unsignedTx");
                                    const t = (r = e.inputs[0].hint, (0, o.xorByte)(r) % i.TOTAL_NUMBER_OF_GROUPS);
                                    var r;
                                    let s = t;
                                    for (const r of e.fixedOutputs){
                                        const e = (0, n.groupOfLockupScript)(r.lockupScript);
                                        if (e !== t) {
                                            s = e;
                                            break;
                                        }
                                    }
                                    return [
                                        t,
                                        s
                                    ];
                                };
                            },
                            4468: function(e, t, r) {
                                "use strict";
                                var n = this && this.__importDefault || function(e) {
                                    return e && e.__esModule ? e : {
                                        default: e
                                    };
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.base58ToBytes = t.isBase58 = t.bs58 = void 0;
                                const i = n(r(1219)), s = r(4652);
                                t.bs58 = (0, i.default)("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"), t.isBase58 = function(e) {
                                    if ("" === e || "" === e.trim()) return !1;
                                    try {
                                        return t.bs58.encode(t.bs58.decode(e)) === e;
                                    } catch (e) {
                                        return !1;
                                    }
                                }, t.base58ToBytes = function(e) {
                                    try {
                                        return t.bs58.decode(e);
                                    } catch (t) {
                                        throw new s.TraceableError(`Invalid base58 string ${e}`, t);
                                    }
                                }, t.default = t.bs58;
                            },
                            160: (e, t)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.default = function(e) {
                                    let t = 5381;
                                    for(let r = 0; r < e.length; r++)t = (t << 5) + t + (255 & e[`${r}`]);
                                    return t;
                                };
                            },
                            664: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__exportStar || function(e, t) {
                                    for(var r in e)"default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r);
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), i(r(7219), t), i(r(4468), t), i(r(160), t), i(r(2737), t), i(r(531), t), i(r(1347), t), i(r(6999), t);
                            },
                            6999: function(e, t, r) {
                                "use strict";
                                var n = this && this.__importDefault || function(e) {
                                    return e && e.__esModule ? e : {
                                        default: e
                                    };
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.number256ToNumber = t.number256ToBigint = t.convertAlphAmountWithDecimals = t.convertAmountWithDecimals = t.prettifyNumber = t.prettifyExactAmount = t.prettifyTokenAmount = t.prettifyAttoAlphAmount = t.prettifyNumberConfig = t.isNumeric = void 0;
                                const i = n(r(1594));
                                function s(e, r, n) {
                                    const s = h(d(e), r);
                                    if (!(0, t.isNumeric)(s)) return;
                                    const o = new i.default(s);
                                    let a;
                                    if (o.gte(1)) a = o.toFormat(n.minDecimalPlaces);
                                    else {
                                        const e = o.toFormat(n.maxDecimalPlaces).split(".")[1], t = e?.match(/^0+/), r = t && t.length ? t[0].length : 0, i = Math.max(r + n.minDecimalSignificantDigits, n.minDecimalPlaces);
                                        a = o.toFormat(i);
                                    }
                                    let c = a.replace(/0+$/, "");
                                    const u = 1 + a.indexOf(".") + n.decimalPlacesWhenZero;
                                    return c.length < u && (c = a.substring(0, u)), "." === c[c.length - 1] && (c = c.slice(0, -1)), c;
                                }
                                t.isNumeric = (e)=>!isNaN(parseFloat(e)) && isFinite(e), t.prettifyNumberConfig = {
                                    ALPH: {
                                        minDecimalPlaces: 2,
                                        maxDecimalPlaces: 10,
                                        minDecimalSignificantDigits: 2,
                                        decimalPlacesWhenZero: 2
                                    },
                                    TOKEN: {
                                        minDecimalPlaces: 4,
                                        maxDecimalPlaces: 16,
                                        minDecimalSignificantDigits: 2,
                                        decimalPlacesWhenZero: 1
                                    },
                                    Exact: {
                                        minDecimalPlaces: 18,
                                        maxDecimalPlaces: 18,
                                        minDecimalSignificantDigits: 0,
                                        decimalPlacesWhenZero: 0
                                    }
                                }, t.prettifyAttoAlphAmount = function(e) {
                                    return s(e, 18, t.prettifyNumberConfig.ALPH);
                                }, t.prettifyTokenAmount = function(e, r) {
                                    return s(e, r, t.prettifyNumberConfig.TOKEN);
                                }, t.prettifyExactAmount = function(e, r) {
                                    return s(e, r, t.prettifyNumberConfig.Exact);
                                }, t.prettifyNumber = s;
                                const o = BigInt(-1), a = BigInt(0), c = "0000";
                                function h(e, t) {
                                    let r = "";
                                    e < a && (r = "-", e *= o);
                                    let n = e.toString();
                                    if (0 === t) return r + n;
                                    for(; n.length <= t;)n = c + n;
                                    const i = n.length - t;
                                    for(n = n.substring(0, i) + "." + n.substring(i); "0" === n[0] && "." !== n[1];)n = n.substring(1);
                                    for(; "0" === n[n.length - 1] && "." !== n[n.length - 2];)n = n.substring(0, n.length - 1);
                                    return r + n;
                                }
                                function u(e, t) {
                                    try {
                                        const r = new i.default(e).multipliedBy(Math.pow(10, t));
                                        return BigInt(r.toFormat(0, {
                                            groupSeparator: ""
                                        }));
                                    } catch (e) {
                                        return;
                                    }
                                }
                                function d(e) {
                                    return "string" == typeof e ? BigInt(e) : e;
                                }
                                t.convertAmountWithDecimals = u, t.convertAlphAmountWithDecimals = function(e) {
                                    return u(e, 18);
                                }, t.number256ToBigint = d, t.number256ToNumber = function(e, t) {
                                    return parseFloat(h(d(e), t));
                                };
                            },
                            1347: function(e, t, r) {
                                "use strict";
                                var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                                    void 0 === n && (n = r);
                                    var i = Object.getOwnPropertyDescriptor(t, r);
                                    i && !("get" in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                                        enumerable: !0,
                                        get: function() {
                                            return t[r];
                                        }
                                    }), Object.defineProperty(e, n, i);
                                } : function(e, t, r, n) {
                                    void 0 === n && (n = r), e[n] = t[r];
                                }), i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                                    Object.defineProperty(e, "default", {
                                        enumerable: !0,
                                        value: t
                                    });
                                } : function(e, t) {
                                    e.default = t;
                                }), s = this && this.__importStar || function(e) {
                                    if (e && e.__esModule) return e;
                                    var t = {};
                                    if (null != e) for(var r in e)"default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                                    return i(t, e), t;
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.verifySignature = t.sign = void 0;
                                const o = r(3071), a = r(664), c = s(r(9695)), h = r(4062), u = new o.ec("secp256k1");
                                c.utils.sha256Sync = (...e)=>{
                                    const t = (0, h.createHash)("sha256");
                                    for (const r of e)t.update(r);
                                    return t.digest();
                                }, c.utils.hmacSha256Sync = (e, ...t)=>{
                                    const r = (0, h.createHmac)("sha256", e);
                                    return t.forEach((e)=>r.update(e)), Uint8Array.from(r.digest());
                                }, t.sign = function(e, t, r) {
                                    if ("default" === (r ?? "default")) {
                                        const r = u.keyFromPrivate(t).sign(e);
                                        return (0, a.encodeSignature)(r);
                                    }
                                    {
                                        const r = c.schnorr.signSync((0, a.hexToBinUnsafe)(e), (0, a.hexToBinUnsafe)(t));
                                        return (0, a.binToHex)(r);
                                    }
                                }, t.verifySignature = function(e, t, r, n) {
                                    const i = n ?? "default";
                                    try {
                                        return "default" === i ? u.keyFromPublic(t, "hex").verify(e, (0, a.signatureDecode)(u, r)) : c.schnorr.verifySync((0, a.hexToBinUnsafe)(r), (0, a.hexToBinUnsafe)(e), (0, a.hexToBinUnsafe)(t));
                                    } catch (e) {
                                        return !1;
                                    }
                                };
                            },
                            531: function(e, t, r) {
                                "use strict";
                                var n = this && this.__importDefault || function(e) {
                                    return e && e.__esModule ? e : {
                                        default: e
                                    };
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.Subscription = void 0;
                                const i = n(r(2579));
                                t.Subscription = class {
                                    constructor(e){
                                        this.pollingInterval = e.pollingInterval, this.messageCallback = e.messageCallback, this.errorCallback = e.errorCallback, this.task = void 0, this.cancelled = !1, this.eventEmitter = new i.default;
                                    }
                                    subscribe() {
                                        this.eventEmitter.on("tick", async ()=>{
                                            await this.polling(), this.cancelled || (this.task = setTimeout(()=>this.eventEmitter.emit("tick"), this.pollingInterval));
                                        }), this.eventEmitter.emit("tick");
                                    }
                                    unsubscribe() {
                                        this.eventEmitter.removeAllListeners(), this.cancelled = !0, void 0 !== this.task && clearTimeout(this.task);
                                    }
                                    isCancelled() {
                                        return this.cancelled;
                                    }
                                };
                            },
                            2737: function(e, t, r) {
                                "use strict";
                                var n = this && this.__importDefault || function(e) {
                                    return e && e.__esModule ? e : {
                                        default: e
                                    };
                                };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.assertType = t.xorByte = t.concatBytes = t.difficultyToTarget = t.targetToDifficulty = t.isDevnet = t.sleep = t.hexToString = t.stringToHex = t.blockChainIndex = t.binToHex = t.hexToBinUnsafe = t.toNonNegativeBigInt = t.isHexString = t.signatureDecode = t.encodeHexSignature = t.encodeSignature = t.networkIds = void 0;
                                const i = r(3071), s = n(r(3900)), o = r(7695);
                                t.networkIds = [
                                    "mainnet",
                                    "testnet",
                                    "devnet"
                                ];
                                const a = new i.ec("secp256k1");
                                function c(e) {
                                    let t = e.s;
                                    return a.n && 1 === e.s.cmp(a.nh) && (t = a.n.sub(e.s)), e.r.toString("hex", 66).slice(2) + t.toString("hex", 66).slice(2);
                                }
                                function h(e) {
                                    return e.length % 2 == 0 && /^[0-9a-fA-F]*$/.test(e);
                                }
                                function u(e) {
                                    const t = [];
                                    for(let r = 0; r < e.length; r += 2)t.push(parseInt(e.slice(r, r + 2), 16));
                                    return new Uint8Array(t);
                                }
                                function d(e) {
                                    return Array.from(e).map((e)=>e.toString(16).padStart(2, "0")).join("");
                                }
                                t.encodeSignature = c, t.encodeHexSignature = function(e, t) {
                                    return c({
                                        r: new s.default(e, "hex"),
                                        s: new s.default(t, "hex")
                                    });
                                }, t.signatureDecode = function(e, t) {
                                    if (128 !== t.length) throw new Error("Invalid signature length");
                                    const r = t.slice(64, 128), n = new s.default(r, "hex");
                                    if (e.n && n.cmp(e.nh) < 1) return {
                                        r: t.slice(0, 64),
                                        s: r
                                    };
                                    throw new Error("The signature is not normalized");
                                }, t.isHexString = h, t.toNonNegativeBigInt = function(e) {
                                    try {
                                        const t = BigInt(e);
                                        return t < 0n ? void 0 : t;
                                    } catch  {
                                        return;
                                    }
                                }, t.hexToBinUnsafe = u, t.binToHex = d, t.blockChainIndex = function(e) {
                                    if (64 != e.length) throw Error(`Invalid block hash: ${e}`);
                                    const t = Number("0x" + e.slice(-4)) % o.TOTAL_NUMBER_OF_CHAINS;
                                    return {
                                        fromGroup: Math.floor(t / o.TOTAL_NUMBER_OF_GROUPS),
                                        toGroup: t % o.TOTAL_NUMBER_OF_GROUPS
                                    };
                                }, t.stringToHex = function(e) {
                                    let t = "";
                                    for(let r = 0; r < e.length; r++)t += "" + e.charCodeAt(r).toString(16);
                                    return t;
                                }, t.hexToString = function(e) {
                                    if (!h(e)) throw new Error(`Invalid hex string: ${e}`);
                                    const t = u(e);
                                    return (new TextDecoder).decode(t);
                                }, t.sleep = function(e) {
                                    return new Promise((t)=>setTimeout(t, e));
                                }, t.isDevnet = function(e) {
                                    return 0 !== e && 1 !== e;
                                }, t.targetToDifficulty = function(e) {
                                    if (!h(e) || 8 !== e.length) throw Error(`Invalid target ${e}, expected a hex string of length 8`);
                                    const t = u(e.slice(0, 2))[0], r = BigInt("0x" + e.slice(2));
                                    return (1n << 256n) / (t <= 3 ? r >> BigInt(8 * (3 - t)) : r << BigInt(8 * (t - 3)));
                                }, t.difficultyToTarget = function(e) {
                                    const t = 1n << 256n, r = 1n === e ? t - 1n : t / e, n = Math.floor((r.toString(2).length + 7) / 8), i = Number(n <= 3 ? BigInt.asIntN(32, r) << BigInt(8 * (3 - n)) : BigInt.asIntN(32, r >> BigInt(8 * (n - 3)))), s = new Uint8Array(4);
                                    return s[0] = n, s[1] = i >> 16 & 255, s[2] = i >> 8 & 255, s[3] = 255 & i, d(s);
                                }, t.concatBytes = function(e) {
                                    const t = e.reduce((e, t)=>e + t.length, 0), r = new Uint8Array(t);
                                    let n = 0;
                                    for (const t of e)r.set(t, n), n += t.length;
                                    return r;
                                }, t.xorByte = function(e) {
                                    return 255 & (e >> 24 & 255 ^ e >> 16 & 255 ^ e >> 8 & 255 ^ 255 & e);
                                }, t.assertType = function() {};
                            },
                            7219: (e, t, r)=>{
                                "use strict";
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.WebCrypto = void 0;
                                const n = r(4062), i = "undefined" != typeof window && void 0 !== window.document;
                                t.WebCrypto = class {
                                    constructor(){
                                        this.subtle = i ? globalThis.crypto.subtle : n.webcrypto ? n.webcrypto.subtle : crypto.subtle;
                                    }
                                    getRandomValues(e) {
                                        if (!ArrayBuffer.isView(e)) throw new TypeError("Failed to execute 'getRandomValues' on 'Crypto': parameter 1 is not of type 'ArrayBufferView'");
                                        const t = new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
                                        return i ? globalThis.crypto.getRandomValues(t) : (0, n.randomFillSync)(t), e;
                                    }
                                };
                            },
                            3349: (e)=>{
                                "use strict";
                                e.exports = JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}');
                            },
                            6980: (e)=>{
                                "use strict";
                                e.exports = JSON.parse('{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}');
                            },
                            9262: (e)=>{
                                "use strict";
                                e.exports = JSON.parse('{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}');
                            },
                            7821: (e)=>{
                                "use strict";
                                e.exports = JSON.parse('{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}');
                            },
                            3718: (e)=>{
                                "use strict";
                                e.exports = {
                                    rE: "6.6.1"
                                };
                            },
                            2853: (e)=>{
                                "use strict";
                                e.exports = JSON.parse('{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}');
                            }
                        }, t = {};
                        function r(n) {
                            var i = t[n];
                            if (void 0 !== i) return i.exports;
                            var s = t[n] = {
                                id: n,
                                loaded: !1,
                                exports: {}
                            };
                            return e[n].call(s.exports, s, s.exports, r), s.loaded = !0, s.exports;
                        }
                        return r.g = function() {
                            if ("object" == typeof globalThis) return globalThis;
                            try {
                                return this || new Function("return this")();
                            } catch (e) {
                                if ("object" == typeof window) return window;
                            }
                        }(), r.nmd = (e)=>(e.paths = [], e.children || (e.children = []), e), r(2126);
                    })(), e.exports = t();
            },
            8484: (e, t, r)=>{
                "use strict";
                r.d(t, {
                    Fo: ()=>Ne
                });
                var n = {};
                r.r(n), r.d(n, {
                    identity: ()=>I
                });
                var i = {};
                r.r(i), r.d(i, {
                    base2: ()=>T
                });
                var s = {};
                r.r(s), r.d(s, {
                    base8: ()=>x
                });
                var o = {};
                r.r(o), r.d(o, {
                    base10: ()=>C
                });
                var a = {};
                r.r(a), r.d(a, {
                    base16: ()=>R,
                    base16upper: ()=>k
                });
                var c = {};
                r.r(c), r.d(c, {
                    base32: ()=>P,
                    base32hex: ()=>B,
                    base32hexpad: ()=>j,
                    base32hexpadupper: ()=>D,
                    base32hexupper: ()=>L,
                    base32pad: ()=>N,
                    base32padupper: ()=>U,
                    base32upper: ()=>O,
                    base32z: ()=>q
                });
                var h = {};
                r.r(h), r.d(h, {
                    base36: ()=>F,
                    base36upper: ()=>H
                });
                var u = {};
                r.r(u), r.d(u, {
                    base58btc: ()=>z,
                    base58flickr: ()=>V
                });
                var d = {};
                r.r(d), r.d(d, {
                    base64: ()=>$,
                    base64pad: ()=>K,
                    base64url: ()=>G,
                    base64urlpad: ()=>W
                });
                var f = {};
                r.r(f), r.d(f, {
                    base256emoji: ()=>Z
                });
                var l = {};
                r.r(l), r.d(l, {
                    sha256: ()=>we,
                    sha512: ()=>_e
                });
                var p = {};
                r.r(p), r.d(p, {
                    identity: ()=>Se
                });
                var b = {};
                r.r(b), r.d(b, {
                    code: ()=>Me,
                    decode: ()=>Te,
                    encode: ()=>Ie,
                    name: ()=>Ae
                });
                var g = {};
                r.r(g), r.d(g, {
                    code: ()=>ke,
                    decode: ()=>Oe,
                    encode: ()=>Pe,
                    name: ()=>Re
                });
                const m = (new Uint8Array(0), (e)=>{
                    if (e instanceof Uint8Array && "Uint8Array" === e.constructor.name) return e;
                    if (e instanceof ArrayBuffer) return new Uint8Array(e);
                    if (ArrayBuffer.isView(e)) return new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
                    throw new Error("Unknown type, must be binary type");
                });
                class y {
                    constructor(e, t, r){
                        this.name = e, this.prefix = t, this.baseEncode = r;
                    }
                    encode(e) {
                        if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;
                        throw Error("Unknown type, must be binary type");
                    }
                }
                class v {
                    constructor(e, t, r){
                        if (this.name = e, this.prefix = t, void 0 === t.codePointAt(0)) throw new Error("Invalid prefix character");
                        this.prefixCodePoint = t.codePointAt(0), this.baseDecode = r;
                    }
                    decode(e) {
                        if ("string" == typeof e) {
                            if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
                            return this.baseDecode(e.slice(this.prefix.length));
                        }
                        throw Error("Can only multibase decode strings");
                    }
                    or(e) {
                        return _(this, e);
                    }
                }
                class w {
                    constructor(e){
                        this.decoders = e;
                    }
                    or(e) {
                        return _(this, e);
                    }
                    decode(e) {
                        const t = e[0], r = this.decoders[t];
                        if (r) return r.decode(e);
                        throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
                    }
                }
                const _ = (e, t)=>new w({
                        ...e.decoders || {
                            [e.prefix]: e
                        },
                        ...t.decoders || {
                            [t.prefix]: t
                        }
                    });
                class E {
                    constructor(e, t, r, n){
                        this.name = e, this.prefix = t, this.baseEncode = r, this.baseDecode = n, this.encoder = new y(e, t, r), this.decoder = new v(e, t, n);
                    }
                    encode(e) {
                        return this.encoder.encode(e);
                    }
                    decode(e) {
                        return this.decoder.decode(e);
                    }
                }
                const S = ({ name: e, prefix: t, encode: r, decode: n })=>new E(e, t, r, n), A = ({ prefix: e, name: t, alphabet: r })=>{
                    const { encode: n, decode: i } = function(e, t) {
                        if (e.length >= 255) throw new TypeError("Alphabet too long");
                        for(var r = new Uint8Array(256), n = 0; n < r.length; n++)r[n] = 255;
                        for(var i = 0; i < e.length; i++){
                            var s = e.charAt(i), o = s.charCodeAt(0);
                            if (255 !== r[o]) throw new TypeError(s + " is ambiguous");
                            r[o] = i;
                        }
                        var a = e.length, c = e.charAt(0), h = Math.log(a) / Math.log(256), u = Math.log(256) / Math.log(a);
                        function d(e) {
                            if ("string" != typeof e) throw new TypeError("Expected String");
                            if (0 === e.length) return new Uint8Array;
                            var t = 0;
                            if (" " !== e[t]) {
                                for(var n = 0, i = 0; e[t] === c;)n++, t++;
                                for(var s = (e.length - t) * h + 1 >>> 0, o = new Uint8Array(s); e[t];){
                                    var u = r[e.charCodeAt(t)];
                                    if (255 === u) return;
                                    for(var d = 0, f = s - 1; (0 !== u || d < i) && -1 !== f; f--, d++)u += a * o[f] >>> 0, o[f] = u % 256 >>> 0, u = u / 256 >>> 0;
                                    if (0 !== u) throw new Error("Non-zero carry");
                                    i = d, t++;
                                }
                                if (" " !== e[t]) {
                                    for(var l = s - i; l !== s && 0 === o[l];)l++;
                                    for(var p = new Uint8Array(n + (s - l)), b = n; l !== s;)p[b++] = o[l++];
                                    return p;
                                }
                            }
                        }
                        return {
                            encode: function(t) {
                                if (t instanceof Uint8Array || (ArrayBuffer.isView(t) ? t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : Array.isArray(t) && (t = Uint8Array.from(t))), !(t instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
                                if (0 === t.length) return "";
                                for(var r = 0, n = 0, i = 0, s = t.length; i !== s && 0 === t[i];)i++, r++;
                                for(var o = (s - i) * u + 1 >>> 0, h = new Uint8Array(o); i !== s;){
                                    for(var d = t[i], f = 0, l = o - 1; (0 !== d || f < n) && -1 !== l; l--, f++)d += 256 * h[l] >>> 0, h[l] = d % a >>> 0, d = d / a >>> 0;
                                    if (0 !== d) throw new Error("Non-zero carry");
                                    n = f, i++;
                                }
                                for(var p = o - n; p !== o && 0 === h[p];)p++;
                                for(var b = c.repeat(r); p < o; ++p)b += e.charAt(h[p]);
                                return b;
                            },
                            decodeUnsafe: d,
                            decode: function(e) {
                                var r = d(e);
                                if (r) return r;
                                throw new Error(`Non-${t} character`);
                            }
                        };
                    }(r, t);
                    return S({
                        prefix: e,
                        name: t,
                        encode: n,
                        decode: (e)=>m(i(e))
                    });
                }, M = ({ name: e, prefix: t, bitsPerChar: r, alphabet: n })=>S({
                        prefix: t,
                        name: e,
                        encode: (e)=>((e, t, r)=>{
                                const n = "=" === t[t.length - 1], i = (1 << r) - 1;
                                let s = "", o = 0, a = 0;
                                for(let n = 0; n < e.length; ++n)for(a = a << 8 | e[n], o += 8; o > r;)o -= r, s += t[i & a >> o];
                                if (o && (s += t[i & a << r - o]), n) for(; s.length * r & 7;)s += "=";
                                return s;
                            })(e, n, r),
                        decode: (t)=>((e, t, r, n)=>{
                                const i = {};
                                for(let e = 0; e < t.length; ++e)i[t[e]] = e;
                                let s = e.length;
                                for(; "=" === e[s - 1];)--s;
                                const o = new Uint8Array(s * r / 8 | 0);
                                let a = 0, c = 0, h = 0;
                                for(let t = 0; t < s; ++t){
                                    const s = i[e[t]];
                                    if (void 0 === s) throw new SyntaxError(`Non-${n} character`);
                                    c = c << r | s, a += r, a >= 8 && (a -= 8, o[h++] = 255 & c >> a);
                                }
                                if (a >= r || 255 & c << 8 - a) throw new SyntaxError("Unexpected end of data");
                                return o;
                            })(t, n, r, e)
                    }), I = S({
                    prefix: "\0",
                    name: "identity",
                    encode: (e)=>{
                        return t = e, (new TextDecoder).decode(t);
                        "TURBOPACK unreachable";
                        var t;
                    },
                    decode: (e)=>((e)=>(new TextEncoder).encode(e))(e)
                }), T = M({
                    prefix: "0",
                    name: "base2",
                    alphabet: "01",
                    bitsPerChar: 1
                }), x = M({
                    prefix: "7",
                    name: "base8",
                    alphabet: "01234567",
                    bitsPerChar: 3
                }), C = A({
                    prefix: "9",
                    name: "base10",
                    alphabet: "0123456789"
                }), R = M({
                    prefix: "f",
                    name: "base16",
                    alphabet: "0123456789abcdef",
                    bitsPerChar: 4
                }), k = M({
                    prefix: "F",
                    name: "base16upper",
                    alphabet: "0123456789ABCDEF",
                    bitsPerChar: 4
                }), P = M({
                    prefix: "b",
                    name: "base32",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
                    bitsPerChar: 5
                }), O = M({
                    prefix: "B",
                    name: "base32upper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
                    bitsPerChar: 5
                }), N = M({
                    prefix: "c",
                    name: "base32pad",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
                    bitsPerChar: 5
                }), U = M({
                    prefix: "C",
                    name: "base32padupper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
                    bitsPerChar: 5
                }), B = M({
                    prefix: "v",
                    name: "base32hex",
                    alphabet: "0123456789abcdefghijklmnopqrstuv",
                    bitsPerChar: 5
                }), L = M({
                    prefix: "V",
                    name: "base32hexupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
                    bitsPerChar: 5
                }), j = M({
                    prefix: "t",
                    name: "base32hexpad",
                    alphabet: "0123456789abcdefghijklmnopqrstuv=",
                    bitsPerChar: 5
                }), D = M({
                    prefix: "T",
                    name: "base32hexpadupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
                    bitsPerChar: 5
                }), q = M({
                    prefix: "h",
                    name: "base32z",
                    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
                    bitsPerChar: 5
                }), F = A({
                    prefix: "k",
                    name: "base36",
                    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
                }), H = A({
                    prefix: "K",
                    name: "base36upper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                }), z = A({
                    name: "base58btc",
                    prefix: "z",
                    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
                }), V = A({
                    name: "base58flickr",
                    prefix: "Z",
                    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
                }), $ = M({
                    prefix: "m",
                    name: "base64",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                    bitsPerChar: 6
                }), K = M({
                    prefix: "M",
                    name: "base64pad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    bitsPerChar: 6
                }), G = M({
                    prefix: "u",
                    name: "base64url",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
                    bitsPerChar: 6
                }), W = M({
                    prefix: "U",
                    name: "base64urlpad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
                    bitsPerChar: 6
                }), J = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"), Y = J.reduce((e, t, r)=>(e[r] = t, e), []), X = J.reduce((e, t, r)=>(e[t.codePointAt(0)] = r, e), []), Z = S({
                    prefix: "🚀",
                    name: "base256emoji",
                    encode: function(e) {
                        return e.reduce((e, t)=>e + Y[t], "");
                    },
                    decode: function(e) {
                        const t = [];
                        for (const r of e){
                            const e = X[r.codePointAt(0)];
                            if (void 0 === e) throw new Error(`Non-base256emoji character: ${r}`);
                            t.push(e);
                        }
                        return new Uint8Array(t);
                    }
                });
                var Q = 128, ee = -128, te = Math.pow(2, 31), re = Math.pow(2, 7), ne = Math.pow(2, 14), ie = Math.pow(2, 21), se = Math.pow(2, 28), oe = Math.pow(2, 35), ae = Math.pow(2, 42), ce = Math.pow(2, 49), he = Math.pow(2, 56), ue = Math.pow(2, 63);
                const de = function e(t, r, n) {
                    r = r || [];
                    for(var i = n = n || 0; t >= te;)r[n++] = 255 & t | Q, t /= 128;
                    for(; t & ee;)r[n++] = 255 & t | Q, t >>>= 7;
                    return r[n] = 0 | t, e.bytes = n - i + 1, r;
                }, fe = function(e) {
                    return e < re ? 1 : e < ne ? 2 : e < ie ? 3 : e < se ? 4 : e < oe ? 5 : e < ae ? 6 : e < ce ? 7 : e < he ? 8 : e < ue ? 9 : 10;
                }, le = (e, t, r = 0)=>(de(e, t, r), t), pe = (e)=>fe(e), be = (e, t)=>{
                    const r = t.byteLength, n = pe(e), i = n + pe(r), s = new Uint8Array(i + r);
                    return le(e, s, 0), le(r, s, n), s.set(t, i), new ge(e, r, t, s);
                };
                class ge {
                    constructor(e, t, r, n){
                        this.code = e, this.size = t, this.digest = r, this.bytes = n;
                    }
                }
                const me = ({ name: e, code: t, encode: r })=>new ye(e, t, r);
                class ye {
                    constructor(e, t, r){
                        this.name = e, this.code = t, this.encode = r;
                    }
                    digest(e) {
                        if (e instanceof Uint8Array) {
                            const t = this.encode(e);
                            return t instanceof Uint8Array ? be(this.code, t) : t.then((e)=>be(this.code, e));
                        }
                        throw Error("Unknown type, must be binary type");
                    }
                }
                const ve = (e)=>async (t)=>new Uint8Array(await crypto.subtle.digest(e, t)), we = me({
                    name: "sha2-256",
                    code: 18,
                    encode: ve("SHA-256")
                }), _e = me({
                    name: "sha2-512",
                    code: 19,
                    encode: ve("SHA-512")
                }), Ee = m, Se = {
                    code: 0,
                    name: "identity",
                    encode: Ee,
                    digest: (e)=>be(0, Ee(e))
                }, Ae = "raw", Me = 85, Ie = (e)=>m(e), Te = (e)=>m(e), xe = new TextEncoder, Ce = new TextDecoder, Re = "json", ke = 512, Pe = (e)=>xe.encode(JSON.stringify(e)), Oe = (e)=>JSON.parse(Ce.decode(e));
                Symbol.toStringTag, Symbol.for("nodejs.util.inspect.custom"), Symbol.for("@ipld/js-cid/CID");
                const Ne = {
                    ...n,
                    ...i,
                    ...s,
                    ...o,
                    ...a,
                    ...c,
                    ...h,
                    ...u,
                    ...d,
                    ...f
                };
            },
            2376: (e, t, r)=>{
                "use strict";
                function n(e = 0) {
                    return null != globalThis.Buffer && null != globalThis.Buffer.allocUnsafe ? globalThis.Buffer.allocUnsafe(e) : new Uint8Array(e);
                }
                function i(e, t) {
                    t || (t = e.reduce((e, t)=>e + t.length, 0));
                    const r = n(t);
                    let i = 0;
                    for (const t of e)r.set(t, i), i += t.length;
                    return r;
                }
                r.d(t, {
                    xW: ()=>i,
                    sH: ()=>u,
                    dI: ()=>d
                });
                var s = r(8484);
                function o(e, t, r, n) {
                    return {
                        name: e,
                        prefix: t,
                        encoder: {
                            name: e,
                            prefix: t,
                            encode: r
                        },
                        decoder: {
                            decode: n
                        }
                    };
                }
                const a = o("utf8", "u", (e)=>"u" + new TextDecoder("utf8").decode(e), (e)=>(new TextEncoder).encode(e.substring(1))), c = o("ascii", "a", (e)=>{
                    let t = "a";
                    for(let r = 0; r < e.length; r++)t += String.fromCharCode(e[r]);
                    return t;
                }, (e)=>{
                    const t = n((e = e.substring(1)).length);
                    for(let r = 0; r < e.length; r++)t[r] = e.charCodeAt(r);
                    return t;
                }), h = {
                    utf8: a,
                    "utf-8": a,
                    hex: s.Fo.base16,
                    latin1: c,
                    ascii: c,
                    binary: c,
                    ...s.Fo
                };
                function u(e, t = "utf8") {
                    const r = h[t];
                    if (!r) throw new Error(`Unsupported encoding "${t}"`);
                    return "utf8" !== t && "utf-8" !== t || null == globalThis.Buffer || null == globalThis.Buffer.from ? r.decoder.decode(`${r.prefix}${e}`) : globalThis.Buffer.from(e, "utf8");
                }
                function d(e, t = "utf8") {
                    const r = h[t];
                    if (!r) throw new Error(`Unsupported encoding "${t}"`);
                    return "utf8" !== t && "utf-8" !== t || null == globalThis.Buffer || null == globalThis.Buffer.from ? r.encoder.encode(e).substring(1) : globalThis.Buffer.from(e.buffer, e.byteOffset, e.byteLength).toString("utf8");
                }
            },
            3718: (e)=>{
                "use strict";
                e.exports = {
                    rE: "6.6.1"
                };
            }
        }, t = {};
        function r(n) {
            var i = t[n];
            if (void 0 !== i) return i.exports;
            var s = t[n] = {
                id: n,
                loaded: !1,
                exports: {}
            };
            return e[n].call(s.exports, s, s.exports, r), s.loaded = !0, s.exports;
        }
        return r.amdO = {}, r.n = (e)=>{
            var t = e && e.__esModule ? ()=>e.default : ()=>e;
            return r.d(t, {
                a: t
            }), t;
        }, r.d = (e, t)=>{
            for(var n in t)r.o(t, n) && !r.o(e, n) && Object.defineProperty(e, n, {
                enumerable: !0,
                get: t[n]
            });
        }, r.g = function() {
            if ("object" == typeof globalThis) return globalThis;
            try {
                return this || new Function("return this")();
            } catch (e) {
                if ("object" == typeof window) return window;
            }
        }(), r.o = (e, t)=>Object.prototype.hasOwnProperty.call(e, t), r.r = (e)=>{
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            });
        }, r.nmd = (e)=>(e.paths = [], e.children || (e.children = []), e), r(2071);
    })()); //# sourceMappingURL=index.min.js.map
}}),
}]);

//# sourceMappingURL=node_modules_%40alephium_walletconnect-provider_dist_umd_index_min_4e032972.js.map